
SpaceInvaders.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001c714  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000019d0  0801c8c4  0801c8c4  0001d8c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 TextFlashSection 0000000e  0801e294  0801e294  0001f294  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 ExtFlashSection 00113638  0801e2a4  0801e2a4  0001f2a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  081318dc  081318dc  0013316c  2**0
                  CONTENTS
  6 .ARM          00000008  081318dc  081318dc  001328dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .preinit_array 00000000  081318e4  081318e4  0013316c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000014  081318e4  081318e4  001328e4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   0000000c  081318f8  081318f8  001328f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         0000016c  20000000  08131904  00133000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .bss          000142c4  2000016c  08131a70  0013316c  2**2
                  ALLOC
 12 ._user_heap_stack 00001400  20014430  08131a70  00133430  2**0
                  ALLOC
 13 .ARM.attributes 00000030  00000000  00000000  0013316c  2**0
                  CONTENTS, READONLY
 14 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00134000  2**2
                  ALLOC
 15 .debug_line   00049b18  00000000  00000000  0013319c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_line_str 00000064  00000000  00000000  0017ccb4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   00097cd1  00000000  00000000  0017cd18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 0001205e  00000000  00000000  002149e9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00002d70  00000000  00000000  00226a48  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0010b8f4  00000000  00000000  002297b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_rnglists 0000358b  00000000  00000000  003350ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loclists 000181b8  00000000  00000000  00338637  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  0002ee0b  00000000  00000000  003507ef  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000c2  00000000  00000000  0037f5fa  2**0
                  CONTENTS, READONLY
 25 .debug_frame  00007928  00000000  00000000  0037f6bc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000016c 	.word	0x2000016c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801c8ac 	.word	0x0801c8ac

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000170 	.word	0x20000170
 80001ec:	0801c8ac 	.word	0x0801c8ac

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b96a 	b.w	800057c <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	460c      	mov	r4, r1
 80002c8:	2b00      	cmp	r3, #0
 80002ca:	d14e      	bne.n	800036a <__udivmoddi4+0xaa>
 80002cc:	4694      	mov	ip, r2
 80002ce:	458c      	cmp	ip, r1
 80002d0:	4686      	mov	lr, r0
 80002d2:	fab2 f282 	clz	r2, r2
 80002d6:	d962      	bls.n	800039e <__udivmoddi4+0xde>
 80002d8:	b14a      	cbz	r2, 80002ee <__udivmoddi4+0x2e>
 80002da:	f1c2 0320 	rsb	r3, r2, #32
 80002de:	4091      	lsls	r1, r2
 80002e0:	fa20 f303 	lsr.w	r3, r0, r3
 80002e4:	fa0c fc02 	lsl.w	ip, ip, r2
 80002e8:	4319      	orrs	r1, r3
 80002ea:	fa00 fe02 	lsl.w	lr, r0, r2
 80002ee:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80002f2:	fa1f f68c 	uxth.w	r6, ip
 80002f6:	fbb1 f4f7 	udiv	r4, r1, r7
 80002fa:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80002fe:	fb07 1114 	mls	r1, r7, r4, r1
 8000302:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000306:	fb04 f106 	mul.w	r1, r4, r6
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f104 30ff 	add.w	r0, r4, #4294967295
 8000316:	f080 8112 	bcs.w	800053e <__udivmoddi4+0x27e>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 810f 	bls.w	800053e <__udivmoddi4+0x27e>
 8000320:	3c02      	subs	r4, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a59      	subs	r1, r3, r1
 8000326:	fa1f f38e 	uxth.w	r3, lr
 800032a:	fbb1 f0f7 	udiv	r0, r1, r7
 800032e:	fb07 1110 	mls	r1, r7, r0, r1
 8000332:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000336:	fb00 f606 	mul.w	r6, r0, r6
 800033a:	429e      	cmp	r6, r3
 800033c:	d90a      	bls.n	8000354 <__udivmoddi4+0x94>
 800033e:	eb1c 0303 	adds.w	r3, ip, r3
 8000342:	f100 31ff 	add.w	r1, r0, #4294967295
 8000346:	f080 80fc 	bcs.w	8000542 <__udivmoddi4+0x282>
 800034a:	429e      	cmp	r6, r3
 800034c:	f240 80f9 	bls.w	8000542 <__udivmoddi4+0x282>
 8000350:	4463      	add	r3, ip
 8000352:	3802      	subs	r0, #2
 8000354:	1b9b      	subs	r3, r3, r6
 8000356:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800035a:	2100      	movs	r1, #0
 800035c:	b11d      	cbz	r5, 8000366 <__udivmoddi4+0xa6>
 800035e:	40d3      	lsrs	r3, r2
 8000360:	2200      	movs	r2, #0
 8000362:	e9c5 3200 	strd	r3, r2, [r5]
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d905      	bls.n	800037a <__udivmoddi4+0xba>
 800036e:	b10d      	cbz	r5, 8000374 <__udivmoddi4+0xb4>
 8000370:	e9c5 0100 	strd	r0, r1, [r5]
 8000374:	2100      	movs	r1, #0
 8000376:	4608      	mov	r0, r1
 8000378:	e7f5      	b.n	8000366 <__udivmoddi4+0xa6>
 800037a:	fab3 f183 	clz	r1, r3
 800037e:	2900      	cmp	r1, #0
 8000380:	d146      	bne.n	8000410 <__udivmoddi4+0x150>
 8000382:	42a3      	cmp	r3, r4
 8000384:	d302      	bcc.n	800038c <__udivmoddi4+0xcc>
 8000386:	4290      	cmp	r0, r2
 8000388:	f0c0 80f0 	bcc.w	800056c <__udivmoddi4+0x2ac>
 800038c:	1a86      	subs	r6, r0, r2
 800038e:	eb64 0303 	sbc.w	r3, r4, r3
 8000392:	2001      	movs	r0, #1
 8000394:	2d00      	cmp	r5, #0
 8000396:	d0e6      	beq.n	8000366 <__udivmoddi4+0xa6>
 8000398:	e9c5 6300 	strd	r6, r3, [r5]
 800039c:	e7e3      	b.n	8000366 <__udivmoddi4+0xa6>
 800039e:	2a00      	cmp	r2, #0
 80003a0:	f040 8090 	bne.w	80004c4 <__udivmoddi4+0x204>
 80003a4:	eba1 040c 	sub.w	r4, r1, ip
 80003a8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80003ac:	fa1f f78c 	uxth.w	r7, ip
 80003b0:	2101      	movs	r1, #1
 80003b2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003b6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003ba:	fb08 4416 	mls	r4, r8, r6, r4
 80003be:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003c2:	fb07 f006 	mul.w	r0, r7, r6
 80003c6:	4298      	cmp	r0, r3
 80003c8:	d908      	bls.n	80003dc <__udivmoddi4+0x11c>
 80003ca:	eb1c 0303 	adds.w	r3, ip, r3
 80003ce:	f106 34ff 	add.w	r4, r6, #4294967295
 80003d2:	d202      	bcs.n	80003da <__udivmoddi4+0x11a>
 80003d4:	4298      	cmp	r0, r3
 80003d6:	f200 80cd 	bhi.w	8000574 <__udivmoddi4+0x2b4>
 80003da:	4626      	mov	r6, r4
 80003dc:	1a1c      	subs	r4, r3, r0
 80003de:	fa1f f38e 	uxth.w	r3, lr
 80003e2:	fbb4 f0f8 	udiv	r0, r4, r8
 80003e6:	fb08 4410 	mls	r4, r8, r0, r4
 80003ea:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003ee:	fb00 f707 	mul.w	r7, r0, r7
 80003f2:	429f      	cmp	r7, r3
 80003f4:	d908      	bls.n	8000408 <__udivmoddi4+0x148>
 80003f6:	eb1c 0303 	adds.w	r3, ip, r3
 80003fa:	f100 34ff 	add.w	r4, r0, #4294967295
 80003fe:	d202      	bcs.n	8000406 <__udivmoddi4+0x146>
 8000400:	429f      	cmp	r7, r3
 8000402:	f200 80b0 	bhi.w	8000566 <__udivmoddi4+0x2a6>
 8000406:	4620      	mov	r0, r4
 8000408:	1bdb      	subs	r3, r3, r7
 800040a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800040e:	e7a5      	b.n	800035c <__udivmoddi4+0x9c>
 8000410:	f1c1 0620 	rsb	r6, r1, #32
 8000414:	408b      	lsls	r3, r1
 8000416:	fa22 f706 	lsr.w	r7, r2, r6
 800041a:	431f      	orrs	r7, r3
 800041c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000420:	fa04 f301 	lsl.w	r3, r4, r1
 8000424:	ea43 030c 	orr.w	r3, r3, ip
 8000428:	40f4      	lsrs	r4, r6
 800042a:	fa00 f801 	lsl.w	r8, r0, r1
 800042e:	0c38      	lsrs	r0, r7, #16
 8000430:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000434:	fbb4 fef0 	udiv	lr, r4, r0
 8000438:	fa1f fc87 	uxth.w	ip, r7
 800043c:	fb00 441e 	mls	r4, r0, lr, r4
 8000440:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000444:	fb0e f90c 	mul.w	r9, lr, ip
 8000448:	45a1      	cmp	r9, r4
 800044a:	fa02 f201 	lsl.w	r2, r2, r1
 800044e:	d90a      	bls.n	8000466 <__udivmoddi4+0x1a6>
 8000450:	193c      	adds	r4, r7, r4
 8000452:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000456:	f080 8084 	bcs.w	8000562 <__udivmoddi4+0x2a2>
 800045a:	45a1      	cmp	r9, r4
 800045c:	f240 8081 	bls.w	8000562 <__udivmoddi4+0x2a2>
 8000460:	f1ae 0e02 	sub.w	lr, lr, #2
 8000464:	443c      	add	r4, r7
 8000466:	eba4 0409 	sub.w	r4, r4, r9
 800046a:	fa1f f983 	uxth.w	r9, r3
 800046e:	fbb4 f3f0 	udiv	r3, r4, r0
 8000472:	fb00 4413 	mls	r4, r0, r3, r4
 8000476:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800047a:	fb03 fc0c 	mul.w	ip, r3, ip
 800047e:	45a4      	cmp	ip, r4
 8000480:	d907      	bls.n	8000492 <__udivmoddi4+0x1d2>
 8000482:	193c      	adds	r4, r7, r4
 8000484:	f103 30ff 	add.w	r0, r3, #4294967295
 8000488:	d267      	bcs.n	800055a <__udivmoddi4+0x29a>
 800048a:	45a4      	cmp	ip, r4
 800048c:	d965      	bls.n	800055a <__udivmoddi4+0x29a>
 800048e:	3b02      	subs	r3, #2
 8000490:	443c      	add	r4, r7
 8000492:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000496:	fba0 9302 	umull	r9, r3, r0, r2
 800049a:	eba4 040c 	sub.w	r4, r4, ip
 800049e:	429c      	cmp	r4, r3
 80004a0:	46ce      	mov	lr, r9
 80004a2:	469c      	mov	ip, r3
 80004a4:	d351      	bcc.n	800054a <__udivmoddi4+0x28a>
 80004a6:	d04e      	beq.n	8000546 <__udivmoddi4+0x286>
 80004a8:	b155      	cbz	r5, 80004c0 <__udivmoddi4+0x200>
 80004aa:	ebb8 030e 	subs.w	r3, r8, lr
 80004ae:	eb64 040c 	sbc.w	r4, r4, ip
 80004b2:	fa04 f606 	lsl.w	r6, r4, r6
 80004b6:	40cb      	lsrs	r3, r1
 80004b8:	431e      	orrs	r6, r3
 80004ba:	40cc      	lsrs	r4, r1
 80004bc:	e9c5 6400 	strd	r6, r4, [r5]
 80004c0:	2100      	movs	r1, #0
 80004c2:	e750      	b.n	8000366 <__udivmoddi4+0xa6>
 80004c4:	f1c2 0320 	rsb	r3, r2, #32
 80004c8:	fa20 f103 	lsr.w	r1, r0, r3
 80004cc:	fa0c fc02 	lsl.w	ip, ip, r2
 80004d0:	fa24 f303 	lsr.w	r3, r4, r3
 80004d4:	4094      	lsls	r4, r2
 80004d6:	430c      	orrs	r4, r1
 80004d8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80004dc:	fa00 fe02 	lsl.w	lr, r0, r2
 80004e0:	fa1f f78c 	uxth.w	r7, ip
 80004e4:	fbb3 f0f8 	udiv	r0, r3, r8
 80004e8:	fb08 3110 	mls	r1, r8, r0, r3
 80004ec:	0c23      	lsrs	r3, r4, #16
 80004ee:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80004f2:	fb00 f107 	mul.w	r1, r0, r7
 80004f6:	4299      	cmp	r1, r3
 80004f8:	d908      	bls.n	800050c <__udivmoddi4+0x24c>
 80004fa:	eb1c 0303 	adds.w	r3, ip, r3
 80004fe:	f100 36ff 	add.w	r6, r0, #4294967295
 8000502:	d22c      	bcs.n	800055e <__udivmoddi4+0x29e>
 8000504:	4299      	cmp	r1, r3
 8000506:	d92a      	bls.n	800055e <__udivmoddi4+0x29e>
 8000508:	3802      	subs	r0, #2
 800050a:	4463      	add	r3, ip
 800050c:	1a5b      	subs	r3, r3, r1
 800050e:	b2a4      	uxth	r4, r4
 8000510:	fbb3 f1f8 	udiv	r1, r3, r8
 8000514:	fb08 3311 	mls	r3, r8, r1, r3
 8000518:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800051c:	fb01 f307 	mul.w	r3, r1, r7
 8000520:	42a3      	cmp	r3, r4
 8000522:	d908      	bls.n	8000536 <__udivmoddi4+0x276>
 8000524:	eb1c 0404 	adds.w	r4, ip, r4
 8000528:	f101 36ff 	add.w	r6, r1, #4294967295
 800052c:	d213      	bcs.n	8000556 <__udivmoddi4+0x296>
 800052e:	42a3      	cmp	r3, r4
 8000530:	d911      	bls.n	8000556 <__udivmoddi4+0x296>
 8000532:	3902      	subs	r1, #2
 8000534:	4464      	add	r4, ip
 8000536:	1ae4      	subs	r4, r4, r3
 8000538:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800053c:	e739      	b.n	80003b2 <__udivmoddi4+0xf2>
 800053e:	4604      	mov	r4, r0
 8000540:	e6f0      	b.n	8000324 <__udivmoddi4+0x64>
 8000542:	4608      	mov	r0, r1
 8000544:	e706      	b.n	8000354 <__udivmoddi4+0x94>
 8000546:	45c8      	cmp	r8, r9
 8000548:	d2ae      	bcs.n	80004a8 <__udivmoddi4+0x1e8>
 800054a:	ebb9 0e02 	subs.w	lr, r9, r2
 800054e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000552:	3801      	subs	r0, #1
 8000554:	e7a8      	b.n	80004a8 <__udivmoddi4+0x1e8>
 8000556:	4631      	mov	r1, r6
 8000558:	e7ed      	b.n	8000536 <__udivmoddi4+0x276>
 800055a:	4603      	mov	r3, r0
 800055c:	e799      	b.n	8000492 <__udivmoddi4+0x1d2>
 800055e:	4630      	mov	r0, r6
 8000560:	e7d4      	b.n	800050c <__udivmoddi4+0x24c>
 8000562:	46d6      	mov	lr, sl
 8000564:	e77f      	b.n	8000466 <__udivmoddi4+0x1a6>
 8000566:	4463      	add	r3, ip
 8000568:	3802      	subs	r0, #2
 800056a:	e74d      	b.n	8000408 <__udivmoddi4+0x148>
 800056c:	4606      	mov	r6, r0
 800056e:	4623      	mov	r3, r4
 8000570:	4608      	mov	r0, r1
 8000572:	e70f      	b.n	8000394 <__udivmoddi4+0xd4>
 8000574:	3e02      	subs	r6, #2
 8000576:	4463      	add	r3, ip
 8000578:	e730      	b.n	80003dc <__udivmoddi4+0x11c>
 800057a:	bf00      	nop

0800057c <__aeabi_idiv0>:
 800057c:	4770      	bx	lr
 800057e:	bf00      	nop

08000580 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack       /* set stack pointer */
 8000580:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80005b8 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */
  movs  r1, #0
 8000584:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000586:	e003      	b.n	8000590 <LoopCopyDataInit>

08000588 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000588:	4b0c      	ldr	r3, [pc, #48]	@ (80005bc <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800058a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 800058c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800058e:	3104      	adds	r1, #4

08000590 <LoopCopyDataInit>:

LoopCopyDataInit:
  ldr  r0, =_sdata
 8000590:	480b      	ldr	r0, [pc, #44]	@ (80005c0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000592:	4b0c      	ldr	r3, [pc, #48]	@ (80005c4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000594:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000596:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000598:	d3f6      	bcc.n	8000588 <CopyDataInit>
  ldr  r2, =_sbss
 800059a:	4a0b      	ldr	r2, [pc, #44]	@ (80005c8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 800059c:	e002      	b.n	80005a4 <LoopFillZerobss>

0800059e <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
  movs  r3, #0
 800059e:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005a0:	f842 3b04 	str.w	r3, [r2], #4

080005a4 <LoopFillZerobss>:

LoopFillZerobss:
  ldr  r3, = _ebss
 80005a4:	4b09      	ldr	r3, [pc, #36]	@ (80005cc <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005a6:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005a8:	d3f9      	bcc.n	800059e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80005aa:	f004 fb37 	bl	8004c1c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005ae:	f01b fc0d 	bl	801bdcc <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005b2:	f000 ff21 	bl	80013f8 <main>
  bx  lr
 80005b6:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005b8:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005bc:	08131904 	.word	0x08131904
  ldr  r0, =_sdata
 80005c0:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005c4:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 80005c8:	2000016c 	.word	0x2000016c
  ldr  r3, = _ebss
 80005cc:	20014430 	.word	0x20014430

080005d0 <ADC_IRQHandler>:
 * @retval None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005d0:	e7fe      	b.n	80005d0 <ADC_IRQHandler>

080005d2 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005d2:	f000 bcb9 	b.w	8000f48 <touchgfx_init>

080005d6 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005d6:	f000 bd2b 	b.w	8001030 <touchgfx_taskEntry>

080005da <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005da:	4770      	bx	lr

080005dc <_ZN20STM32TouchControllerD0Ev>:
 80005dc:	b510      	push	{r4, lr}
 80005de:	2104      	movs	r1, #4
 80005e0:	4604      	mov	r4, r0
 80005e2:	f01b f915 	bl	801b810 <_ZdlPvj>
 80005e6:	4620      	mov	r0, r4
 80005e8:	bd10      	pop	{r4, pc}
	...

080005ec <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80005ec:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80005ee:	4b0c      	ldr	r3, [pc, #48]	@ (8000620 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80005f0:	4c0c      	ldr	r4, [pc, #48]	@ (8000624 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80005f2:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80005f4:	4b0c      	ldr	r3, [pc, #48]	@ (8000628 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80005f6:	2082      	movs	r0, #130	@ 0x82
    TsYBoundary = YSize;
 80005f8:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80005fa:	6863      	ldr	r3, [r4, #4]
 80005fc:	4798      	blx	r3
 80005fe:	f640 0311 	movw	r3, #2065	@ 0x811
 8000602:	4298      	cmp	r0, r3
 8000604:	d10a      	bne.n	800061c <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000606:	4d09      	ldr	r5, [pc, #36]	@ (800062c <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000608:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800060a:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 800060c:	2082      	movs	r0, #130	@ 0x82
 800060e:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000610:	682b      	ldr	r3, [r5, #0]
 8000612:	2082      	movs	r0, #130	@ 0x82
 8000614:	68db      	ldr	r3, [r3, #12]
 8000616:	4798      	blx	r3
 8000618:	2000      	movs	r0, #0
    }

    return ret;
}
 800061a:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 800061c:	2001      	movs	r0, #1
 800061e:	e7fc      	b.n	800061a <_Z11BSP_TS_Inittt+0x2e>
 8000620:	20000192 	.word	0x20000192
 8000624:	20000054 	.word	0x20000054
 8000628:	20000190 	.word	0x20000190
 800062c:	20000194 	.word	0x20000194

08000630 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000630:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8000634:	20f0      	movs	r0, #240	@ 0xf0
 8000636:	f7ff bfd9 	b.w	80005ec <_Z11BSP_TS_Inittt>
	...

0800063c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 800063c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800063e:	4d33      	ldr	r5, [pc, #204]	@ (800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 8000640:	682b      	ldr	r3, [r5, #0]
{
 8000642:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000644:	691b      	ldr	r3, [r3, #16]
 8000646:	2082      	movs	r0, #130	@ 0x82
 8000648:	4798      	blx	r3
 800064a:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800064c:	2800      	cmp	r0, #0
 800064e:	d04a      	beq.n	80006e6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xaa>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000650:	682b      	ldr	r3, [r5, #0]
 8000652:	f10d 0206 	add.w	r2, sp, #6
 8000656:	695b      	ldr	r3, [r3, #20]
 8000658:	a901      	add	r1, sp, #4
 800065a:	2082      	movs	r0, #130	@ 0x82
 800065c:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 800065e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000662:	f640 6274 	movw	r2, #3700	@ 0xe74
 8000666:	4293      	cmp	r3, r2
 8000668:	d93f      	bls.n	80006ea <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xae>
        {
            y = 3700;
 800066a:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 800066e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000672:	1ad2      	subs	r2, r2, r3
 8000674:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000676:	2a0a      	cmp	r2, #10
 8000678:	d93d      	bls.n	80006f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xba>
        yr = y / 11;
 800067a:	230b      	movs	r3, #11
 800067c:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000680:	4b23      	ldr	r3, [pc, #140]	@ (8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8000682:	881b      	ldrh	r3, [r3, #0]
 8000684:	429a      	cmp	r2, r3
 8000686:	d901      	bls.n	800068c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x50>
        {
            yr = TsYBoundary - 1;
 8000688:	3b01      	subs	r3, #1
 800068a:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800068c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000690:	f640 31b8 	movw	r1, #3000	@ 0xbb8
 8000694:	428b      	cmp	r3, r1
 8000696:	d830      	bhi.n	80006fa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbe>
        {
            x = 3870 - x;
 8000698:	f5c3 6371 	rsb	r3, r3, #3856	@ 0xf10
 800069c:	330e      	adds	r3, #14
 800069e:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006a0:	210f      	movs	r1, #15
 80006a2:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006a6:	491b      	ldr	r1, [pc, #108]	@ (8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 80006a8:	8809      	ldrh	r1, [r1, #0]
 80006aa:	428b      	cmp	r3, r1
 80006ac:	d901      	bls.n	80006b2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x76>
        {
            xr = TsXBoundary - 1;
 80006ae:	3901      	subs	r1, #1
 80006b0:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006b2:	4e19      	ldr	r6, [pc, #100]	@ (8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006b4:	4d19      	ldr	r5, [pc, #100]	@ (800071c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006b6:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006b8:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ba:	4283      	cmp	r3, r0
 80006bc:	b281      	uxth	r1, r0
 80006be:	bf8c      	ite	hi
 80006c0:	1a59      	subhi	r1, r3, r1
 80006c2:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c4:	b2b8      	uxth	r0, r7
 80006c6:	42ba      	cmp	r2, r7
 80006c8:	bf8c      	ite	hi
 80006ca:	1a10      	subhi	r0, r2, r0
 80006cc:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ce:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d0:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006d2:	4401      	add	r1, r0
 80006d4:	2905      	cmp	r1, #5
        {
            _x = x;
 80006d6:	bfc8      	it	gt
 80006d8:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006da:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006dc:	bfc8      	it	gt
 80006de:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006e0:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006e2:	682b      	ldr	r3, [r5, #0]
 80006e4:	80a3      	strh	r3, [r4, #4]
    }
}
 80006e6:	b003      	add	sp, #12
 80006e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 80006ea:	2bb3      	cmp	r3, #179	@ 0xb3
            y = 180;
 80006ec:	bf9c      	itt	ls
 80006ee:	23b4      	movls	r3, #180	@ 0xb4
 80006f0:	f8ad 3006 	strhls.w	r3, [sp, #6]
 80006f4:	e7bb      	b.n	800066e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x32>
            yr = 0;
 80006f6:	2200      	movs	r2, #0
 80006f8:	e7c8      	b.n	800068c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x50>
            x = 3800 - x;
 80006fa:	f5c3 636d 	rsb	r3, r3, #3792	@ 0xed0
 80006fe:	3308      	adds	r3, #8
 8000700:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8000702:	2b0e      	cmp	r3, #14
 8000704:	d8cc      	bhi.n	80006a0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x64>
            xr = 0;
 8000706:	2300      	movs	r3, #0
 8000708:	e7d3      	b.n	80006b2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x76>
 800070a:	bf00      	nop
 800070c:	20000194 	.word	0x20000194
 8000710:	20000190 	.word	0x20000190
 8000714:	20000192 	.word	0x20000192
 8000718:	2000018c 	.word	0x2000018c
 800071c:	20000188 	.word	0x20000188

08000720 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000720:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000722:	4668      	mov	r0, sp
{
 8000724:	460d      	mov	r5, r1
 8000726:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000728:	f7ff ff88 	bl	800063c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 800072c:	f8bd 0000 	ldrh.w	r0, [sp]
 8000730:	b130      	cbz	r0, 8000740 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000732:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000736:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000738:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800073c:	6023      	str	r3, [r4, #0]
        return true;
 800073e:	2001      	movs	r0, #1
}
 8000740:	b003      	add	sp, #12
 8000742:	bd30      	pop	{r4, r5, pc}

08000744 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000744:	2803      	cmp	r0, #3
 8000746:	d821      	bhi.n	800078c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 8000748:	e8df f000 	tbb	[pc, r0]
 800074c:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000750:	4b0f      	ldr	r3, [pc, #60]	@ (8000790 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000752:	681a      	ldr	r2, [r3, #0]
 8000754:	fab2 f282 	clz	r2, r2
 8000758:	0952      	lsrs	r2, r2, #5
 800075a:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 800075c:	480d      	ldr	r0, [pc, #52]	@ (8000794 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 800075e:	f004 bcf3 	b.w	8005148 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000762:	4b0b      	ldr	r3, [pc, #44]	@ (8000790 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000764:	685a      	ldr	r2, [r3, #4]
 8000766:	fab2 f282 	clz	r2, r2
 800076a:	0952      	lsrs	r2, r2, #5
 800076c:	2108      	movs	r1, #8
 800076e:	e7f5      	b.n	800075c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000770:	4b07      	ldr	r3, [pc, #28]	@ (8000790 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000772:	689a      	ldr	r2, [r3, #8]
 8000774:	fab2 f282 	clz	r2, r2
 8000778:	0952      	lsrs	r2, r2, #5
 800077a:	2110      	movs	r1, #16
 800077c:	e7ee      	b.n	800075c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 800077e:	4b04      	ldr	r3, [pc, #16]	@ (8000790 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000780:	68da      	ldr	r2, [r3, #12]
 8000782:	fab2 f282 	clz	r2, r2
 8000786:	0952      	lsrs	r2, r2, #5
 8000788:	2120      	movs	r1, #32
 800078a:	e7e7      	b.n	800075c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 800078c:	4770      	bx	lr
 800078e:	bf00      	nop
 8000790:	20000198 	.word	0x20000198
 8000794:	40021000 	.word	0x40021000

08000798 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8000798:	2803      	cmp	r0, #3
 800079a:	d821      	bhi.n	80007e0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 800079c:	e8df f000 	tbb	[pc, r0]
 80007a0:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007a4:	4b0f      	ldr	r3, [pc, #60]	@ (80007e4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007a6:	681a      	ldr	r2, [r3, #0]
 80007a8:	3a00      	subs	r2, #0
 80007aa:	bf18      	it	ne
 80007ac:	2201      	movne	r2, #1
 80007ae:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80007b0:	480d      	ldr	r0, [pc, #52]	@ (80007e8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80007b2:	f004 bcc9 	b.w	8005148 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007b6:	4b0b      	ldr	r3, [pc, #44]	@ (80007e4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007b8:	685a      	ldr	r2, [r3, #4]
 80007ba:	3a00      	subs	r2, #0
 80007bc:	bf18      	it	ne
 80007be:	2201      	movne	r2, #1
 80007c0:	2108      	movs	r1, #8
 80007c2:	e7f5      	b.n	80007b0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80007c4:	4b07      	ldr	r3, [pc, #28]	@ (80007e4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007c6:	689a      	ldr	r2, [r3, #8]
 80007c8:	3a00      	subs	r2, #0
 80007ca:	bf18      	it	ne
 80007cc:	2201      	movne	r2, #1
 80007ce:	2110      	movs	r1, #16
 80007d0:	e7ee      	b.n	80007b0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80007d2:	4b04      	ldr	r3, [pc, #16]	@ (80007e4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007d4:	68da      	ldr	r2, [r3, #12]
 80007d6:	3a00      	subs	r2, #0
 80007d8:	bf18      	it	ne
 80007da:	2201      	movne	r2, #1
 80007dc:	2120      	movs	r1, #32
 80007de:	e7e7      	b.n	80007b0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80007e0:	4770      	bx	lr
 80007e2:	bf00      	nop
 80007e4:	20000198 	.word	0x20000198
 80007e8:	40021000 	.word	0x40021000

080007ec <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007ec:	2803      	cmp	r0, #3
 80007ee:	d80d      	bhi.n	800080c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 80007f0:	e8df f000 	tbb	[pc, r0]
 80007f4:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007f8:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80007fa:	4805      	ldr	r0, [pc, #20]	@ (8000810 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 80007fc:	f004 bca9 	b.w	8005152 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000800:	2108      	movs	r1, #8
 8000802:	e7fa      	b.n	80007fa <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000804:	2110      	movs	r1, #16
 8000806:	e7f8      	b.n	80007fa <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000808:	2120      	movs	r1, #32
 800080a:	e7f6      	b.n	80007fa <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 800080c:	4770      	bx	lr
 800080e:	bf00      	nop
 8000810:	40021000 	.word	0x40021000

08000814 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000814:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8000816:	2803      	cmp	r0, #3
 8000818:	d811      	bhi.n	800083e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 800081a:	e8df f000 	tbb	[pc, r0]
 800081e:	0a02      	.short	0x0a02
 8000820:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000822:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000824:	4807      	ldr	r0, [pc, #28]	@ (8000844 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 8000826:	f004 fc89 	bl	800513c <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 800082a:	1e43      	subs	r3, r0, #1
 800082c:	4258      	negs	r0, r3
 800082e:	4158      	adcs	r0, r3
 8000830:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000832:	2108      	movs	r1, #8
 8000834:	e7f6      	b.n	8000824 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000836:	2110      	movs	r1, #16
 8000838:	e7f4      	b.n	8000824 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800083a:	2120      	movs	r1, #32
 800083c:	e7f2      	b.n	8000824 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 800083e:	2000      	movs	r0, #0
 8000840:	e7f3      	b.n	800082a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000842:	bf00      	nop
 8000844:	40021000 	.word	0x40021000

08000848 <_ZN8touchgfx4GPIO4initEv>:
{
 8000848:	b570      	push	{r4, r5, r6, lr}
 800084a:	4d08      	ldr	r5, [pc, #32]	@ (800086c <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 800084c:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 800084e:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000850:	b2e0      	uxtb	r0, r4
 8000852:	f7ff ffdf 	bl	8000814 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000856:	b118      	cbz	r0, 8000860 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000858:	682b      	ldr	r3, [r5, #0]
 800085a:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 800085c:	bf18      	it	ne
 800085e:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000860:	3401      	adds	r4, #1
 8000862:	2c05      	cmp	r4, #5
 8000864:	f105 0504 	add.w	r5, r5, #4
 8000868:	d1f2      	bne.n	8000850 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 800086a:	bd70      	pop	{r4, r5, r6, pc}
 800086c:	20000198 	.word	0x20000198

08000870 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000870:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000872:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 8000876:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 800087a:	4770      	bx	lr

0800087c <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 800087c:	2000      	movs	r0, #0
 800087e:	4770      	bx	lr

08000880 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000880:	4b03      	ldr	r3, [pc, #12]	@ (8000890 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000882:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000884:	3900      	subs	r1, #0
 8000886:	bf18      	it	ne
 8000888:	2101      	movne	r1, #1
 800088a:	7019      	strb	r1, [r3, #0]
    }
 800088c:	4770      	bx	lr
 800088e:	bf00      	nop
 8000890:	200137ff 	.word	0x200137ff

08000894 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000894:	2000      	movs	r0, #0
 8000896:	4770      	bx	lr

08000898 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000898:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 800089a:	b10b      	cbz	r3, 80008a0 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800089c:	4608      	mov	r0, r1
 800089e:	4718      	bx	r3
        }
    }
 80008a0:	4770      	bx	lr

080008a2 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80008a2:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 80008a6:	4770      	bx	lr

080008a8 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80008a8:	6840      	ldr	r0, [r0, #4]
 80008aa:	6803      	ldr	r3, [r0, #0]
 80008ac:	699b      	ldr	r3, [r3, #24]
 80008ae:	4718      	bx	r3

080008b0 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80008b0:	4770      	bx	lr

080008b2 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80008b2:	4770      	bx	lr

080008b4 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80008b4:	4770      	bx	lr
	...

080008b8 <_ZN11TouchGFXHAL10initializeEv>:

LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");

void TouchGFXHAL::initialize()
{
 80008b8:	b570      	push	{r4, r5, r6, lr}
 80008ba:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 80008bc:	f000 fc58 	bl	8001170 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // existing frame buffers are re-used. just add animation storage
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationStorage);
 80008c0:	6823      	ldr	r3, [r4, #0]
 80008c2:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 80008c6:	4b04      	ldr	r3, [pc, #16]	@ (80008d8 <_ZN11TouchGFXHAL10initializeEv+0x20>)
 80008c8:	e9d4 120f 	ldrd	r1, r2, [r4, #60]	@ 0x3c
 80008cc:	4620      	mov	r0, r4
 80008ce:	46ac      	mov	ip, r5
}
 80008d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationStorage);
 80008d4:	4760      	bx	ip
 80008d6:	bf00      	nop
 80008d8:	d0000000 	.word	0xd0000000

080008dc <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 80008dc:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 80008de:	6803      	ldr	r3, [r0, #0]
{
 80008e0:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 80008e2:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80008e6:	4798      	blx	r3
    enableInterrupts();
 80008e8:	6823      	ldr	r3, [r4, #0]
 80008ea:	4620      	mov	r0, r4
 80008ec:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 80008ee:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80008f0:	f000 f8ec 	bl	8000acc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80008f4:	6823      	ldr	r3, [r4, #0]
 80008f6:	4620      	mov	r0, r4
 80008f8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80008fa:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80008fc:	2029      	movs	r0, #41	@ 0x29
 80008fe:	f000 ffef 	bl	80018e0 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000902:	f000 f8e3 	bl	8000acc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000906:	6823      	ldr	r3, [r4, #0]
 8000908:	4620      	mov	r0, r4
 800090a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800090c:	4798      	blx	r3
    for (;;)
 800090e:	e7f8      	b.n	8000902 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000910 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000910:	b510      	push	{r4, lr}
 8000912:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000914:	f009 fdba 	bl	800a48c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000918:	6823      	ldr	r3, [r4, #0]
 800091a:	4620      	mov	r0, r4
 800091c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
    }
 8000920:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000924:	4718      	bx	r3

08000926 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8000926:	f000 bc15 	b.w	8001154 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

0800092a <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800092a:	f000 bc19 	b.w	8001160 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

0800092e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800092e:	f000 bc45 	b.w	80011bc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000932 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000932:	f000 bbeb 	b.w	800110c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000936 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000936:	f000 bc45 	b.w	80011c4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

0800093a <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800093a:	f000 bc4d 	b.w	80011d8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

0800093e <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800093e:	f000 bbef 	b.w	8001120 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000942 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000942:	f009 b80f 	b.w	8009964 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000946 <_ZN11TouchGFXHALD0Ev>:
 8000946:	b510      	push	{r4, lr}
 8000948:	217c      	movs	r1, #124	@ 0x7c
 800094a:	4604      	mov	r4, r0
 800094c:	f01a ff60 	bl	801b810 <_ZdlPvj>
 8000950:	4620      	mov	r0, r4
 8000952:	bd10      	pop	{r4, pc}

08000954 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000954:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000956:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 800095a:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 800095e:	4b0c      	ldr	r3, [pc, #48]	@ (8000990 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000960:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8000962:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000964:	d009      	beq.n	800097a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000966:	b93a      	cbnz	r2, 8000978 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000968:	4a0a      	ldr	r2, [pc, #40]	@ (8000994 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 800096a:	490b      	ldr	r1, [pc, #44]	@ (8000998 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800096c:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 800096e:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000970:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000972:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000974:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000976:	701a      	strb	r2, [r3, #0]
    }
 8000978:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800097a:	2a00      	cmp	r2, #0
 800097c:	d0fc      	beq.n	8000978 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800097e:	4a05      	ldr	r2, [pc, #20]	@ (8000994 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000980:	4905      	ldr	r1, [pc, #20]	@ (8000998 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000982:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000984:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000986:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000988:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 800098a:	2200      	movs	r2, #0
 800098c:	e7f3      	b.n	8000976 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800098e:	bf00      	nop
 8000990:	200137f8 	.word	0x200137f8
 8000994:	200137f4 	.word	0x200137f4
 8000998:	200137f6 	.word	0x200137f6

0800099c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800099c:	b570      	push	{r4, r5, r6, lr}
 800099e:	460d      	mov	r5, r1
 80009a0:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80009a2:	b935      	cbnz	r5, 80009b2 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 80009a4:	4b09      	ldr	r3, [pc, #36]	@ (80009cc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80009a6:	4a0a      	ldr	r2, [pc, #40]	@ (80009d0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80009a8:	480a      	ldr	r0, [pc, #40]	@ (80009d4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80009aa:	f240 21d2 	movw	r1, #722	@ 0x2d2
 80009ae:	f01a ff5d 	bl	801b86c <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80009b2:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009b6:	4b08      	ldr	r3, [pc, #32]	@ (80009d8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 80009b8:	3a00      	subs	r2, #0
 80009ba:	bf18      	it	ne
 80009bc:	2201      	movne	r2, #1
 80009be:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 80009c0:	6803      	ldr	r3, [r0, #0]
    }
 80009c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 80009c6:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80009ca:	4718      	bx	r3
 80009cc:	0801c91c 	.word	0x0801c91c
 80009d0:	0801c954 	.word	0x0801c954
 80009d4:	0801c9a2 	.word	0x0801c9a2
 80009d8:	200137fe 	.word	0x200137fe

080009dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80009dc:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80009de:	4b09      	ldr	r3, [pc, #36]	@ (8000a04 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80009e0:	881b      	ldrh	r3, [r3, #0]
 80009e2:	428b      	cmp	r3, r1
 80009e4:	d803      	bhi.n	80009ee <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80009e6:	4b08      	ldr	r3, [pc, #32]	@ (8000a08 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80009e8:	881b      	ldrh	r3, [r3, #0]
 80009ea:	4293      	cmp	r3, r2
 80009ec:	d905      	bls.n	80009fa <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80009ee:	4b07      	ldr	r3, [pc, #28]	@ (8000a0c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80009f0:	4a07      	ldr	r2, [pc, #28]	@ (8000a10 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80009f2:	4808      	ldr	r0, [pc, #32]	@ (8000a14 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80009f4:	219e      	movs	r1, #158	@ 0x9e
 80009f6:	f01a ff39 	bl	801b86c <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80009fa:	4b07      	ldr	r3, [pc, #28]	@ (8000a18 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80009fc:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80009fe:	4b07      	ldr	r3, [pc, #28]	@ (8000a1c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000a00:	801a      	strh	r2, [r3, #0]
    }
 8000a02:	bd08      	pop	{r3, pc}
 8000a04:	200137f4 	.word	0x200137f4
 8000a08:	200137f6 	.word	0x200137f6
 8000a0c:	0801c9e7 	.word	0x0801c9e7
 8000a10:	0801ca4a 	.word	0x0801ca4a
 8000a14:	0801c9a2 	.word	0x0801c9a2
 8000a18:	200137fa 	.word	0x200137fa
 8000a1c:	200137fc 	.word	0x200137fc

08000a20 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8000a20:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8000a22:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8000a26:	b118      	cbz	r0, 8000a30 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8000a28:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 8000a2a:	6803      	ldr	r3, [r0, #0]
 8000a2c:	681b      	ldr	r3, [r3, #0]
 8000a2e:	4718      	bx	r3
    }
 8000a30:	4770      	bx	lr
	...

08000a34 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000a34:	2101      	movs	r1, #1
{
 8000a36:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000a38:	2200      	movs	r2, #0
 8000a3a:	4608      	mov	r0, r1
 8000a3c:	f006 fbaf 	bl	800719e <osSemaphoreNew>
 8000a40:	4b0a      	ldr	r3, [pc, #40]	@ (8000a6c <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000a42:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000a44:	b928      	cbnz	r0, 8000a52 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000a46:	4b0a      	ldr	r3, [pc, #40]	@ (8000a70 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000a48:	4a0a      	ldr	r2, [pc, #40]	@ (8000a74 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a4a:	2128      	movs	r1, #40	@ 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a4c:	480a      	ldr	r0, [pc, #40]	@ (8000a78 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000a4e:	f01a ff0d 	bl	801b86c <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000a52:	2200      	movs	r2, #0
 8000a54:	2104      	movs	r1, #4
 8000a56:	2001      	movs	r0, #1
 8000a58:	f006 fc49 	bl	80072ee <osMessageQueueNew>
 8000a5c:	4b07      	ldr	r3, [pc, #28]	@ (8000a7c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000a5e:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a60:	b918      	cbnz	r0, 8000a6a <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000a62:	4b07      	ldr	r3, [pc, #28]	@ (8000a80 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000a64:	4a03      	ldr	r2, [pc, #12]	@ (8000a74 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a66:	212c      	movs	r1, #44	@ 0x2c
 8000a68:	e7f0      	b.n	8000a4c <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000a6a:	bd08      	pop	{r3, pc}
 8000a6c:	200001ac 	.word	0x200001ac
 8000a70:	0801cb68 	.word	0x0801cb68
 8000a74:	0801cbb1 	.word	0x0801cbb1
 8000a78:	0801cbe0 	.word	0x0801cbe0
 8000a7c:	200001a8 	.word	0x200001a8
 8000a80:	0801cc2b 	.word	0x0801cc2b

08000a84 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000a84:	4b02      	ldr	r3, [pc, #8]	@ (8000a90 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000a86:	f04f 31ff 	mov.w	r1, #4294967295
 8000a8a:	6818      	ldr	r0, [r3, #0]
 8000a8c:	f006 bbd1 	b.w	8007232 <osSemaphoreAcquire>
 8000a90:	200001ac 	.word	0x200001ac

08000a94 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000a94:	4b01      	ldr	r3, [pc, #4]	@ (8000a9c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000a96:	6818      	ldr	r0, [r3, #0]
 8000a98:	f006 bbf7 	b.w	800728a <osSemaphoreRelease>
 8000a9c:	200001ac 	.word	0x200001ac

08000aa0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000aa0:	4b02      	ldr	r3, [pc, #8]	@ (8000aac <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000aa2:	2100      	movs	r1, #0
 8000aa4:	6818      	ldr	r0, [r3, #0]
 8000aa6:	f006 bbc4 	b.w	8007232 <osSemaphoreAcquire>
 8000aaa:	bf00      	nop
 8000aac:	200001ac 	.word	0x200001ac

08000ab0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8000ab0:	f7ff bff0 	b.w	8000a94 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000ab4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000ab4:	4803      	ldr	r0, [pc, #12]	@ (8000ac4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000ab6:	4904      	ldr	r1, [pc, #16]	@ (8000ac8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000ab8:	6800      	ldr	r0, [r0, #0]
 8000aba:	2300      	movs	r3, #0
 8000abc:	461a      	mov	r2, r3
 8000abe:	f006 bc51 	b.w	8007364 <osMessageQueuePut>
 8000ac2:	bf00      	nop
 8000ac4:	200001a8 	.word	0x200001a8
 8000ac8:	20000004 	.word	0x20000004

08000acc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000acc:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000ace:	4c08      	ldr	r4, [pc, #32]	@ (8000af0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000ad0:	2300      	movs	r3, #0
 8000ad2:	461a      	mov	r2, r3
 8000ad4:	a901      	add	r1, sp, #4
 8000ad6:	6820      	ldr	r0, [r4, #0]
 8000ad8:	f006 fc75 	bl	80073c6 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000adc:	6820      	ldr	r0, [r4, #0]
 8000ade:	f04f 33ff 	mov.w	r3, #4294967295
 8000ae2:	2200      	movs	r2, #0
 8000ae4:	a901      	add	r1, sp, #4
 8000ae6:	f006 fc6e 	bl	80073c6 <osMessageQueueGet>
}
 8000aea:	b002      	add	sp, #8
 8000aec:	bd10      	pop	{r4, pc}
 8000aee:	bf00      	nop
 8000af0:	200001a8 	.word	0x200001a8

08000af4 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000af4:	6803      	ldr	r3, [r0, #0]
 8000af6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000af8:	4718      	bx	r3

08000afa <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000afa:	2001      	movs	r0, #1
 8000afc:	4770      	bx	lr

08000afe <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000afe:	6803      	ldr	r3, [r0, #0]
 8000b00:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000b02:	4718      	bx	r3

08000b04 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000b04:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000b06:	2300      	movs	r3, #0
 8000b08:	9301      	str	r3, [sp, #4]
 8000b0a:	4b0d      	ldr	r3, [pc, #52]	@ (8000b40 <_ZN8STM32DMA10initializeEv+0x3c>)
 8000b0c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000b0e:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000b12:	631a      	str	r2, [r3, #48]	@ 0x30
 8000b14:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000b16:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 8000b1a:	9201      	str	r2, [sp, #4]
 8000b1c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000b1e:	691a      	ldr	r2, [r3, #16]
 8000b20:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000b24:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000b26:	691a      	ldr	r2, [r3, #16]
 8000b28:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8000b2c:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000b2e:	4b05      	ldr	r3, [pc, #20]	@ (8000b44 <_ZN8STM32DMA10initializeEv+0x40>)
 8000b30:	4a05      	ldr	r2, [pc, #20]	@ (8000b48 <_ZN8STM32DMA10initializeEv+0x44>)
 8000b32:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000b34:	4b05      	ldr	r3, [pc, #20]	@ (8000b4c <_ZN8STM32DMA10initializeEv+0x48>)
 8000b36:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000b3a:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000b3c:	b002      	add	sp, #8
 8000b3e:	4770      	bx	lr
 8000b40:	40023800 	.word	0x40023800
 8000b44:	200024f8 	.word	0x200024f8
 8000b48:	08000ddd 	.word	0x08000ddd
 8000b4c:	e000e100 	.word	0xe000e100

08000b50 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000b50:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 8000b54:	4770      	bx	lr
	...

08000b58 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000b58:	4b05      	ldr	r3, [pc, #20]	@ (8000b70 <_ZN8STM32DMAD1Ev+0x18>)
 8000b5a:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000b5c:	4b05      	ldr	r3, [pc, #20]	@ (8000b74 <_ZN8STM32DMAD1Ev+0x1c>)
 8000b5e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000b62:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000b66:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000b6a:	f3bf 8f6f 	isb	sy
}
 8000b6e:	4770      	bx	lr
 8000b70:	0801cdc8 	.word	0x0801cdc8
 8000b74:	e000e100 	.word	0xe000e100

08000b78 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000b78:	b510      	push	{r4, lr}
 8000b7a:	4604      	mov	r4, r0
}
 8000b7c:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8000b80:	f7ff ffea 	bl	8000b58 <_ZN8STM32DMAD1Ev>
 8000b84:	4620      	mov	r0, r4
 8000b86:	f01a fe43 	bl	801b810 <_ZdlPvj>
 8000b8a:	4620      	mov	r0, r4
 8000b8c:	bd10      	pop	{r4, pc}
	...

08000b90 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000b90:	b508      	push	{r3, lr}
    switch (format)
 8000b92:	280a      	cmp	r0, #10
 8000b94:	d809      	bhi.n	8000baa <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000b96:	e8df f000 	tbb	[pc, r0]
 8000b9a:	1006      	.short	0x1006
 8000b9c:	0808080e 	.word	0x0808080e
 8000ba0:	10101008 	.word	0x10101008
 8000ba4:	10          	.byte	0x10
 8000ba5:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000ba6:	2002      	movs	r0, #2
}
 8000ba8:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000baa:	4b05      	ldr	r3, [pc, #20]	@ (8000bc0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000bac:	4a05      	ldr	r2, [pc, #20]	@ (8000bc4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000bae:	4806      	ldr	r0, [pc, #24]	@ (8000bc8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000bb0:	2187      	movs	r1, #135	@ 0x87
 8000bb2:	f01a fe5b 	bl	801b86c <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000bb6:	2000      	movs	r0, #0
 8000bb8:	e7f6      	b.n	8000ba8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8000bba:	2001      	movs	r0, #1
    return dma2dColorMode;
 8000bbc:	e7f4      	b.n	8000ba8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000bbe:	bf00      	nop
 8000bc0:	0801cc6d 	.word	0x0801cc6d
 8000bc4:	0801cc88 	.word	0x0801cc88
 8000bc8:	0801ccd3 	.word	0x0801ccd3

08000bcc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000bcc:	b538      	push	{r3, r4, r5, lr}
 8000bce:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000bd0:	7f88      	ldrb	r0, [r1, #30]
 8000bd2:	f7ff ffdd 	bl	8000b90 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000bd6:	8aa5      	ldrh	r5, [r4, #20]
 8000bd8:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000bda:	4b16      	ldr	r3, [pc, #88]	@ (8000c34 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000bdc:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000bde:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000be0:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8000be4:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000be6:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000be8:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000bea:	1b52      	subs	r2, r2, r5
 8000bec:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000bee:	6825      	ldr	r5, [r4, #0]
 8000bf0:	2d08      	cmp	r5, #8
 8000bf2:	d10e      	bne.n	8000c12 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000bf4:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000bf6:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000bf8:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000bfa:	7f20      	ldrb	r0, [r4, #28]
 8000bfc:	4a0e      	ldr	r2, [pc, #56]	@ (8000c38 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000bfe:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c02:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000c04:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c06:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000c08:	4a0c      	ldr	r2, [pc, #48]	@ (8000c3c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c0a:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c0c:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c0e:	601a      	str	r2, [r3, #0]
    }
}
 8000c10:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000c12:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000c14:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000c16:	611a      	str	r2, [r3, #16]
 8000c18:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000c1a:	0a0a      	lsrs	r2, r1, #8
 8000c1c:	0948      	lsrs	r0, r1, #5
 8000c1e:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8000c22:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8000c26:	4302      	orrs	r2, r0
 8000c28:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000c2c:	430a      	orrs	r2, r1
 8000c2e:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c30:	4a03      	ldr	r2, [pc, #12]	@ (8000c40 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000c32:	e7ec      	b.n	8000c0e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000c34:	4002b000 	.word	0x4002b000
 8000c38:	00010009 	.word	0x00010009
 8000c3c:	00020201 	.word	0x00020201
 8000c40:	00030201 	.word	0x00030201

08000c44 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000c44:	b508      	push	{r3, lr}
    switch (format)
 8000c46:	280b      	cmp	r0, #11
 8000c48:	d80b      	bhi.n	8000c62 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000c4a:	e8df f000 	tbb	[pc, r0]
 8000c4e:	1206      	.short	0x1206
 8000c50:	0a0a0a10 	.word	0x0a0a0a10
 8000c54:	0808080a 	.word	0x0808080a
 8000c58:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000c5a:	2002      	movs	r0, #2
}
 8000c5c:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000c5e:	2005      	movs	r0, #5
        break;
 8000c60:	e7fc      	b.n	8000c5c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000c62:	4b05      	ldr	r3, [pc, #20]	@ (8000c78 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000c64:	4a05      	ldr	r2, [pc, #20]	@ (8000c7c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000c66:	4806      	ldr	r0, [pc, #24]	@ (8000c80 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000c68:	2166      	movs	r1, #102	@ 0x66
 8000c6a:	f01a fdff 	bl	801b86c <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000c6e:	2000      	movs	r0, #0
 8000c70:	e7f4      	b.n	8000c5c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8000c72:	2001      	movs	r0, #1
    return dma2dColorMode;
 8000c74:	e7f2      	b.n	8000c5c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000c76:	bf00      	nop
 8000c78:	0801cc6d 	.word	0x0801cc6d
 8000c7c:	0801cd1c 	.word	0x0801cd1c
 8000c80:	0801ccd3 	.word	0x0801ccd3

08000c84 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 8000c84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c88:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000c8c:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c8e:	4640      	mov	r0, r8
 8000c90:	f7ff ffd8 	bl	8000c44 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c94:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c96:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c98:	4638      	mov	r0, r7
 8000c9a:	f7ff ffd3 	bl	8000c44 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000c9e:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000ca0:	4638      	mov	r0, r7
 8000ca2:	f7ff ff75 	bl	8000b90 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000ca6:	8aa1      	ldrh	r1, [r4, #20]
 8000ca8:	8b62      	ldrh	r2, [r4, #26]
 8000caa:	4b44      	ldr	r3, [pc, #272]	@ (8000dbc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000cac:	1a52      	subs	r2, r2, r1
 8000cae:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000cb0:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000cb2:	8b22      	ldrh	r2, [r4, #24]
 8000cb4:	1a52      	subs	r2, r2, r1
 8000cb6:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cb8:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000cba:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cbc:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000cc0:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cc2:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000cc4:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cc6:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000cc8:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 8000cca:	6820      	ldr	r0, [r4, #0]
 8000ccc:	2880      	cmp	r0, #128	@ 0x80
 8000cce:	d028      	beq.n	8000d22 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8000cd0:	7f22      	ldrb	r2, [r4, #28]
 8000cd2:	d80f      	bhi.n	8000cf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8000cd4:	2820      	cmp	r0, #32
 8000cd6:	d067      	beq.n	8000da8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8000cd8:	2840      	cmp	r0, #64	@ 0x40
 8000cda:	d065      	beq.n	8000da8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8000cdc:	2804      	cmp	r0, #4
 8000cde:	d01a      	beq.n	8000d16 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ce0:	4b36      	ldr	r3, [pc, #216]	@ (8000dbc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000ce2:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000ce6:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000cea:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cec:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000cee:	d061      	beq.n	8000db4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000cf0:	4a33      	ldr	r2, [pc, #204]	@ (8000dc0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000cf2:	e044      	b.n	8000d7e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8000cf4:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8000cf8:	d004      	beq.n	8000d04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 8000cfa:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8000cfe:	d1ef      	bne.n	8000ce0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d00:	4830      	ldr	r0, [pc, #192]	@ (8000dc4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000d02:	e000      	b.n	8000d06 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d04:	4830      	ldr	r0, [pc, #192]	@ (8000dc8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d06:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 8000d0a:	61da      	str	r2, [r3, #28]
 8000d0c:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000d0e:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d10:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d12:	6159      	str	r1, [r3, #20]
 8000d14:	e032      	b.n	8000d7c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d16:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000d1a:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d1e:	61da      	str	r2, [r3, #28]
 8000d20:	e7f6      	b.n	8000d10 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000d22:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000d24:	1d02      	adds	r2, r0, #4
 8000d26:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d28:	7f22      	ldrb	r2, [r4, #28]
 8000d2a:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000d2e:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8000d32:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d34:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d36:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000d38:	7801      	ldrb	r1, [r0, #0]
 8000d3a:	b141      	cbz	r1, 8000d4e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8000d3c:	2901      	cmp	r1, #1
 8000d3e:	d021      	beq.n	8000d84 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8000d40:	4b22      	ldr	r3, [pc, #136]	@ (8000dcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000d42:	4a23      	ldr	r2, [pc, #140]	@ (8000dd0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8000d44:	4823      	ldr	r0, [pc, #140]	@ (8000dd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8000d46:	f240 1111 	movw	r1, #273	@ 0x111
 8000d4a:	f01a fd8f 	bl	801b86c <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d4e:	69da      	ldr	r2, [r3, #28]
 8000d50:	8841      	ldrh	r1, [r0, #2]
 8000d52:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8000d56:	3901      	subs	r1, #1
 8000d58:	f022 0210 	bic.w	r2, r2, #16
 8000d5c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000d60:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000d62:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000d64:	4b15      	ldr	r3, [pc, #84]	@ (8000dbc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000d66:	69da      	ldr	r2, [r3, #28]
 8000d68:	f042 0220 	orr.w	r2, r2, #32
 8000d6c:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000d6e:	69da      	ldr	r2, [r3, #28]
 8000d70:	0692      	lsls	r2, r2, #26
 8000d72:	d4fc      	bmi.n	8000d6e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000d74:	2210      	movs	r2, #16
 8000d76:	609a      	str	r2, [r3, #8]
            if (blend)
 8000d78:	2900      	cmp	r1, #0
 8000d7a:	d0b9      	beq.n	8000cf0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000d7c:	4a16      	ldr	r2, [pc, #88]	@ (8000dd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000d7e:	601a      	str	r2, [r3, #0]
}
 8000d80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 8000d84:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d88:	69da      	ldr	r2, [r3, #28]
 8000d8a:	8840      	ldrh	r0, [r0, #2]
 8000d8c:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8000d90:	f100 30ff 	add.w	r0, r0, #4294967295
 8000d94:	f022 0210 	bic.w	r2, r2, #16
 8000d98:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000d9c:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8000da0:	bf18      	it	ne
 8000da2:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000da4:	61da      	str	r2, [r3, #28]
                break;
 8000da6:	e7dd      	b.n	8000d64 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000da8:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000dac:	4b03      	ldr	r3, [pc, #12]	@ (8000dbc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000dae:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8000db2:	e7b4      	b.n	8000d1e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000db4:	f240 2201 	movw	r2, #513	@ 0x201
 8000db8:	e7e1      	b.n	8000d7e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 8000dba:	bf00      	nop
 8000dbc:	4002b000 	.word	0x4002b000
 8000dc0:	00010201 	.word	0x00010201
 8000dc4:	00020009 	.word	0x00020009
 8000dc8:	0002000a 	.word	0x0002000a
 8000dcc:	0801cd66 	.word	0x0801cd66
 8000dd0:	0801cd80 	.word	0x0801cd80
 8000dd4:	0801ccd3 	.word	0x0801ccd3
 8000dd8:	00020201 	.word	0x00020201

08000ddc <DMA2D_XferCpltCallback>:
        return instance;
 8000ddc:	4b02      	ldr	r3, [pc, #8]	@ (8000de8 <DMA2D_XferCpltCallback+0xc>)
 8000dde:	681b      	ldr	r3, [r3, #0]
 8000de0:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000de2:	6803      	ldr	r3, [r0, #0]
 8000de4:	695b      	ldr	r3, [r3, #20]
 8000de6:	4718      	bx	r3
 8000de8:	20013800 	.word	0x20013800

08000dec <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000dec:	b570      	push	{r4, r5, r6, lr}
 8000dee:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000df0:	4625      	mov	r5, r4
 8000df2:	4b0a      	ldr	r3, [pc, #40]	@ (8000e1c <_ZN8STM32DMAC1Ev+0x30>)
 8000df4:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000df6:	2600      	movs	r6, #0
 8000df8:	6060      	str	r0, [r4, #4]
 8000dfa:	7226      	strb	r6, [r4, #8]
 8000dfc:	7266      	strb	r6, [r4, #9]
 8000dfe:	f845 3b20 	str.w	r3, [r5], #32
 8000e02:	2260      	movs	r2, #96	@ 0x60
 8000e04:	4629      	mov	r1, r5
 8000e06:	f009 fc7f 	bl	800a708 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000e0a:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 8000e0e:	60ee      	str	r6, [r5, #12]
 8000e10:	3524      	adds	r5, #36	@ 0x24
 8000e12:	429d      	cmp	r5, r3
 8000e14:	d1fb      	bne.n	8000e0e <_ZN8STM32DMAC1Ev+0x22>
}
 8000e16:	4620      	mov	r0, r4
 8000e18:	bd70      	pop	{r4, r5, r6, pc}
 8000e1a:	bf00      	nop
 8000e1c:	0801cdc8 	.word	0x0801cdc8

08000e20 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000e20:	2001      	movs	r0, #1
 8000e22:	4770      	bx	lr

08000e24 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000e24:	2040      	movs	r0, #64	@ 0x40
 8000e26:	4770      	bx	lr

08000e28 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000e28:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
 8000e2c:	3008      	adds	r0, #8
 8000e2e:	4770      	bx	lr

08000e30 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000e30:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
 8000e34:	3008      	adds	r0, #8
 8000e36:	4770      	bx	lr

08000e38 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e38:	2001      	movs	r0, #1
 8000e3a:	4770      	bx	lr

08000e3c <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e3c:	f241 1010 	movw	r0, #4368	@ 0x1110
 8000e40:	4770      	bx	lr

08000e42 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e42:	f241 1310 	movw	r3, #4368	@ 0x1110
 8000e46:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e4a:	3008      	adds	r0, #8
 8000e4c:	4770      	bx	lr

08000e4e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e4e:	f241 1310 	movw	r3, #4368	@ 0x1110
 8000e52:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e56:	3008      	adds	r0, #8
 8000e58:	4770      	bx	lr

08000e5a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19GameScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e5a:	2001      	movs	r0, #1
 8000e5c:	4770      	bx	lr

08000e5e <_ZN8touchgfx9PartitionINS_4meta8TypeListI19GameScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e5e:	2010      	movs	r0, #16
 8000e60:	4770      	bx	lr

08000e62 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19GameScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e62:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e66:	3008      	adds	r0, #8
 8000e68:	4770      	bx	lr

08000e6a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19GameScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e6a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e6e:	3008      	adds	r0, #8
 8000e70:	4770      	bx	lr

08000e72 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMenuScreenScreenNoTransition();
 8000e72:	4608      	mov	r0, r1
 8000e74:	f001 ba34 	b.w	80022e0 <_ZN23FrontendApplicationBase32gotoMenuScreenScreenNoTransitionEv>

08000e78 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000e78:	b510      	push	{r4, lr}
 8000e7a:	4b03      	ldr	r3, [pc, #12]	@ (8000e88 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000e7c:	6003      	str	r3, [r0, #0]
 8000e7e:	4604      	mov	r4, r0
 8000e80:	f008 fac5 	bl	800940e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000e84:	4620      	mov	r0, r4
 8000e86:	bd10      	pop	{r4, pc}
 8000e88:	0801ce80 	.word	0x0801ce80

08000e8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000e8c:	b510      	push	{r4, lr}
 8000e8e:	4604      	mov	r4, r0
 8000e90:	f7ff fff2 	bl	8000e78 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000e94:	4620      	mov	r0, r4
 8000e96:	2148      	movs	r1, #72	@ 0x48
 8000e98:	f01a fcba 	bl	801b810 <_ZdlPvj>
 8000e9c:	4620      	mov	r0, r4
 8000e9e:	bd10      	pop	{r4, pc}

08000ea0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000ea0:	b510      	push	{r4, lr}
 8000ea2:	4b03      	ldr	r3, [pc, #12]	@ (8000eb0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ea4:	6003      	str	r3, [r0, #0]
 8000ea6:	4604      	mov	r4, r0
 8000ea8:	f008 fab1 	bl	800940e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000eac:	4620      	mov	r0, r4
 8000eae:	bd10      	pop	{r4, pc}
 8000eb0:	0801ce4c 	.word	0x0801ce4c

08000eb4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000eb4:	b510      	push	{r4, lr}
 8000eb6:	4604      	mov	r4, r0
 8000eb8:	f7ff fff2 	bl	8000ea0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ebc:	4620      	mov	r0, r4
 8000ebe:	f241 1118 	movw	r1, #4376	@ 0x1118
 8000ec2:	f01a fca5 	bl	801b810 <_ZdlPvj>
 8000ec6:	4620      	mov	r0, r4
 8000ec8:	bd10      	pop	{r4, pc}
	...

08000ecc <_ZN8touchgfx9PartitionINS_4meta8TypeListI19GameScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000ecc:	b510      	push	{r4, lr}
 8000ece:	4b03      	ldr	r3, [pc, #12]	@ (8000edc <_ZN8touchgfx9PartitionINS_4meta8TypeListI19GameScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ed0:	6003      	str	r3, [r0, #0]
 8000ed2:	4604      	mov	r4, r0
 8000ed4:	f008 fa9b 	bl	800940e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ed8:	4620      	mov	r0, r4
 8000eda:	bd10      	pop	{r4, pc}
 8000edc:	0801ce18 	.word	0x0801ce18

08000ee0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19GameScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000ee0:	b510      	push	{r4, lr}
 8000ee2:	4604      	mov	r4, r0
 8000ee4:	f7ff fff2 	bl	8000ecc <_ZN8touchgfx9PartitionINS_4meta8TypeListI19GameScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ee8:	4620      	mov	r0, r4
 8000eea:	2118      	movs	r1, #24
 8000eec:	f01a fc90 	bl	801b810 <_ZdlPvj>
 8000ef0:	4620      	mov	r0, r4
 8000ef2:	bd10      	pop	{r4, pc}

08000ef4 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000ef4:	b510      	push	{r4, lr}
 8000ef6:	4b09      	ldr	r3, [pc, #36]	@ (8000f1c <_ZN12FrontendHeapD1Ev+0x28>)
 8000ef8:	6003      	str	r3, [r0, #0]
 8000efa:	4604      	mov	r4, r0
 8000efc:	f500 508a 	add.w	r0, r0, #4416	@ 0x1140
 8000f00:	3004      	adds	r0, #4
 8000f02:	f7ff ffb9 	bl	8000e78 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000f06:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8000f0a:	f7ff ffc9 	bl	8000ea0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f0e:	f104 0014 	add.w	r0, r4, #20
 8000f12:	f7ff ffdb 	bl	8000ecc <_ZN8touchgfx9PartitionINS_4meta8TypeListI19GameScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f16:	4620      	mov	r0, r4
 8000f18:	bd10      	pop	{r4, pc}
 8000f1a:	bf00      	nop
 8000f1c:	0801ceb4 	.word	0x0801ceb4

08000f20 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000f20:	b508      	push	{r3, lr}
 8000f22:	4802      	ldr	r0, [pc, #8]	@ (8000f2c <__tcf_0+0xc>)
 8000f24:	f7ff ffe6 	bl	8000ef4 <_ZN12FrontendHeapD1Ev>
 8000f28:	bd08      	pop	{r3, pc}
 8000f2a:	bf00      	nop
 8000f2c:	20001060 	.word	0x20001060

08000f30 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000f30:	b510      	push	{r4, lr}
 8000f32:	4604      	mov	r4, r0
 8000f34:	f7ff ffde 	bl	8000ef4 <_ZN12FrontendHeapD1Ev>
 8000f38:	4620      	mov	r0, r4
 8000f3a:	f241 21ec 	movw	r1, #4844	@ 0x12ec
 8000f3e:	f01a fc67 	bl	801b810 <_ZdlPvj>
 8000f42:	4620      	mov	r0, r4
 8000f44:	bd10      	pop	{r4, pc}
	...

08000f48 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000f48:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000f4c:	f001 f80a 	bl	8001f64 <_ZN14BitmapDatabase11getInstanceEv>
 8000f50:	4605      	mov	r5, r0
 8000f52:	f001 f80b 	bl	8001f6c <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000f56:	2400      	movs	r4, #0
 8000f58:	4601      	mov	r1, r0
 8000f5a:	4623      	mov	r3, r4
 8000f5c:	4628      	mov	r0, r5
 8000f5e:	4622      	mov	r2, r4
 8000f60:	9400      	str	r4, [sp, #0]
 8000f62:	f00c ffc1 	bl	800dee8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000f66:	4b26      	ldr	r3, [pc, #152]	@ (8001000 <touchgfx_init+0xb8>)
 8000f68:	4a26      	ldr	r2, [pc, #152]	@ (8001004 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000f6a:	4d27      	ldr	r5, [pc, #156]	@ (8001008 <touchgfx_init+0xc0>)
 8000f6c:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000f6e:	4620      	mov	r0, r4
 8000f70:	f002 fabc 	bl	80034ec <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000f74:	4825      	ldr	r0, [pc, #148]	@ (800100c <touchgfx_init+0xc4>)
 8000f76:	f00c ff1f 	bl	800ddb8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000f7a:	682b      	ldr	r3, [r5, #0]
 8000f7c:	f3bf 8f5b 	dmb	ish
 8000f80:	07db      	lsls	r3, r3, #31
 8000f82:	d436      	bmi.n	8000ff2 <touchgfx_init+0xaa>
 8000f84:	4628      	mov	r0, r5
 8000f86:	f01a fc45 	bl	801b814 <__cxa_guard_acquire>
 8000f8a:	b390      	cbz	r0, 8000ff2 <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8000f8c:	4c20      	ldr	r4, [pc, #128]	@ (8001010 <touchgfx_init+0xc8>)
          screenStorage(scr),
          transitionStorage(tra),
 8000f8e:	4f21      	ldr	r7, [pc, #132]	@ (8001014 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000f90:	4b21      	ldr	r3, [pc, #132]	@ (8001018 <touchgfx_init+0xd0>)
 8000f92:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8000f94:	f107 064c 	add.w	r6, r7, #76	@ 0x4c
        : presenterStorage(pres),
 8000f98:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8000f9c:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
        : presenterStorage(pres),
 8000fa0:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8000fa2:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8000fa6:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8000fa8:	6126      	str	r6, [r4, #16]
 8000faa:	f008 fa31 	bl	8009410 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fae:	4b1b      	ldr	r3, [pc, #108]	@ (800101c <touchgfx_init+0xd4>)
 8000fb0:	6163      	str	r3, [r4, #20]
 8000fb2:	4640      	mov	r0, r8
 8000fb4:	f008 fa2c 	bl	8009410 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fb8:	4b19      	ldr	r3, [pc, #100]	@ (8001020 <touchgfx_init+0xd8>)
 8000fba:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000fbc:	4638      	mov	r0, r7
 8000fbe:	f008 fa27 	bl	8009410 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fc2:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8000fc6:	f503 70c6 	add.w	r0, r3, #396	@ 0x18c
 8000fca:	4a16      	ldr	r2, [pc, #88]	@ (8001024 <touchgfx_init+0xdc>)
 8000fcc:	f8c3 2144 	str.w	r2, [r3, #324]	@ 0x144
 8000fd0:	f002 ffd6 	bl	8003f80 <_ZN5ModelC1Ev>
 8000fd4:	4622      	mov	r2, r4
 8000fd6:	f107 0148 	add.w	r1, r7, #72	@ 0x48
 8000fda:	4630      	mov	r0, r6
 8000fdc:	f002 fadc 	bl	8003598 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000fe0:	4630      	mov	r0, r6
 8000fe2:	f001 f97d 	bl	80022e0 <_ZN23FrontendApplicationBase32gotoMenuScreenScreenNoTransitionEv>
        static FrontendHeap instance;
 8000fe6:	4810      	ldr	r0, [pc, #64]	@ (8001028 <touchgfx_init+0xe0>)
 8000fe8:	f01a fc5e 	bl	801b8a8 <atexit>
 8000fec:	4628      	mov	r0, r5
 8000fee:	f01a fc1d 	bl	801b82c <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000ff2:	480e      	ldr	r0, [pc, #56]	@ (800102c <touchgfx_init+0xe4>)
}
 8000ff4:	b002      	add	sp, #8
 8000ff6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000ffa:	f7ff bc5d 	b.w	80008b8 <_ZN11TouchGFXHAL10initializeEv>
 8000ffe:	bf00      	nop
 8001000:	2001385c 	.word	0x2001385c
 8001004:	2000022c 	.word	0x2000022c
 8001008:	2000105c 	.word	0x2000105c
 800100c:	20000008 	.word	0x20000008
 8001010:	20001060 	.word	0x20001060
 8001014:	200021a4 	.word	0x200021a4
 8001018:	0801ceb4 	.word	0x0801ceb4
 800101c:	0801ce18 	.word	0x0801ce18
 8001020:	0801ce4c 	.word	0x0801ce4c
 8001024:	0801ce80 	.word	0x0801ce80
 8001028:	08000f21 	.word	0x08000f21
 800102c:	200001b0 	.word	0x200001b0

08001030 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001030:	4801      	ldr	r0, [pc, #4]	@ (8001038 <touchgfx_taskEntry+0x8>)
 8001032:	f7ff bc53 	b.w	80008dc <_ZN11TouchGFXHAL9taskEntryEv>
 8001036:	bf00      	nop
 8001038:	200001b0 	.word	0x200001b0

0800103c <_GLOBAL__sub_I_touchgfx_init>:
}
 800103c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 800103e:	4e22      	ldr	r6, [pc, #136]	@ (80010c8 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8001040:	4c22      	ldr	r4, [pc, #136]	@ (80010cc <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8001042:	4d23      	ldr	r5, [pc, #140]	@ (80010d0 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8001044:	4b23      	ldr	r3, [pc, #140]	@ (80010d4 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8001046:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001048:	4630      	mov	r0, r6
 800104a:	f7ff fecf 	bl	8000dec <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800104e:	4628      	mov	r0, r5
 8001050:	f011 fa1c 	bl	801248c <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8001054:	4b20      	ldr	r3, [pc, #128]	@ (80010d8 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001056:	4821      	ldr	r0, [pc, #132]	@ (80010dc <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8001058:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 800105a:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800105c:	f44f 7180 	mov.w	r1, #256	@ 0x100
          auxiliaryLCD(0),
 8001060:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 8001064:	491e      	ldr	r1, [pc, #120]	@ (80010e0 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001066:	861a      	strh	r2, [r3, #48]	@ 0x30
          vSyncCompensationEnabled(false),
 8001068:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 800106c:	491d      	ldr	r1, [pc, #116]	@ (80010e4 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 800106e:	6799      	str	r1, [r3, #120]	@ 0x78
        instance = this;
 8001070:	491d      	ldr	r1, [pc, #116]	@ (80010e8 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 8001072:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
        instance = this;
 8001076:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001078:	21f0      	movs	r1, #240	@ 0xf0
 800107a:	8001      	strh	r1, [r0, #0]
 800107c:	481b      	ldr	r0, [pc, #108]	@ (80010ec <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 800107e:	665a      	str	r2, [r3, #100]	@ 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001080:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001082:	481b      	ldr	r0, [pc, #108]	@ (80010f0 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8001084:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001088:	f44f 71a0 	mov.w	r1, #320	@ 0x140
          buttonController(0),
 800108c:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001090:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001094:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001098:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 800109c:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 80010a0:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80010a4:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 80010a8:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          cc_begin(0),
 80010ac:	675a      	str	r2, [r3, #116]	@ 0x74
          lcdRef(display),
 80010ae:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010b2:	8001      	strh	r1, [r0, #0]
 80010b4:	480f      	ldr	r0, [pc, #60]	@ (80010f4 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 80010b6:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80010b8:	490f      	ldr	r1, [pc, #60]	@ (80010f8 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80010ba:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80010bc:	2201      	movs	r2, #1
 80010be:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80010c2:	4a0e      	ldr	r2, [pc, #56]	@ (80010fc <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80010c4:	601a      	str	r2, [r3, #0]
}
 80010c6:	bd70      	pop	{r4, r5, r6, pc}
 80010c8:	200002b8 	.word	0x200002b8
 80010cc:	20001058 	.word	0x20001058
 80010d0:	20000230 	.word	0x20000230
 80010d4:	0801c90c 	.word	0x0801c90c
 80010d8:	200001b0 	.word	0x200001b0
 80010dc:	200137f4 	.word	0x200137f4
 80010e0:	01000001 	.word	0x01000001
 80010e4:	01010000 	.word	0x01010000
 80010e8:	20013800 	.word	0x20013800
 80010ec:	200137fa 	.word	0x200137fa
 80010f0:	200137f6 	.word	0x200137f6
 80010f4:	200137fc 	.word	0x200137fc
 80010f8:	200137f8 	.word	0x200137f8
 80010fc:	0801ca98 	.word	0x0801ca98

08001100 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001100:	4801      	ldr	r0, [pc, #4]	@ (8001108 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001102:	f7ff bd29 	b.w	8000b58 <_ZN8STM32DMAD1Ev>
 8001106:	bf00      	nop
 8001108:	200002b8 	.word	0x200002b8

0800110c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800110c:	4b03      	ldr	r3, [pc, #12]	@ (800111c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 800110e:	2290      	movs	r2, #144	@ 0x90
 8001110:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 8001114:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001118:	4770      	bx	lr
 800111a:	bf00      	nop
 800111c:	e000e100 	.word	0xe000e100

08001120 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001120:	4a09      	ldr	r2, [pc, #36]	@ (8001148 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001122:	490a      	ldr	r1, [pc, #40]	@ (800114c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001124:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001126:	480a      	ldr	r0, [pc, #40]	@ (8001150 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001128:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800112c:	3b01      	subs	r3, #1
 800112e:	b29b      	uxth	r3, r3
 8001130:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001132:	6911      	ldr	r1, [r2, #16]
 8001134:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001138:	3901      	subs	r1, #1
 800113a:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 800113c:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800113e:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8001140:	f043 0301 	orr.w	r3, r3, #1
 8001144:	6353      	str	r3, [r2, #52]	@ 0x34
}
 8001146:	4770      	bx	lr
 8001148:	40016800 	.word	0x40016800
 800114c:	2000234e 	.word	0x2000234e
 8001150:	2000234c 	.word	0x2000234c

08001154 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001154:	4b01      	ldr	r3, [pc, #4]	@ (800115c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001156:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 800115a:	4770      	bx	lr
 800115c:	40016800 	.word	0x40016800

08001160 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001160:	4b02      	ldr	r3, [pc, #8]	@ (800116c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001162:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001164:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001168:	625a      	str	r2, [r3, #36]	@ 0x24
}
 800116a:	4770      	bx	lr
 800116c:	40016800 	.word	0x40016800

08001170 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001170:	b570      	push	{r4, r5, r6, lr}
 8001172:	4604      	mov	r4, r0
    HAL::initialize();
 8001174:	f008 fc4b 	bl	8009a0e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001178:	6823      	ldr	r3, [r4, #0]
 800117a:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
 800117c:	f00b f84c 	bl	800c218 <_ZN8touchgfx11Application11getInstanceEv>
 8001180:	4601      	mov	r1, r0
 8001182:	4620      	mov	r0, r4
 8001184:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001186:	6823      	ldr	r3, [r4, #0]
 8001188:	4a05      	ldr	r2, [pc, #20]	@ (80011a0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800118a:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 800118e:	4620      	mov	r0, r4
 8001190:	46ac      	mov	ip, r5
 8001192:	2300      	movs	r3, #0
}
 8001194:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001198:	f5a2 3116 	sub.w	r1, r2, #153600	@ 0x25800
 800119c:	4760      	bx	ip
 800119e:	bf00      	nop
 80011a0:	d004b000 	.word	0xd004b000

080011a4 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80011a4:	f008 bc1a 	b.w	80099dc <_ZN8touchgfx3HAL10beginFrameEv>

080011a8 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 80011a8:	f890 304b 	ldrb.w	r3, [r0, #75]	@ 0x4b
 80011ac:	b113      	cbz	r3, 80011b4 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 80011ae:	4b02      	ldr	r3, [pc, #8]	@ (80011b8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 80011b0:	2201      	movs	r2, #1
 80011b2:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 80011b4:	f008 bc1e 	b.w	80099f4 <_ZN8touchgfx3HAL8endFrameEv>
 80011b8:	20002350 	.word	0x20002350

080011bc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80011bc:	f008 bbd8 	b.w	8009970 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080011c0 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80011c0:	f008 bd39 	b.w	8009c36 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080011c4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80011c4:	4b03      	ldr	r3, [pc, #12]	@ (80011d4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80011c6:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80011ca:	609a      	str	r2, [r3, #8]
 80011cc:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80011d0:	609a      	str	r2, [r3, #8]
}
 80011d2:	4770      	bx	lr
 80011d4:	e000e100 	.word	0xe000e100

080011d8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80011d8:	4b08      	ldr	r3, [pc, #32]	@ (80011fc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80011da:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80011de:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80011e2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80011e6:	f3bf 8f6f 	isb	sy
 80011ea:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80011ee:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80011f2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80011f6:	f3bf 8f6f 	isb	sy
}
 80011fa:	4770      	bx	lr
 80011fc:	e000e100 	.word	0xe000e100

08001200 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001200:	b510      	push	{r4, lr}
        return instance;
 8001202:	4c14      	ldr	r4, [pc, #80]	@ (8001254 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001204:	6823      	ldr	r3, [r4, #0]
 8001206:	b323      	cbz	r3, 8001252 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001208:	4b13      	ldr	r3, [pc, #76]	@ (8001258 <HAL_LTDC_LineEventCallback+0x58>)
 800120a:	4a14      	ldr	r2, [pc, #80]	@ (800125c <HAL_LTDC_LineEventCallback+0x5c>)
 800120c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800120e:	8811      	ldrh	r1, [r2, #0]
 8001210:	428b      	cmp	r3, r1
 8001212:	d113      	bne.n	800123c <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001214:	4b12      	ldr	r3, [pc, #72]	@ (8001260 <HAL_LTDC_LineEventCallback+0x60>)
 8001216:	8819      	ldrh	r1, [r3, #0]
 8001218:	f004 fd80 	bl	8005d1c <HAL_LTDC_ProgramLineEvent>
 800121c:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 800121e:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
 8001222:	3301      	adds	r3, #1
 8001224:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001228:	f7ff fc44 	bl	8000ab4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800122c:	6820      	ldr	r0, [r4, #0]
 800122e:	f009 f92d 	bl	800a48c <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001232:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001236:	2000      	movs	r0, #0
 8001238:	f7ff ba84 	b.w	8000744 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800123c:	f004 fd6e 	bl	8005d1c <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001240:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001242:	6803      	ldr	r3, [r0, #0]
 8001244:	6a1b      	ldr	r3, [r3, #32]
 8001246:	4798      	blx	r3
    }
 8001248:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 800124c:	2000      	movs	r0, #0
 800124e:	f7ff baa3 	b.w	8000798 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001252:	bd10      	pop	{r4, pc}
 8001254:	20013800 	.word	0x20013800
 8001258:	40016800 	.word	0x40016800
 800125c:	2000234e 	.word	0x2000234e
 8001260:	2000234c 	.word	0x2000234c

08001264 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001264:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001266:	4b06      	ldr	r3, [pc, #24]	@ (8001280 <SPI5_Write+0x1c>)
{
 8001268:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800126c:	681b      	ldr	r3, [r3, #0]
 800126e:	4805      	ldr	r0, [pc, #20]	@ (8001284 <SPI5_Write+0x20>)
 8001270:	2201      	movs	r2, #1
 8001272:	f10d 0106 	add.w	r1, sp, #6
 8001276:	f005 fa9f 	bl	80067b8 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800127a:	b003      	add	sp, #12
 800127c:	f85d fb04 	ldr.w	pc, [sp], #4
 8001280:	2000000c 	.word	0x2000000c
 8001284:	200023a4 	.word	0x200023a4

08001288 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001288:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  /* Infinite loop */
  uint32_t rightKeyCount, leftKeyCount, upKeyCount, downKeyCount;
  uint8_t x1, x2, x3, x4;
  for(;;)
  {
    rightKeyCount = osMessageQueueGetCount(RightKeyQueueHandle);
 800128a:	4e30      	ldr	r6, [pc, #192]	@ (800134c <StartDefaultTask+0xc4>)
    if(rightKeyCount < 1){
      if(HAL_GPIO_ReadPin(GPIOE, GPIO_PIN_2) == GPIO_PIN_RESET){
 800128c:	4c30      	ldr	r4, [pc, #192]	@ (8001350 <StartDefaultTask+0xc8>)
    rightKeyCount = osMessageQueueGetCount(RightKeyQueueHandle);
 800128e:	6830      	ldr	r0, [r6, #0]
 8001290:	f006 f8c9 	bl	8007426 <osMessageQueueGetCount>
    if(rightKeyCount < 1){
 8001294:	4605      	mov	r5, r0
 8001296:	b978      	cbnz	r0, 80012b8 <StartDefaultTask+0x30>
      if(HAL_GPIO_ReadPin(GPIOE, GPIO_PIN_2) == GPIO_PIN_RESET){
 8001298:	2104      	movs	r1, #4
 800129a:	4620      	mov	r0, r4
 800129c:	f003 ff4e 	bl	800513c <HAL_GPIO_ReadPin>
          x1 = 'R';
 80012a0:	2800      	cmp	r0, #0
 80012a2:	bf14      	ite	ne
 80012a4:	234e      	movne	r3, #78	@ 0x4e
 80012a6:	2352      	moveq	r3, #82	@ 0x52
 80012a8:	f88d 3004 	strb.w	r3, [sp, #4]
      } else {
          x1 = 'N';
      }
      osMessageQueuePut(RightKeyQueueHandle, &x1, 0 , 100);
 80012ac:	6830      	ldr	r0, [r6, #0]
 80012ae:	2364      	movs	r3, #100	@ 0x64
 80012b0:	462a      	mov	r2, r5
 80012b2:	a901      	add	r1, sp, #4
 80012b4:	f006 f856 	bl	8007364 <osMessageQueuePut>
    }

    leftKeyCount = osMessageQueueGetCount(LeftKeyQueueHandle);
 80012b8:	4f26      	ldr	r7, [pc, #152]	@ (8001354 <StartDefaultTask+0xcc>)
 80012ba:	6838      	ldr	r0, [r7, #0]
 80012bc:	f006 f8b3 	bl	8007426 <osMessageQueueGetCount>
    if(HAL_GPIO_ReadPin(GPIOE, GPIO_PIN_3) == GPIO_PIN_RESET){
 80012c0:	2108      	movs	r1, #8
    leftKeyCount = osMessageQueueGetCount(LeftKeyQueueHandle);
 80012c2:	4605      	mov	r5, r0
    if(HAL_GPIO_ReadPin(GPIOE, GPIO_PIN_3) == GPIO_PIN_RESET){
 80012c4:	4620      	mov	r0, r4
 80012c6:	f003 ff39 	bl	800513c <HAL_GPIO_ReadPin>
 80012ca:	4602      	mov	r2, r0
 80012cc:	b958      	cbnz	r0, 80012e6 <StartDefaultTask+0x5e>
      if(leftKeyCount < 1){
        x2 = 'L';
 80012ce:	2d00      	cmp	r5, #0
 80012d0:	bf14      	ite	ne
 80012d2:	234e      	movne	r3, #78	@ 0x4e
 80012d4:	234c      	moveq	r3, #76	@ 0x4c
 80012d6:	f88d 3005 	strb.w	r3, [sp, #5]
      } else {
        x2 = 'N';
      }
      osMessageQueuePut(LeftKeyQueueHandle, &x2, 0 , 100);
 80012da:	6838      	ldr	r0, [r7, #0]
 80012dc:	2364      	movs	r3, #100	@ 0x64
 80012de:	f10d 0105 	add.w	r1, sp, #5
 80012e2:	f006 f83f 	bl	8007364 <osMessageQueuePut>
    }

    upKeyCount = osMessageQueueGetCount(UpKeyQueueHandle);
 80012e6:	4f1c      	ldr	r7, [pc, #112]	@ (8001358 <StartDefaultTask+0xd0>)
 80012e8:	6838      	ldr	r0, [r7, #0]
 80012ea:	f006 f89c 	bl	8007426 <osMessageQueueGetCount>
    if(upKeyCount < 1){
 80012ee:	4605      	mov	r5, r0
 80012f0:	b980      	cbnz	r0, 8001314 <StartDefaultTask+0x8c>
      if(HAL_GPIO_ReadPin(GPIOE, GPIO_PIN_4) == GPIO_PIN_RESET){
 80012f2:	2110      	movs	r1, #16
 80012f4:	4620      	mov	r0, r4
 80012f6:	f003 ff21 	bl	800513c <HAL_GPIO_ReadPin>
        x3 = 'U';
 80012fa:	2800      	cmp	r0, #0
 80012fc:	bf14      	ite	ne
 80012fe:	234e      	movne	r3, #78	@ 0x4e
 8001300:	2355      	moveq	r3, #85	@ 0x55
 8001302:	f88d 3006 	strb.w	r3, [sp, #6]
      } else {
        x3 = 'N';
      }
      osMessageQueuePut(UpKeyQueueHandle, &x3, 0 , 100);
 8001306:	6838      	ldr	r0, [r7, #0]
 8001308:	2364      	movs	r3, #100	@ 0x64
 800130a:	462a      	mov	r2, r5
 800130c:	f10d 0106 	add.w	r1, sp, #6
 8001310:	f006 f828 	bl	8007364 <osMessageQueuePut>
    }

    downKeyCount = osMessageQueueGetCount(DownKeyQueueHandle);
 8001314:	4f11      	ldr	r7, [pc, #68]	@ (800135c <StartDefaultTask+0xd4>)
 8001316:	6838      	ldr	r0, [r7, #0]
 8001318:	f006 f885 	bl	8007426 <osMessageQueueGetCount>
    if(downKeyCount < 1){
 800131c:	4605      	mov	r5, r0
 800131e:	b980      	cbnz	r0, 8001342 <StartDefaultTask+0xba>
      if(HAL_GPIO_ReadPin(GPIOE, GPIO_PIN_5) == GPIO_PIN_RESET){
 8001320:	2120      	movs	r1, #32
 8001322:	4620      	mov	r0, r4
 8001324:	f003 ff0a 	bl	800513c <HAL_GPIO_ReadPin>
        x4 = 'D';
 8001328:	2800      	cmp	r0, #0
 800132a:	bf14      	ite	ne
 800132c:	234e      	movne	r3, #78	@ 0x4e
 800132e:	2344      	moveq	r3, #68	@ 0x44
 8001330:	f88d 3007 	strb.w	r3, [sp, #7]
      } else {
        x4 = 'N';
      }
      osMessageQueuePut(DownKeyQueueHandle, &x4, 0 , 100);
 8001334:	6838      	ldr	r0, [r7, #0]
 8001336:	2364      	movs	r3, #100	@ 0x64
 8001338:	462a      	mov	r2, r5
 800133a:	f10d 0107 	add.w	r1, sp, #7
 800133e:	f006 f811 	bl	8007364 <osMessageQueuePut>
    }
    osDelay(100);
 8001342:	2064      	movs	r0, #100	@ 0x64
 8001344:	f005 ff1f 	bl	8007186 <osDelay>
    rightKeyCount = osMessageQueueGetCount(RightKeyQueueHandle);
 8001348:	e7a1      	b.n	800128e <StartDefaultTask+0x6>
 800134a:	bf00      	nop
 800134c:	20002364 	.word	0x20002364
 8001350:	40021000 	.word	0x40021000
 8001354:	20002360 	.word	0x20002360
 8001358:	2000235c 	.word	0x2000235c
 800135c:	20002358 	.word	0x20002358

08001360 <SystemClock_Config>:
{
 8001360:	b530      	push	{r4, r5, lr}
 8001362:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001364:	2210      	movs	r2, #16
 8001366:	2100      	movs	r1, #0
 8001368:	a80a      	add	r0, sp, #40	@ 0x28
 800136a:	f01a fc86 	bl	801bc7a <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800136e:	2214      	movs	r2, #20
 8001370:	2100      	movs	r1, #0
 8001372:	a803      	add	r0, sp, #12
 8001374:	f01a fc81 	bl	801bc7a <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001378:	2400      	movs	r4, #0
 800137a:	4b1d      	ldr	r3, [pc, #116]	@ (80013f0 <SystemClock_Config+0x90>)
 800137c:	9401      	str	r4, [sp, #4]
 800137e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001380:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8001384:	641a      	str	r2, [r3, #64]	@ 0x40
 8001386:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001388:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800138c:	9301      	str	r3, [sp, #4]
 800138e:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001390:	4b18      	ldr	r3, [pc, #96]	@ (80013f4 <SystemClock_Config+0x94>)
 8001392:	9402      	str	r4, [sp, #8]
 8001394:	681a      	ldr	r2, [r3, #0]
 8001396:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800139a:	601a      	str	r2, [r3, #0]
 800139c:	681b      	ldr	r3, [r3, #0]
 800139e:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 80013a2:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80013a4:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80013a6:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80013a8:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80013ac:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80013b0:	2502      	movs	r5, #2
 80013b2:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 80013b6:	e9cd 530e 	strd	r5, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 80013ba:	2108      	movs	r1, #8
 80013bc:	f44f 73a8 	mov.w	r3, #336	@ 0x150
 80013c0:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80013c4:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80013c6:	2304      	movs	r3, #4
 80013c8:	9313      	str	r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80013ca:	9512      	str	r5, [sp, #72]	@ 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80013cc:	f004 fcc4 	bl	8005d58 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80013d0:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80013d2:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80013d6:	f44f 50a0 	mov.w	r0, #5120	@ 0x1400
 80013da:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80013de:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80013e2:	2105      	movs	r1, #5
 80013e4:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80013e6:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80013e8:	f004 fe92 	bl	8006110 <HAL_RCC_ClockConfig>
}
 80013ec:	b015      	add	sp, #84	@ 0x54
 80013ee:	bd30      	pop	{r4, r5, pc}
 80013f0:	40023800 	.word	0x40023800
 80013f4:	40007000 	.word	0x40007000

080013f8 <main>:
{
 80013f8:	b580      	push	{r7, lr}
 80013fa:	b09a      	sub	sp, #104	@ 0x68
  HAL_Init();
 80013fc:	f003 fc1c 	bl	8004c38 <HAL_Init>
  SystemClock_Config();
 8001400:	f7ff ffae 	bl	8001360 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001404:	2214      	movs	r2, #20
 8001406:	2100      	movs	r1, #0
 8001408:	a80d      	add	r0, sp, #52	@ 0x34
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800140a:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800140c:	f01a fc35 	bl	801bc7a <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001410:	4bc4      	ldr	r3, [pc, #784]	@ (8001724 <main+0x32c>)
 8001412:	9400      	str	r4, [sp, #0]
 8001414:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001416:	48c4      	ldr	r0, [pc, #784]	@ (8001728 <main+0x330>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001418:	f042 0210 	orr.w	r2, r2, #16
 800141c:	631a      	str	r2, [r3, #48]	@ 0x30
 800141e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001420:	f002 0210 	and.w	r2, r2, #16
 8001424:	9200      	str	r2, [sp, #0]
 8001426:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001428:	9401      	str	r4, [sp, #4]
 800142a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800142c:	f042 0220 	orr.w	r2, r2, #32
 8001430:	631a      	str	r2, [r3, #48]	@ 0x30
 8001432:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001434:	f002 0220 	and.w	r2, r2, #32
 8001438:	9201      	str	r2, [sp, #4]
 800143a:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800143c:	9402      	str	r4, [sp, #8]
 800143e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001440:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8001444:	631a      	str	r2, [r3, #48]	@ 0x30
 8001446:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001448:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 800144c:	9202      	str	r2, [sp, #8]
 800144e:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001450:	9403      	str	r4, [sp, #12]
 8001452:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001454:	f042 0204 	orr.w	r2, r2, #4
 8001458:	631a      	str	r2, [r3, #48]	@ 0x30
 800145a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800145c:	f002 0204 	and.w	r2, r2, #4
 8001460:	9203      	str	r2, [sp, #12]
 8001462:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001464:	9404      	str	r4, [sp, #16]
 8001466:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001468:	f042 0201 	orr.w	r2, r2, #1
 800146c:	631a      	str	r2, [r3, #48]	@ 0x30
 800146e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001470:	f002 0201 	and.w	r2, r2, #1
 8001474:	9204      	str	r2, [sp, #16]
 8001476:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001478:	9405      	str	r4, [sp, #20]
 800147a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800147c:	f042 0202 	orr.w	r2, r2, #2
 8001480:	631a      	str	r2, [r3, #48]	@ 0x30
 8001482:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001484:	f002 0202 	and.w	r2, r2, #2
 8001488:	9205      	str	r2, [sp, #20]
 800148a:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800148c:	9406      	str	r4, [sp, #24]
 800148e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001490:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8001494:	631a      	str	r2, [r3, #48]	@ 0x30
 8001496:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001498:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 800149c:	9206      	str	r2, [sp, #24]
 800149e:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014a0:	9407      	str	r4, [sp, #28]
 80014a2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80014a4:	f042 0208 	orr.w	r2, r2, #8
 80014a8:	631a      	str	r2, [r3, #48]	@ 0x30
 80014aa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80014ac:	f003 0308 	and.w	r3, r3, #8
 80014b0:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80014b2:	4622      	mov	r2, r4
 80014b4:	213c      	movs	r1, #60	@ 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014b6:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80014b8:	f003 fe46 	bl	8005148 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80014bc:	489b      	ldr	r0, [pc, #620]	@ (800172c <main+0x334>)
 80014be:	4622      	mov	r2, r4
 80014c0:	2104      	movs	r1, #4
 80014c2:	f003 fe41 	bl	8005148 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80014c6:	4622      	mov	r2, r4
 80014c8:	4899      	ldr	r0, [pc, #612]	@ (8001730 <main+0x338>)
 80014ca:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014ce:	2501      	movs	r5, #1
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80014d0:	f003 fe3a 	bl	8005148 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80014d4:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014d8:	263c      	movs	r6, #60	@ 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80014da:	4893      	ldr	r0, [pc, #588]	@ (8001728 <main+0x330>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80014dc:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80014e0:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014e2:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80014e4:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014e8:	e9cd 650d 	strd	r6, r5, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014ec:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80014ee:	f003 fd41 	bl	8004f74 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014f2:	488e      	ldr	r0, [pc, #568]	@ (800172c <main+0x334>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014f4:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014f6:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014f8:	e9cd a50d 	strd	sl, r5, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014fc:	9710      	str	r7, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014fe:	f003 fd39 	bl	8004f74 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001502:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001506:	488a      	ldr	r0, [pc, #552]	@ (8001730 <main+0x338>)
 8001508:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800150a:	e9cd 350d 	strd	r3, r5, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800150e:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001512:	f003 fd2f 	bl	8004f74 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001516:	4887      	ldr	r0, [pc, #540]	@ (8001734 <main+0x33c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001518:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800151a:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800151c:	e9cd 540d 	strd	r5, r4, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001520:	f003 fd28 	bl	8004f74 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001524:	a90d      	add	r1, sp, #52	@ 0x34
 8001526:	4880      	ldr	r0, [pc, #512]	@ (8001728 <main+0x330>)
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001528:	e9cd 640d 	strd	r6, r4, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800152c:	e9cd 540f 	strd	r5, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001530:	f003 fd20 	bl	8004f74 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001534:	4880      	ldr	r0, [pc, #512]	@ (8001738 <main+0x340>)
 8001536:	4b81      	ldr	r3, [pc, #516]	@ (800173c <main+0x344>)
  hi2c3.Instance = I2C3;
 8001538:	4e81      	ldr	r6, [pc, #516]	@ (8001740 <main+0x348>)
  hcrc.Instance = CRC;
 800153a:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800153c:	f003 fc0e 	bl	8004d5c <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001540:	4a80      	ldr	r2, [pc, #512]	@ (8001744 <main+0x34c>)
 8001542:	4b81      	ldr	r3, [pc, #516]	@ (8001748 <main+0x350>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001544:	6234      	str	r4, [r6, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001546:	e9c6 2300 	strd	r2, r3, [r6]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800154a:	4630      	mov	r0, r6
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800154c:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001550:	e9c6 3404 	strd	r3, r4, [r6, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001554:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001558:	e9c6 4406 	strd	r4, r4, [r6, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800155c:	f003 ffe2 	bl	8005524 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001560:	2110      	movs	r1, #16
 8001562:	4630      	mov	r0, r6
 8001564:	f004 fa1e 	bl	80059a4 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001568:	4621      	mov	r1, r4
 800156a:	4630      	mov	r0, r6
 800156c:	f004 fa39 	bl	80059e2 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 8001570:	4876      	ldr	r0, [pc, #472]	@ (800174c <main+0x354>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001572:	4977      	ldr	r1, [pc, #476]	@ (8001750 <main+0x358>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001574:	6284      	str	r4, [r0, #40]	@ 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001576:	f44f 7382 	mov.w	r3, #260	@ 0x104
 800157a:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800157e:	f44f 7600 	mov.w	r6, #512	@ 0x200
 8001582:	2318      	movs	r3, #24
 8001584:	e9c0 6306 	strd	r6, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001588:	230a      	movs	r3, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800158a:	4e72      	ldr	r6, [pc, #456]	@ (8001754 <main+0x35c>)
  hspi5.Init.CRCPolynomial = 10;
 800158c:	62c3      	str	r3, [r0, #44]	@ 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800158e:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001592:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001596:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 800159a:	f005 f8b1 	bl	8006700 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800159e:	4b6e      	ldr	r3, [pc, #440]	@ (8001758 <main+0x360>)
  SdramTiming.LoadToActiveDelay = 2;
 80015a0:	970d      	str	r7, [sp, #52]	@ 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80015a2:	f04f 0c10 	mov.w	ip, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 80015a6:	e9c6 3500 	strd	r3, r5, [r6]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80015aa:	2340      	movs	r3, #64	@ 0x40
 80015ac:	e9c6 c304 	strd	ip, r3, [r6, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80015b0:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80015b4:	e9c6 3406 	strd	r3, r4, [r6, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80015b8:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80015bc:	e9c6 3408 	strd	r3, r4, [r6, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80015c0:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80015c4:	62b3      	str	r3, [r6, #40]	@ 0x28
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80015c6:	a90d      	add	r1, sp, #52	@ 0x34
  SdramTiming.ExitSelfRefreshDelay = 7;
 80015c8:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80015ca:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80015cc:	f04f 0908 	mov.w	r9, #8
  SdramTiming.SelfRefreshTime = 4;
 80015d0:	e9cd 3a0e 	strd	r3, sl, [sp, #56]	@ 0x38
  SdramTiming.WriteRecoveryTime = 3;
 80015d4:	e9cd 3810 	strd	r3, r8, [sp, #64]	@ 0x40
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80015d8:	e9c6 4a02 	strd	r4, sl, [r6, #8]
  SdramTiming.RCDDelay = 2;
 80015dc:	e9cd 7712 	strd	r7, r7, [sp, #72]	@ 0x48
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80015e0:	f004 ff8a 	bl	80064f8 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015e4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80015e8:	a909      	add	r1, sp, #36	@ 0x24
 80015ea:	4630      	mov	r0, r6
  Command->AutoRefreshNumber       = 1;
 80015ec:	e9cd 950a 	strd	r9, r5, [sp, #40]	@ 0x28
 __IO uint32_t tmpmrd =0;
 80015f0:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 80015f2:	9509      	str	r5, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 80015f4:	940c      	str	r4, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015f6:	f004 ff9f 	bl	8006538 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80015fa:	4628      	mov	r0, r5
 80015fc:	f003 fb48 	bl	8004c90 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001600:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001604:	a909      	add	r1, sp, #36	@ 0x24
 8001606:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001608:	e9cd 7909 	strd	r7, r9, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 800160c:	e9cd 540b 	strd	r5, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001610:	f004 ff92 	bl	8006538 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001614:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001618:	a909      	add	r1, sp, #36	@ 0x24
 800161a:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800161c:	e9cd 8909 	strd	r8, r9, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001620:	e9cd a40b 	strd	sl, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001624:	f004 ff88 	bl	8006538 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001628:	f44f 730c 	mov.w	r3, #560	@ 0x230
 800162c:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 800162e:	9b08      	ldr	r3, [sp, #32]
 8001630:	930c      	str	r3, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001632:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001636:	a909      	add	r1, sp, #36	@ 0x24
 8001638:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800163a:	e9cd a909 	strd	sl, r9, [sp, #36]	@ 0x24
  Command->AutoRefreshNumber       = 1;
 800163e:	950b      	str	r5, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001640:	f004 ff7a 	bl	8006538 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001644:	f240 516a 	movw	r1, #1386	@ 0x56a
 8001648:	4630      	mov	r0, r6
 800164a:	f004 ff93 	bl	8006574 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800164e:	2234      	movs	r2, #52	@ 0x34
 8001650:	4621      	mov	r1, r4
 8001652:	eb0d 0002 	add.w	r0, sp, r2
 8001656:	f01a fb10 	bl	801bc7a <memset>
  hltdc.Instance = LTDC;
 800165a:	4e40      	ldr	r6, [pc, #256]	@ (800175c <main+0x364>)
 800165c:	4b40      	ldr	r3, [pc, #256]	@ (8001760 <main+0x368>)
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800165e:	6134      	str	r4, [r6, #16]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001660:	e9c6 3400 	strd	r3, r4, [r6]
  hltdc.Init.HorizontalSync = 9;
 8001664:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 8001666:	e9c6 3505 	strd	r3, r5, [r6, #20]
  hltdc.Init.AccumulatedHBP = 29;
 800166a:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedActiveH = 323;
 800166c:	f240 1e0d 	movw	lr, #269	@ 0x10d
  hltdc.Init.AccumulatedVBP = 3;
 8001670:	e9c6 3807 	strd	r3, r8, [r6, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001674:	f240 1343 	movw	r3, #323	@ 0x143
 8001678:	e9c6 e309 	strd	lr, r3, [r6, #36]	@ 0x24
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800167c:	4630      	mov	r0, r6
  hltdc.Init.TotalHeigh = 327;
 800167e:	f240 1347 	movw	r3, #327	@ 0x147
 8001682:	f240 1817 	movw	r8, #279	@ 0x117
 8001686:	e9c6 830b 	strd	r8, r3, [r6, #44]	@ 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 800168a:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hltdc.Init.Backcolor.Blue = 0;
 800168e:	86b4      	strh	r4, [r6, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 8001690:	f886 4036 	strb.w	r4, [r6, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001694:	f004 fa4a 	bl	8005b2c <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001698:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.WindowX1 = 240;
 800169a:	22f0      	movs	r2, #240	@ 0xf0
  pLayerCfg.Alpha0 = 0;
 800169c:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80016a0:	f44f 6a80 	mov.w	sl, #1024	@ 0x400
 80016a4:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 80016a6:	f44f 73a0 	mov.w	r3, #320	@ 0x140
  pLayerCfg.WindowY0 = 0;
 80016aa:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80016ae:	e9cd a114 	strd	sl, r1, [sp, #80]	@ 0x50
  pLayerCfg.ImageWidth = 240;
 80016b2:	e9cd 4216 	strd	r4, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80016b6:	a90d      	add	r1, sp, #52	@ 0x34
 80016b8:	4622      	mov	r2, r4
 80016ba:	4630      	mov	r0, r6
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80016bc:	e9cd 3710 	strd	r3, r7, [sp, #64]	@ 0x40
  LcdDrv = &ili9341_drv;
 80016c0:	4e28      	ldr	r6, [pc, #160]	@ (8001764 <main+0x36c>)
  pLayerCfg.ImageHeight = 320;
 80016c2:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.WindowX0 = 0;
 80016c4:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.Backcolor.Blue = 0;
 80016c6:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 80016ca:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80016ce:	f004 faf8 	bl	8005cc2 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 80016d2:	4b25      	ldr	r3, [pc, #148]	@ (8001768 <main+0x370>)
 80016d4:	6033      	str	r3, [r6, #0]
  LcdDrv->Init();
 80016d6:	681b      	ldr	r3, [r3, #0]
 80016d8:	4798      	blx	r3
  LcdDrv->DisplayOff();
 80016da:	6833      	ldr	r3, [r6, #0]
  hdma2d.Instance = DMA2D;
 80016dc:	4e23      	ldr	r6, [pc, #140]	@ (800176c <main+0x374>)
  LcdDrv->DisplayOff();
 80016de:	68db      	ldr	r3, [r3, #12]
 80016e0:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 80016e2:	4b23      	ldr	r3, [pc, #140]	@ (8001770 <main+0x378>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80016e4:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 80016e6:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 80016ea:	e9c6 7402 	strd	r7, r4, [r6, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 80016ee:	e9c6 470a 	strd	r4, r7, [r6, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80016f2:	e9c6 440c 	strd	r4, r4, [r6, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80016f6:	f003 fb41 	bl	8004d7c <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80016fa:	4629      	mov	r1, r5
 80016fc:	4630      	mov	r0, r6
 80016fe:	f003 fbf5 	bl	8004eec <HAL_DMA2D_ConfigLayer>
  MX_TouchGFX_Init();
 8001702:	f7fe ff66 	bl	80005d2 <MX_TouchGFX_Init>
  osKernelInitialize();
 8001706:	f005 fcb3 	bl	8007070 <osKernelInitialize>
  RightKeyQueueHandle = osMessageQueueNew(8, sizeof(uint8_t), &RightKeyQueueHandle_attributes);
 800170a:	4a1a      	ldr	r2, [pc, #104]	@ (8001774 <main+0x37c>)
 800170c:	4629      	mov	r1, r5
 800170e:	4648      	mov	r0, r9
 8001710:	f005 fded 	bl	80072ee <osMessageQueueNew>
 8001714:	4b18      	ldr	r3, [pc, #96]	@ (8001778 <main+0x380>)
  LeftKeyQueueHandle = osMessageQueueNew(8, sizeof(uint8_t), &LeftKeyQueueHandle_attributes);
 8001716:	4a19      	ldr	r2, [pc, #100]	@ (800177c <main+0x384>)
  RightKeyQueueHandle = osMessageQueueNew(8, sizeof(uint8_t), &RightKeyQueueHandle_attributes);
 8001718:	6018      	str	r0, [r3, #0]
  LeftKeyQueueHandle = osMessageQueueNew(8, sizeof(uint8_t), &LeftKeyQueueHandle_attributes);
 800171a:	4629      	mov	r1, r5
 800171c:	4648      	mov	r0, r9
 800171e:	f005 fde6 	bl	80072ee <osMessageQueueNew>
 8001722:	e02d      	b.n	8001780 <main+0x388>
 8001724:	40023800 	.word	0x40023800
 8001728:	40021000 	.word	0x40021000
 800172c:	40020800 	.word	0x40020800
 8001730:	40020c00 	.word	0x40020c00
 8001734:	40020000 	.word	0x40020000
 8001738:	20002538 	.word	0x20002538
 800173c:	40023000 	.word	0x40023000
 8001740:	200024a4 	.word	0x200024a4
 8001744:	40005c00 	.word	0x40005c00
 8001748:	000186a0 	.word	0x000186a0
 800174c:	200023a4 	.word	0x200023a4
 8001750:	40015000 	.word	0x40015000
 8001754:	20002370 	.word	0x20002370
 8001758:	a0000140 	.word	0xa0000140
 800175c:	200023fc 	.word	0x200023fc
 8001760:	40016800 	.word	0x40016800
 8001764:	20002354 	.word	0x20002354
 8001768:	2000001c 	.word	0x2000001c
 800176c:	200024f8 	.word	0x200024f8
 8001770:	4002b000 	.word	0x4002b000
 8001774:	0801cf50 	.word	0x0801cf50
 8001778:	20002364 	.word	0x20002364
 800177c:	0801cf38 	.word	0x0801cf38
 8001780:	4b10      	ldr	r3, [pc, #64]	@ (80017c4 <main+0x3cc>)
  UpKeyQueueHandle = osMessageQueueNew(8, sizeof(uint8_t), &UpKeyQueueHandle_attributes);
 8001782:	4a11      	ldr	r2, [pc, #68]	@ (80017c8 <main+0x3d0>)
  LeftKeyQueueHandle = osMessageQueueNew(8, sizeof(uint8_t), &LeftKeyQueueHandle_attributes);
 8001784:	6018      	str	r0, [r3, #0]
  UpKeyQueueHandle = osMessageQueueNew(8, sizeof(uint8_t), &UpKeyQueueHandle_attributes);
 8001786:	4629      	mov	r1, r5
 8001788:	4648      	mov	r0, r9
 800178a:	f005 fdb0 	bl	80072ee <osMessageQueueNew>
 800178e:	4b0f      	ldr	r3, [pc, #60]	@ (80017cc <main+0x3d4>)
  DownKeyQueueHandle = osMessageQueueNew(8, sizeof(uint8_t), &DownKeyQueueHandle_attributes);
 8001790:	4a0f      	ldr	r2, [pc, #60]	@ (80017d0 <main+0x3d8>)
  UpKeyQueueHandle = osMessageQueueNew(8, sizeof(uint8_t), &UpKeyQueueHandle_attributes);
 8001792:	6018      	str	r0, [r3, #0]
  DownKeyQueueHandle = osMessageQueueNew(8, sizeof(uint8_t), &DownKeyQueueHandle_attributes);
 8001794:	4629      	mov	r1, r5
 8001796:	4648      	mov	r0, r9
 8001798:	f005 fda9 	bl	80072ee <osMessageQueueNew>
 800179c:	4b0d      	ldr	r3, [pc, #52]	@ (80017d4 <main+0x3dc>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800179e:	4a0e      	ldr	r2, [pc, #56]	@ (80017d8 <main+0x3e0>)
  DownKeyQueueHandle = osMessageQueueNew(8, sizeof(uint8_t), &DownKeyQueueHandle_attributes);
 80017a0:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80017a2:	4621      	mov	r1, r4
 80017a4:	480d      	ldr	r0, [pc, #52]	@ (80017dc <main+0x3e4>)
 80017a6:	f005 fc8f 	bl	80070c8 <osThreadNew>
 80017aa:	4b0d      	ldr	r3, [pc, #52]	@ (80017e0 <main+0x3e8>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80017ac:	4a0d      	ldr	r2, [pc, #52]	@ (80017e4 <main+0x3ec>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80017ae:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80017b0:	4621      	mov	r1, r4
 80017b2:	480d      	ldr	r0, [pc, #52]	@ (80017e8 <main+0x3f0>)
 80017b4:	f005 fc88 	bl	80070c8 <osThreadNew>
 80017b8:	4b0c      	ldr	r3, [pc, #48]	@ (80017ec <main+0x3f4>)
 80017ba:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80017bc:	f005 fc6a 	bl	8007094 <osKernelStart>
  while (1)
 80017c0:	e7fe      	b.n	80017c0 <main+0x3c8>
 80017c2:	bf00      	nop
 80017c4:	20002360 	.word	0x20002360
 80017c8:	0801cf20 	.word	0x0801cf20
 80017cc:	2000235c 	.word	0x2000235c
 80017d0:	0801cf08 	.word	0x0801cf08
 80017d4:	20002358 	.word	0x20002358
 80017d8:	0801cf8c 	.word	0x0801cf8c
 80017dc:	08001289 	.word	0x08001289
 80017e0:	2000236c 	.word	0x2000236c
 80017e4:	0801cf68 	.word	0x0801cf68
 80017e8:	080005d7 	.word	0x080005d7
 80017ec:	20002368 	.word	0x20002368

080017f0 <IOE_Init>:
void IOE_Init(void)
 80017f0:	4770      	bx	lr

080017f2 <IOE_ITConfig>:
void IOE_ITConfig(void)
 80017f2:	4770      	bx	lr

080017f4 <IOE_Write>:
{
 80017f4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80017f6:	4b09      	ldr	r3, [pc, #36]	@ (800181c <IOE_Write+0x28>)
 80017f8:	f88d 2017 	strb.w	r2, [sp, #23]
 80017fc:	681b      	ldr	r3, [r3, #0]
 80017fe:	9302      	str	r3, [sp, #8]
 8001800:	f10d 0217 	add.w	r2, sp, #23
 8001804:	2301      	movs	r3, #1
 8001806:	9200      	str	r2, [sp, #0]
 8001808:	9301      	str	r3, [sp, #4]
 800180a:	460a      	mov	r2, r1
 800180c:	4601      	mov	r1, r0
 800180e:	4804      	ldr	r0, [pc, #16]	@ (8001820 <IOE_Write+0x2c>)
 8001810:	f003 ff30 	bl	8005674 <HAL_I2C_Mem_Write>
}
 8001814:	b007      	add	sp, #28
 8001816:	f85d fb04 	ldr.w	pc, [sp], #4
 800181a:	bf00      	nop
 800181c:	20000010 	.word	0x20000010
 8001820:	200024a4 	.word	0x200024a4

08001824 <IOE_Read>:
{
 8001824:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001826:	2300      	movs	r3, #0
 8001828:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800182c:	4b08      	ldr	r3, [pc, #32]	@ (8001850 <IOE_Read+0x2c>)
 800182e:	681b      	ldr	r3, [r3, #0]
 8001830:	9302      	str	r3, [sp, #8]
{
 8001832:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001834:	2301      	movs	r3, #1
 8001836:	f10d 0117 	add.w	r1, sp, #23
 800183a:	9100      	str	r1, [sp, #0]
 800183c:	9301      	str	r3, [sp, #4]
 800183e:	4601      	mov	r1, r0
 8001840:	4804      	ldr	r0, [pc, #16]	@ (8001854 <IOE_Read+0x30>)
 8001842:	f003 ffa7 	bl	8005794 <HAL_I2C_Mem_Read>
}
 8001846:	f89d 0017 	ldrb.w	r0, [sp, #23]
 800184a:	b007      	add	sp, #28
 800184c:	f85d fb04 	ldr.w	pc, [sp], #4
 8001850:	20000010 	.word	0x20000010
 8001854:	200024a4 	.word	0x200024a4

08001858 <IOE_ReadMultiple>:
{
 8001858:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800185a:	4c08      	ldr	r4, [pc, #32]	@ (800187c <IOE_ReadMultiple+0x24>)
 800185c:	6824      	ldr	r4, [r4, #0]
 800185e:	9200      	str	r2, [sp, #0]
 8001860:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001864:	460a      	mov	r2, r1
 8001866:	2301      	movs	r3, #1
 8001868:	4601      	mov	r1, r0
 800186a:	4805      	ldr	r0, [pc, #20]	@ (8001880 <IOE_ReadMultiple+0x28>)
 800186c:	f003 ff92 	bl	8005794 <HAL_I2C_Mem_Read>
}
 8001870:	3800      	subs	r0, #0
 8001872:	bf18      	it	ne
 8001874:	2001      	movne	r0, #1
 8001876:	b004      	add	sp, #16
 8001878:	bd10      	pop	{r4, pc}
 800187a:	bf00      	nop
 800187c:	20000010 	.word	0x20000010
 8001880:	200024a4 	.word	0x200024a4

08001884 <IOE_Delay>:
void IOE_Delay(uint32_t Delay)
 8001884:	f003 ba04 	b.w	8004c90 <HAL_Delay>

08001888 <LCD_IO_Init>:
{
 8001888:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800188a:	4c06      	ldr	r4, [pc, #24]	@ (80018a4 <LCD_IO_Init+0x1c>)
 800188c:	2200      	movs	r2, #0
 800188e:	4620      	mov	r0, r4
 8001890:	2104      	movs	r1, #4
 8001892:	f003 fc59 	bl	8005148 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001896:	4620      	mov	r0, r4
 8001898:	2201      	movs	r2, #1
}
 800189a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800189e:	2104      	movs	r1, #4
 80018a0:	f003 bc52 	b.w	8005148 <HAL_GPIO_WritePin>
 80018a4:	40020800 	.word	0x40020800

080018a8 <LCD_IO_WriteData>:
{
 80018a8:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018aa:	4d0b      	ldr	r5, [pc, #44]	@ (80018d8 <LCD_IO_WriteData+0x30>)
{
 80018ac:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80018ae:	2201      	movs	r2, #1
 80018b0:	480a      	ldr	r0, [pc, #40]	@ (80018dc <LCD_IO_WriteData+0x34>)
 80018b2:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80018b6:	f003 fc47 	bl	8005148 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018ba:	2200      	movs	r2, #0
 80018bc:	2104      	movs	r1, #4
 80018be:	4628      	mov	r0, r5
 80018c0:	f003 fc42 	bl	8005148 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80018c4:	4620      	mov	r0, r4
 80018c6:	f7ff fccd 	bl	8001264 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018ca:	4628      	mov	r0, r5
 80018cc:	2201      	movs	r2, #1
}
 80018ce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018d2:	2104      	movs	r1, #4
 80018d4:	f003 bc38 	b.w	8005148 <HAL_GPIO_WritePin>
 80018d8:	40020800 	.word	0x40020800
 80018dc:	40020c00 	.word	0x40020c00

080018e0 <LCD_IO_WriteReg>:
{
 80018e0:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018e2:	4d0b      	ldr	r5, [pc, #44]	@ (8001910 <LCD_IO_WriteReg+0x30>)
{
 80018e4:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80018e6:	2200      	movs	r2, #0
 80018e8:	480a      	ldr	r0, [pc, #40]	@ (8001914 <LCD_IO_WriteReg+0x34>)
 80018ea:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80018ee:	f003 fc2b 	bl	8005148 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018f2:	2200      	movs	r2, #0
 80018f4:	2104      	movs	r1, #4
 80018f6:	4628      	mov	r0, r5
 80018f8:	f003 fc26 	bl	8005148 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 80018fc:	4620      	mov	r0, r4
 80018fe:	f7ff fcb1 	bl	8001264 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001902:	4628      	mov	r0, r5
 8001904:	2201      	movs	r2, #1
}
 8001906:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800190a:	2104      	movs	r1, #4
 800190c:	f003 bc1c 	b.w	8005148 <HAL_GPIO_WritePin>
 8001910:	40020800 	.word	0x40020800
 8001914:	40020c00 	.word	0x40020c00

08001918 <LCD_IO_ReadData>:
{
 8001918:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800191a:	4e14      	ldr	r6, [pc, #80]	@ (800196c <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800191c:	4f14      	ldr	r7, [pc, #80]	@ (8001970 <LCD_IO_ReadData+0x58>)
{
 800191e:	4605      	mov	r5, r0
 8001920:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001922:	4630      	mov	r0, r6
 8001924:	2200      	movs	r2, #0
 8001926:	2104      	movs	r1, #4
 8001928:	f003 fc0e 	bl	8005148 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800192c:	2200      	movs	r2, #0
 800192e:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001932:	4638      	mov	r0, r7
 8001934:	f003 fc08 	bl	8005148 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001938:	4628      	mov	r0, r5
 800193a:	f7ff fc93 	bl	8001264 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 800193e:	4b0d      	ldr	r3, [pc, #52]	@ (8001974 <LCD_IO_ReadData+0x5c>)
 8001940:	480d      	ldr	r0, [pc, #52]	@ (8001978 <LCD_IO_ReadData+0x60>)
 8001942:	681b      	ldr	r3, [r3, #0]
 8001944:	4622      	mov	r2, r4
 8001946:	a901      	add	r1, sp, #4
 8001948:	f005 f8d5 	bl	8006af6 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800194c:	4638      	mov	r0, r7
 800194e:	2201      	movs	r2, #1
 8001950:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  return readvalue;
 8001954:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001956:	f003 fbf7 	bl	8005148 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800195a:	4630      	mov	r0, r6
 800195c:	2201      	movs	r2, #1
 800195e:	2104      	movs	r1, #4
 8001960:	f003 fbf2 	bl	8005148 <HAL_GPIO_WritePin>
}
 8001964:	4620      	mov	r0, r4
 8001966:	b003      	add	sp, #12
 8001968:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800196a:	bf00      	nop
 800196c:	40020800 	.word	0x40020800
 8001970:	40020c00 	.word	0x40020c00
 8001974:	2000000c 	.word	0x2000000c
 8001978:	200023a4 	.word	0x200023a4

0800197c <LCD_Delay>:
  HAL_Delay(Delay);
 800197c:	f003 b988 	b.w	8004c90 <HAL_Delay>

08001980 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001980:	6802      	ldr	r2, [r0, #0]
 8001982:	4b03      	ldr	r3, [pc, #12]	@ (8001990 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001984:	429a      	cmp	r2, r3
 8001986:	d101      	bne.n	800198c <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8001988:	f003 b970 	b.w	8004c6c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 800198c:	4770      	bx	lr
 800198e:	bf00      	nop
 8001990:	40001000 	.word	0x40001000

08001994 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001994:	4770      	bx	lr
	...

08001998 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001998:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800199a:	4b0e      	ldr	r3, [pc, #56]	@ (80019d4 <HAL_MspInit+0x3c>)
 800199c:	2200      	movs	r2, #0
 800199e:	9200      	str	r2, [sp, #0]
 80019a0:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 80019a2:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 80019a6:	6459      	str	r1, [r3, #68]	@ 0x44
 80019a8:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 80019aa:	f401 4180 	and.w	r1, r1, #16384	@ 0x4000
 80019ae:	9100      	str	r1, [sp, #0]
 80019b0:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80019b2:	9201      	str	r2, [sp, #4]
 80019b4:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 80019b6:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 80019ba:	6419      	str	r1, [r3, #64]	@ 0x40
 80019bc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80019be:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80019c2:	9301      	str	r3, [sp, #4]
 80019c4:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019c6:	210f      	movs	r1, #15
 80019c8:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80019cc:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019ce:	f003 b985 	b.w	8004cdc <HAL_NVIC_SetPriority>
 80019d2:	bf00      	nop
 80019d4:	40023800 	.word	0x40023800

080019d8 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80019d8:	6802      	ldr	r2, [r0, #0]
 80019da:	4b09      	ldr	r3, [pc, #36]	@ (8001a00 <HAL_CRC_MspInit+0x28>)
 80019dc:	429a      	cmp	r2, r3
{
 80019de:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80019e0:	d10b      	bne.n	80019fa <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80019e2:	2300      	movs	r3, #0
 80019e4:	9301      	str	r3, [sp, #4]
 80019e6:	4b07      	ldr	r3, [pc, #28]	@ (8001a04 <HAL_CRC_MspInit+0x2c>)
 80019e8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80019ea:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80019ee:	631a      	str	r2, [r3, #48]	@ 0x30
 80019f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019f2:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80019f6:	9301      	str	r3, [sp, #4]
 80019f8:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80019fa:	b002      	add	sp, #8
 80019fc:	4770      	bx	lr
 80019fe:	bf00      	nop
 8001a00:	40023000 	.word	0x40023000
 8001a04:	40023800 	.word	0x40023800

08001a08 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001a08:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001a0a:	4b0f      	ldr	r3, [pc, #60]	@ (8001a48 <HAL_DMA2D_MspInit+0x40>)
 8001a0c:	6802      	ldr	r2, [r0, #0]
 8001a0e:	429a      	cmp	r2, r3
 8001a10:	d116      	bne.n	8001a40 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a12:	2200      	movs	r2, #0
 8001a14:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
 8001a18:	9201      	str	r2, [sp, #4]
 8001a1a:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8001a1c:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8001a20:	6319      	str	r1, [r3, #48]	@ 0x30
 8001a22:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a24:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8001a28:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a2a:	2105      	movs	r1, #5
 8001a2c:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a2e:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a30:	f003 f954 	bl	8004cdc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a34:	205a      	movs	r0, #90	@ 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001a36:	b003      	add	sp, #12
 8001a38:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a3c:	f003 b980 	b.w	8004d40 <HAL_NVIC_EnableIRQ>
}
 8001a40:	b003      	add	sp, #12
 8001a42:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a46:	bf00      	nop
 8001a48:	4002b000 	.word	0x4002b000

08001a4c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001a4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001a50:	4604      	mov	r4, r0
 8001a52:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a54:	2214      	movs	r2, #20
 8001a56:	2100      	movs	r1, #0
 8001a58:	a803      	add	r0, sp, #12
 8001a5a:	f01a f90e 	bl	801bc7a <memset>
  if(hi2c->Instance==I2C3)
 8001a5e:	6822      	ldr	r2, [r4, #0]
 8001a60:	4b24      	ldr	r3, [pc, #144]	@ (8001af4 <HAL_I2C_MspInit+0xa8>)
 8001a62:	429a      	cmp	r2, r3
 8001a64:	d143      	bne.n	8001aee <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a66:	4c24      	ldr	r4, [pc, #144]	@ (8001af8 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a68:	4824      	ldr	r0, [pc, #144]	@ (8001afc <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a6a:	2500      	movs	r5, #0
 8001a6c:	9500      	str	r5, [sp, #0]
 8001a6e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001a70:	f043 0304 	orr.w	r3, r3, #4
 8001a74:	6323      	str	r3, [r4, #48]	@ 0x30
 8001a76:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001a78:	f003 0304 	and.w	r3, r3, #4
 8001a7c:	9300      	str	r3, [sp, #0]
 8001a7e:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a80:	9501      	str	r5, [sp, #4]
 8001a82:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001a84:	f043 0301 	orr.w	r3, r3, #1
 8001a88:	6323      	str	r3, [r4, #48]	@ 0x30
 8001a8a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001a8c:	f003 0301 	and.w	r3, r3, #1
 8001a90:	9301      	str	r3, [sp, #4]
 8001a92:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001a94:	f04f 0912 	mov.w	r9, #18
 8001a98:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a9c:	f04f 0801 	mov.w	r8, #1
 8001aa0:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001aa2:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001aa4:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001aa6:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001aaa:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001aae:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ab0:	f003 fa60 	bl	8004f74 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001ab4:	f44f 7380 	mov.w	r3, #256	@ 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ab8:	4811      	ldr	r0, [pc, #68]	@ (8001b00 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001aba:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001abc:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001abe:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ac2:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ac6:	f003 fa55 	bl	8004f74 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001aca:	9502      	str	r5, [sp, #8]
 8001acc:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001ace:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8001ad2:	6423      	str	r3, [r4, #64]	@ 0x40
 8001ad4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001ad6:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8001ada:	9302      	str	r3, [sp, #8]
 8001adc:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001ade:	6a23      	ldr	r3, [r4, #32]
 8001ae0:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8001ae4:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001ae6:	6a23      	ldr	r3, [r4, #32]
 8001ae8:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8001aec:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001aee:	b009      	add	sp, #36	@ 0x24
 8001af0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001af4:	40005c00 	.word	0x40005c00
 8001af8:	40023800 	.word	0x40023800
 8001afc:	40020800 	.word	0x40020800
 8001b00:	40020000 	.word	0x40020000

08001b04 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001b04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001b06:	b099      	sub	sp, #100	@ 0x64
 8001b08:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b0a:	2214      	movs	r2, #20
 8001b0c:	2100      	movs	r1, #0
 8001b0e:	a807      	add	r0, sp, #28
 8001b10:	f01a f8b3 	bl	801bc7a <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001b14:	2230      	movs	r2, #48	@ 0x30
 8001b16:	eb0d 0002 	add.w	r0, sp, r2
 8001b1a:	2100      	movs	r1, #0
 8001b1c:	f01a f8ad 	bl	801bc7a <memset>
  if(hltdc->Instance==LTDC)
 8001b20:	6822      	ldr	r2, [r4, #0]
 8001b22:	4b5e      	ldr	r3, [pc, #376]	@ (8001c9c <HAL_LTDC_MspInit+0x198>)
 8001b24:	429a      	cmp	r2, r3
 8001b26:	f040 80b7 	bne.w	8001c98 <HAL_LTDC_MspInit+0x194>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001b2a:	2308      	movs	r3, #8
 8001b2c:	930c      	str	r3, [sp, #48]	@ 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001b2e:	23c0      	movs	r3, #192	@ 0xc0
 8001b30:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001b32:	2304      	movs	r3, #4
 8001b34:	9312      	str	r3, [sp, #72]	@ 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001b36:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001b38:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8001b3c:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001b3e:	f004 fbaf 	bl	80062a0 <HAL_RCCEx_PeriphCLKConfig>
 8001b42:	b108      	cbz	r0, 8001b48 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 8001b44:	f7ff ff26 	bl	8001994 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001b48:	4b55      	ldr	r3, [pc, #340]	@ (8001ca0 <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b4a:	4856      	ldr	r0, [pc, #344]	@ (8001ca4 <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001b4c:	2400      	movs	r4, #0
 8001b4e:	9400      	str	r4, [sp, #0]
 8001b50:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001b52:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8001b56:	645a      	str	r2, [r3, #68]	@ 0x44
 8001b58:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001b5a:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 8001b5e:	9200      	str	r2, [sp, #0]
 8001b60:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001b62:	9401      	str	r4, [sp, #4]
 8001b64:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b66:	f042 0220 	orr.w	r2, r2, #32
 8001b6a:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b6c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b6e:	f002 0220 	and.w	r2, r2, #32
 8001b72:	9201      	str	r2, [sp, #4]
 8001b74:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b76:	9402      	str	r4, [sp, #8]
 8001b78:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b7a:	f042 0201 	orr.w	r2, r2, #1
 8001b7e:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b80:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b82:	f002 0201 	and.w	r2, r2, #1
 8001b86:	9202      	str	r2, [sp, #8]
 8001b88:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b8a:	9403      	str	r4, [sp, #12]
 8001b8c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b8e:	f042 0202 	orr.w	r2, r2, #2
 8001b92:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b94:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b96:	f002 0202 	and.w	r2, r2, #2
 8001b9a:	9203      	str	r2, [sp, #12]
 8001b9c:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001b9e:	9404      	str	r4, [sp, #16]
 8001ba0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001ba2:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8001ba6:	631a      	str	r2, [r3, #48]	@ 0x30
 8001ba8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001baa:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8001bae:	9204      	str	r2, [sp, #16]
 8001bb0:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001bb2:	9405      	str	r4, [sp, #20]
 8001bb4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001bb6:	f042 0204 	orr.w	r2, r2, #4
 8001bba:	631a      	str	r2, [r3, #48]	@ 0x30
 8001bbc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001bbe:	f002 0204 	and.w	r2, r2, #4
 8001bc2:	9205      	str	r2, [sp, #20]
 8001bc4:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001bc6:	9406      	str	r4, [sp, #24]
 8001bc8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001bca:	f042 0208 	orr.w	r2, r2, #8
 8001bce:	631a      	str	r2, [r3, #48]	@ 0x30
 8001bd0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001bd2:	f003 0308 	and.w	r3, r3, #8
 8001bd6:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bd8:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001bda:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001bdc:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001bde:	960b      	str	r6, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001be0:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001be4:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001be6:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bea:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001bee:	f003 f9c1 	bl	8004f74 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001bf2:	f641 0358 	movw	r3, #6232	@ 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bf6:	482c      	ldr	r0, [pc, #176]	@ (8001ca8 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001bf8:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bfa:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bfc:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001c00:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c02:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c06:	f003 f9b5 	bl	8004f74 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001c0a:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c0c:	4827      	ldr	r0, [pc, #156]	@ (8001cac <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001c0e:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c10:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c12:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c16:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c1a:	f003 f9ab 	bl	8004f74 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001c1e:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c22:	4822      	ldr	r0, [pc, #136]	@ (8001cac <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c24:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c26:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c28:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c2c:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c30:	f003 f9a0 	bl	8004f74 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001c34:	f44f 630c 	mov.w	r3, #2240	@ 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c38:	481d      	ldr	r0, [pc, #116]	@ (8001cb0 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c3a:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c3c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c3e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c42:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c46:	f003 f995 	bl	8004f74 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001c4a:	23c0      	movs	r3, #192	@ 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c4c:	4819      	ldr	r0, [pc, #100]	@ (8001cb4 <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c4e:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c50:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c52:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c56:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c5a:	f003 f98b 	bl	8004f74 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001c5e:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c60:	4815      	ldr	r0, [pc, #84]	@ (8001cb8 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c62:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c64:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c66:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c6a:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c6e:	f003 f981 	bl	8004f74 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001c72:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c76:	480e      	ldr	r0, [pc, #56]	@ (8001cb0 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001c78:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c7a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c7c:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c80:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c84:	f003 f976 	bl	8004f74 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c88:	2058      	movs	r0, #88	@ 0x58
 8001c8a:	4622      	mov	r2, r4
 8001c8c:	2105      	movs	r1, #5
 8001c8e:	f003 f825 	bl	8004cdc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001c92:	2058      	movs	r0, #88	@ 0x58
 8001c94:	f003 f854 	bl	8004d40 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001c98:	b019      	add	sp, #100	@ 0x64
 8001c9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001c9c:	40016800 	.word	0x40016800
 8001ca0:	40023800 	.word	0x40023800
 8001ca4:	40021400 	.word	0x40021400
 8001ca8:	40020000 	.word	0x40020000
 8001cac:	40020400 	.word	0x40020400
 8001cb0:	40021800 	.word	0x40021800
 8001cb4:	40020800 	.word	0x40020800
 8001cb8:	40020c00 	.word	0x40020c00

08001cbc <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001cbc:	b510      	push	{r4, lr}
 8001cbe:	4604      	mov	r4, r0
 8001cc0:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cc2:	2214      	movs	r2, #20
 8001cc4:	2100      	movs	r1, #0
 8001cc6:	a803      	add	r0, sp, #12
 8001cc8:	f019 ffd7 	bl	801bc7a <memset>
  if(hspi->Instance==SPI5)
 8001ccc:	6822      	ldr	r2, [r4, #0]
 8001cce:	4b14      	ldr	r3, [pc, #80]	@ (8001d20 <HAL_SPI_MspInit+0x64>)
 8001cd0:	429a      	cmp	r2, r3
 8001cd2:	d123      	bne.n	8001d1c <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001cd4:	f503 4368 	add.w	r3, r3, #59392	@ 0xe800
 8001cd8:	2100      	movs	r1, #0
 8001cda:	9101      	str	r1, [sp, #4]
 8001cdc:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cde:	4811      	ldr	r0, [pc, #68]	@ (8001d24 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001ce0:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8001ce4:	645a      	str	r2, [r3, #68]	@ 0x44
 8001ce6:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001ce8:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 8001cec:	9201      	str	r2, [sp, #4]
 8001cee:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001cf0:	9102      	str	r1, [sp, #8]
 8001cf2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001cf4:	f042 0220 	orr.w	r2, r2, #32
 8001cf8:	631a      	str	r2, [r3, #48]	@ 0x30
 8001cfa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001cfc:	f003 0320 	and.w	r3, r3, #32
 8001d00:	9302      	str	r3, [sp, #8]
 8001d02:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d04:	f44f 7260 	mov.w	r2, #896	@ 0x380
 8001d08:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001d0a:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d0c:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001d10:	2305      	movs	r3, #5
 8001d12:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d16:	a903      	add	r1, sp, #12
 8001d18:	f003 f92c 	bl	8004f74 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001d1c:	b008      	add	sp, #32
 8001d1e:	bd10      	pop	{r4, pc}
 8001d20:	40015000 	.word	0x40015000
 8001d24:	40021400 	.word	0x40021400

08001d28 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001d28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001d2c:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001d2e:	2300      	movs	r3, #0
 8001d30:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001d32:	4b2b      	ldr	r3, [pc, #172]	@ (8001de0 <HAL_SDRAM_MspInit+0xb8>)
 8001d34:	681c      	ldr	r4, [r3, #0]
 8001d36:	2c00      	cmp	r4, #0
 8001d38:	d14f      	bne.n	8001dda <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001d3a:	f04f 0801 	mov.w	r8, #1
 8001d3e:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d42:	4b28      	ldr	r3, [pc, #160]	@ (8001de4 <HAL_SDRAM_MspInit+0xbc>)
 8001d44:	9400      	str	r4, [sp, #0]
 8001d46:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d48:	4827      	ldr	r0, [pc, #156]	@ (8001de8 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d4a:	ea42 0208 	orr.w	r2, r2, r8
 8001d4e:	639a      	str	r2, [r3, #56]	@ 0x38
 8001d50:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001d52:	ea03 0308 	and.w	r3, r3, r8
 8001d56:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d58:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d5a:	2603      	movs	r6, #3
 8001d5c:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d5e:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d60:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d62:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 8001d66:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d6a:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d6e:	f003 f901 	bl	8004f74 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d72:	481e      	ldr	r0, [pc, #120]	@ (8001dec <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d74:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d76:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d78:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d7c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d80:	f003 f8f8 	bl	8004f74 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001d84:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d88:	4819      	ldr	r0, [pc, #100]	@ (8001df0 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d8a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d8c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d8e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d92:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d96:	f003 f8ed 	bl	8004f74 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001d9a:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d9e:	4815      	ldr	r0, [pc, #84]	@ (8001df4 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001da0:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001da2:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001da4:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001da8:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001dac:	f003 f8e2 	bl	8004f74 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001db0:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001db4:	4810      	ldr	r0, [pc, #64]	@ (8001df8 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001db6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001db8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dba:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dbe:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001dc2:	f003 f8d7 	bl	8004f74 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001dc6:	2360      	movs	r3, #96	@ 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001dc8:	480c      	ldr	r0, [pc, #48]	@ (8001dfc <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dca:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001dcc:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dce:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dd2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001dd6:	f003 f8cd 	bl	8004f74 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001dda:	b006      	add	sp, #24
 8001ddc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001de0:	20002540 	.word	0x20002540
 8001de4:	40023800 	.word	0x40023800
 8001de8:	40021400 	.word	0x40021400
 8001dec:	40020800 	.word	0x40020800
 8001df0:	40021800 	.word	0x40021800
 8001df4:	40021000 	.word	0x40021000
 8001df8:	40020c00 	.word	0x40020c00
 8001dfc:	40020400 	.word	0x40020400

08001e00 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001e00:	b530      	push	{r4, r5, lr}
 8001e02:	4601      	mov	r1, r0
 8001e04:	b089      	sub	sp, #36	@ 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001e06:	2200      	movs	r2, #0
 8001e08:	2036      	movs	r0, #54	@ 0x36
 8001e0a:	f002 ff67 	bl	8004cdc <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001e0e:	2036      	movs	r0, #54	@ 0x36
 8001e10:	f002 ff96 	bl	8004d40 <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e14:	2500      	movs	r5, #0
 8001e16:	4b15      	ldr	r3, [pc, #84]	@ (8001e6c <HAL_InitTick+0x6c>)
 8001e18:	9502      	str	r5, [sp, #8]
 8001e1a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001e1c:	4c14      	ldr	r4, [pc, #80]	@ (8001e70 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e1e:	f042 0210 	orr.w	r2, r2, #16
 8001e22:	641a      	str	r2, [r3, #64]	@ 0x40
 8001e24:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e26:	f003 0310 	and.w	r3, r3, #16
 8001e2a:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001e2c:	a901      	add	r1, sp, #4
 8001e2e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e30:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001e32:	f004 fa17 	bl	8006264 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001e36:	f004 fa05 	bl	8006244 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001e3a:	4b0e      	ldr	r3, [pc, #56]	@ (8001e74 <HAL_InitTick+0x74>)
 8001e3c:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001e3e:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8001e42:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001e44:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001e46:	4b0c      	ldr	r3, [pc, #48]	@ (8001e78 <HAL_InitTick+0x78>)
 8001e48:	fbb0 f0f3 	udiv	r0, r0, r3
 8001e4c:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001e4e:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001e50:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001e52:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001e54:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001e56:	f005 f833 	bl	8006ec0 <HAL_TIM_Base_Init>
 8001e5a:	b920      	cbnz	r0, 8001e66 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001e5c:	4620      	mov	r0, r4
 8001e5e:	f004 fee9 	bl	8006c34 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001e62:	b009      	add	sp, #36	@ 0x24
 8001e64:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001e66:	2001      	movs	r0, #1
 8001e68:	e7fb      	b.n	8001e62 <HAL_InitTick+0x62>
 8001e6a:	bf00      	nop
 8001e6c:	40023800 	.word	0x40023800
 8001e70:	20002544 	.word	0x20002544
 8001e74:	40001000 	.word	0x40001000
 8001e78:	000f4240 	.word	0x000f4240

08001e7c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001e7c:	4770      	bx	lr

08001e7e <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001e7e:	e7fe      	b.n	8001e7e <HardFault_Handler>

08001e80 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001e80:	e7fe      	b.n	8001e80 <MemManage_Handler>

08001e82 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001e82:	e7fe      	b.n	8001e82 <BusFault_Handler>

08001e84 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001e84:	e7fe      	b.n	8001e84 <UsageFault_Handler>

08001e86 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 8001e86:	4770      	bx	lr

08001e88 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001e88:	4801      	ldr	r0, [pc, #4]	@ (8001e90 <TIM6_DAC_IRQHandler+0x8>)
 8001e8a:	f004 bf11 	b.w	8006cb0 <HAL_TIM_IRQHandler>
 8001e8e:	bf00      	nop
 8001e90:	20002544 	.word	0x20002544

08001e94 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001e94:	4801      	ldr	r0, [pc, #4]	@ (8001e9c <LTDC_IRQHandler+0x8>)
 8001e96:	f003 beb7 	b.w	8005c08 <HAL_LTDC_IRQHandler>
 8001e9a:	bf00      	nop
 8001e9c:	200023fc 	.word	0x200023fc

08001ea0 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001ea0:	4801      	ldr	r0, [pc, #4]	@ (8001ea8 <DMA2D_IRQHandler+0x8>)
 8001ea2:	f002 bf99 	b.w	8004dd8 <HAL_DMA2D_IRQHandler>
 8001ea6:	bf00      	nop
 8001ea8:	200024f8 	.word	0x200024f8

08001eac <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001eac:	2001      	movs	r0, #1
 8001eae:	4770      	bx	lr

08001eb0 <_kill>:

int _kill(int pid, int sig)
{
 8001eb0:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001eb2:	f019 ff85 	bl	801bdc0 <__errno>
 8001eb6:	2316      	movs	r3, #22
 8001eb8:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001eba:	f04f 30ff 	mov.w	r0, #4294967295
 8001ebe:	bd08      	pop	{r3, pc}

08001ec0 <_exit>:

void _exit (int status)
{
 8001ec0:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001ec2:	f019 ff7d 	bl	801bdc0 <__errno>
 8001ec6:	2316      	movs	r3, #22
 8001ec8:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001eca:	e7fe      	b.n	8001eca <_exit+0xa>

08001ecc <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001ecc:	b570      	push	{r4, r5, r6, lr}
 8001ece:	460d      	mov	r5, r1
 8001ed0:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001ed2:	460e      	mov	r6, r1
 8001ed4:	1b73      	subs	r3, r6, r5
 8001ed6:	429c      	cmp	r4, r3
 8001ed8:	dc01      	bgt.n	8001ede <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001eda:	4620      	mov	r0, r4
 8001edc:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001ede:	f3af 8000 	nop.w
 8001ee2:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001ee6:	e7f5      	b.n	8001ed4 <_read+0x8>

08001ee8 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001ee8:	b570      	push	{r4, r5, r6, lr}
 8001eea:	460d      	mov	r5, r1
 8001eec:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001eee:	460e      	mov	r6, r1
 8001ef0:	1b73      	subs	r3, r6, r5
 8001ef2:	429c      	cmp	r4, r3
 8001ef4:	dc01      	bgt.n	8001efa <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001ef6:	4620      	mov	r0, r4
 8001ef8:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001efa:	f816 0b01 	ldrb.w	r0, [r6], #1
 8001efe:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f02:	e7f5      	b.n	8001ef0 <_write+0x8>

08001f04 <_close>:

int _close(int file)
{
	return -1;
}
 8001f04:	f04f 30ff 	mov.w	r0, #4294967295
 8001f08:	4770      	bx	lr

08001f0a <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001f0a:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001f0e:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001f10:	2000      	movs	r0, #0
 8001f12:	4770      	bx	lr

08001f14 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001f14:	2001      	movs	r0, #1
 8001f16:	4770      	bx	lr

08001f18 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001f18:	2000      	movs	r0, #0
 8001f1a:	4770      	bx	lr

08001f1c <_sbrk>:
caddr_t _sbrk(int incr)
{
    static char *heap_end;
    char *prev_heap_end;

    if (heap_end == 0)
 8001f1c:	4a0a      	ldr	r2, [pc, #40]	@ (8001f48 <_sbrk+0x2c>)
 8001f1e:	6811      	ldr	r1, [r2, #0]
{
 8001f20:	b508      	push	{r3, lr}
 8001f22:	4603      	mov	r3, r0
    if (heap_end == 0)
 8001f24:	b909      	cbnz	r1, 8001f2a <_sbrk+0xe>
        heap_end = &end;
 8001f26:	4909      	ldr	r1, [pc, #36]	@ (8001f4c <_sbrk+0x30>)
 8001f28:	6011      	str	r1, [r2, #0]

    prev_heap_end = heap_end;
 8001f2a:	6810      	ldr	r0, [r2, #0]
    if (heap_end + incr > stack_ptr)
 8001f2c:	4669      	mov	r1, sp
 8001f2e:	4403      	add	r3, r0
 8001f30:	428b      	cmp	r3, r1
 8001f32:	d906      	bls.n	8001f42 <_sbrk+0x26>
    {
        errno = ENOMEM;
 8001f34:	f019 ff44 	bl	801bdc0 <__errno>
 8001f38:	230c      	movs	r3, #12
 8001f3a:	6003      	str	r3, [r0, #0]
        return (caddr_t)(-1);
 8001f3c:	f04f 30ff 	mov.w	r0, #4294967295
    }

    heap_end += incr;

    return (caddr_t)prev_heap_end;
}
 8001f40:	bd08      	pop	{r3, pc}
    heap_end += incr;
 8001f42:	6013      	str	r3, [r2, #0]
    return (caddr_t)prev_heap_end;
 8001f44:	e7fc      	b.n	8001f40 <_sbrk+0x24>
 8001f46:	bf00      	nop
 8001f48:	2000258c 	.word	0x2000258c
 8001f4c:	20014430 	.word	0x20014430

08001f50 <_ZN23ApplicationFontProvider7getFontEt>:
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    return 0;
}
 8001f50:	2000      	movs	r0, #0
 8001f52:	4770      	bx	lr

08001f54 <_ZN23ApplicationFontProviderD1Ev>:
struct TypographyFontIndex
{
    static const uint16_t NUMBER_OF_FONTS = 0;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001f54:	4770      	bx	lr

08001f56 <_ZN23ApplicationFontProviderD0Ev>:
 8001f56:	b510      	push	{r4, lr}
 8001f58:	2104      	movs	r1, #4
 8001f5a:	4604      	mov	r4, r0
 8001f5c:	f019 fc58 	bl	801b810 <_ZdlPvj>
 8001f60:	4620      	mov	r0, r4
 8001f62:	bd10      	pop	{r4, pc}

08001f64 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8001f64:	4800      	ldr	r0, [pc, #0]	@ (8001f68 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8001f66:	4770      	bx	lr
 8001f68:	0801cfc4 	.word	0x0801cfc4

08001f6c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8001f6c:	2026      	movs	r0, #38	@ 0x26
 8001f6e:	4770      	bx	lr

08001f70 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8001f70:	4770      	bx	lr

08001f72 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8001f72:	4770      	bx	lr

08001f74 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8001f74:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 8001f78:	6808      	ldr	r0, [r1, #0]
 8001f7a:	6849      	ldr	r1, [r1, #4]
 8001f7c:	c303      	stmia	r3!, {r0, r1}
    }
 8001f7e:	4770      	bx	lr

08001f80 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8001f80:	4770      	bx	lr

08001f82 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8001f82:	4770      	bx	lr

08001f84 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8001f84:	6041      	str	r1, [r0, #4]
    }
 8001f86:	4770      	bx	lr

08001f88 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8001f88:	4770      	bx	lr
	...

08001f8c <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8001f8c:	4b06      	ldr	r3, [pc, #24]	@ (8001fa8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8001f8e:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8001f92:	2300      	movs	r3, #0
 8001f94:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// MenuScreen

void FrontendApplicationBase::gotoMenuScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMenuScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8001f98:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8001f9c:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8001fa0:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoMenuScreenScreenNoTransition();
    }
 8001fa4:	4770      	bx	lr
 8001fa6:	bf00      	nop
 8001fa8:	08002125 	.word	0x08002125

08001fac <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8001fac:	2301      	movs	r3, #1
 8001fae:	7203      	strb	r3, [r0, #8]
    }
 8001fb0:	4770      	bx	lr

08001fb2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
 8001fb2:	4770      	bx	lr

08001fb4 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8001fb4:	4770      	bx	lr

08001fb6 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8001fb6:	4770      	bx	lr

08001fb8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8001fb8:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8001fba:	68c2      	ldr	r2, [r0, #12]
 8001fbc:	6841      	ldr	r1, [r0, #4]
 8001fbe:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8001fc0:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8001fc2:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8001fc6:	07d2      	lsls	r2, r2, #31
 8001fc8:	bf48      	it	mi
 8001fca:	590a      	ldrmi	r2, [r1, r4]
 8001fcc:	689b      	ldr	r3, [r3, #8]
    }
 8001fce:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8001fd2:	bf48      	it	mi
 8001fd4:	58d3      	ldrmi	r3, [r2, r3]
 8001fd6:	4718      	bx	r3

08001fd8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8001fd8:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8001fda:	6840      	ldr	r0, [r0, #4]
 8001fdc:	b130      	cbz	r0, 8001fec <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8001fde:	689a      	ldr	r2, [r3, #8]
 8001fe0:	b91a      	cbnz	r2, 8001fea <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 8001fe2:	68d8      	ldr	r0, [r3, #12]
 8001fe4:	f000 0001 	and.w	r0, r0, #1
 8001fe8:	4770      	bx	lr
 8001fea:	2001      	movs	r0, #1
    }
 8001fec:	4770      	bx	lr

08001fee <_ZN8touchgfx12NoTransitionD0Ev>:
 8001fee:	b510      	push	{r4, lr}
 8001ff0:	210c      	movs	r1, #12
 8001ff2:	4604      	mov	r4, r0
 8001ff4:	f019 fc0c 	bl	801b810 <_ZdlPvj>
 8001ff8:	4620      	mov	r0, r4
 8001ffa:	bd10      	pop	{r4, pc}

08001ffc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8001ffc:	b510      	push	{r4, lr}
 8001ffe:	2110      	movs	r1, #16
 8002000:	4604      	mov	r4, r0
 8002002:	f019 fc05 	bl	801b810 <_ZdlPvj>
 8002006:	4620      	mov	r0, r4
 8002008:	bd10      	pop	{r4, pc}

0800200a <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 800200a:	b510      	push	{r4, lr}
 800200c:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8002010:	4604      	mov	r4, r0
 8002012:	f019 fbfd 	bl	801b810 <_ZdlPvj>
 8002016:	4620      	mov	r0, r4
 8002018:	bd10      	pop	{r4, pc}

0800201a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
 800201a:	b510      	push	{r4, lr}
 800201c:	2140      	movs	r1, #64	@ 0x40
 800201e:	4604      	mov	r4, r0
 8002020:	f019 fbf6 	bl	801b810 <_ZdlPvj>
 8002024:	4620      	mov	r0, r4
 8002026:	bd10      	pop	{r4, pc}

08002028 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002028:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 800202a:	f00a f8f5 	bl	800c218 <_ZN8touchgfx11Application11getInstanceEv>
 800202e:	6803      	ldr	r3, [r0, #0]
    }
 8002030:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8002034:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002036:	4718      	bx	r3

08002038 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 8002038:	4b05      	ldr	r3, [pc, #20]	@ (8002050 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
 800203a:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 800203c:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 800203e:	b12b      	cbz	r3, 800204c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
 8002040:	6840      	ldr	r0, [r0, #4]
 8002042:	b118      	cbz	r0, 800204c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
        {
            screenContainer->remove(snapshot);
 8002044:	6803      	ldr	r3, [r0, #0]
 8002046:	310c      	adds	r1, #12
 8002048:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800204a:	4718      	bx	r3
        }
    }
 800204c:	4770      	bx	lr
 800204e:	bf00      	nop
 8002050:	200137ff 	.word	0x200137ff

08002054 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
 8002054:	7a03      	ldrb	r3, [r0, #8]
    virtual void init()
 8002056:	b570      	push	{r4, r5, r6, lr}
 8002058:	4605      	mov	r5, r0
        if (done)
 800205a:	b9bb      	cbnz	r3, 800208c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x38>
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
 800205c:	6840      	ldr	r0, [r0, #4]
 800205e:	6803      	ldr	r3, [r0, #0]
 8002060:	69db      	ldr	r3, [r3, #28]
 8002062:	4798      	blx	r3
 8002064:	4604      	mov	r4, r0
        while (d)
 8002066:	b93c      	cbnz	r4, 8002078 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x24>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
 8002068:	6868      	ldr	r0, [r5, #4]
 800206a:	6803      	ldr	r3, [r0, #0]
 800206c:	f105 010c 	add.w	r1, r5, #12
 8002070:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
    }
 8002072:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
 8002076:	4718      	bx	r3
                d->setX(d->getX() - targetValue);
 8002078:	88a1      	ldrh	r1, [r4, #4]
 800207a:	8f6b      	ldrh	r3, [r5, #58]	@ 0x3a
 800207c:	1ac9      	subs	r1, r1, r3
 800207e:	6823      	ldr	r3, [r4, #0]
 8002080:	4620      	mov	r0, r4
 8002082:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002084:	b209      	sxth	r1, r1
 8002086:	4798      	blx	r3
     *
     * @return The next sibling. If there are no more siblings, the return value is 0.
     */
    Drawable* getNextSibling()
    {
        return nextSibling;
 8002088:	69a4      	ldr	r4, [r4, #24]
 800208a:	e7ec      	b.n	8002066 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x12>
    }
 800208c:	bd70      	pop	{r4, r5, r6, pc}

0800208e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800208e:	b510      	push	{r4, lr}
 8002090:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002092:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 8002096:	b158      	cbz	r0, 80020b0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002098:	6803      	ldr	r3, [r0, #0]
 800209a:	68db      	ldr	r3, [r3, #12]
 800209c:	4798      	blx	r3
 800209e:	b138      	cbz	r0, 80020b0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80020a0:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 80020a4:	6803      	ldr	r3, [r0, #0]
 80020a6:	689b      	ldr	r3, [r3, #8]
 80020a8:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80020aa:	2300      	movs	r3, #0
 80020ac:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 80020b0:	bd10      	pop	{r4, pc}

080020b2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80020b2:	b570      	push	{r4, r5, r6, lr}
 80020b4:	4604      	mov	r4, r0
        animationCounter++;
 80020b6:	f890 0039 	ldrb.w	r0, [r0, #57]	@ 0x39
        if (animationCounter > animationSteps)
 80020ba:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
        animationCounter++;
 80020be:	3001      	adds	r0, #1
 80020c0:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80020c2:	4298      	cmp	r0, r3
        animationCounter++;
 80020c4:	f884 0039 	strb.w	r0, [r4, #57]	@ 0x39
        if (animationCounter > animationSteps)
 80020c8:	d905      	bls.n	80020d6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x24>
            done = true;
 80020ca:	2301      	movs	r3, #1
 80020cc:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80020ce:	2300      	movs	r3, #0
 80020d0:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
    }
 80020d4:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80020d6:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	@ 0x3a
 80020da:	2100      	movs	r1, #0
 80020dc:	f00b fc1c 	bl	800d918 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 80020e0:	07c3      	lsls	r3, r0, #31
 80020e2:	d506      	bpl.n	80020f2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x40>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80020e4:	2800      	cmp	r0, #0
 80020e6:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80020ea:	bfc8      	it	gt
 80020ec:	2301      	movgt	r3, #1
 80020ee:	4418      	add	r0, r3
 80020f0:	b200      	sxth	r0, r0
            relativeValue = calculatedValue - snapshot.getX();
 80020f2:	8a23      	ldrh	r3, [r4, #16]
 80020f4:	1ac0      	subs	r0, r0, r3
 80020f6:	87a0      	strh	r0, [r4, #60]	@ 0x3c
        Drawable* d = screenContainer->getFirstChild();
 80020f8:	6860      	ldr	r0, [r4, #4]
 80020fa:	6803      	ldr	r3, [r0, #0]
 80020fc:	69db      	ldr	r3, [r3, #28]
 80020fe:	4798      	blx	r3
 8002100:	4605      	mov	r5, r0
        while (d)
 8002102:	b92d      	cbnz	r5, 8002110 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5e>
 8002104:	6860      	ldr	r0, [r4, #4]
        screenContainer->invalidate();
 8002106:	6803      	ldr	r3, [r0, #0]
    }
 8002108:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
 800210c:	695b      	ldr	r3, [r3, #20]
 800210e:	4718      	bx	r3
                d->setX(d->getX() + relativeValue);
 8002110:	88a9      	ldrh	r1, [r5, #4]
 8002112:	8fa3      	ldrh	r3, [r4, #60]	@ 0x3c
 8002114:	4419      	add	r1, r3
 8002116:	682b      	ldr	r3, [r5, #0]
 8002118:	4628      	mov	r0, r5
 800211a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800211c:	b209      	sxth	r1, r1
 800211e:	4798      	blx	r3
 8002120:	69ad      	ldr	r5, [r5, #24]
 8002122:	e7ee      	b.n	8002102 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x50>

08002124 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoMenuScreenScreenNoTransitionImpl()
{
 8002124:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MenuScreenView, MenuScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002128:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 800212c:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800212e:	68b0      	ldr	r0, [r6, #8]
 8002130:	6803      	ldr	r3, [r0, #0]
 8002132:	6a1b      	ldr	r3, [r3, #32]
 8002134:	4798      	blx	r3
 8002136:	f5b0 7f9c 	cmp.w	r0, #312	@ 0x138
 800213a:	d205      	bcs.n	8002148 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x24>
 800213c:	4b44      	ldr	r3, [pc, #272]	@ (8002250 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x12c>)
 800213e:	4a45      	ldr	r2, [pc, #276]	@ (8002254 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x130>)
 8002140:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002142:	4845      	ldr	r0, [pc, #276]	@ (8002258 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x134>)
 8002144:	f019 fb92 	bl	801b86c <__assert_func>
 8002148:	6870      	ldr	r0, [r6, #4]
 800214a:	6803      	ldr	r3, [r0, #0]
 800214c:	6a1b      	ldr	r3, [r3, #32]
 800214e:	4798      	blx	r3
 8002150:	280f      	cmp	r0, #15
 8002152:	d803      	bhi.n	800215c <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x38>
 8002154:	4b41      	ldr	r3, [pc, #260]	@ (800225c <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x138>)
 8002156:	4a3f      	ldr	r2, [pc, #252]	@ (8002254 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x130>)
 8002158:	21a4      	movs	r1, #164	@ 0xa4
 800215a:	e7f2      	b.n	8002142 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800215c:	68f0      	ldr	r0, [r6, #12]
 800215e:	6803      	ldr	r3, [r0, #0]
 8002160:	6a1b      	ldr	r3, [r3, #32]
 8002162:	4798      	blx	r3
 8002164:	280b      	cmp	r0, #11
 8002166:	d803      	bhi.n	8002170 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x4c>
 8002168:	4b3d      	ldr	r3, [pc, #244]	@ (8002260 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x13c>)
 800216a:	4a3a      	ldr	r2, [pc, #232]	@ (8002254 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x130>)
 800216c:	21a5      	movs	r1, #165	@ 0xa5
 800216e:	e7e8      	b.n	8002142 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8002170:	f00a f852 	bl	800c218 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002174:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8002268 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x144>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8002178:	3004      	adds	r0, #4
 800217a:	f00a f88b 	bl	800c294 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800217e:	f8d9 0000 	ldr.w	r0, [r9]
 8002182:	b110      	cbz	r0, 800218a <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8002184:	6803      	ldr	r3, [r0, #0]
 8002186:	68db      	ldr	r3, [r3, #12]
 8002188:	4798      	blx	r3
    if (*currentTrans)
 800218a:	f8d9 0000 	ldr.w	r0, [r9]
 800218e:	b110      	cbz	r0, 8002196 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8002190:	6803      	ldr	r3, [r0, #0]
 8002192:	681b      	ldr	r3, [r3, #0]
 8002194:	4798      	blx	r3
    if (*currentScreen)
 8002196:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800226c <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x148>
 800219a:	f8d8 0000 	ldr.w	r0, [r8]
 800219e:	b110      	cbz	r0, 80021a6 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80021a0:	6803      	ldr	r3, [r0, #0]
 80021a2:	695b      	ldr	r3, [r3, #20]
 80021a4:	4798      	blx	r3
    if (*currentPresenter)
 80021a6:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80021aa:	b110      	cbz	r0, 80021b2 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80021ac:	6803      	ldr	r3, [r0, #0]
 80021ae:	685b      	ldr	r3, [r3, #4]
 80021b0:	4798      	blx	r3
    if (*currentScreen)
 80021b2:	f8d8 0000 	ldr.w	r0, [r8]
 80021b6:	b110      	cbz	r0, 80021be <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 80021b8:	6803      	ldr	r3, [r0, #0]
 80021ba:	681b      	ldr	r3, [r3, #0]
 80021bc:	4798      	blx	r3
    if (*currentPresenter)
 80021be:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80021c2:	b110      	cbz	r0, 80021ca <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80021c4:	6803      	ldr	r3, [r0, #0]
 80021c6:	689b      	ldr	r3, [r3, #8]
 80021c8:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80021ca:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80021cc:	6803      	ldr	r3, [r0, #0]
 80021ce:	2100      	movs	r1, #0
 80021d0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80021d2:	4798      	blx	r3
        : screenContainer(0), done(false)
 80021d4:	f04f 0b00 	mov.w	fp, #0
 80021d8:	4b22      	ldr	r3, [pc, #136]	@ (8002264 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x140>)
 80021da:	f8c0 b004 	str.w	fp, [r0, #4]
 80021de:	4604      	mov	r4, r0
 80021e0:	f880 b008 	strb.w	fp, [r0, #8]
 80021e4:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80021e6:	68b0      	ldr	r0, [r6, #8]
 80021e8:	6803      	ldr	r3, [r0, #0]
 80021ea:	4659      	mov	r1, fp
 80021ec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80021ee:	4798      	blx	r3
 80021f0:	4605      	mov	r5, r0
 80021f2:	f001 fea3 	bl	8003f3c <_ZN14MenuScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80021f6:	6870      	ldr	r0, [r6, #4]
 80021f8:	6803      	ldr	r3, [r0, #0]
 80021fa:	4659      	mov	r1, fp
 80021fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80021fe:	4798      	blx	r3
 8002200:	4629      	mov	r1, r5
 8002202:	4606      	mov	r6, r0
 8002204:	f001 fe78 	bl	8003ef8 <_ZN19MenuScreenPresenterC1ER14MenuScreenView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8002208:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 800220a:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 800220e:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002212:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002216:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800221a:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 800221c:	f8c6 a008 	str.w	sl, [r6, #8]
 8002220:	4628      	mov	r0, r5
 8002222:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002224:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002226:	4798      	blx	r3
    newPresenter->activate();
 8002228:	6833      	ldr	r3, [r6, #0]
 800222a:	4630      	mov	r0, r6
 800222c:	681b      	ldr	r3, [r3, #0]
 800222e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002230:	4621      	mov	r1, r4
 8002232:	4628      	mov	r0, r5
 8002234:	f00b fb6a 	bl	800d90c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002238:	6823      	ldr	r3, [r4, #0]
 800223a:	4620      	mov	r0, r4
 800223c:	691b      	ldr	r3, [r3, #16]
 800223e:	4798      	blx	r3
    newTransition->invalidate();
 8002240:	6823      	ldr	r3, [r4, #0]
 8002242:	695b      	ldr	r3, [r3, #20]
 8002244:	4620      	mov	r0, r4
}
 8002246:	b001      	add	sp, #4
 8002248:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800224c:	4718      	bx	r3
 800224e:	bf00      	nop
 8002250:	0801d2bc 	.word	0x0801d2bc
 8002254:	0801d34a 	.word	0x0801d34a
 8002258:	0801d422 	.word	0x0801d422
 800225c:	0801d469 	.word	0x0801d469
 8002260:	0801d50c 	.word	0x0801d50c
 8002264:	0801d7fc 	.word	0x0801d7fc
 8002268:	20013840 	.word	0x20013840
 800226c:	2001383c 	.word	0x2001383c

08002270 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002270:	4b04      	ldr	r3, [pc, #16]	@ (8002284 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8002272:	681b      	ldr	r3, [r3, #0]
 8002274:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8002278:	b10a      	cbz	r2, 800227e <_ZN8touchgfx3HAL3lcdEv+0xe>
 800227a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800227c:	b900      	cbnz	r0, 8002280 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 800227e:	6898      	ldr	r0, [r3, #8]
    }
 8002280:	4770      	bx	lr
 8002282:	bf00      	nop
 8002284:	20013800 	.word	0x20013800

08002288 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002288:	b570      	push	{r4, r5, r6, lr}
 800228a:	4604      	mov	r4, r0
 800228c:	460d      	mov	r5, r1
 800228e:	4616      	mov	r6, r2
          pendingScreenTransitionCallback(0)
 8002290:	f00a f8ce 	bl	800c430 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002294:	4a0e      	ldr	r2, [pc, #56]	@ (80022d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
 8002296:	6014      	str	r4, [r2, #0]
      model(m)
 8002298:	4a0e      	ldr	r2, [pc, #56]	@ (80022d4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
 800229a:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
 800229c:	4a0e      	ldr	r2, [pc, #56]	@ (80022d8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
        : currentPresenter(0),
 800229e:	2300      	movs	r3, #0
 80022a0:	e9c4 2351 	strd	r2, r3, [r4, #324]	@ 0x144
 80022a4:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
          pendingScreenTransitionCallback(0)
 80022a8:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
        return instance;
 80022ac:	4b0b      	ldr	r3, [pc, #44]	@ (80022dc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80022ae:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 80022b0:	6803      	ldr	r3, [r0, #0]
 80022b2:	2101      	movs	r1, #1
 80022b4:	689b      	ldr	r3, [r3, #8]
      model(m)
 80022b6:	e9c4 6555 	strd	r6, r5, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 80022ba:	4798      	blx	r3
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80022bc:	f7ff ffd8 	bl	8002270 <_ZN8touchgfx3HAL3lcdEv>
 80022c0:	f011 ff15 	bl	80140ee <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 80022c4:	f7ff ffd4 	bl	8002270 <_ZN8touchgfx3HAL3lcdEv>
 80022c8:	f011 ff8c 	bl	80141e4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 80022cc:	4620      	mov	r0, r4
 80022ce:	bd70      	pop	{r4, r5, r6, pc}
 80022d0:	2001384c 	.word	0x2001384c
 80022d4:	0801d7a8 	.word	0x0801d7a8
 80022d8:	0801d790 	.word	0x0801d790
 80022dc:	20013800 	.word	0x20013800

080022e0 <_ZN23FrontendApplicationBase32gotoMenuScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80022e0:	4b06      	ldr	r3, [pc, #24]	@ (80022fc <_ZN23FrontendApplicationBase32gotoMenuScreenScreenNoTransitionEv+0x1c>)
 80022e2:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80022e6:	2300      	movs	r3, #0
 80022e8:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80022ec:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80022f0:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80022f4:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80022f8:	4770      	bx	lr
 80022fa:	bf00      	nop
 80022fc:	08002125 	.word	0x08002125

08002300 <_ZN23FrontendApplicationBase39gotoMenuScreenScreenSlideTransitionEastEv>:
 8002300:	4b06      	ldr	r3, [pc, #24]	@ (800231c <_ZN23FrontendApplicationBase39gotoMenuScreenScreenSlideTransitionEastEv+0x1c>)
 8002302:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002306:	2300      	movs	r3, #0
 8002308:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150

void FrontendApplicationBase::gotoMenuScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMenuScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800230c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002310:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002314:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002318:	4770      	bx	lr
 800231a:	bf00      	nop
 800231c:	080024f1 	.word	0x080024f1

08002320 <_ZN23FrontendApplicationBase39gotoGameScreenScreenSlideTransitionEastEv>:
 8002320:	4b06      	ldr	r3, [pc, #24]	@ (800233c <_ZN23FrontendApplicationBase39gotoGameScreenScreenSlideTransitionEastEv+0x1c>)
 8002322:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002326:	2300      	movs	r3, #0
 8002328:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// GameScreen

void FrontendApplicationBase::gotoGameScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoGameScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800232c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002330:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002334:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002338:	4770      	bx	lr
 800233a:	bf00      	nop
 800233c:	080023b5 	.word	0x080023b5

08002340 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 8002340:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
          relativeValue(0)
 8002344:	4605      	mov	r5, r0
 8002346:	2600      	movs	r6, #0
 8002348:	4b16      	ldr	r3, [pc, #88]	@ (80023a4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x64>)
 800234a:	6046      	str	r6, [r0, #4]
 800234c:	7206      	strb	r6, [r0, #8]
 800234e:	f845 3b0c 	str.w	r3, [r5], #12
    SlideTransition(const uint8_t transitionSteps = 20)
 8002352:	4604      	mov	r4, r0
          snapshot(),
 8002354:	4628      	mov	r0, r5
    SlideTransition(const uint8_t transitionSteps = 20)
 8002356:	460f      	mov	r7, r1
          snapshot(),
 8002358:	f008 fa72 	bl	800a840 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
 800235c:	4b12      	ldr	r3, [pc, #72]	@ (80023a8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x68>)
          animationSteps(transitionSteps),
 800235e:	f884 7038 	strb.w	r7, [r4, #56]	@ 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
 8002362:	781b      	ldrb	r3, [r3, #0]
          animationCounter(0),
 8002364:	f884 6039 	strb.w	r6, [r4, #57]	@ 0x39
          relativeValue(0)
 8002368:	87a6      	strh	r6, [r4, #60]	@ 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
 800236a:	b923      	cbnz	r3, 8002376 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x36>
            done = true;
 800236c:	2301      	movs	r3, #1
 800236e:	7223      	strb	r3, [r4, #8]
    }
 8002370:	4620      	mov	r0, r4
 8002372:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002376:	4b0d      	ldr	r3, [pc, #52]	@ (80023ac <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x6c>)
 8002378:	4f0d      	ldr	r7, [pc, #52]	@ (80023b0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x70>)
 800237a:	f9b3 8000 	ldrsh.w	r8, [r3]
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
    {
        setX(x);
 800237e:	68e3      	ldr	r3, [r4, #12]
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
    {
        setWidth(width);
 8002380:	f9b7 1000 	ldrsh.w	r1, [r7]
 8002384:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
        rect.x = x;
 8002386:	6126      	str	r6, [r4, #16]
        setWidth(width);
 8002388:	4628      	mov	r0, r5
 800238a:	4798      	blx	r3
        setHeight(height);
 800238c:	68e3      	ldr	r3, [r4, #12]
 800238e:	4641      	mov	r1, r8
 8002390:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002392:	4628      	mov	r0, r5
 8002394:	4798      	blx	r3
        snapshot.makeSnapshot();
 8002396:	4628      	mov	r0, r5
 8002398:	f008 f9cd 	bl	800a736 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
 800239c:	883b      	ldrh	r3, [r7, #0]
 800239e:	425b      	negs	r3, r3
 80023a0:	8763      	strh	r3, [r4, #58]	@ 0x3a
            break;
 80023a2:	e7e5      	b.n	8002370 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x30>
 80023a4:	0801d820 	.word	0x0801d820
 80023a8:	200137ff 	.word	0x200137ff
 80023ac:	200137f6 	.word	0x200137f6
 80023b0:	200137f4 	.word	0x200137f4

080023b4 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv>:

void FrontendApplicationBase::gotoGameScreenScreenSlideTransitionEastImpl()
{
 80023b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<GameScreenView, GameScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80023b8:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80023bc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80023be:	68b0      	ldr	r0, [r6, #8]
 80023c0:	6803      	ldr	r3, [r0, #0]
 80023c2:	6a1b      	ldr	r3, [r3, #32]
 80023c4:	4798      	blx	r3
 80023c6:	f241 130f 	movw	r3, #4367	@ 0x110f
 80023ca:	4298      	cmp	r0, r3
 80023cc:	d805      	bhi.n	80023da <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x26>
 80023ce:	4b41      	ldr	r3, [pc, #260]	@ (80024d4 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x120>)
 80023d0:	4a41      	ldr	r2, [pc, #260]	@ (80024d8 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x124>)
 80023d2:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80023d4:	4841      	ldr	r0, [pc, #260]	@ (80024dc <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x128>)
 80023d6:	f019 fa49 	bl	801b86c <__assert_func>
 80023da:	6870      	ldr	r0, [r6, #4]
 80023dc:	6803      	ldr	r3, [r0, #0]
 80023de:	6a1b      	ldr	r3, [r3, #32]
 80023e0:	4798      	blx	r3
 80023e2:	280f      	cmp	r0, #15
 80023e4:	d803      	bhi.n	80023ee <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x3a>
 80023e6:	4b3e      	ldr	r3, [pc, #248]	@ (80024e0 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x12c>)
 80023e8:	4a3b      	ldr	r2, [pc, #236]	@ (80024d8 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x124>)
 80023ea:	21a4      	movs	r1, #164	@ 0xa4
 80023ec:	e7f2      	b.n	80023d4 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80023ee:	68f0      	ldr	r0, [r6, #12]
 80023f0:	6803      	ldr	r3, [r0, #0]
 80023f2:	6a1b      	ldr	r3, [r3, #32]
 80023f4:	4798      	blx	r3
 80023f6:	283f      	cmp	r0, #63	@ 0x3f
 80023f8:	d803      	bhi.n	8002402 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x4e>
 80023fa:	4b3a      	ldr	r3, [pc, #232]	@ (80024e4 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x130>)
 80023fc:	4a36      	ldr	r2, [pc, #216]	@ (80024d8 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x124>)
 80023fe:	21a5      	movs	r1, #165	@ 0xa5
 8002400:	e7e8      	b.n	80023d4 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8002402:	f009 ff09 	bl	800c218 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002406:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 80024e8 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x134>
 800240a:	3004      	adds	r0, #4
 800240c:	f009 ff42 	bl	800c294 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002410:	f8d9 0000 	ldr.w	r0, [r9]
 8002414:	b110      	cbz	r0, 800241c <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8002416:	6803      	ldr	r3, [r0, #0]
 8002418:	68db      	ldr	r3, [r3, #12]
 800241a:	4798      	blx	r3
    if (*currentTrans)
 800241c:	f8d9 0000 	ldr.w	r0, [r9]
 8002420:	b110      	cbz	r0, 8002428 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8002422:	6803      	ldr	r3, [r0, #0]
 8002424:	681b      	ldr	r3, [r3, #0]
 8002426:	4798      	blx	r3
    if (*currentScreen)
 8002428:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 80024ec <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x138>
 800242c:	f8d8 0000 	ldr.w	r0, [r8]
 8002430:	b110      	cbz	r0, 8002438 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8002432:	6803      	ldr	r3, [r0, #0]
 8002434:	695b      	ldr	r3, [r3, #20]
 8002436:	4798      	blx	r3
    if (*currentPresenter)
 8002438:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800243c:	b110      	cbz	r0, 8002444 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800243e:	6803      	ldr	r3, [r0, #0]
 8002440:	685b      	ldr	r3, [r3, #4]
 8002442:	4798      	blx	r3
    if (*currentScreen)
 8002444:	f8d8 0000 	ldr.w	r0, [r8]
 8002448:	b110      	cbz	r0, 8002450 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800244a:	6803      	ldr	r3, [r0, #0]
 800244c:	681b      	ldr	r3, [r3, #0]
 800244e:	4798      	blx	r3
    if (*currentPresenter)
 8002450:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002454:	b110      	cbz	r0, 800245c <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8002456:	6803      	ldr	r3, [r0, #0]
 8002458:	689b      	ldr	r3, [r3, #8]
 800245a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800245c:	68f0      	ldr	r0, [r6, #12]
 800245e:	6803      	ldr	r3, [r0, #0]
 8002460:	2100      	movs	r1, #0
 8002462:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002464:	4798      	blx	r3
 8002466:	2114      	movs	r1, #20
 8002468:	4604      	mov	r4, r0
 800246a:	f7ff ff69 	bl	8002340 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800246e:	68b0      	ldr	r0, [r6, #8]
 8002470:	6803      	ldr	r3, [r0, #0]
 8002472:	2100      	movs	r1, #0
 8002474:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002476:	4798      	blx	r3
 8002478:	4605      	mov	r5, r0
 800247a:	f001 f8e7 	bl	800364c <_ZN14GameScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800247e:	6870      	ldr	r0, [r6, #4]
 8002480:	6803      	ldr	r3, [r0, #0]
 8002482:	2100      	movs	r1, #0
 8002484:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002486:	4798      	blx	r3
 8002488:	4629      	mov	r1, r5
 800248a:	4606      	mov	r6, r0
 800248c:	f001 f89c 	bl	80035c8 <_ZN19GameScreenPresenterC1ER14GameScreenView>
    model->bind(newPresenter);
 8002490:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002492:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8002496:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 800249a:	f8c8 5000 	str.w	r5, [r8]
 800249e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80024a2:	682b      	ldr	r3, [r5, #0]
 80024a4:	f8c6 a008 	str.w	sl, [r6, #8]
 80024a8:	4628      	mov	r0, r5
 80024aa:	68db      	ldr	r3, [r3, #12]
 80024ac:	63ee      	str	r6, [r5, #60]	@ 0x3c
 80024ae:	4798      	blx	r3
    newPresenter->activate();
 80024b0:	6833      	ldr	r3, [r6, #0]
 80024b2:	4630      	mov	r0, r6
 80024b4:	681b      	ldr	r3, [r3, #0]
 80024b6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80024b8:	4621      	mov	r1, r4
 80024ba:	4628      	mov	r0, r5
 80024bc:	f00b fa26 	bl	800d90c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80024c0:	6823      	ldr	r3, [r4, #0]
 80024c2:	4620      	mov	r0, r4
 80024c4:	691b      	ldr	r3, [r3, #16]
 80024c6:	4798      	blx	r3
    newTransition->invalidate();
 80024c8:	6823      	ldr	r3, [r4, #0]
 80024ca:	4620      	mov	r0, r4
 80024cc:	695b      	ldr	r3, [r3, #20]
}
 80024ce:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80024d2:	4718      	bx	r3
 80024d4:	0801d2bc 	.word	0x0801d2bc
 80024d8:	0801d5af 	.word	0x0801d5af
 80024dc:	0801d422 	.word	0x0801d422
 80024e0:	0801d469 	.word	0x0801d469
 80024e4:	0801d50c 	.word	0x0801d50c
 80024e8:	20013840 	.word	0x20013840
 80024ec:	2001383c 	.word	0x2001383c

080024f0 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv>:
{
 80024f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MenuScreenView, MenuScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80024f4:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80024f8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80024fa:	68b0      	ldr	r0, [r6, #8]
 80024fc:	6803      	ldr	r3, [r0, #0]
 80024fe:	6a1b      	ldr	r3, [r3, #32]
 8002500:	4798      	blx	r3
 8002502:	f5b0 7f9c 	cmp.w	r0, #312	@ 0x138
 8002506:	d205      	bcs.n	8002514 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x24>
 8002508:	4b41      	ldr	r3, [pc, #260]	@ (8002610 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x120>)
 800250a:	4a42      	ldr	r2, [pc, #264]	@ (8002614 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x124>)
 800250c:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800250e:	4842      	ldr	r0, [pc, #264]	@ (8002618 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x128>)
 8002510:	f019 f9ac 	bl	801b86c <__assert_func>
 8002514:	6870      	ldr	r0, [r6, #4]
 8002516:	6803      	ldr	r3, [r0, #0]
 8002518:	6a1b      	ldr	r3, [r3, #32]
 800251a:	4798      	blx	r3
 800251c:	280f      	cmp	r0, #15
 800251e:	d803      	bhi.n	8002528 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x38>
 8002520:	4b3e      	ldr	r3, [pc, #248]	@ (800261c <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x12c>)
 8002522:	4a3c      	ldr	r2, [pc, #240]	@ (8002614 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x124>)
 8002524:	21a4      	movs	r1, #164	@ 0xa4
 8002526:	e7f2      	b.n	800250e <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002528:	68f0      	ldr	r0, [r6, #12]
 800252a:	6803      	ldr	r3, [r0, #0]
 800252c:	6a1b      	ldr	r3, [r3, #32]
 800252e:	4798      	blx	r3
 8002530:	283f      	cmp	r0, #63	@ 0x3f
 8002532:	d803      	bhi.n	800253c <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x4c>
 8002534:	4b3a      	ldr	r3, [pc, #232]	@ (8002620 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x130>)
 8002536:	4a37      	ldr	r2, [pc, #220]	@ (8002614 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x124>)
 8002538:	21a5      	movs	r1, #165	@ 0xa5
 800253a:	e7e8      	b.n	800250e <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800253c:	f009 fe6c 	bl	800c218 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002540:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 8002624 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x134>
 8002544:	3004      	adds	r0, #4
 8002546:	f009 fea5 	bl	800c294 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800254a:	f8d9 0000 	ldr.w	r0, [r9]
 800254e:	b110      	cbz	r0, 8002556 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8002550:	6803      	ldr	r3, [r0, #0]
 8002552:	68db      	ldr	r3, [r3, #12]
 8002554:	4798      	blx	r3
    if (*currentTrans)
 8002556:	f8d9 0000 	ldr.w	r0, [r9]
 800255a:	b110      	cbz	r0, 8002562 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800255c:	6803      	ldr	r3, [r0, #0]
 800255e:	681b      	ldr	r3, [r3, #0]
 8002560:	4798      	blx	r3
    if (*currentScreen)
 8002562:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 8002628 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x138>
 8002566:	f8d8 0000 	ldr.w	r0, [r8]
 800256a:	b110      	cbz	r0, 8002572 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800256c:	6803      	ldr	r3, [r0, #0]
 800256e:	695b      	ldr	r3, [r3, #20]
 8002570:	4798      	blx	r3
    if (*currentPresenter)
 8002572:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002576:	b110      	cbz	r0, 800257e <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002578:	6803      	ldr	r3, [r0, #0]
 800257a:	685b      	ldr	r3, [r3, #4]
 800257c:	4798      	blx	r3
    if (*currentScreen)
 800257e:	f8d8 0000 	ldr.w	r0, [r8]
 8002582:	b110      	cbz	r0, 800258a <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002584:	6803      	ldr	r3, [r0, #0]
 8002586:	681b      	ldr	r3, [r3, #0]
 8002588:	4798      	blx	r3
    if (*currentPresenter)
 800258a:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800258e:	b110      	cbz	r0, 8002596 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002590:	6803      	ldr	r3, [r0, #0]
 8002592:	689b      	ldr	r3, [r3, #8]
 8002594:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002596:	68f0      	ldr	r0, [r6, #12]
 8002598:	6803      	ldr	r3, [r0, #0]
 800259a:	2100      	movs	r1, #0
 800259c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800259e:	4798      	blx	r3
 80025a0:	2114      	movs	r1, #20
 80025a2:	4604      	mov	r4, r0
 80025a4:	f7ff fecc 	bl	8002340 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80025a8:	68b0      	ldr	r0, [r6, #8]
 80025aa:	6803      	ldr	r3, [r0, #0]
 80025ac:	2100      	movs	r1, #0
 80025ae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80025b0:	4798      	blx	r3
 80025b2:	4605      	mov	r5, r0
 80025b4:	f001 fcc2 	bl	8003f3c <_ZN14MenuScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80025b8:	6870      	ldr	r0, [r6, #4]
 80025ba:	6803      	ldr	r3, [r0, #0]
 80025bc:	2100      	movs	r1, #0
 80025be:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80025c0:	4798      	blx	r3
 80025c2:	4629      	mov	r1, r5
 80025c4:	4606      	mov	r6, r0
 80025c6:	f001 fc97 	bl	8003ef8 <_ZN19MenuScreenPresenterC1ER14MenuScreenView>
    model->bind(newPresenter);
 80025ca:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 80025cc:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 80025d0:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 80025d4:	f8c8 5000 	str.w	r5, [r8]
 80025d8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80025dc:	682b      	ldr	r3, [r5, #0]
 80025de:	f8c6 a008 	str.w	sl, [r6, #8]
 80025e2:	4628      	mov	r0, r5
 80025e4:	68db      	ldr	r3, [r3, #12]
 80025e6:	63ee      	str	r6, [r5, #60]	@ 0x3c
 80025e8:	4798      	blx	r3
    newPresenter->activate();
 80025ea:	6833      	ldr	r3, [r6, #0]
 80025ec:	4630      	mov	r0, r6
 80025ee:	681b      	ldr	r3, [r3, #0]
 80025f0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80025f2:	4621      	mov	r1, r4
 80025f4:	4628      	mov	r0, r5
 80025f6:	f00b f989 	bl	800d90c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80025fa:	6823      	ldr	r3, [r4, #0]
 80025fc:	4620      	mov	r0, r4
 80025fe:	691b      	ldr	r3, [r3, #16]
 8002600:	4798      	blx	r3
    newTransition->invalidate();
 8002602:	6823      	ldr	r3, [r4, #0]
 8002604:	4620      	mov	r0, r4
 8002606:	695b      	ldr	r3, [r3, #20]
}
 8002608:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800260c:	4718      	bx	r3
 800260e:	bf00      	nop
 8002610:	0801d2bc 	.word	0x0801d2bc
 8002614:	0801d69a 	.word	0x0801d69a
 8002618:	0801d422 	.word	0x0801d422
 800261c:	0801d469 	.word	0x0801d469
 8002620:	0801d50c 	.word	0x0801d50c
 8002624:	20013840 	.word	0x20013840
 8002628:	2001383c 	.word	0x2001383c

0800262c <_ZN8touchgfx8Drawable13getFirstChildEv>:
    }
 800262c:	2000      	movs	r0, #0
 800262e:	4770      	bx	lr

08002630 <_ZN8touchgfx8Drawable4setXEs>:
        rect.x = x;
 8002630:	8081      	strh	r1, [r0, #4]
    }
 8002632:	4770      	bx	lr

08002634 <_ZN8touchgfx8Drawable4setYEs>:
        rect.y = y;
 8002634:	80c1      	strh	r1, [r0, #6]
    }
 8002636:	4770      	bx	lr

08002638 <_ZN8touchgfx8Drawable8setWidthEs>:
        rect.width = width;
 8002638:	8101      	strh	r1, [r0, #8]
    }
 800263a:	4770      	bx	lr

0800263c <_ZN8touchgfx8Drawable9setHeightEs>:
        rect.height = height;
 800263c:	8141      	strh	r1, [r0, #10]
    }
 800263e:	4770      	bx	lr

08002640 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    }
 8002640:	4770      	bx	lr

08002642 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
    }
 8002642:	4770      	bx	lr

08002644 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
    }
 8002644:	4770      	bx	lr

08002646 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8002646:	4770      	bx	lr

08002648 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002648:	4770      	bx	lr

0800264a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800264a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 800264c:	88c4      	ldrh	r4, [r0, #6]
 800264e:	6803      	ldr	r3, [r0, #0]
 8002650:	1b12      	subs	r2, r2, r4
 8002652:	8884      	ldrh	r4, [r0, #4]
 8002654:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002656:	1b09      	subs	r1, r1, r4
 8002658:	b212      	sxth	r2, r2
    }
 800265a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800265e:	b209      	sxth	r1, r1
 8002660:	4718      	bx	r3

08002662 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002662:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002666:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002668:	f04f 33ff 	mov.w	r3, #4294967295
 800266c:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800266e:	6813      	ldr	r3, [r2, #0]
 8002670:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002672:	6010      	str	r0, [r2, #0]
    }
 8002674:	4770      	bx	lr

08002676 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002676:	4770      	bx	lr

08002678 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002678:	4770      	bx	lr

0800267a <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800267a:	4770      	bx	lr

0800267c <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 800267c:	4770      	bx	lr

0800267e <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800267e:	4770      	bx	lr

08002680 <_ZN18GameScreenViewBaseD1Ev>:
}

GameScreenViewBase::~GameScreenViewBase()
{

}
 8002680:	4770      	bx	lr

08002682 <_ZN18GameScreenViewBase11setupScreenEv>:

void GameScreenViewBase::setupScreen()
{

}
 8002682:	4770      	bx	lr

08002684 <_ZN8touchgfx8CallbackI18GameScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002684:	4770      	bx	lr

08002686 <_ZN8touchgfx8CallbackI18GameScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002686:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002688:	68c2      	ldr	r2, [r0, #12]
 800268a:	6844      	ldr	r4, [r0, #4]
 800268c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800268e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002690:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002694:	07d2      	lsls	r2, r2, #31
 8002696:	bf48      	it	mi
 8002698:	5962      	ldrmi	r2, [r4, r5]
 800269a:	689b      	ldr	r3, [r3, #8]
    }
 800269c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800269e:	bf48      	it	mi
 80026a0:	58d3      	ldrmi	r3, [r2, r3]
 80026a2:	4718      	bx	r3

080026a4 <_ZNK8touchgfx8CallbackI18GameScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 80026a4:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 80026a6:	6840      	ldr	r0, [r0, #4]
 80026a8:	b130      	cbz	r0, 80026b8 <_ZNK8touchgfx8CallbackI18GameScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80026aa:	689a      	ldr	r2, [r3, #8]
 80026ac:	b91a      	cbnz	r2, 80026b6 <_ZNK8touchgfx8CallbackI18GameScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 80026ae:	68d8      	ldr	r0, [r3, #12]
 80026b0:	f000 0001 	and.w	r0, r0, #1
 80026b4:	4770      	bx	lr
 80026b6:	2001      	movs	r0, #1
    }
 80026b8:	4770      	bx	lr

080026ba <_ZN8touchgfx8CallbackI18GameScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80026ba:	b510      	push	{r4, lr}
 80026bc:	2110      	movs	r1, #16
 80026be:	4604      	mov	r4, r0
 80026c0:	f019 f8a6 	bl	801b810 <_ZdlPvj>
 80026c4:	4620      	mov	r0, r4
 80026c6:	bd10      	pop	{r4, pc}

080026c8 <_ZN18GameScreenViewBaseD0Ev>:
GameScreenViewBase::~GameScreenViewBase()
 80026c8:	b510      	push	{r4, lr}
}
 80026ca:	f44f 610b 	mov.w	r1, #2224	@ 0x8b0
GameScreenViewBase::~GameScreenViewBase()
 80026ce:	4604      	mov	r4, r0
}
 80026d0:	f019 f89e 	bl	801b810 <_ZdlPvj>
 80026d4:	4620      	mov	r0, r4
 80026d6:	bd10      	pop	{r4, pc}

080026d8 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80026d8:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80026dc:	b112      	cbz	r2, 80026e4 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80026de:	6803      	ldr	r3, [r0, #0]
 80026e0:	695b      	ldr	r3, [r3, #20]
 80026e2:	4718      	bx	r3
    }
 80026e4:	4770      	bx	lr

080026e6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80026e6:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80026ea:	b11a      	cbz	r2, 80026f4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80026ec:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 80026f0:	b102      	cbz	r2, 80026f4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80026f2:	6018      	str	r0, [r3, #0]
        }
    }
 80026f4:	4770      	bx	lr

080026f6 <_ZN18GameScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void GameScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80026f6:	b538      	push	{r3, r4, r5, lr}
    if (&src == &menu_button)
 80026f8:	f500 7314 	add.w	r3, r0, #592	@ 0x250
 80026fc:	4299      	cmp	r1, r3
{
 80026fe:	4604      	mov	r4, r0
 8002700:	460d      	mov	r5, r1
    if (&src == &menu_button)
 8002702:	d103      	bne.n	800270c <_ZN18GameScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~GameScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002704:	f009 fd88 	bl	800c218 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When menu_button clicked change screen to MenuScreen
        //Go to MenuScreen with screen transition towards East
        application().gotoMenuScreenScreenSlideTransitionEast();
 8002708:	f7ff fdfa 	bl	8002300 <_ZN23FrontendApplicationBase39gotoMenuScreenScreenSlideTransitionEastEv>
    }
    if (&src == &button1)
 800270c:	f604 046c 	addw	r4, r4, #2156	@ 0x86c
 8002710:	42a5      	cmp	r5, r4
 8002712:	d105      	bne.n	8002720 <_ZN18GameScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2a>
 8002714:	f009 fd80 	bl	800c218 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction2
        //When button1 clicked change screen to MenuScreen
        //Go to MenuScreen with screen transition towards East
        application().gotoMenuScreenScreenSlideTransitionEast();
    }
}
 8002718:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMenuScreenScreenSlideTransitionEast();
 800271c:	f7ff bdf0 	b.w	8002300 <_ZN23FrontendApplicationBase39gotoMenuScreenScreenSlideTransitionEastEv>
}
 8002720:	bd38      	pop	{r3, r4, r5, pc}

08002722 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002722:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002724:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002726:	4604      	mov	r4, r0
        setX(x);
 8002728:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setXY(int16_t x, int16_t y)
 800272a:	4615      	mov	r5, r2
        setX(x);
 800272c:	4798      	blx	r3
        setY(y);
 800272e:	6823      	ldr	r3, [r4, #0]
 8002730:	4629      	mov	r1, r5
 8002732:	4620      	mov	r0, r4
 8002734:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
 8002736:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 800273a:	4718      	bx	r3

0800273c <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800273c:	b570      	push	{r4, r5, r6, lr}
 800273e:	4604      	mov	r4, r0
 8002740:	461d      	mov	r5, r3
 8002742:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002746:	f7ff ffec 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800274a:	6823      	ldr	r3, [r4, #0]
 800274c:	4629      	mov	r1, r5
 800274e:	4620      	mov	r0, r4
 8002750:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002752:	4798      	blx	r3
        setHeight(height);
 8002754:	6823      	ldr	r3, [r4, #0]
 8002756:	4631      	mov	r1, r6
 8002758:	4620      	mov	r0, r4
 800275a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 800275c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002760:	4718      	bx	r3
	...

08002764 <_ZN8touchgfx6WidgetC1Ev>:
 8002764:	2200      	movs	r2, #0
 8002766:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800276a:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 800276e:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002772:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8002776:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800277a:	8482      	strh	r2, [r0, #36]	@ 0x24
class Widget : public Drawable
 800277c:	4a01      	ldr	r2, [pc, #4]	@ (8002784 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800277e:	6002      	str	r2, [r0, #0]
 8002780:	4770      	bx	lr
 8002782:	bf00      	nop
 8002784:	0801d844 	.word	0x0801d844

08002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 8002788:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 800278a:	2226      	movs	r2, #38	@ 0x26
    Image(const Bitmap& bmp = Bitmap())
 800278c:	4604      	mov	r4, r0
 800278e:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8002790:	2100      	movs	r1, #0
 8002792:	f019 fa72 	bl	801bc7a <memset>
 8002796:	4620      	mov	r0, r4
 8002798:	f7ff ffe4 	bl	8002764 <_ZN8touchgfx6WidgetC1Ev>
 800279c:	4b06      	ldr	r3, [pc, #24]	@ (80027b8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 800279e:	6023      	str	r3, [r4, #0]
 80027a0:	882b      	ldrh	r3, [r5, #0]
 80027a2:	84e3      	strh	r3, [r4, #38]	@ 0x26
 80027a4:	23ff      	movs	r3, #255	@ 0xff
    {
        Image::setBitmap(bmp);
 80027a6:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 80027a8:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
        Image::setBitmap(bmp);
 80027ac:	4629      	mov	r1, r5
 80027ae:	f008 fc6a 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 80027b2:	4620      	mov	r0, r4
 80027b4:	bd38      	pop	{r3, r4, r5, pc}
 80027b6:	bf00      	nop
 80027b8:	0801de1c 	.word	0x0801de1c

080027bc <_ZN8touchgfx6ButtonC1Ev>:
 * pressed state.
 */
class Button : public AbstractButton
{
public:
    Button()
 80027bc:	b510      	push	{r4, lr}
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 80027be:	2226      	movs	r2, #38	@ 0x26
 80027c0:	4604      	mov	r4, r0
 80027c2:	2100      	movs	r1, #0
 80027c4:	f019 fa59 	bl	801bc7a <memset>
 80027c8:	4620      	mov	r0, r4
 80027ca:	f7ff ffcb 	bl	8002764 <_ZN8touchgfx6WidgetC1Ev>
 80027ce:	2300      	movs	r3, #0
 80027d0:	62a3      	str	r3, [r4, #40]	@ 0x28
 80027d2:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
        touchable = touch;
 80027d6:	2301      	movs	r3, #1
 80027d8:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
        : AbstractButton(), up(), down(), alpha(255)
 80027dc:	4b04      	ldr	r3, [pc, #16]	@ (80027f0 <_ZN8touchgfx6ButtonC1Ev+0x34>)
 80027de:	6023      	str	r3, [r4, #0]
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80027e0:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80027e4:	f884 3032 	strb.w	r3, [r4, #50]	@ 0x32
 80027e8:	85e3      	strh	r3, [r4, #46]	@ 0x2e
 80027ea:	8623      	strh	r3, [r4, #48]	@ 0x30
    {
    }
 80027ec:	4620      	mov	r0, r4
 80027ee:	bd10      	pop	{r4, pc}
 80027f0:	0801dda8 	.word	0x0801dda8

080027f4 <_ZN18GameScreenViewBaseC1Ev>:
GameScreenViewBase::GameScreenViewBase() :
 80027f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80027f8:	4604      	mov	r4, r0
 80027fa:	b0b1      	sub	sp, #196	@ 0xc4
    buttonCallback(this, &GameScreenViewBase::buttonCallbackHandler)
 80027fc:	4627      	mov	r7, r4
        : presenter(0)
 80027fe:	2500      	movs	r5, #0
 8002800:	f00a fed8 	bl	800d5b4 <_ZN8touchgfx6ScreenC1Ev>
 8002804:	4bd1      	ldr	r3, [pc, #836]	@ (8002b4c <_ZN18GameScreenViewBaseC1Ev+0x358>)
 8002806:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8002808:	f847 3b40 	str.w	r3, [r7], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 800280c:	2226      	movs	r2, #38	@ 0x26
 800280e:	4629      	mov	r1, r5
 8002810:	4638      	mov	r0, r7
 8002812:	f019 fa32 	bl	801bc7a <memset>
 8002816:	4638      	mov	r0, r7
 8002818:	f7ff ffa4 	bl	8002764 <_ZN8touchgfx6WidgetC1Ev>
 800281c:	4bcc      	ldr	r3, [pc, #816]	@ (8002b50 <_ZN18GameScreenViewBaseC1Ev+0x35c>)
 800281e:	6423      	str	r3, [r4, #64]	@ 0x40
 8002820:	23ff      	movs	r3, #255	@ 0xff
 8002822:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
 8002826:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 800282a:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800282e:	a92f      	add	r1, sp, #188	@ 0xbc
        : color(col)
 8002830:	66a5      	str	r5, [r4, #104]	@ 0x68
 8002832:	4618      	mov	r0, r3
 8002834:	9308      	str	r3, [sp, #32]
 8002836:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 800283a:	f7ff ffa5 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800283e:	f104 0398 	add.w	r3, r4, #152	@ 0x98
 8002842:	f104 09c4 	add.w	r9, r4, #196	@ 0xc4
 8002846:	4618      	mov	r0, r3
 8002848:	a92f      	add	r1, sp, #188	@ 0xbc
 800284a:	f104 08f0 	add.w	r8, r4, #240	@ 0xf0
 800284e:	9309      	str	r3, [sp, #36]	@ 0x24
 8002850:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002854:	f7ff ff98 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002858:	a92f      	add	r1, sp, #188	@ 0xbc
 800285a:	4648      	mov	r0, r9
 800285c:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002860:	f008 f93a 	bl	800aad8 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8002864:	a92f      	add	r1, sp, #188	@ 0xbc
 8002866:	4640      	mov	r0, r8
 8002868:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 800286c:	f008 f934 	bl	800aad8 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8002870:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8002874:	a92f      	add	r1, sp, #188	@ 0xbc
 8002876:	4618      	mov	r0, r3
 8002878:	9303      	str	r3, [sp, #12]
 800287a:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 800287e:	f008 f92b 	bl	800aad8 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8002882:	f504 73a4 	add.w	r3, r4, #328	@ 0x148
 8002886:	a92f      	add	r1, sp, #188	@ 0xbc
 8002888:	4618      	mov	r0, r3
 800288a:	9304      	str	r3, [sp, #16]
 800288c:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002890:	f008 f922 	bl	800aad8 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8002894:	f504 73ba 	add.w	r3, r4, #372	@ 0x174
 8002898:	a92f      	add	r1, sp, #188	@ 0xbc
 800289a:	4618      	mov	r0, r3
 800289c:	9305      	str	r3, [sp, #20]
 800289e:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 80028a2:	f008 f919 	bl	800aad8 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80028a6:	f504 73d0 	add.w	r3, r4, #416	@ 0x1a0
 80028aa:	f504 7be6 	add.w	fp, r4, #460	@ 0x1cc
 80028ae:	4618      	mov	r0, r3
 80028b0:	a92f      	add	r1, sp, #188	@ 0xbc
 80028b2:	f504 7afc 	add.w	sl, r4, #504	@ 0x1f8
 80028b6:	9306      	str	r3, [sp, #24]
 80028b8:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 80028bc:	f008 f90c 	bl	800aad8 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80028c0:	a92f      	add	r1, sp, #188	@ 0xbc
 80028c2:	4658      	mov	r0, fp
 80028c4:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 80028c8:	f008 f906 	bl	800aad8 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80028cc:	a92f      	add	r1, sp, #188	@ 0xbc
 80028ce:	4650      	mov	r0, sl
 80028d0:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 80028d4:	f008 f900 	bl	800aad8 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80028d8:	f504 7309 	add.w	r3, r4, #548	@ 0x224
 80028dc:	a92f      	add	r1, sp, #188	@ 0xbc
 80028de:	4618      	mov	r0, r3
 80028e0:	930a      	str	r3, [sp, #40]	@ 0x28
 80028e2:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 80028e6:	f7ff ff4f 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80028ea:	f504 7314 	add.w	r3, r4, #592	@ 0x250
 80028ee:	4618      	mov	r0, r3
 80028f0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80028f2:	f7ff ff63 	bl	80027bc <_ZN8touchgfx6ButtonC1Ev>
 80028f6:	f504 7321 	add.w	r3, r4, #644	@ 0x284
 80028fa:	a92f      	add	r1, sp, #188	@ 0xbc
 80028fc:	4618      	mov	r0, r3
 80028fe:	930c      	str	r3, [sp, #48]	@ 0x30
 8002900:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002904:	f7ff ff40 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002908:	f504 732c 	add.w	r3, r4, #688	@ 0x2b0
 800290c:	a92f      	add	r1, sp, #188	@ 0xbc
 800290e:	4618      	mov	r0, r3
 8002910:	930d      	str	r3, [sp, #52]	@ 0x34
 8002912:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002916:	f7ff ff37 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800291a:	f504 7337 	add.w	r3, r4, #732	@ 0x2dc
 800291e:	a92f      	add	r1, sp, #188	@ 0xbc
 8002920:	4618      	mov	r0, r3
 8002922:	930e      	str	r3, [sp, #56]	@ 0x38
 8002924:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002928:	f7ff ff2e 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800292c:	f504 7342 	add.w	r3, r4, #776	@ 0x308
 8002930:	a92f      	add	r1, sp, #188	@ 0xbc
 8002932:	4618      	mov	r0, r3
 8002934:	930f      	str	r3, [sp, #60]	@ 0x3c
 8002936:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 800293a:	f7ff ff25 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800293e:	f504 734d 	add.w	r3, r4, #820	@ 0x334
 8002942:	a92f      	add	r1, sp, #188	@ 0xbc
 8002944:	4618      	mov	r0, r3
 8002946:	9310      	str	r3, [sp, #64]	@ 0x40
 8002948:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 800294c:	f7ff ff1c 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002950:	f504 7358 	add.w	r3, r4, #864	@ 0x360
 8002954:	a92f      	add	r1, sp, #188	@ 0xbc
 8002956:	4618      	mov	r0, r3
 8002958:	9311      	str	r3, [sp, #68]	@ 0x44
 800295a:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 800295e:	f7ff ff13 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002962:	f504 7363 	add.w	r3, r4, #908	@ 0x38c
 8002966:	a92f      	add	r1, sp, #188	@ 0xbc
 8002968:	4618      	mov	r0, r3
 800296a:	9312      	str	r3, [sp, #72]	@ 0x48
 800296c:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002970:	f7ff ff0a 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002974:	f504 736e 	add.w	r3, r4, #952	@ 0x3b8
 8002978:	a92f      	add	r1, sp, #188	@ 0xbc
 800297a:	4618      	mov	r0, r3
 800297c:	9313      	str	r3, [sp, #76]	@ 0x4c
 800297e:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002982:	f7ff ff01 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002986:	f504 7379 	add.w	r3, r4, #996	@ 0x3e4
 800298a:	a92f      	add	r1, sp, #188	@ 0xbc
 800298c:	4618      	mov	r0, r3
 800298e:	9314      	str	r3, [sp, #80]	@ 0x50
 8002990:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002994:	f7ff fef8 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002998:	f504 6382 	add.w	r3, r4, #1040	@ 0x410
 800299c:	a92f      	add	r1, sp, #188	@ 0xbc
 800299e:	4618      	mov	r0, r3
 80029a0:	9315      	str	r3, [sp, #84]	@ 0x54
 80029a2:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 80029a6:	f7ff feef 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80029aa:	f204 433c 	addw	r3, r4, #1084	@ 0x43c
 80029ae:	a92f      	add	r1, sp, #188	@ 0xbc
 80029b0:	4618      	mov	r0, r3
 80029b2:	9316      	str	r3, [sp, #88]	@ 0x58
 80029b4:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 80029b8:	f7ff fee6 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80029bc:	f504 638d 	add.w	r3, r4, #1128	@ 0x468
 80029c0:	a92f      	add	r1, sp, #188	@ 0xbc
 80029c2:	4618      	mov	r0, r3
 80029c4:	9317      	str	r3, [sp, #92]	@ 0x5c
 80029c6:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 80029ca:	f7ff fedd 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80029ce:	f204 4394 	addw	r3, r4, #1172	@ 0x494
 80029d2:	a92f      	add	r1, sp, #188	@ 0xbc
 80029d4:	4618      	mov	r0, r3
 80029d6:	9318      	str	r3, [sp, #96]	@ 0x60
 80029d8:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 80029dc:	f7ff fed4 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80029e0:	f504 6398 	add.w	r3, r4, #1216	@ 0x4c0
 80029e4:	a92f      	add	r1, sp, #188	@ 0xbc
 80029e6:	4618      	mov	r0, r3
 80029e8:	9319      	str	r3, [sp, #100]	@ 0x64
 80029ea:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 80029ee:	f7ff fecb 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80029f2:	f204 43ec 	addw	r3, r4, #1260	@ 0x4ec
 80029f6:	a92f      	add	r1, sp, #188	@ 0xbc
 80029f8:	4618      	mov	r0, r3
 80029fa:	931a      	str	r3, [sp, #104]	@ 0x68
 80029fc:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002a00:	f7ff fec2 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002a04:	f504 63a3 	add.w	r3, r4, #1304	@ 0x518
 8002a08:	a92f      	add	r1, sp, #188	@ 0xbc
 8002a0a:	4618      	mov	r0, r3
 8002a0c:	931b      	str	r3, [sp, #108]	@ 0x6c
 8002a0e:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002a12:	f7ff feb9 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002a16:	f204 5344 	addw	r3, r4, #1348	@ 0x544
 8002a1a:	a92f      	add	r1, sp, #188	@ 0xbc
 8002a1c:	4618      	mov	r0, r3
 8002a1e:	931c      	str	r3, [sp, #112]	@ 0x70
 8002a20:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002a24:	f7ff feb0 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002a28:	f504 63ae 	add.w	r3, r4, #1392	@ 0x570
 8002a2c:	a92f      	add	r1, sp, #188	@ 0xbc
 8002a2e:	4618      	mov	r0, r3
 8002a30:	931d      	str	r3, [sp, #116]	@ 0x74
 8002a32:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002a36:	f7ff fea7 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002a3a:	f204 539c 	addw	r3, r4, #1436	@ 0x59c
 8002a3e:	a92f      	add	r1, sp, #188	@ 0xbc
 8002a40:	4618      	mov	r0, r3
 8002a42:	931e      	str	r3, [sp, #120]	@ 0x78
 8002a44:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002a48:	f7ff fe9e 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002a4c:	f504 63b9 	add.w	r3, r4, #1480	@ 0x5c8
 8002a50:	a92f      	add	r1, sp, #188	@ 0xbc
 8002a52:	4618      	mov	r0, r3
 8002a54:	931f      	str	r3, [sp, #124]	@ 0x7c
 8002a56:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002a5a:	f7ff fe95 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002a5e:	f204 53f4 	addw	r3, r4, #1524	@ 0x5f4
 8002a62:	a92f      	add	r1, sp, #188	@ 0xbc
 8002a64:	4618      	mov	r0, r3
 8002a66:	9320      	str	r3, [sp, #128]	@ 0x80
 8002a68:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002a6c:	f7ff fe8c 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002a70:	f504 63c4 	add.w	r3, r4, #1568	@ 0x620
 8002a74:	a92f      	add	r1, sp, #188	@ 0xbc
 8002a76:	4618      	mov	r0, r3
 8002a78:	9321      	str	r3, [sp, #132]	@ 0x84
 8002a7a:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002a7e:	f7ff fe83 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002a82:	f204 634c 	addw	r3, r4, #1612	@ 0x64c
 8002a86:	a92f      	add	r1, sp, #188	@ 0xbc
 8002a88:	4618      	mov	r0, r3
 8002a8a:	9322      	str	r3, [sp, #136]	@ 0x88
 8002a8c:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002a90:	f7ff fe7a 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002a94:	f504 63cf 	add.w	r3, r4, #1656	@ 0x678
 8002a98:	a92f      	add	r1, sp, #188	@ 0xbc
 8002a9a:	4618      	mov	r0, r3
 8002a9c:	9323      	str	r3, [sp, #140]	@ 0x8c
 8002a9e:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002aa2:	f7ff fe71 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002aa6:	f204 63a4 	addw	r3, r4, #1700	@ 0x6a4
 8002aaa:	a92f      	add	r1, sp, #188	@ 0xbc
 8002aac:	4618      	mov	r0, r3
 8002aae:	9324      	str	r3, [sp, #144]	@ 0x90
 8002ab0:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002ab4:	f7ff fe68 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002ab8:	f504 63da 	add.w	r3, r4, #1744	@ 0x6d0
 8002abc:	a92f      	add	r1, sp, #188	@ 0xbc
 8002abe:	4618      	mov	r0, r3
 8002ac0:	9325      	str	r3, [sp, #148]	@ 0x94
 8002ac2:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002ac6:	f7ff fe5f 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002aca:	f204 63fc 	addw	r3, r4, #1788	@ 0x6fc
 8002ace:	a92f      	add	r1, sp, #188	@ 0xbc
 8002ad0:	4618      	mov	r0, r3
 8002ad2:	9326      	str	r3, [sp, #152]	@ 0x98
 8002ad4:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002ad8:	f7ff fe56 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002adc:	f504 63e5 	add.w	r3, r4, #1832	@ 0x728
 8002ae0:	a92f      	add	r1, sp, #188	@ 0xbc
 8002ae2:	4618      	mov	r0, r3
 8002ae4:	9327      	str	r3, [sp, #156]	@ 0x9c
 8002ae6:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002aea:	f7ff fe4d 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002aee:	f204 7354 	addw	r3, r4, #1876	@ 0x754
 8002af2:	a92f      	add	r1, sp, #188	@ 0xbc
 8002af4:	4618      	mov	r0, r3
 8002af6:	9328      	str	r3, [sp, #160]	@ 0xa0
 8002af8:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002afc:	f7ff fe44 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002b00:	f504 63f0 	add.w	r3, r4, #1920	@ 0x780
 8002b04:	a92f      	add	r1, sp, #188	@ 0xbc
 8002b06:	4618      	mov	r0, r3
 8002b08:	9329      	str	r3, [sp, #164]	@ 0xa4
 8002b0a:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002b0e:	f7ff fe3b 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002b12:	f204 73ac 	addw	r3, r4, #1964	@ 0x7ac
 8002b16:	a92f      	add	r1, sp, #188	@ 0xbc
 8002b18:	4618      	mov	r0, r3
 8002b1a:	932a      	str	r3, [sp, #168]	@ 0xa8
 8002b1c:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002b20:	f7ff fe32 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002b24:	f504 63fb 	add.w	r3, r4, #2008	@ 0x7d8
 8002b28:	a92f      	add	r1, sp, #188	@ 0xbc
 8002b2a:	4618      	mov	r0, r3
 8002b2c:	932b      	str	r3, [sp, #172]	@ 0xac
 8002b2e:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002b32:	f7ff fe29 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002b36:	f604 0304 	addw	r3, r4, #2052	@ 0x804
 8002b3a:	a92f      	add	r1, sp, #188	@ 0xbc
 8002b3c:	4618      	mov	r0, r3
 8002b3e:	932c      	str	r3, [sp, #176]	@ 0xb0
 8002b40:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002b44:	f7ff fe20 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002b48:	e004      	b.n	8002b54 <_ZN18GameScreenViewBaseC1Ev+0x360>
 8002b4a:	bf00      	nop
 8002b4c:	0801d8c4 	.word	0x0801d8c4
 8002b50:	0801dd40 	.word	0x0801dd40
 8002b54:	f504 6303 	add.w	r3, r4, #2096	@ 0x830
          endId(BITMAP_INVALID),
          updateTicksInterval(updateInterval),
          ticksSinceUpdate(0),
          reverse(false),
          loopAnimation(false),
          running(false)
 8002b58:	a92f      	add	r1, sp, #188	@ 0xbc
 8002b5a:	4618      	mov	r0, r3
 8002b5c:	9307      	str	r3, [sp, #28]
 8002b5e:	f8ad 60bc 	strh.w	r6, [sp, #188]	@ 0xbc
 8002b62:	f7ff fe11 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002b66:	4bd6      	ldr	r3, [pc, #856]	@ (8002ec0 <_ZN18GameScreenViewBaseC1Ev+0x6cc>)
 8002b68:	f8c4 3830 	str.w	r3, [r4, #2096]	@ 0x830
          startId(BITMAP_INVALID),
 8002b6c:	f04f 33ff 	mov.w	r3, #4294967295
 8002b70:	f8c4 3860 	str.w	r3, [r4, #2144]	@ 0x860
          updateTicksInterval(updateInterval),
 8002b74:	2301      	movs	r3, #1
 8002b76:	f8c4 3864 	str.w	r3, [r4, #2148]	@ 0x864
 8002b7a:	f604 036c 	addw	r3, r4, #2156	@ 0x86c
        : animationDoneAction(0),
 8002b7e:	f8c4 585c 	str.w	r5, [r4, #2140]	@ 0x85c
          running(false)
 8002b82:	f884 5868 	strb.w	r5, [r4, #2152]	@ 0x868
 8002b86:	4618      	mov	r0, r3
 8002b88:	932d      	str	r3, [sp, #180]	@ 0xb4
 8002b8a:	f7ff fe17 	bl	80027bc <_ZN8touchgfx6ButtonC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002b8e:	4bcd      	ldr	r3, [pc, #820]	@ (8002ec4 <_ZN18GameScreenViewBaseC1Ev+0x6d0>)
 8002b90:	f8c4 38a0 	str.w	r3, [r4, #2208]	@ 0x8a0
 8002b94:	4bcc      	ldr	r3, [pc, #816]	@ (8002ec8 <_ZN18GameScreenViewBaseC1Ev+0x6d4>)
 8002b96:	f8c4 38a8 	str.w	r3, [r4, #2216]	@ 0x8a8
    __background.setPosition(0, 0, 240, 320);
 8002b9a:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8002b9e:	462a      	mov	r2, r5
 8002ba0:	f8c4 48a4 	str.w	r4, [r4, #2212]	@ 0x8a4
 8002ba4:	f8c4 58ac 	str.w	r5, [r4, #2220]	@ 0x8ac
 8002ba8:	4629      	mov	r1, r5
 8002baa:	9300      	str	r3, [sp, #0]
 8002bac:	4638      	mov	r0, r7
 8002bae:	23f0      	movs	r3, #240	@ 0xf0
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002bb0:	1d26      	adds	r6, r4, #4
 8002bb2:	f7ff fdc3 	bl	800273c <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002bb6:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8002bba:	66a3      	str	r3, [r4, #104]	@ 0x68
 8002bbc:	4639      	mov	r1, r7
 8002bbe:	4630      	mov	r0, r6
 8002bc0:	f006 fc3a 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    backgroundStar1.setXY(0, 0);
 8002bc4:	462a      	mov	r2, r5
 8002bc6:	9808      	ldr	r0, [sp, #32]
 8002bc8:	4629      	mov	r1, r5
 8002bca:	f7ff fdaa 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    backgroundStar1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_MAIN_ID));
 8002bce:	9808      	ldr	r0, [sp, #32]
 8002bd0:	f8ad 50bc 	strh.w	r5, [sp, #188]	@ 0xbc
 8002bd4:	a92f      	add	r1, sp, #188	@ 0xbc
 8002bd6:	f008 fa56 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002bda:	9908      	ldr	r1, [sp, #32]
 8002bdc:	4630      	mov	r0, r6
 8002bde:	f006 fc2b 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    backgroundStar2.setXY(0, -430);
 8002be2:	4aba      	ldr	r2, [pc, #744]	@ (8002ecc <_ZN18GameScreenViewBaseC1Ev+0x6d8>)
 8002be4:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8002be6:	4629      	mov	r1, r5
 8002be8:	f7ff fd9b 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    backgroundStar2.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_MAIN_ID));
 8002bec:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8002bee:	f8ad 50bc 	strh.w	r5, [sp, #188]	@ 0xbc
 8002bf2:	a92f      	add	r1, sp, #188	@ 0xbc
 8002bf4:	f008 fa47 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002bf8:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8002bfa:	4630      	mov	r0, r6
 8002bfc:	f006 fc1c 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002c00:	230a      	movs	r3, #10
    heart_table.setBitmap(touchgfx::Bitmap(BITMAP_HEALTH_BAR_TABLE_ID));
 8002c02:	a92f      	add	r1, sp, #188	@ 0xbc
 8002c04:	4648      	mov	r0, r9
 8002c06:	f8ad 30bc 	strh.w	r3, [sp, #188]	@ 0xbc
 8002c0a:	f008 fa3c 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    heart_table.setPosition(0, 0, 127, 26);
 8002c0e:	231a      	movs	r3, #26
 8002c10:	462a      	mov	r2, r5
 8002c12:	9300      	str	r3, [sp, #0]
 8002c14:	4629      	mov	r1, r5
 8002c16:	237f      	movs	r3, #127	@ 0x7f
 8002c18:	4648      	mov	r0, r9
 8002c1a:	f7ff fd8f 	bl	800273c <_ZN8touchgfx8Drawable11setPositionEssss>
    heart_table.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002c1e:	4629      	mov	r1, r5
 8002c20:	4648      	mov	r0, r9
 8002c22:	f007 ff14 	bl	800aa4e <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8002c26:	4649      	mov	r1, r9
 8002c28:	4630      	mov	r0, r6
 8002c2a:	f006 fc05 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002c2e:	f04f 090b 	mov.w	r9, #11
    heart_07.setBitmap(touchgfx::Bitmap(BITMAP_HEALTH_DOT_ID));
 8002c32:	a92f      	add	r1, sp, #188	@ 0xbc
 8002c34:	4640      	mov	r0, r8
    heart_07.setPosition(2, 2, 15, 22);
 8002c36:	2716      	movs	r7, #22
 8002c38:	f8ad 90bc 	strh.w	r9, [sp, #188]	@ 0xbc
    heart_07.setBitmap(touchgfx::Bitmap(BITMAP_HEALTH_DOT_ID));
 8002c3c:	f008 fa23 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    heart_07.setPosition(2, 2, 15, 22);
 8002c40:	2202      	movs	r2, #2
 8002c42:	4611      	mov	r1, r2
 8002c44:	230f      	movs	r3, #15
 8002c46:	4640      	mov	r0, r8
 8002c48:	9700      	str	r7, [sp, #0]
 8002c4a:	f7ff fd77 	bl	800273c <_ZN8touchgfx8Drawable11setPositionEssss>
    heart_07.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002c4e:	4629      	mov	r1, r5
 8002c50:	4640      	mov	r0, r8
 8002c52:	f007 fefc 	bl	800aa4e <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8002c56:	4641      	mov	r1, r8
 8002c58:	4630      	mov	r0, r6
 8002c5a:	f006 fbed 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    heart_06.setBitmap(touchgfx::Bitmap(BITMAP_HEALTH_DOT_ID));
 8002c5e:	9803      	ldr	r0, [sp, #12]
 8002c60:	f8ad 90bc 	strh.w	r9, [sp, #188]	@ 0xbc
 8002c64:	a92f      	add	r1, sp, #188	@ 0xbc
 8002c66:	f008 fa0e 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    heart_06.setPosition(17, 2, 15, 22);
 8002c6a:	230f      	movs	r3, #15
 8002c6c:	2202      	movs	r2, #2
 8002c6e:	9803      	ldr	r0, [sp, #12]
 8002c70:	9700      	str	r7, [sp, #0]
 8002c72:	2111      	movs	r1, #17
 8002c74:	f7ff fd62 	bl	800273c <_ZN8touchgfx8Drawable11setPositionEssss>
    heart_06.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002c78:	9803      	ldr	r0, [sp, #12]
 8002c7a:	4629      	mov	r1, r5
 8002c7c:	f007 fee7 	bl	800aa4e <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8002c80:	9903      	ldr	r1, [sp, #12]
 8002c82:	4630      	mov	r0, r6
 8002c84:	f006 fbd8 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    heart_05.setBitmap(touchgfx::Bitmap(BITMAP_HEALTH_DOT_ID));
 8002c88:	9804      	ldr	r0, [sp, #16]
 8002c8a:	f8ad 90bc 	strh.w	r9, [sp, #188]	@ 0xbc
 8002c8e:	a92f      	add	r1, sp, #188	@ 0xbc
 8002c90:	f008 f9f9 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    heart_05.setPosition(32, 2, 15, 22);
 8002c94:	230f      	movs	r3, #15
 8002c96:	2202      	movs	r2, #2
 8002c98:	9804      	ldr	r0, [sp, #16]
 8002c9a:	9700      	str	r7, [sp, #0]
 8002c9c:	2120      	movs	r1, #32
 8002c9e:	f7ff fd4d 	bl	800273c <_ZN8touchgfx8Drawable11setPositionEssss>
    heart_05.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002ca2:	9804      	ldr	r0, [sp, #16]
 8002ca4:	4629      	mov	r1, r5
 8002ca6:	f007 fed2 	bl	800aa4e <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8002caa:	9904      	ldr	r1, [sp, #16]
 8002cac:	4630      	mov	r0, r6
 8002cae:	f006 fbc3 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    heart_04.setBitmap(touchgfx::Bitmap(BITMAP_HEALTH_DOT_ID));
 8002cb2:	9805      	ldr	r0, [sp, #20]
 8002cb4:	f8ad 90bc 	strh.w	r9, [sp, #188]	@ 0xbc
 8002cb8:	a92f      	add	r1, sp, #188	@ 0xbc
 8002cba:	f008 f9e4 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    heart_04.setPosition(47, 2, 15, 22);
 8002cbe:	230f      	movs	r3, #15
 8002cc0:	2202      	movs	r2, #2
 8002cc2:	9805      	ldr	r0, [sp, #20]
 8002cc4:	9700      	str	r7, [sp, #0]
 8002cc6:	212f      	movs	r1, #47	@ 0x2f
 8002cc8:	f7ff fd38 	bl	800273c <_ZN8touchgfx8Drawable11setPositionEssss>
    heart_04.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002ccc:	9805      	ldr	r0, [sp, #20]
 8002cce:	4629      	mov	r1, r5
 8002cd0:	f007 febd 	bl	800aa4e <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8002cd4:	9905      	ldr	r1, [sp, #20]
 8002cd6:	4630      	mov	r0, r6
 8002cd8:	f006 fbae 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    heart_03.setBitmap(touchgfx::Bitmap(BITMAP_HEALTH_DOT_ID));
 8002cdc:	9806      	ldr	r0, [sp, #24]
 8002cde:	f8ad 90bc 	strh.w	r9, [sp, #188]	@ 0xbc
 8002ce2:	a92f      	add	r1, sp, #188	@ 0xbc
 8002ce4:	f008 f9cf 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    heart_03.setPosition(62, 2, 15, 22);
 8002ce8:	230f      	movs	r3, #15
 8002cea:	2202      	movs	r2, #2
 8002cec:	9806      	ldr	r0, [sp, #24]
 8002cee:	9700      	str	r7, [sp, #0]
 8002cf0:	213e      	movs	r1, #62	@ 0x3e
 8002cf2:	f7ff fd23 	bl	800273c <_ZN8touchgfx8Drawable11setPositionEssss>
    heart_03.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002cf6:	9806      	ldr	r0, [sp, #24]
 8002cf8:	4629      	mov	r1, r5
 8002cfa:	f007 fea8 	bl	800aa4e <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8002cfe:	9906      	ldr	r1, [sp, #24]
 8002d00:	4630      	mov	r0, r6
 8002d02:	f006 fb99 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    heart_02.setBitmap(touchgfx::Bitmap(BITMAP_HEALTH_DOT_ID));
 8002d06:	a92f      	add	r1, sp, #188	@ 0xbc
 8002d08:	4658      	mov	r0, fp
 8002d0a:	f8ad 90bc 	strh.w	r9, [sp, #188]	@ 0xbc
 8002d0e:	f008 f9ba 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    heart_02.setPosition(77, 2, 15, 22);
 8002d12:	230f      	movs	r3, #15
 8002d14:	2202      	movs	r2, #2
 8002d16:	4658      	mov	r0, fp
 8002d18:	9700      	str	r7, [sp, #0]
 8002d1a:	214d      	movs	r1, #77	@ 0x4d
 8002d1c:	f7ff fd0e 	bl	800273c <_ZN8touchgfx8Drawable11setPositionEssss>
    heart_02.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002d20:	4629      	mov	r1, r5
 8002d22:	4658      	mov	r0, fp
 8002d24:	f007 fe93 	bl	800aa4e <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8002d28:	4659      	mov	r1, fp
 8002d2a:	4630      	mov	r0, r6
 8002d2c:	f006 fb84 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    heart_01.setBitmap(touchgfx::Bitmap(BITMAP_HEALTH_DOT_ID));
 8002d30:	a92f      	add	r1, sp, #188	@ 0xbc
 8002d32:	4650      	mov	r0, sl
 8002d34:	f8ad 90bc 	strh.w	r9, [sp, #188]	@ 0xbc
 8002d38:	f008 f9a5 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    heart_01.setPosition(92, 2, 15, 22);
 8002d3c:	230f      	movs	r3, #15
 8002d3e:	2202      	movs	r2, #2
 8002d40:	4650      	mov	r0, sl
 8002d42:	9700      	str	r7, [sp, #0]
 8002d44:	215c      	movs	r1, #92	@ 0x5c
 8002d46:	f7ff fcf9 	bl	800273c <_ZN8touchgfx8Drawable11setPositionEssss>
    heart_01.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002d4a:	4629      	mov	r1, r5
 8002d4c:	4650      	mov	r0, sl
 8002d4e:	f007 fe7e 	bl	800aa4e <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8002d52:	4651      	mov	r1, sl
 8002d54:	4630      	mov	r0, r6
 8002d56:	f006 fb6f 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    record.setXY(20, 45);
 8002d5a:	222d      	movs	r2, #45	@ 0x2d
 8002d5c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8002d5e:	2114      	movs	r1, #20
 8002d60:	f7ff fcdf 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
 8002d64:	231c      	movs	r3, #28
    record.setBitmap(touchgfx::Bitmap(BITMAP_RECORD_ID));
 8002d66:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8002d68:	f8ad 30bc 	strh.w	r3, [sp, #188]	@ 0xbc
 8002d6c:	a92f      	add	r1, sp, #188	@ 0xbc
 8002d6e:	f008 f98a 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002d72:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8002d74:	4630      	mov	r0, r6
 8002d76:	f006 fb5f 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    menu_button.setXY(70, 222);
 8002d7a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8002d7c:	22de      	movs	r2, #222	@ 0xde
 8002d7e:	2146      	movs	r1, #70	@ 0x46
 8002d80:	f7ff fccf 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
 8002d84:	2309      	movs	r3, #9
    menu_button.setBitmaps(touchgfx::Bitmap(BITMAP_EXIT_ID), touchgfx::Bitmap(BITMAP_EXIT_ID));
 8002d86:	aa2f      	add	r2, sp, #188	@ 0xbc
 8002d88:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8002d8a:	f8ad 30b8 	strh.w	r3, [sp, #184]	@ 0xb8
 8002d8e:	a92e      	add	r1, sp, #184	@ 0xb8
 8002d90:	f8ad 30bc 	strh.w	r3, [sp, #188]	@ 0xbc
 8002d94:	f008 f8aa 	bl	800aeec <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    menu_button.setAction(buttonCallback);
 8002d98:	f504 630a 	add.w	r3, r4, #2208	@ 0x8a0
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002d9c:	f8c4 3278 	str.w	r3, [r4, #632]	@ 0x278
 8002da0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8002da2:	9303      	str	r3, [sp, #12]
 8002da4:	4630      	mov	r0, r6
 8002da6:	f006 fb47 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score10.setXY(168, 2);
 8002daa:	2202      	movs	r2, #2
 8002dac:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8002dae:	21a8      	movs	r1, #168	@ 0xa8
 8002db0:	f7ff fcb7 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
 8002db4:	f04f 030f 	mov.w	r3, #15
    score10.setBitmap(touchgfx::Bitmap(BITMAP_N0_ID));
 8002db8:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8002dba:	f8ad 30bc 	strh.w	r3, [sp, #188]	@ 0xbc
 8002dbe:	a92f      	add	r1, sp, #188	@ 0xbc
 8002dc0:	f008 f961 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002dc4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8002dc6:	4630      	mov	r0, r6
 8002dc8:	f006 fb36 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score11.setXY(173, 2);
 8002dcc:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8002dce:	2202      	movs	r2, #2
 8002dd0:	21ad      	movs	r1, #173	@ 0xad
 8002dd2:	f7ff fca6 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
 8002dd6:	f04f 0210 	mov.w	r2, #16
    score11.setBitmap(touchgfx::Bitmap(BITMAP_N1_ID));
 8002dda:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8002ddc:	f8ad 20bc 	strh.w	r2, [sp, #188]	@ 0xbc
 8002de0:	a92f      	add	r1, sp, #188	@ 0xbc
 8002de2:	f008 f950 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002de6:	990d      	ldr	r1, [sp, #52]	@ 0x34
        visible = vis;
 8002de8:	f884 52d5 	strb.w	r5, [r4, #725]	@ 0x2d5
 8002dec:	4630      	mov	r0, r6
 8002dee:	f006 fb23 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score12.setXY(169, 2);
 8002df2:	2202      	movs	r2, #2
 8002df4:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8002df6:	21a9      	movs	r1, #169	@ 0xa9
 8002df8:	f7ff fc93 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    score12.setBitmap(touchgfx::Bitmap(BITMAP_N2_ID));
 8002dfc:	a82f      	add	r0, sp, #188	@ 0xbc
 8002dfe:	f04f 0111 	mov.w	r1, #17
 8002e02:	f8ad 10bc 	strh.w	r1, [sp, #188]	@ 0xbc
 8002e06:	4601      	mov	r1, r0
 8002e08:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8002e0a:	f008 f93c 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002e0e:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8002e10:	f884 5301 	strb.w	r5, [r4, #769]	@ 0x301
 8002e14:	4630      	mov	r0, r6
 8002e16:	f006 fb0f 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score13.setXY(168, 2);
 8002e1a:	2202      	movs	r2, #2
 8002e1c:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8002e1e:	21a8      	movs	r1, #168	@ 0xa8
 8002e20:	f7ff fc7f 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    score13.setBitmap(touchgfx::Bitmap(BITMAP_N3_ID));
 8002e24:	f10d 0cbc 	add.w	ip, sp, #188	@ 0xbc
 8002e28:	f04f 0012 	mov.w	r0, #18
 8002e2c:	4661      	mov	r1, ip
 8002e2e:	f8ad 00bc 	strh.w	r0, [sp, #188]	@ 0xbc
 8002e32:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8002e34:	f008 f927 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002e38:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8002e3a:	f884 532d 	strb.w	r5, [r4, #813]	@ 0x32d
 8002e3e:	4630      	mov	r0, r6
 8002e40:	f006 fafa 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score14.setXY(167, 2);
 8002e44:	2202      	movs	r2, #2
 8002e46:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8002e48:	21a7      	movs	r1, #167	@ 0xa7
 8002e4a:	f7ff fc6a 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    score14.setBitmap(touchgfx::Bitmap(BITMAP_N4_ID));
 8002e4e:	f10d 0cbc 	add.w	ip, sp, #188	@ 0xbc
 8002e52:	2313      	movs	r3, #19
 8002e54:	4661      	mov	r1, ip
 8002e56:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8002e58:	f8ad 30bc 	strh.w	r3, [sp, #188]	@ 0xbc
 8002e5c:	f008 f913 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002e60:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8002e62:	f884 5359 	strb.w	r5, [r4, #857]	@ 0x359
 8002e66:	4630      	mov	r0, r6
 8002e68:	f006 fae6 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score15.setXY(169, 2);
 8002e6c:	2202      	movs	r2, #2
 8002e6e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8002e70:	21a9      	movs	r1, #169	@ 0xa9
 8002e72:	f7ff fc56 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    score15.setBitmap(touchgfx::Bitmap(BITMAP_N5_ID));
 8002e76:	f10d 0cbc 	add.w	ip, sp, #188	@ 0xbc
 8002e7a:	4661      	mov	r1, ip
 8002e7c:	f04f 0b14 	mov.w	fp, #20
 8002e80:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8002e82:	f8ad b0bc 	strh.w	fp, [sp, #188]	@ 0xbc
 8002e86:	f008 f8fe 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002e8a:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8002e8c:	f884 5385 	strb.w	r5, [r4, #901]	@ 0x385
 8002e90:	4630      	mov	r0, r6
 8002e92:	f006 fad1 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score16.setXY(167, 3);
 8002e96:	2203      	movs	r2, #3
 8002e98:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8002e9a:	21a7      	movs	r1, #167	@ 0xa7
 8002e9c:	f7ff fc41 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    score16.setBitmap(touchgfx::Bitmap(BITMAP_N6_ID));
 8002ea0:	f10d 0cbc 	add.w	ip, sp, #188	@ 0xbc
 8002ea4:	4661      	mov	r1, ip
 8002ea6:	f04f 0a15 	mov.w	sl, #21
 8002eaa:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8002eac:	f8ad a0bc 	strh.w	sl, [sp, #188]	@ 0xbc
 8002eb0:	f008 f8e9 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002eb4:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8002eb6:	f884 53b1 	strb.w	r5, [r4, #945]	@ 0x3b1
 8002eba:	4630      	mov	r0, r6
 8002ebc:	e008      	b.n	8002ed0 <_ZN18GameScreenViewBaseC1Ev+0x6dc>
 8002ebe:	bf00      	nop
 8002ec0:	0801dc50 	.word	0x0801dc50
 8002ec4:	0801d8ac 	.word	0x0801d8ac
 8002ec8:	080026f7 	.word	0x080026f7
 8002ecc:	fffffe52 	.word	0xfffffe52
 8002ed0:	f006 fab2 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score17.setXY(169, 2);
 8002ed4:	2202      	movs	r2, #2
 8002ed6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8002ed8:	21a9      	movs	r1, #169	@ 0xa9
 8002eda:	f7ff fc22 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    score17.setBitmap(touchgfx::Bitmap(BITMAP_N7_ID));
 8002ede:	f10d 0cbc 	add.w	ip, sp, #188	@ 0xbc
 8002ee2:	4661      	mov	r1, ip
 8002ee4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8002ee6:	f8ad 70bc 	strh.w	r7, [sp, #188]	@ 0xbc
 8002eea:	f008 f8cc 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002eee:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8002ef0:	f884 53dd 	strb.w	r5, [r4, #989]	@ 0x3dd
 8002ef4:	4630      	mov	r0, r6
 8002ef6:	f006 fa9f 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score18.setXY(167, 2);
 8002efa:	2202      	movs	r2, #2
 8002efc:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8002efe:	21a7      	movs	r1, #167	@ 0xa7
 8002f00:	f7ff fc0f 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    score18.setBitmap(touchgfx::Bitmap(BITMAP_N8_ID));
 8002f04:	f10d 0cbc 	add.w	ip, sp, #188	@ 0xbc
 8002f08:	4661      	mov	r1, ip
 8002f0a:	f04f 0917 	mov.w	r9, #23
 8002f0e:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8002f10:	f8ad 90bc 	strh.w	r9, [sp, #188]	@ 0xbc
 8002f14:	f008 f8b7 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002f18:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8002f1a:	f884 5409 	strb.w	r5, [r4, #1033]	@ 0x409
 8002f1e:	4630      	mov	r0, r6
 8002f20:	f006 fa8a 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score19.setXY(168, 2);
 8002f24:	2202      	movs	r2, #2
 8002f26:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8002f28:	21a8      	movs	r1, #168	@ 0xa8
 8002f2a:	f7ff fbfa 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    score19.setBitmap(touchgfx::Bitmap(BITMAP_N9_ID));
 8002f2e:	f10d 0cbc 	add.w	ip, sp, #188	@ 0xbc
 8002f32:	4661      	mov	r1, ip
 8002f34:	f04f 0818 	mov.w	r8, #24
 8002f38:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8002f3a:	f8ad 80bc 	strh.w	r8, [sp, #188]	@ 0xbc
 8002f3e:	f008 f8a2 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002f42:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8002f44:	f884 5435 	strb.w	r5, [r4, #1077]	@ 0x435
 8002f48:	4630      	mov	r0, r6
 8002f4a:	f006 fa75 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score20.setXY(191, 2);
 8002f4e:	2202      	movs	r2, #2
 8002f50:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8002f52:	21bf      	movs	r1, #191	@ 0xbf
 8002f54:	f7ff fbe5 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    score20.setBitmap(touchgfx::Bitmap(BITMAP_N0_ID));
 8002f58:	f10d 0cbc 	add.w	ip, sp, #188	@ 0xbc
 8002f5c:	f04f 030f 	mov.w	r3, #15
 8002f60:	4661      	mov	r1, ip
 8002f62:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8002f64:	f8ad 30bc 	strh.w	r3, [sp, #188]	@ 0xbc
 8002f68:	f008 f88d 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002f6c:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8002f6e:	4630      	mov	r0, r6
 8002f70:	f006 fa62 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score21.setXY(195, 1);
 8002f74:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8002f76:	2201      	movs	r2, #1
 8002f78:	21c3      	movs	r1, #195	@ 0xc3
 8002f7a:	f7ff fbd2 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    score21.setBitmap(touchgfx::Bitmap(BITMAP_N1_ID));
 8002f7e:	f10d 0cbc 	add.w	ip, sp, #188	@ 0xbc
 8002f82:	4661      	mov	r1, ip
 8002f84:	f04f 0210 	mov.w	r2, #16
 8002f88:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8002f8a:	f8ad 20bc 	strh.w	r2, [sp, #188]	@ 0xbc
 8002f8e:	f008 f87a 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002f92:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8002f94:	f884 548d 	strb.w	r5, [r4, #1165]	@ 0x48d
 8002f98:	4630      	mov	r0, r6
 8002f9a:	f006 fa4d 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score22.setXY(191, 2);
 8002f9e:	2202      	movs	r2, #2
 8002fa0:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8002fa2:	21bf      	movs	r1, #191	@ 0xbf
 8002fa4:	f7ff fbbd 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    score22.setBitmap(touchgfx::Bitmap(BITMAP_N2_ID));
 8002fa8:	f10d 0cbc 	add.w	ip, sp, #188	@ 0xbc
 8002fac:	f04f 0111 	mov.w	r1, #17
 8002fb0:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8002fb2:	f8ad 10bc 	strh.w	r1, [sp, #188]	@ 0xbc
 8002fb6:	4661      	mov	r1, ip
 8002fb8:	f008 f865 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002fbc:	9918      	ldr	r1, [sp, #96]	@ 0x60
 8002fbe:	f884 54b9 	strb.w	r5, [r4, #1209]	@ 0x4b9
 8002fc2:	4630      	mov	r0, r6
 8002fc4:	f006 fa38 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score23.setXY(191, 2);
 8002fc8:	2202      	movs	r2, #2
 8002fca:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8002fcc:	21bf      	movs	r1, #191	@ 0xbf
 8002fce:	f7ff fba8 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    score23.setBitmap(touchgfx::Bitmap(BITMAP_N3_ID));
 8002fd2:	f10d 0cbc 	add.w	ip, sp, #188	@ 0xbc
 8002fd6:	f04f 0012 	mov.w	r0, #18
 8002fda:	4661      	mov	r1, ip
 8002fdc:	f8ad 00bc 	strh.w	r0, [sp, #188]	@ 0xbc
 8002fe0:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8002fe2:	f008 f850 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002fe6:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8002fe8:	f884 54e5 	strb.w	r5, [r4, #1253]	@ 0x4e5
 8002fec:	4630      	mov	r0, r6
 8002fee:	f006 fa23 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score24.setXY(190, 2);
 8002ff2:	2202      	movs	r2, #2
 8002ff4:	981a      	ldr	r0, [sp, #104]	@ 0x68
 8002ff6:	21be      	movs	r1, #190	@ 0xbe
 8002ff8:	f7ff fb93 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    score24.setBitmap(touchgfx::Bitmap(BITMAP_N4_ID));
 8002ffc:	f10d 0cbc 	add.w	ip, sp, #188	@ 0xbc
 8003000:	2313      	movs	r3, #19
 8003002:	4661      	mov	r1, ip
 8003004:	981a      	ldr	r0, [sp, #104]	@ 0x68
 8003006:	f8ad 30bc 	strh.w	r3, [sp, #188]	@ 0xbc
 800300a:	f008 f83c 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800300e:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8003010:	f884 5511 	strb.w	r5, [r4, #1297]	@ 0x511
 8003014:	4630      	mov	r0, r6
 8003016:	f006 fa0f 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score25.setXY(192, 1);
 800301a:	2201      	movs	r2, #1
 800301c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 800301e:	21c0      	movs	r1, #192	@ 0xc0
 8003020:	f7ff fb7f 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    score25.setBitmap(touchgfx::Bitmap(BITMAP_N5_ID));
 8003024:	f10d 0cbc 	add.w	ip, sp, #188	@ 0xbc
 8003028:	4661      	mov	r1, ip
 800302a:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 800302c:	f8ad b0bc 	strh.w	fp, [sp, #188]	@ 0xbc
 8003030:	f008 f829 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003034:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8003036:	f884 553d 	strb.w	r5, [r4, #1341]	@ 0x53d
 800303a:	4630      	mov	r0, r6
 800303c:	f006 f9fc 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score26.setXY(191, 2);
 8003040:	2202      	movs	r2, #2
 8003042:	981c      	ldr	r0, [sp, #112]	@ 0x70
 8003044:	21bf      	movs	r1, #191	@ 0xbf
 8003046:	f7ff fb6c 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    score26.setBitmap(touchgfx::Bitmap(BITMAP_N6_ID));
 800304a:	f10d 0cbc 	add.w	ip, sp, #188	@ 0xbc
 800304e:	4661      	mov	r1, ip
 8003050:	981c      	ldr	r0, [sp, #112]	@ 0x70
 8003052:	f8ad a0bc 	strh.w	sl, [sp, #188]	@ 0xbc
 8003056:	f008 f816 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800305a:	991c      	ldr	r1, [sp, #112]	@ 0x70
 800305c:	f884 5569 	strb.w	r5, [r4, #1385]	@ 0x569
 8003060:	4630      	mov	r0, r6
 8003062:	f006 f9e9 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score27.setXY(193, 2);
 8003066:	2202      	movs	r2, #2
 8003068:	981d      	ldr	r0, [sp, #116]	@ 0x74
 800306a:	21c1      	movs	r1, #193	@ 0xc1
 800306c:	f7ff fb59 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    score27.setBitmap(touchgfx::Bitmap(BITMAP_N7_ID));
 8003070:	f10d 0cbc 	add.w	ip, sp, #188	@ 0xbc
 8003074:	4661      	mov	r1, ip
 8003076:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8003078:	f8ad 70bc 	strh.w	r7, [sp, #188]	@ 0xbc
 800307c:	f008 f803 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003080:	991d      	ldr	r1, [sp, #116]	@ 0x74
 8003082:	f884 5595 	strb.w	r5, [r4, #1429]	@ 0x595
 8003086:	4630      	mov	r0, r6
 8003088:	f006 f9d6 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score28.setXY(191, 2);
 800308c:	2202      	movs	r2, #2
 800308e:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8003090:	21bf      	movs	r1, #191	@ 0xbf
 8003092:	f7ff fb46 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    score28.setBitmap(touchgfx::Bitmap(BITMAP_N8_ID));
 8003096:	f10d 0cbc 	add.w	ip, sp, #188	@ 0xbc
 800309a:	4661      	mov	r1, ip
 800309c:	981e      	ldr	r0, [sp, #120]	@ 0x78
 800309e:	f8ad 90bc 	strh.w	r9, [sp, #188]	@ 0xbc
 80030a2:	f007 fff0 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80030a6:	991e      	ldr	r1, [sp, #120]	@ 0x78
 80030a8:	f884 55c1 	strb.w	r5, [r4, #1473]	@ 0x5c1
 80030ac:	4630      	mov	r0, r6
 80030ae:	f006 f9c3 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score29.setXY(191, 2);
 80030b2:	2202      	movs	r2, #2
 80030b4:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80030b6:	21bf      	movs	r1, #191	@ 0xbf
 80030b8:	f7ff fb33 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    score29.setBitmap(touchgfx::Bitmap(BITMAP_N9_ID));
 80030bc:	f10d 0cbc 	add.w	ip, sp, #188	@ 0xbc
 80030c0:	4661      	mov	r1, ip
 80030c2:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80030c4:	f8ad 80bc 	strh.w	r8, [sp, #188]	@ 0xbc
 80030c8:	f007 ffdd 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80030cc:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 80030ce:	f884 55ed 	strb.w	r5, [r4, #1517]	@ 0x5ed
 80030d2:	4630      	mov	r0, r6
 80030d4:	f006 f9b0 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score30.setXY(214, 2);
 80030d8:	2202      	movs	r2, #2
 80030da:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80030dc:	21d6      	movs	r1, #214	@ 0xd6
 80030de:	f7ff fb20 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
 80030e2:	f04f 030f 	mov.w	r3, #15
 80030e6:	f8ad 30bc 	strh.w	r3, [sp, #188]	@ 0xbc
    score30.setBitmap(touchgfx::Bitmap(BITMAP_N0_ID));
 80030ea:	ab2f      	add	r3, sp, #188	@ 0xbc
 80030ec:	4619      	mov	r1, r3
 80030ee:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80030f0:	f007 ffc9 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80030f4:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80030f6:	4630      	mov	r0, r6
 80030f8:	f006 f99e 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score31.setXY(218, 2);
 80030fc:	9821      	ldr	r0, [sp, #132]	@ 0x84
 80030fe:	2202      	movs	r2, #2
 8003100:	21da      	movs	r1, #218	@ 0xda
 8003102:	f7ff fb0e 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    score31.setBitmap(touchgfx::Bitmap(BITMAP_N1_ID));
 8003106:	ab2f      	add	r3, sp, #188	@ 0xbc
 8003108:	4619      	mov	r1, r3
 800310a:	f04f 0210 	mov.w	r2, #16
 800310e:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8003110:	f8ad 20bc 	strh.w	r2, [sp, #188]	@ 0xbc
 8003114:	f007 ffb7 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003118:	9921      	ldr	r1, [sp, #132]	@ 0x84
 800311a:	f884 5645 	strb.w	r5, [r4, #1605]	@ 0x645
 800311e:	4630      	mov	r0, r6
 8003120:	f006 f98a 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score32.setXY(215, 2);
 8003124:	2202      	movs	r2, #2
 8003126:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8003128:	21d7      	movs	r1, #215	@ 0xd7
 800312a:	f7ff fafa 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
 800312e:	f04f 0111 	mov.w	r1, #17
    score32.setBitmap(touchgfx::Bitmap(BITMAP_N2_ID));
 8003132:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8003134:	f8ad 10bc 	strh.w	r1, [sp, #188]	@ 0xbc
 8003138:	a92f      	add	r1, sp, #188	@ 0xbc
 800313a:	f007 ffa4 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800313e:	9922      	ldr	r1, [sp, #136]	@ 0x88
 8003140:	f884 5671 	strb.w	r5, [r4, #1649]	@ 0x671
 8003144:	4630      	mov	r0, r6
 8003146:	f006 f977 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score33.setXY(214, 2);
 800314a:	2202      	movs	r2, #2
 800314c:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 800314e:	21d6      	movs	r1, #214	@ 0xd6
 8003150:	f7ff fae7 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
 8003154:	f04f 0012 	mov.w	r0, #18
 8003158:	f8ad 00bc 	strh.w	r0, [sp, #188]	@ 0xbc
    score33.setBitmap(touchgfx::Bitmap(BITMAP_N3_ID));
 800315c:	a92f      	add	r1, sp, #188	@ 0xbc
 800315e:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8003160:	f007 ff91 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003164:	9923      	ldr	r1, [sp, #140]	@ 0x8c
 8003166:	f884 569d 	strb.w	r5, [r4, #1693]	@ 0x69d
 800316a:	4630      	mov	r0, r6
 800316c:	f006 f964 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score34.setXY(213, 2);
 8003170:	2202      	movs	r2, #2
 8003172:	9824      	ldr	r0, [sp, #144]	@ 0x90
 8003174:	21d5      	movs	r1, #213	@ 0xd5
 8003176:	f7ff fad4 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
 800317a:	2313      	movs	r3, #19
    score34.setBitmap(touchgfx::Bitmap(BITMAP_N4_ID));
 800317c:	9824      	ldr	r0, [sp, #144]	@ 0x90
 800317e:	f8ad 30bc 	strh.w	r3, [sp, #188]	@ 0xbc
 8003182:	a92f      	add	r1, sp, #188	@ 0xbc
 8003184:	f007 ff7f 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003188:	9924      	ldr	r1, [sp, #144]	@ 0x90
 800318a:	f884 56c9 	strb.w	r5, [r4, #1737]	@ 0x6c9
 800318e:	4630      	mov	r0, r6
 8003190:	f006 f952 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score35.setXY(215, 2);
 8003194:	2202      	movs	r2, #2
 8003196:	9825      	ldr	r0, [sp, #148]	@ 0x94
 8003198:	21d7      	movs	r1, #215	@ 0xd7
 800319a:	f7ff fac2 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    score35.setBitmap(touchgfx::Bitmap(BITMAP_N5_ID));
 800319e:	9825      	ldr	r0, [sp, #148]	@ 0x94
 80031a0:	f8ad b0bc 	strh.w	fp, [sp, #188]	@ 0xbc
 80031a4:	a92f      	add	r1, sp, #188	@ 0xbc
 80031a6:	f007 ff6e 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80031aa:	9925      	ldr	r1, [sp, #148]	@ 0x94
 80031ac:	f884 56f5 	strb.w	r5, [r4, #1781]	@ 0x6f5
 80031b0:	4630      	mov	r0, r6
 80031b2:	f006 f941 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score36.setXY(213, 2);
 80031b6:	2202      	movs	r2, #2
 80031b8:	9826      	ldr	r0, [sp, #152]	@ 0x98
 80031ba:	21d5      	movs	r1, #213	@ 0xd5
 80031bc:	f7ff fab1 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    score36.setBitmap(touchgfx::Bitmap(BITMAP_N6_ID));
 80031c0:	9826      	ldr	r0, [sp, #152]	@ 0x98
 80031c2:	f8ad a0bc 	strh.w	sl, [sp, #188]	@ 0xbc
 80031c6:	a92f      	add	r1, sp, #188	@ 0xbc
 80031c8:	f007 ff5d 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80031cc:	9926      	ldr	r1, [sp, #152]	@ 0x98
 80031ce:	f884 5721 	strb.w	r5, [r4, #1825]	@ 0x721
 80031d2:	4630      	mov	r0, r6
 80031d4:	f006 f930 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score37.setXY(216, 2);
 80031d8:	2202      	movs	r2, #2
 80031da:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 80031dc:	21d8      	movs	r1, #216	@ 0xd8
 80031de:	f7ff faa0 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    score37.setBitmap(touchgfx::Bitmap(BITMAP_N7_ID));
 80031e2:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 80031e4:	f8ad 70bc 	strh.w	r7, [sp, #188]	@ 0xbc
 80031e8:	a92f      	add	r1, sp, #188	@ 0xbc
 80031ea:	f007 ff4c 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80031ee:	9927      	ldr	r1, [sp, #156]	@ 0x9c
 80031f0:	f884 574d 	strb.w	r5, [r4, #1869]	@ 0x74d
 80031f4:	4630      	mov	r0, r6
 80031f6:	f006 f91f 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score38.setXY(213, 2);
 80031fa:	2202      	movs	r2, #2
 80031fc:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 80031fe:	21d5      	movs	r1, #213	@ 0xd5
 8003200:	f7ff fa8f 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    score38.setBitmap(touchgfx::Bitmap(BITMAP_N8_ID));
 8003204:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 8003206:	f8ad 90bc 	strh.w	r9, [sp, #188]	@ 0xbc
 800320a:	a92f      	add	r1, sp, #188	@ 0xbc
 800320c:	f007 ff3b 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003210:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8003212:	f884 5779 	strb.w	r5, [r4, #1913]	@ 0x779
 8003216:	4630      	mov	r0, r6
 8003218:	f006 f90e 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score39.setXY(213, 2);
 800321c:	2202      	movs	r2, #2
 800321e:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 8003220:	21d5      	movs	r1, #213	@ 0xd5
 8003222:	f7ff fa7e 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    score39.setBitmap(touchgfx::Bitmap(BITMAP_N9_ID));
 8003226:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 8003228:	f8ad 80bc 	strh.w	r8, [sp, #188]	@ 0xbc
 800322c:	a92f      	add	r1, sp, #188	@ 0xbc
 800322e:	f007 ff2a 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003232:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 8003234:	f884 57a5 	strb.w	r5, [r4, #1957]	@ 0x7a5
 8003238:	4630      	mov	r0, r6
 800323a:	f006 f8fd 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    star1.setXY(65, 91);
 800323e:	225b      	movs	r2, #91	@ 0x5b
 8003240:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 8003242:	2141      	movs	r1, #65	@ 0x41
 8003244:	f7ff fa6d 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
 8003248:	2321      	movs	r3, #33	@ 0x21
    star1.setBitmap(touchgfx::Bitmap(BITMAP_STAR1_ID));
 800324a:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 800324c:	f8ad 30bc 	strh.w	r3, [sp, #188]	@ 0xbc
 8003250:	a92f      	add	r1, sp, #188	@ 0xbc
 8003252:	f007 ff18 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003256:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8003258:	4630      	mov	r0, r6
 800325a:	f006 f8ed 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    star2.setXY(65, 91);
 800325e:	225b      	movs	r2, #91	@ 0x5b
 8003260:	982b      	ldr	r0, [sp, #172]	@ 0xac
 8003262:	2141      	movs	r1, #65	@ 0x41
 8003264:	f7ff fa5d 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
 8003268:	2322      	movs	r3, #34	@ 0x22
    star2.setBitmap(touchgfx::Bitmap(BITMAP_STAR2_ID));
 800326a:	982b      	ldr	r0, [sp, #172]	@ 0xac
 800326c:	f8ad 30bc 	strh.w	r3, [sp, #188]	@ 0xbc
 8003270:	a92f      	add	r1, sp, #188	@ 0xbc
 8003272:	f007 ff08 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003276:	992b      	ldr	r1, [sp, #172]	@ 0xac
 8003278:	4630      	mov	r0, r6
 800327a:	f006 f8dd 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    star3.setXY(65, 91);
 800327e:	225b      	movs	r2, #91	@ 0x5b
 8003280:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8003282:	2141      	movs	r1, #65	@ 0x41
 8003284:	f7ff fa4d 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
 8003288:	2323      	movs	r3, #35	@ 0x23
    star3.setBitmap(touchgfx::Bitmap(BITMAP_STAR3_ID));
 800328a:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800328c:	f8ad 30bc 	strh.w	r3, [sp, #188]	@ 0xbc
 8003290:	a92f      	add	r1, sp, #188	@ 0xbc
 8003292:	f007 fef8 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003296:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 8003298:	4630      	mov	r0, r6
 800329a:	f006 f8cd 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    animatedImage1.setXY(210, 1);
 800329e:	9807      	ldr	r0, [sp, #28]
 80032a0:	2201      	movs	r2, #1
 80032a2:	21d2      	movs	r1, #210	@ 0xd2
 80032a4:	f7ff fa3d 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    animatedImage1.setBitmaps(BITMAP_ENEMY_RED_01_ID, BITMAP_ENEMY_RED_02_ID);
 80032a8:	2208      	movs	r2, #8
 80032aa:	9807      	ldr	r0, [sp, #28]
 80032ac:	2107      	movs	r1, #7
 80032ae:	f007 fbb5 	bl	800aa1c <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    animatedImage1.setUpdateTicksInterval(1);
 80032b2:	9807      	ldr	r0, [sp, #28]
 80032b4:	2101      	movs	r1, #1
 80032b6:	f007 fbc4 	bl	800aa42 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
 80032ba:	9907      	ldr	r1, [sp, #28]
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80032bc:	f884 5858 	strb.w	r5, [r4, #2136]	@ 0x858
 80032c0:	4630      	mov	r0, r6
 80032c2:	f884 5855 	strb.w	r5, [r4, #2133]	@ 0x855
 80032c6:	f006 f8b7 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    button1.setXY(1, 290);
 80032ca:	982d      	ldr	r0, [sp, #180]	@ 0xb4
 80032cc:	f44f 7291 	mov.w	r2, #290	@ 0x122
 80032d0:	2101      	movs	r1, #1
 80032d2:	f7ff fa26 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
 80032d6:	231d      	movs	r3, #29
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_SETTING_BTN_ID), touchgfx::Bitmap(BITMAP_SETTING_BTN_ID));
 80032d8:	982d      	ldr	r0, [sp, #180]	@ 0xb4
 80032da:	f8ad 30b8 	strh.w	r3, [sp, #184]	@ 0xb8
 80032de:	aa2f      	add	r2, sp, #188	@ 0xbc
 80032e0:	a92e      	add	r1, sp, #184	@ 0xb8
 80032e2:	f8ad 30bc 	strh.w	r3, [sp, #188]	@ 0xbc
 80032e6:	f007 fe01 	bl	800aeec <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80032ea:	9b03      	ldr	r3, [sp, #12]
 80032ec:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 80032ee:	f8c4 3894 	str.w	r3, [r4, #2196]	@ 0x894
 80032f2:	4630      	mov	r0, r6
 80032f4:	f006 f8a0 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80032f8:	4620      	mov	r0, r4
 80032fa:	b031      	add	sp, #196	@ 0xc4
 80032fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08003300 <_ZN18MenuScreenViewBaseD1Ev>:
}

MenuScreenViewBase::~MenuScreenViewBase()
{

}
 8003300:	4770      	bx	lr

08003302 <_ZN18MenuScreenViewBase11setupScreenEv>:

void MenuScreenViewBase::setupScreen()
{

}
 8003302:	4770      	bx	lr

08003304 <_ZN8touchgfx8CallbackI18MenuScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003304:	4770      	bx	lr

08003306 <_ZN8touchgfx8CallbackI18MenuScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003306:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003308:	68c2      	ldr	r2, [r0, #12]
 800330a:	6844      	ldr	r4, [r0, #4]
 800330c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800330e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003310:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003314:	07d2      	lsls	r2, r2, #31
 8003316:	bf48      	it	mi
 8003318:	5962      	ldrmi	r2, [r4, r5]
 800331a:	689b      	ldr	r3, [r3, #8]
    }
 800331c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800331e:	bf48      	it	mi
 8003320:	58d3      	ldrmi	r3, [r2, r3]
 8003322:	4718      	bx	r3

08003324 <_ZNK8touchgfx8CallbackI18MenuScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8003324:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8003326:	6840      	ldr	r0, [r0, #4]
 8003328:	b130      	cbz	r0, 8003338 <_ZNK8touchgfx8CallbackI18MenuScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800332a:	689a      	ldr	r2, [r3, #8]
 800332c:	b91a      	cbnz	r2, 8003336 <_ZNK8touchgfx8CallbackI18MenuScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 800332e:	68d8      	ldr	r0, [r3, #12]
 8003330:	f000 0001 	and.w	r0, r0, #1
 8003334:	4770      	bx	lr
 8003336:	2001      	movs	r0, #1
    }
 8003338:	4770      	bx	lr

0800333a <_ZN8touchgfx8CallbackI18MenuScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800333a:	b510      	push	{r4, lr}
 800333c:	2110      	movs	r1, #16
 800333e:	4604      	mov	r4, r0
 8003340:	f018 fa66 	bl	801b810 <_ZdlPvj>
 8003344:	4620      	mov	r0, r4
 8003346:	bd10      	pop	{r4, pc}

08003348 <_ZN18MenuScreenViewBaseD0Ev>:
MenuScreenViewBase::~MenuScreenViewBase()
 8003348:	b510      	push	{r4, lr}
}
 800334a:	f44f 719a 	mov.w	r1, #308	@ 0x134
MenuScreenViewBase::~MenuScreenViewBase()
 800334e:	4604      	mov	r4, r0
}
 8003350:	f018 fa5e 	bl	801b810 <_ZdlPvj>
 8003354:	4620      	mov	r0, r4
 8003356:	bd10      	pop	{r4, pc}

08003358 <_ZN18MenuScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MenuScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button)
 8003358:	30f0      	adds	r0, #240	@ 0xf0
 800335a:	4288      	cmp	r0, r1
{
 800335c:	b508      	push	{r3, lr}
    if (&src == &button)
 800335e:	d105      	bne.n	800336c <_ZN18MenuScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~MenuScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003360:	f008 ff5a 	bl	800c218 <_ZN8touchgfx11Application11getInstanceEv>
        //ChangeToGameScreen
        //When button clicked change screen to GameScreen
        //Go to GameScreen with screen transition towards East
        application().gotoGameScreenScreenSlideTransitionEast();
    }
}
 8003364:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoGameScreenScreenSlideTransitionEast();
 8003368:	f7fe bfda 	b.w	8002320 <_ZN23FrontendApplicationBase39gotoGameScreenScreenSlideTransitionEastEv>
}
 800336c:	bd08      	pop	{r3, pc}
	...

08003370 <_ZN18MenuScreenViewBaseC1Ev>:
MenuScreenViewBase::MenuScreenViewBase() :
 8003370:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003374:	4604      	mov	r4, r0
    buttonCallback(this, &MenuScreenViewBase::buttonCallbackHandler)
 8003376:	4626      	mov	r6, r4
 8003378:	2500      	movs	r5, #0
 800337a:	f00a f91b 	bl	800d5b4 <_ZN8touchgfx6ScreenC1Ev>
 800337e:	4b55      	ldr	r3, [pc, #340]	@ (80034d4 <_ZN18MenuScreenViewBaseC1Ev+0x164>)
 8003380:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8003382:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8003386:	2226      	movs	r2, #38	@ 0x26
 8003388:	4629      	mov	r1, r5
 800338a:	4630      	mov	r0, r6
 800338c:	f018 fc75 	bl	801bc7a <memset>
 8003390:	4630      	mov	r0, r6
 8003392:	f7ff f9e7 	bl	8002764 <_ZN8touchgfx6WidgetC1Ev>
 8003396:	4b50      	ldr	r3, [pc, #320]	@ (80034d8 <_ZN18MenuScreenViewBaseC1Ev+0x168>)
 8003398:	6423      	str	r3, [r4, #64]	@ 0x40
 800339a:	f104 0b6c 	add.w	fp, r4, #108	@ 0x6c
 800339e:	23ff      	movs	r3, #255	@ 0xff
 80033a0:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
 80033a4:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 80033a8:	f104 0a98 	add.w	sl, r4, #152	@ 0x98
 80033ac:	a901      	add	r1, sp, #4
 80033ae:	66a5      	str	r5, [r4, #104]	@ 0x68
 80033b0:	4658      	mov	r0, fp
 80033b2:	f104 09c4 	add.w	r9, r4, #196	@ 0xc4
 80033b6:	f8ad 7004 	strh.w	r7, [sp, #4]
 80033ba:	f7ff f9e5 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80033be:	a901      	add	r1, sp, #4
 80033c0:	4650      	mov	r0, sl
 80033c2:	f104 08f0 	add.w	r8, r4, #240	@ 0xf0
 80033c6:	f8ad 7004 	strh.w	r7, [sp, #4]
 80033ca:	f7ff f9dd 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80033ce:	a901      	add	r1, sp, #4
 80033d0:	4648      	mov	r0, r9
 80033d2:	f8ad 7004 	strh.w	r7, [sp, #4]
 80033d6:	f7ff f9d7 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        : Widget(), action(), pressed(false)
 80033da:	4629      	mov	r1, r5
 80033dc:	2226      	movs	r2, #38	@ 0x26
 80033de:	4640      	mov	r0, r8
 80033e0:	f018 fc4b 	bl	801bc7a <memset>
 80033e4:	4640      	mov	r0, r8
 80033e6:	f7ff f9bd 	bl	8002764 <_ZN8touchgfx6WidgetC1Ev>
        touchable = touch;
 80033ea:	2301      	movs	r3, #1
 80033ec:	f884 3114 	strb.w	r3, [r4, #276]	@ 0x114
        : AbstractButton(), up(), down(), alpha(255)
 80033f0:	4b3a      	ldr	r3, [pc, #232]	@ (80034dc <_ZN18MenuScreenViewBaseC1Ev+0x16c>)
 80033f2:	f8c4 30f0 	str.w	r3, [r4, #240]	@ 0xf0
        : pobject(pObject), pmemfun(pmemfun_1)
 80033f6:	4b3a      	ldr	r3, [pc, #232]	@ (80034e0 <_ZN18MenuScreenViewBaseC1Ev+0x170>)
 80033f8:	f8a4 711e 	strh.w	r7, [r4, #286]	@ 0x11e
 80033fc:	e9c4 3449 	strd	r3, r4, [r4, #292]	@ 0x124
 8003400:	4b38      	ldr	r3, [pc, #224]	@ (80034e4 <_ZN18MenuScreenViewBaseC1Ev+0x174>)
 8003402:	f8a4 7120 	strh.w	r7, [r4, #288]	@ 0x120
        setXY(x, y);
 8003406:	462a      	mov	r2, r5
 8003408:	e9c4 354b 	strd	r3, r5, [r4, #300]	@ 0x12c
 800340c:	f884 7122 	strb.w	r7, [r4, #290]	@ 0x122
 8003410:	4629      	mov	r1, r5
 8003412:	4630      	mov	r0, r6
 8003414:	f8c4 5118 	str.w	r5, [r4, #280]	@ 0x118
 8003418:	f884 511c 	strb.w	r5, [r4, #284]	@ 0x11c
 800341c:	f7ff f981 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003420:	4630      	mov	r0, r6
 8003422:	21f0      	movs	r1, #240	@ 0xf0
 8003424:	f7ff f908 	bl	8002638 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8003428:	4630      	mov	r0, r6
 800342a:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 800342e:	f7ff f905 	bl	800263c <_ZN8touchgfx8Drawable9setHeightEs>
 8003432:	1d27      	adds	r7, r4, #4
        color = newColor;
 8003434:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8003438:	66a3      	str	r3, [r4, #104]	@ 0x68
 800343a:	4631      	mov	r1, r6
 800343c:	4638      	mov	r0, r7
 800343e:	f005 fffb 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    backgroundStar1.setXY(0, 0);
 8003442:	462a      	mov	r2, r5
 8003444:	4629      	mov	r1, r5
 8003446:	4658      	mov	r0, fp
 8003448:	f7ff f96b 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    backgroundStar1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_MAIN_ID));
 800344c:	a901      	add	r1, sp, #4
 800344e:	4658      	mov	r0, fp
 8003450:	f8ad 5004 	strh.w	r5, [sp, #4]
 8003454:	f007 fe17 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003458:	4659      	mov	r1, fp
 800345a:	4638      	mov	r0, r7
 800345c:	f005 ffec 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    backgroundStar2.setXY(0, -430);
 8003460:	4a21      	ldr	r2, [pc, #132]	@ (80034e8 <_ZN18MenuScreenViewBaseC1Ev+0x178>)
 8003462:	4629      	mov	r1, r5
 8003464:	4650      	mov	r0, sl
 8003466:	f7ff f95c 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    backgroundStar2.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_MAIN_ID));
 800346a:	a901      	add	r1, sp, #4
 800346c:	4650      	mov	r0, sl
 800346e:	f8ad 5004 	strh.w	r5, [sp, #4]
 8003472:	f007 fe08 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003476:	4651      	mov	r1, sl
 8003478:	4638      	mov	r0, r7
 800347a:	f005 ffdd 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(20, 27);
 800347e:	221b      	movs	r2, #27
 8003480:	4648      	mov	r0, r9
 8003482:	2114      	movs	r1, #20
 8003484:	f7ff f94d 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
 8003488:	2325      	movs	r3, #37	@ 0x25
    image1.setBitmap(touchgfx::Bitmap(BITMAP_TITLE_ID));
 800348a:	a901      	add	r1, sp, #4
 800348c:	4648      	mov	r0, r9
 800348e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8003492:	f007 fdf8 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003496:	4649      	mov	r1, r9
 8003498:	4638      	mov	r0, r7
 800349a:	f005 ffcd 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    button.setXY(70, 215);
 800349e:	4640      	mov	r0, r8
 80034a0:	22d7      	movs	r2, #215	@ 0xd7
 80034a2:	2146      	movs	r1, #70	@ 0x46
 80034a4:	f7ff f93d 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
 80034a8:	2324      	movs	r3, #36	@ 0x24
    button.setBitmaps(touchgfx::Bitmap(BITMAP_START_BTN_ID), touchgfx::Bitmap(BITMAP_START_BTN_ID));
 80034aa:	aa01      	add	r2, sp, #4
 80034ac:	4669      	mov	r1, sp
 80034ae:	4640      	mov	r0, r8
 80034b0:	f8ad 3000 	strh.w	r3, [sp]
 80034b4:	f8ad 3004 	strh.w	r3, [sp, #4]
 80034b8:	f007 fd18 	bl	800aeec <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    button.setAction(buttonCallback);
 80034bc:	f504 7392 	add.w	r3, r4, #292	@ 0x124
 80034c0:	4638      	mov	r0, r7
        action = &callback;
 80034c2:	f8c4 3118 	str.w	r3, [r4, #280]	@ 0x118
 80034c6:	4641      	mov	r1, r8
 80034c8:	f005 ffb6 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80034cc:	4620      	mov	r0, r4
 80034ce:	b003      	add	sp, #12
 80034d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80034d4:	0801d910 	.word	0x0801d910
 80034d8:	0801dd40 	.word	0x0801dd40
 80034dc:	0801dda8 	.word	0x0801dda8
 80034e0:	0801d8f8 	.word	0x0801d8f8
 80034e4:	08003359 	.word	0x08003359
 80034e8:	fffffe52 	.word	0xfffffe52

080034ec <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80034ec:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80034ee:	bb18      	cbnz	r0, 8003538 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80034f0:	4b12      	ldr	r3, [pc, #72]	@ (800353c <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80034f2:	4813      	ldr	r0, [pc, #76]	@ (8003540 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80034f4:	681c      	ldr	r4, [r3, #0]
 80034f6:	4913      	ldr	r1, [pc, #76]	@ (8003544 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80034f8:	b1b4      	cbz	r4, 8003528 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80034fa:	6822      	ldr	r2, [r4, #0]
 80034fc:	4422      	add	r2, r4
 80034fe:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003500:	6862      	ldr	r2, [r4, #4]
 8003502:	4422      	add	r2, r4
 8003504:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003506:	68a2      	ldr	r2, [r4, #8]
 8003508:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800350a:	4b0f      	ldr	r3, [pc, #60]	@ (8003548 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 800350c:	2200      	movs	r2, #0
 800350e:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003510:	f000 f82a 	bl	8003568 <_ZN17TypedTextDatabase8getFontsEv>
 8003514:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8003516:	f000 f825 	bl	8003564 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800351a:	4b0c      	ldr	r3, [pc, #48]	@ (800354c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800351c:	601c      	str	r4, [r3, #0]
        fonts = f;
 800351e:	4b0c      	ldr	r3, [pc, #48]	@ (8003550 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8003520:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8003522:	4b0c      	ldr	r3, [pc, #48]	@ (8003554 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8003524:	8018      	strh	r0, [r3, #0]
    }
}
 8003526:	e007      	b.n	8003538 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8003528:	4b0b      	ldr	r3, [pc, #44]	@ (8003558 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800352a:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800352c:	4b0b      	ldr	r3, [pc, #44]	@ (800355c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800352e:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003530:	4b0b      	ldr	r3, [pc, #44]	@ (8003560 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8003532:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8003534:	2c00      	cmp	r4, #0
 8003536:	d1e8      	bne.n	800350a <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8003538:	bd38      	pop	{r3, r4, r5, pc}
 800353a:	bf00      	nop
 800353c:	2000259c 	.word	0x2000259c
 8003540:	20002594 	.word	0x20002594
 8003544:	20002590 	.word	0x20002590
 8003548:	20002598 	.word	0x20002598
 800354c:	20013850 	.word	0x20013850
 8003550:	20013858 	.word	0x20013858
 8003554:	20013854 	.word	0x20013854
 8003558:	0801e298 	.word	0x0801e298
 800355c:	0801e294 	.word	0x0801e294
 8003560:	0801e29c 	.word	0x0801e29c

08003564 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return 0;
}
 8003564:	2000      	movs	r0, #0
 8003566:	4770      	bx	lr

08003568 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8003568:	4800      	ldr	r0, [pc, #0]	@ (800356c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800356a:	4770      	bx	lr
 800356c:	200025a0 	.word	0x200025a0

08003570 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8003570:	4770      	bx	lr

08003572 <_ZN19FrontendApplicationD0Ev>:
 8003572:	b510      	push	{r4, lr}
 8003574:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8003578:	4604      	mov	r4, r0
 800357a:	f018 f949 	bl	801b810 <_ZdlPvj>
 800357e:	4620      	mov	r0, r4
 8003580:	bd10      	pop	{r4, pc}

08003582 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8003582:	b510      	push	{r4, lr}
 8003584:	4604      	mov	r4, r0
    {
        model.tick();
 8003586:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 800358a:	f000 fcfc 	bl	8003f86 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800358e:	4620      	mov	r0, r4
    }
 8003590:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8003594:	f008 bedc 	b.w	800c350 <_ZN8touchgfx11Application15handleTickEventEv>

08003598 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8003598:	b510      	push	{r4, lr}
 800359a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800359c:	f7fe fe74 	bl	8002288 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80035a0:	4b01      	ldr	r3, [pc, #4]	@ (80035a8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80035a2:	6023      	str	r3, [r4, #0]
{

}
 80035a4:	4620      	mov	r0, r4
 80035a6:	bd10      	pop	{r4, pc}
 80035a8:	0801d944 	.word	0x0801d944

080035ac <_ZN19GameScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~GameScreenPresenter() {};
 80035ac:	4770      	bx	lr

080035ae <_ZThn4_N19GameScreenPresenterD1Ev>:
 80035ae:	3804      	subs	r0, #4
 80035b0:	4770      	bx	lr

080035b2 <_ZN19GameScreenPresenter10deactivateEv>:
}

void GameScreenPresenter::activate()
{

}
 80035b2:	4770      	bx	lr

080035b4 <_ZN19GameScreenPresenterD0Ev>:
 80035b4:	b510      	push	{r4, lr}
 80035b6:	2110      	movs	r1, #16
 80035b8:	4604      	mov	r4, r0
 80035ba:	f018 f929 	bl	801b810 <_ZdlPvj>
 80035be:	4620      	mov	r0, r4
 80035c0:	bd10      	pop	{r4, pc}

080035c2 <_ZThn4_N19GameScreenPresenterD0Ev>:
 80035c2:	f1a0 0004 	sub.w	r0, r0, #4
 80035c6:	e7f5      	b.n	80035b4 <_ZN19GameScreenPresenterD0Ev>

080035c8 <_ZN19GameScreenPresenterC1ER14GameScreenView>:
    ModelListener() : model(0) {}
 80035c8:	2200      	movs	r2, #0
 80035ca:	6082      	str	r2, [r0, #8]
    : view(v)
 80035cc:	4a02      	ldr	r2, [pc, #8]	@ (80035d8 <_ZN19GameScreenPresenterC1ER14GameScreenView+0x10>)
 80035ce:	6002      	str	r2, [r0, #0]
 80035d0:	3218      	adds	r2, #24
 80035d2:	6042      	str	r2, [r0, #4]
 80035d4:	60c1      	str	r1, [r0, #12]
}
 80035d6:	4770      	bx	lr
 80035d8:	0801d998 	.word	0x0801d998

080035dc <_ZN14GameScreenView14tearDownScreenEv>:
}

void GameScreenView::tearDownScreen()
{
    GameScreenViewBase::tearDownScreen();
}
 80035dc:	4770      	bx	lr
	...

080035e0 <_ZN14GameScreenViewD1Ev>:

class GameScreenView : public GameScreenViewBase
{
public:
    GameScreenView();
    virtual ~GameScreenView() {}
 80035e0:	4b13      	ldr	r3, [pc, #76]	@ (8003630 <_ZN14GameScreenViewD1Ev+0x50>)
 80035e2:	b570      	push	{r4, r5, r6, lr}
 80035e4:	4604      	mov	r4, r0
 80035e6:	6003      	str	r3, [r0, #0]
 80035e8:	f241 05e4 	movw	r5, #4324	@ 0x10e4
 80035ec:	f640 762c 	movw	r6, #3884	@ 0xf2c
 80035f0:	5963      	ldr	r3, [r4, r5]
 80035f2:	1960      	adds	r0, r4, r5
 80035f4:	681b      	ldr	r3, [r3, #0]
 80035f6:	3d2c      	subs	r5, #44	@ 0x2c
 80035f8:	4798      	blx	r3
 80035fa:	42b5      	cmp	r5, r6
 80035fc:	d1f8      	bne.n	80035f0 <_ZN14GameScreenViewD1Ev+0x10>
 80035fe:	f640 5674 	movw	r6, #3444	@ 0xd74
 8003602:	5963      	ldr	r3, [r4, r5]
 8003604:	1960      	adds	r0, r4, r5
 8003606:	681b      	ldr	r3, [r3, #0]
 8003608:	3d2c      	subs	r5, #44	@ 0x2c
 800360a:	4798      	blx	r3
 800360c:	42b5      	cmp	r5, r6
 800360e:	d1f8      	bne.n	8003602 <_ZN14GameScreenViewD1Ev+0x22>
 8003610:	f640 5564 	movw	r5, #3428	@ 0xd64
 8003614:	f640 06b4 	movw	r6, #2228	@ 0x8b4
 8003618:	5963      	ldr	r3, [r4, r5]
 800361a:	1960      	adds	r0, r4, r5
 800361c:	681b      	ldr	r3, [r3, #0]
 800361e:	3d3c      	subs	r5, #60	@ 0x3c
 8003620:	4798      	blx	r3
 8003622:	42b5      	cmp	r5, r6
 8003624:	d1f8      	bne.n	8003618 <_ZN14GameScreenViewD1Ev+0x38>
 8003626:	4620      	mov	r0, r4
 8003628:	f7ff f82a 	bl	8002680 <_ZN18GameScreenViewBaseD1Ev>
 800362c:	4620      	mov	r0, r4
 800362e:	bd70      	pop	{r4, r5, r6, pc}
 8003630:	0801d9cc 	.word	0x0801d9cc

08003634 <_ZN14GameScreenViewD0Ev>:
 8003634:	b510      	push	{r4, lr}
 8003636:	4604      	mov	r4, r0
 8003638:	f7ff ffd2 	bl	80035e0 <_ZN14GameScreenViewD1Ev>
 800363c:	4620      	mov	r0, r4
 800363e:	f241 1110 	movw	r1, #4368	@ 0x1110
 8003642:	f018 f8e5 	bl	801b810 <_ZdlPvj>
 8003646:	4620      	mov	r0, r4
 8003648:	bd10      	pop	{r4, pc}
	...

0800364c <_ZN14GameScreenViewC1Ev>:
GameScreenView::GameScreenView()
 800364c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003650:	4605      	mov	r5, r0
 8003652:	b08f      	sub	sp, #60	@ 0x3c
 8003654:	f7ff f8ce 	bl	80027f4 <_ZN18GameScreenViewBaseC1Ev>
 8003658:	f605 09b4 	addw	r9, r5, #2228	@ 0x8b4
 800365c:	4b74      	ldr	r3, [pc, #464]	@ (8003830 <_ZN14GameScreenViewC1Ev+0x1e4>)
 800365e:	602b      	str	r3, [r5, #0]
 8003660:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8003664:	a902      	add	r1, sp, #8
 8003666:	4648      	mov	r0, r9
        : animationDoneAction(0),
 8003668:	2600      	movs	r6, #0
          running(false)
 800366a:	f8df b1cc 	ldr.w	fp, [pc, #460]	@ 8003838 <_ZN14GameScreenViewC1Ev+0x1ec>
 800366e:	f8ad 7008 	strh.w	r7, [sp, #8]
          updateTicksInterval(updateInterval),
 8003672:	f04f 0a01 	mov.w	sl, #1
          running(false)
 8003676:	f7ff f887 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800367a:	f505 680f 	add.w	r8, r5, #2288	@ 0x8f0
          startId(BITMAP_INVALID),
 800367e:	f04f 33ff 	mov.w	r3, #4294967295
 8003682:	f8c5 38e4 	str.w	r3, [r5, #2276]	@ 0x8e4
          running(false)
 8003686:	f8c5 b8b4 	str.w	fp, [r5, #2228]	@ 0x8b4
        : animationDoneAction(0),
 800368a:	f8c5 68e0 	str.w	r6, [r5, #2272]	@ 0x8e0
          updateTicksInterval(updateInterval),
 800368e:	f8c5 a8e8 	str.w	sl, [r5, #2280]	@ 0x8e8
          running(false)
 8003692:	f885 68ec 	strb.w	r6, [r5, #2284]	@ 0x8ec
 8003696:	f505 635a 	add.w	r3, r5, #3488	@ 0xda0
 800369a:	4644      	mov	r4, r8
 800369c:	4620      	mov	r0, r4
 800369e:	a902      	add	r1, sp, #8
 80036a0:	9301      	str	r3, [sp, #4]
 80036a2:	f8ad 7008 	strh.w	r7, [sp, #8]
 80036a6:	f7ff f86f 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80036aa:	9b01      	ldr	r3, [sp, #4]
 80036ac:	f8c4 b000 	str.w	fp, [r4]
        : animationDoneAction(0),
 80036b0:	62e6      	str	r6, [r4, #44]	@ 0x2c
          startId(BITMAP_INVALID),
 80036b2:	8627      	strh	r7, [r4, #48]	@ 0x30
          endId(BITMAP_INVALID),
 80036b4:	8667      	strh	r7, [r4, #50]	@ 0x32
          updateTicksInterval(updateInterval),
 80036b6:	f884 a034 	strb.w	sl, [r4, #52]	@ 0x34
          ticksSinceUpdate(0),
 80036ba:	f884 6035 	strb.w	r6, [r4, #53]	@ 0x35
          reverse(false),
 80036be:	f884 6036 	strb.w	r6, [r4, #54]	@ 0x36
          loopAnimation(false),
 80036c2:	f884 6037 	strb.w	r6, [r4, #55]	@ 0x37
          running(false)
 80036c6:	f884 6038 	strb.w	r6, [r4, #56]	@ 0x38
 80036ca:	343c      	adds	r4, #60	@ 0x3c
 80036cc:	429c      	cmp	r4, r3
 80036ce:	d1e5      	bne.n	800369c <_ZN14GameScreenViewC1Ev+0x50>
 80036d0:	f605 7a58 	addw	sl, r5, #3928	@ 0xf58
 80036d4:	4626      	mov	r6, r4
 80036d6:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 80036da:	4630      	mov	r0, r6
 80036dc:	a902      	add	r1, sp, #8
 80036de:	362c      	adds	r6, #44	@ 0x2c
 80036e0:	f8ad 7008 	strh.w	r7, [sp, #8]
 80036e4:	f7ff f850 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80036e8:	4556      	cmp	r6, sl
 80036ea:	d1f6      	bne.n	80036da <_ZN14GameScreenViewC1Ev+0x8e>
 80036ec:	f505 5788 	add.w	r7, r5, #4352	@ 0x1100
 80036f0:	4656      	mov	r6, sl
 80036f2:	3710      	adds	r7, #16
 80036f4:	f64f 7bff 	movw	fp, #65535	@ 0xffff
 80036f8:	4630      	mov	r0, r6
 80036fa:	a902      	add	r1, sp, #8
 80036fc:	362c      	adds	r6, #44	@ 0x2c
 80036fe:	f8ad b008 	strh.w	fp, [sp, #8]
 8003702:	f7ff f841 	bl	8002788 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003706:	42be      	cmp	r6, r7
 8003708:	d1f6      	bne.n	80036f8 <_ZN14GameScreenViewC1Ev+0xac>
  backgroundPosition = 0;
 800370a:	2300      	movs	r3, #0
#define APPLICATION_USER_SRC_GAME_HPP_
#include "Ship.hpp"
#include "Bullet.hpp"
#include "Enemy.hpp"

class Game {
 800370c:	4e49      	ldr	r6, [pc, #292]	@ (8003834 <_ZN14GameScreenViewC1Ev+0x1e8>)
 800370e:	f8c5 38b0 	str.w	r3, [r5, #2224]	@ 0x8b0
  gameInstance = Game();
 8003712:	a802      	add	r0, sp, #8
 8003714:	f000 fd42 	bl	800419c <_ZN4GameC1Ev>
 8003718:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800371c:	80b3      	strh	r3, [r6, #4]
 800371e:	f89d 300e 	ldrb.w	r3, [sp, #14]
 8003722:	71b3      	strb	r3, [r6, #6]
const uint8_t IS_SHOWN = 1;
const uint8_t SHOULD_SHOW = 2;
const uint8_t IS_HIDDEN = 3;
const uint8_t SHOULD_HIDE = 4;

class Entity {
 8003724:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8003728:	9a05      	ldr	r2, [sp, #20]
 800372a:	83b3      	strh	r3, [r6, #28]

#include <BitmapDatabase.hpp>
#include <touchgfx/widgets/Image.hpp>
#include "Entity.hpp"

class Ship: public Entity {
 800372c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800372e:	60f2      	str	r2, [r6, #12]
 8003730:	6233      	str	r3, [r6, #32]
 8003732:	9a06      	ldr	r2, [sp, #24]
 8003734:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003736:	6132      	str	r2, [r6, #16]
 8003738:	6273      	str	r3, [r6, #36]	@ 0x24
 800373a:	9a07      	ldr	r2, [sp, #28]
 800373c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800373e:	6172      	str	r2, [r6, #20]
     *
     * @param [in] d The Drawable to remove.
     */
    void remove(Drawable& d)
    {
        container.remove(d);
 8003740:	1d2f      	adds	r7, r5, #4
 8003742:	9a08      	ldr	r2, [sp, #32]
 8003744:	62b3      	str	r3, [r6, #40]	@ 0x28
 8003746:	a802      	add	r0, sp, #8
 8003748:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 800374c:	61b2      	str	r2, [r6, #24]
 800374e:	85b3      	strh	r3, [r6, #44]	@ 0x2c
 8003750:	f000 fd36 	bl	80041c0 <_ZN4GameD1Ev>
 8003754:	4638      	mov	r0, r7
 8003756:	f205 71ac 	addw	r1, r5, #1964	@ 0x7ac
 800375a:	f005 feae 	bl	80094ba <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 800375e:	4638      	mov	r0, r7
 8003760:	f505 61fb 	add.w	r1, r5, #2008	@ 0x7d8
 8003764:	f005 fea9 	bl	80094ba <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8003768:	4638      	mov	r0, r7
 800376a:	f605 0104 	addw	r1, r5, #2052	@ 0x804
 800376e:	f005 fea4 	bl	80094ba <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8003772:	4638      	mov	r0, r7
 8003774:	f505 7109 	add.w	r1, r5, #548	@ 0x224
 8003778:	f005 fe9f 	bl	80094ba <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 800377c:	4638      	mov	r0, r7
 800377e:	f505 7114 	add.w	r1, r5, #592	@ 0x250
 8003782:	f005 fe9a 	bl	80094ba <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8003786:	231f      	movs	r3, #31
  shipImage.setBitmap(touchgfx::Bitmap(BITMAP_SHIP_MAIN_ID));
 8003788:	a902      	add	r1, sp, #8
 800378a:	4648      	mov	r0, r9
 800378c:	f8ad 3008 	strh.w	r3, [sp, #8]
 8003790:	f007 f878 	bl	800a884 <_ZN8touchgfx13AnimatedImage9setBitmapERKNS_6BitmapE>
  shipImage.setXY(gameInstance.ship.coordinateX, gameInstance.ship.coordinateY);
 8003794:	f9b6 200e 	ldrsh.w	r2, [r6, #14]
 8003798:	f9b6 100c 	ldrsh.w	r1, [r6, #12]
 800379c:	4648      	mov	r0, r9
 800379e:	f7fe ffc0 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
        container.add(d);
 80037a2:	4638      	mov	r0, r7
 80037a4:	4649      	mov	r1, r9
 80037a6:	f005 fe47 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80037aa:	2704      	movs	r7, #4
    enemyBulletImage[i].setXY(321, 33);
 80037ac:	f504 76dc 	add.w	r6, r4, #440	@ 0x1b8
 80037b0:	2221      	movs	r2, #33	@ 0x21
 80037b2:	f240 1141 	movw	r1, #321	@ 0x141
 80037b6:	4630      	mov	r0, r6
 80037b8:	f7fe ffb3 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    enemyBulletImage[i].setBitmap(touchgfx::Bitmap(BITMAP_ENEMY_BULLET_RED_ID));
 80037bc:	f8d4 31b8 	ldr.w	r3, [r4, #440]	@ 0x1b8
 80037c0:	a902      	add	r1, sp, #8
 80037c2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80037c4:	f8ad 7008 	strh.w	r7, [sp, #8]
 80037c8:	4630      	mov	r0, r6
 80037ca:	4798      	blx	r3
    shipBulletImage[i].setXY(321, 33);
 80037cc:	4620      	mov	r0, r4
 80037ce:	2221      	movs	r2, #33	@ 0x21
 80037d0:	f240 1141 	movw	r1, #321	@ 0x141
 80037d4:	f7fe ffa5 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
    shipBulletImage[i].setBitmap(touchgfx::Bitmap(BITMAP_BULLET_DOUBLE_ID));
 80037d8:	6823      	ldr	r3, [r4, #0]
 80037da:	2201      	movs	r2, #1
 80037dc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80037de:	f8ad 2008 	strh.w	r2, [sp, #8]
 80037e2:	4620      	mov	r0, r4
 80037e4:	a902      	add	r1, sp, #8
  for(int i=0;i<MAX_BULLET;i++) {
 80037e6:	342c      	adds	r4, #44	@ 0x2c
    shipBulletImage[i].setBitmap(touchgfx::Bitmap(BITMAP_BULLET_DOUBLE_ID));
 80037e8:	4798      	blx	r3
  for(int i=0;i<MAX_BULLET;i++) {
 80037ea:	4554      	cmp	r4, sl
 80037ec:	d1de      	bne.n	80037ac <_ZN14GameScreenViewC1Ev+0x160>
  for(int i=0;i<MAX_ENEMY;i++) {
 80037ee:	2400      	movs	r4, #0
    switch(i%3) {
 80037f0:	2603      	movs	r6, #3
 80037f2:	fbb4 f3f6 	udiv	r3, r4, r6
 80037f6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80037fa:	1ae3      	subs	r3, r4, r3
 80037fc:	d00e      	beq.n	800381c <_ZN14GameScreenViewC1Ev+0x1d0>
 80037fe:	2b01      	cmp	r3, #1
 8003800:	d012      	beq.n	8003828 <_ZN14GameScreenViewC1Ev+0x1dc>
    enemyImage[i].setUpdateTicksInterval(20);
 8003802:	4640      	mov	r0, r8
 8003804:	2114      	movs	r1, #20
  for(int i=0;i<MAX_ENEMY;i++) {
 8003806:	3401      	adds	r4, #1
    enemyImage[i].setUpdateTicksInterval(20);
 8003808:	f007 f91b 	bl	800aa42 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
  for(int i=0;i<MAX_ENEMY;i++) {
 800380c:	2c14      	cmp	r4, #20
 800380e:	f108 083c 	add.w	r8, r8, #60	@ 0x3c
 8003812:	d1ee      	bne.n	80037f2 <_ZN14GameScreenViewC1Ev+0x1a6>
}
 8003814:	4628      	mov	r0, r5
 8003816:	b00f      	add	sp, #60	@ 0x3c
 8003818:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      enemyImage[i].setBitmaps(BITMAP_ENEMY_GREEN_01_ID, BITMAP_ENEMY_GREEN_02_ID);
 800381c:	2206      	movs	r2, #6
 800381e:	2105      	movs	r1, #5
      enemyImage[i].setBitmaps(BITMAP_ENEMY_RED_01_ID, BITMAP_ENEMY_RED_02_ID);
 8003820:	4640      	mov	r0, r8
 8003822:	f007 f8fb 	bl	800aa1c <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
      break;
 8003826:	e7ec      	b.n	8003802 <_ZN14GameScreenViewC1Ev+0x1b6>
      enemyImage[i].setBitmaps(BITMAP_ENEMY_RED_01_ID, BITMAP_ENEMY_RED_02_ID);
 8003828:	2208      	movs	r2, #8
 800382a:	2107      	movs	r1, #7
 800382c:	e7f8      	b.n	8003820 <_ZN14GameScreenViewC1Ev+0x1d4>
 800382e:	bf00      	nop
 8003830:	0801d9cc 	.word	0x0801d9cc
 8003834:	20002a68 	.word	0x20002a68
 8003838:	0801dc50 	.word	0x0801dc50

0800383c <_ZN14GameScreenView15handleTickEventEv>:


// Render game objects
void GameScreenView::handleTickEvent() {
 800383c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  GameScreenViewBase::handleTickEvent();

  uint16_t score = gameInstance.score;
 8003840:	4d2d      	ldr	r5, [pc, #180]	@ (80038f8 <_ZN14GameScreenView15handleTickEventEv+0xbc>)
 8003842:	88ae      	ldrh	r6, [r5, #4]
void GameScreenView::handleTickEvent() {
 8003844:	4604      	mov	r4, r0

  uint16_t s1 = score / 100;
  uint16_t s2 = (score / 10) % 10;
 8003846:	230a      	movs	r3, #10
  score36.setVisible(false);
  score37.setVisible(false);
  score38.setVisible(false);
  score39.setVisible(false);

  if(s1 == 0) score10.setVisible(true);
 8003848:	2e63      	cmp	r6, #99	@ 0x63
  uint16_t s2 = (score / 10) % 10;
 800384a:	fbb6 f2f3 	udiv	r2, r6, r3
 800384e:	fbb2 f1f3 	udiv	r1, r2, r3
 8003852:	fb03 2111 	mls	r1, r3, r1, r2
  uint16_t s3 = score % 10;
 8003856:	fb03 6212 	mls	r2, r3, r2, r6
        visible = vis;
 800385a:	f04f 0300 	mov.w	r3, #0
  uint16_t s1 = score / 100;
 800385e:	f04f 0064 	mov.w	r0, #100	@ 0x64
  uint16_t s2 = (score / 10) % 10;
 8003862:	b289      	uxth	r1, r1
  uint16_t s3 = score % 10;
 8003864:	b292      	uxth	r2, r2
 8003866:	f884 32a9 	strb.w	r3, [r4, #681]	@ 0x2a9
 800386a:	f884 32d5 	strb.w	r3, [r4, #725]	@ 0x2d5
 800386e:	f884 3301 	strb.w	r3, [r4, #769]	@ 0x301
 8003872:	f884 332d 	strb.w	r3, [r4, #813]	@ 0x32d
 8003876:	f884 3359 	strb.w	r3, [r4, #857]	@ 0x359
 800387a:	f884 3385 	strb.w	r3, [r4, #901]	@ 0x385
 800387e:	f884 33b1 	strb.w	r3, [r4, #945]	@ 0x3b1
 8003882:	f884 33dd 	strb.w	r3, [r4, #989]	@ 0x3dd
 8003886:	f884 3409 	strb.w	r3, [r4, #1033]	@ 0x409
 800388a:	f884 3435 	strb.w	r3, [r4, #1077]	@ 0x435
 800388e:	f884 3461 	strb.w	r3, [r4, #1121]	@ 0x461
 8003892:	f884 348d 	strb.w	r3, [r4, #1165]	@ 0x48d
 8003896:	f884 34b9 	strb.w	r3, [r4, #1209]	@ 0x4b9
 800389a:	f884 34e5 	strb.w	r3, [r4, #1253]	@ 0x4e5
 800389e:	f884 3511 	strb.w	r3, [r4, #1297]	@ 0x511
 80038a2:	f884 353d 	strb.w	r3, [r4, #1341]	@ 0x53d
 80038a6:	f884 3569 	strb.w	r3, [r4, #1385]	@ 0x569
 80038aa:	f884 3595 	strb.w	r3, [r4, #1429]	@ 0x595
 80038ae:	f884 35c1 	strb.w	r3, [r4, #1473]	@ 0x5c1
 80038b2:	f884 35ed 	strb.w	r3, [r4, #1517]	@ 0x5ed
 80038b6:	f884 3619 	strb.w	r3, [r4, #1561]	@ 0x619
 80038ba:	f884 3645 	strb.w	r3, [r4, #1605]	@ 0x645
 80038be:	f884 3671 	strb.w	r3, [r4, #1649]	@ 0x671
 80038c2:	f884 369d 	strb.w	r3, [r4, #1693]	@ 0x69d
 80038c6:	f884 36c9 	strb.w	r3, [r4, #1737]	@ 0x6c9
 80038ca:	f884 36f5 	strb.w	r3, [r4, #1781]	@ 0x6f5
 80038ce:	f884 3721 	strb.w	r3, [r4, #1825]	@ 0x721
 80038d2:	f884 374d 	strb.w	r3, [r4, #1869]	@ 0x74d
 80038d6:	f884 3779 	strb.w	r3, [r4, #1913]	@ 0x779
 80038da:	f884 37a5 	strb.w	r3, [r4, #1957]	@ 0x7a5
  uint16_t s1 = score / 100;
 80038de:	fbb6 f0f0 	udiv	r0, r6, r0
  if(s1 == 0) score10.setVisible(true);
 80038e2:	d80b      	bhi.n	80038fc <_ZN14GameScreenView15handleTickEventEv+0xc0>
 80038e4:	2301      	movs	r3, #1
 80038e6:	f884 32a9 	strb.w	r3, [r4, #681]	@ 0x2a9
  if(s1 == 1) score11.setVisible(true);
  if(s1 == 2) score12.setVisible(true);
  if(s1 == 3) score13.setVisible(true);
 80038ea:	2803      	cmp	r0, #3
 80038ec:	f040 8182 	bne.w	8003bf4 <_ZN14GameScreenView15handleTickEventEv+0x3b8>
 80038f0:	2301      	movs	r3, #1
 80038f2:	f884 332d 	strb.w	r3, [r4, #813]	@ 0x32d
  if(s1 == 4) score14.setVisible(true);
  if(s1 == 5) score15.setVisible(true);
  if(s1 == 6) score16.setVisible(true);
  if(s1 == 7) score17.setVisible(true);
  if(s1 == 8) score18.setVisible(true);
  if(s1 == 9) score19.setVisible(true);
 80038f6:	e006      	b.n	8003906 <_ZN14GameScreenView15handleTickEventEv+0xca>
 80038f8:	20002a68 	.word	0x20002a68
  if(s1 == 1) score11.setVisible(true);
 80038fc:	2801      	cmp	r0, #1
 80038fe:	f040 8172 	bne.w	8003be6 <_ZN14GameScreenView15handleTickEventEv+0x3aa>
 8003902:	f884 02d5 	strb.w	r0, [r4, #725]	@ 0x2d5

  if(s2 == 0) score20.setVisible(true);
 8003906:	2900      	cmp	r1, #0
 8003908:	f040 8198 	bne.w	8003c3c <_ZN14GameScreenView15handleTickEventEv+0x400>
 800390c:	2301      	movs	r3, #1
 800390e:	f884 3461 	strb.w	r3, [r4, #1121]	@ 0x461
  if(s2 == 6) score26.setVisible(true);
  if(s2 == 7) score27.setVisible(true);
  if(s2 == 8) score28.setVisible(true);
  if(s2 == 9) score29.setVisible(true);

  if(s3 == 0) score30.setVisible(true);
 8003912:	2a00      	cmp	r2, #0
 8003914:	f040 81e2 	bne.w	8003cdc <_ZN14GameScreenView15handleTickEventEv+0x4a0>
 8003918:	2301      	movs	r3, #1
 800391a:	f884 3619 	strb.w	r3, [r4, #1561]	@ 0x619
  if(s3 == 6) score36.setVisible(true);
  if(s3 == 7) score37.setVisible(true);
  if(s3 == 8) score38.setVisible(true);
  if(s3 == 9) score39.setVisible(true);

  backgroundPosition++;
 800391e:	f8d4 38b0 	ldr.w	r3, [r4, #2224]	@ 0x8b0
 8003922:	3301      	adds	r3, #1
  if (backgroundPosition > 430) backgroundPosition = 0;
 8003924:	f5b3 7fd7 	cmp.w	r3, #430	@ 0x1ae
 8003928:	bfc8      	it	gt
 800392a:	2300      	movgt	r3, #0
 800392c:	f8c4 38b0 	str.w	r3, [r4, #2224]	@ 0x8b0
  backgroundStar1.setY(backgroundPosition);
 8003930:	f8a4 3072 	strh.w	r3, [r4, #114]	@ 0x72
  backgroundStar2.setY(backgroundPosition - 430);
 8003934:	f5a3 73d7 	sub.w	r3, r3, #430	@ 0x1ae
        rect.y = y;
 8003938:	f8a4 309e 	strh.w	r3, [r4, #158]	@ 0x9e

  if(shouldEndGame && shouldStopTask && !shouldStopScreen) {
 800393c:	4bc5      	ldr	r3, [pc, #788]	@ (8003c54 <_ZN14GameScreenView15handleTickEventEv+0x418>)
 800393e:	781b      	ldrb	r3, [r3, #0]
 8003940:	1d27      	adds	r7, r4, #4
 8003942:	b323      	cbz	r3, 800398e <_ZN14GameScreenView15handleTickEventEv+0x152>
 8003944:	4bc4      	ldr	r3, [pc, #784]	@ (8003c58 <_ZN14GameScreenView15handleTickEventEv+0x41c>)
 8003946:	781b      	ldrb	r3, [r3, #0]
 8003948:	b30b      	cbz	r3, 800398e <_ZN14GameScreenView15handleTickEventEv+0x152>
 800394a:	f8df 831c 	ldr.w	r8, [pc, #796]	@ 8003c68 <_ZN14GameScreenView15handleTickEventEv+0x42c>
 800394e:	f898 3000 	ldrb.w	r3, [r8]
 8003952:	b9e3      	cbnz	r3, 800398e <_ZN14GameScreenView15handleTickEventEv+0x152>
 8003954:	f504 7109 	add.w	r1, r4, #548	@ 0x224
 8003958:	4638      	mov	r0, r7
 800395a:	f005 fd6d 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
	add(record);
	if(score > 150) {
 800395e:	2e96      	cmp	r6, #150	@ 0x96
 8003960:	f240 81f1 	bls.w	8003d46 <_ZN14GameScreenView15handleTickEventEv+0x50a>
 8003964:	f604 0104 	addw	r1, r4, #2052	@ 0x804
 8003968:	4638      	mov	r0, r7
	} else if (score > 50) {
		add(star2);
	} else {
		add(star1);
	}
    add(menu_button);
 800396a:	f504 7614 	add.w	r6, r4, #592	@ 0x250
 800396e:	f005 fd63 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003972:	4631      	mov	r1, r6
 8003974:	4638      	mov	r0, r7
 8003976:	f005 fd5f 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    menu_button.invalidate();
 800397a:	4630      	mov	r0, r6
 800397c:	f009 fbe2 	bl	800d144 <_ZNK8touchgfx8Drawable10invalidateEv>
    shouldStopScreen = true;
 8003980:	2301      	movs	r3, #1
 8003982:	f888 3000 	strb.w	r3, [r8]
    osThreadTerminate(gameTaskHandle);
 8003986:	4bb5      	ldr	r3, [pc, #724]	@ (8003c5c <_ZN14GameScreenView15handleTickEventEv+0x420>)
 8003988:	6818      	ldr	r0, [r3, #0]
 800398a:	f003 fbe4 	bl	8007156 <osThreadTerminate>
  }

  // Get input
  uint8_t res = 0;
  uint32_t count = osMessageQueueGetCount(RightKeyQueueHandle);
 800398e:	f8df 82dc 	ldr.w	r8, [pc, #732]	@ 8003c6c <_ZN14GameScreenView15handleTickEventEv+0x430>
 8003992:	f8df 92dc 	ldr.w	r9, [pc, #732]	@ 8003c70 <_ZN14GameScreenView15handleTickEventEv+0x434>
 8003996:	f8d8 0000 	ldr.w	r0, [r8]
  uint8_t res = 0;
 800399a:	f04f 0a00 	mov.w	sl, #0
 800399e:	f88d a003 	strb.w	sl, [sp, #3]
  uint32_t count = osMessageQueueGetCount(RightKeyQueueHandle);
 80039a2:	f003 fd40 	bl	8007426 <osMessageQueueGetCount>
  if(count > 0) {
      osMessageQueueGet(RightKeyQueueHandle,&res, NULL, osWaitForever);
      if(res == 'R') {
        gameInstance.ship.updateVelocityX(gameInstance.ship.VELOCITY);
        shipImage.setBitmap(touchgfx::Bitmap(BITMAP_SHIP_RIGHT_ID));
 80039a6:	f604 06b4 	addw	r6, r4, #2228	@ 0x8b4
  if(count > 0) {
 80039aa:	b1e8      	cbz	r0, 80039e8 <_ZN14GameScreenView15handleTickEventEv+0x1ac>
      osMessageQueueGet(RightKeyQueueHandle,&res, NULL, osWaitForever);
 80039ac:	f04f 33ff 	mov.w	r3, #4294967295
 80039b0:	f8d8 0000 	ldr.w	r0, [r8]
 80039b4:	4652      	mov	r2, sl
 80039b6:	f10d 0103 	add.w	r1, sp, #3
 80039ba:	f003 fd04 	bl	80073c6 <osMessageQueueGet>
      if(res == 'R') {
 80039be:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80039c2:	2b52      	cmp	r3, #82	@ 0x52
 80039c4:	f040 81c6 	bne.w	8003d54 <_ZN14GameScreenView15handleTickEventEv+0x518>
        gameInstance.ship.updateVelocityX(gameInstance.ship.VELOCITY);
 80039c8:	f9b5 1028 	ldrsh.w	r1, [r5, #40]	@ 0x28
 80039cc:	48a4      	ldr	r0, [pc, #656]	@ (8003c60 <_ZN14GameScreenView15handleTickEventEv+0x424>)
 80039ce:	f000 fc79 	bl	80042c4 <_ZN4Ship15updateVelocityXEs>
 80039d2:	2320      	movs	r3, #32
        shipImage.setBitmap(touchgfx::Bitmap(BITMAP_SHIP_RIGHT_ID));
 80039d4:	4630      	mov	r0, r6
 80039d6:	a901      	add	r1, sp, #4
 80039d8:	f8ad 3004 	strh.w	r3, [sp, #4]
 80039dc:	f006 ff52 	bl	800a884 <_ZN8touchgfx13AnimatedImage9setBitmapERKNS_6BitmapE>
        osMessageQueueReset(LeftKeyQueueHandle);
 80039e0:	f8d9 0000 	ldr.w	r0, [r9]
 80039e4:	f003 fd21 	bl	800742a <osMessageQueueReset>
      } else if(res == 'N'){
        gameInstance.ship.updateVelocityX(0);
        shipImage.setBitmap(touchgfx::Bitmap(BITMAP_SHIP_MAIN_ID));
      }
  }
  uint32_t count2 = osMessageQueueGetCount(LeftKeyQueueHandle);
 80039e8:	f8d9 0000 	ldr.w	r0, [r9]
 80039ec:	f003 fd1b 	bl	8007426 <osMessageQueueGetCount>
  if(count2 > 0) {
 80039f0:	b1f0      	cbz	r0, 8003a30 <_ZN14GameScreenView15handleTickEventEv+0x1f4>
      osMessageQueueGet(LeftKeyQueueHandle,&res, NULL, osWaitForever);
 80039f2:	f04f 33ff 	mov.w	r3, #4294967295
 80039f6:	f8d9 0000 	ldr.w	r0, [r9]
 80039fa:	2200      	movs	r2, #0
 80039fc:	f10d 0103 	add.w	r1, sp, #3
 8003a00:	f003 fce1 	bl	80073c6 <osMessageQueueGet>
      if(res == 'L') {
 8003a04:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8003a08:	2b4c      	cmp	r3, #76	@ 0x4c
 8003a0a:	f040 81b2 	bne.w	8003d72 <_ZN14GameScreenView15handleTickEventEv+0x536>
        gameInstance.ship.updateVelocityX(-gameInstance.ship.VELOCITY);
 8003a0e:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
 8003a10:	4893      	ldr	r0, [pc, #588]	@ (8003c60 <_ZN14GameScreenView15handleTickEventEv+0x424>)
 8003a12:	4249      	negs	r1, r1
 8003a14:	b209      	sxth	r1, r1
 8003a16:	f000 fc55 	bl	80042c4 <_ZN4Ship15updateVelocityXEs>
 8003a1a:	231e      	movs	r3, #30
        shipImage.setBitmap(touchgfx::Bitmap(BITMAP_SHIP_LEFT_ID));
 8003a1c:	4630      	mov	r0, r6
 8003a1e:	a901      	add	r1, sp, #4
 8003a20:	f8ad 3004 	strh.w	r3, [sp, #4]
 8003a24:	f006 ff2e 	bl	800a884 <_ZN8touchgfx13AnimatedImage9setBitmapERKNS_6BitmapE>
        osMessageQueueReset(RightKeyQueueHandle);
 8003a28:	f8d8 0000 	ldr.w	r0, [r8]
 8003a2c:	f003 fcfd 	bl	800742a <osMessageQueueReset>
        gameInstance.ship.updateVelocityX(0);
        shipImage.setBitmap(touchgfx::Bitmap(BITMAP_SHIP_MAIN_ID));
      }
  }

  uint32_t count3 = osMessageQueueGetCount(UpKeyQueueHandle);
 8003a30:	f8df 8240 	ldr.w	r8, [pc, #576]	@ 8003c74 <_ZN14GameScreenView15handleTickEventEv+0x438>
 8003a34:	f8df 9240 	ldr.w	r9, [pc, #576]	@ 8003c78 <_ZN14GameScreenView15handleTickEventEv+0x43c>
 8003a38:	f8d8 0000 	ldr.w	r0, [r8]
 8003a3c:	f003 fcf3 	bl	8007426 <osMessageQueueGetCount>
  if(count3 > 0) {
 8003a40:	b1b0      	cbz	r0, 8003a70 <_ZN14GameScreenView15handleTickEventEv+0x234>
      osMessageQueueGet(UpKeyQueueHandle,&res, NULL, osWaitForever);
 8003a42:	f04f 33ff 	mov.w	r3, #4294967295
 8003a46:	f8d8 0000 	ldr.w	r0, [r8]
 8003a4a:	2200      	movs	r2, #0
 8003a4c:	f10d 0103 	add.w	r1, sp, #3
 8003a50:	f003 fcb9 	bl	80073c6 <osMessageQueueGet>
      if(res == 'U') {
 8003a54:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8003a58:	2b55      	cmp	r3, #85	@ 0x55
 8003a5a:	f040 8199 	bne.w	8003d90 <_ZN14GameScreenView15handleTickEventEv+0x554>
        gameInstance.ship.updateVelocityY(gameInstance.ship.VELOCITY);
 8003a5e:	4880      	ldr	r0, [pc, #512]	@ (8003c60 <_ZN14GameScreenView15handleTickEventEv+0x424>)
 8003a60:	f9b5 1028 	ldrsh.w	r1, [r5, #40]	@ 0x28
 8003a64:	f000 fc30 	bl	80042c8 <_ZN4Ship15updateVelocityYEs>
        osMessageQueueReset(DownKeyQueueHandle);
 8003a68:	f8d9 0000 	ldr.w	r0, [r9]
 8003a6c:	f003 fcdd 	bl	800742a <osMessageQueueReset>
      } else if(res == 'N'){
        gameInstance.ship.updateVelocityY(0);
      }
  }

  uint32_t count4 = osMessageQueueGetCount(DownKeyQueueHandle);
 8003a70:	f8d9 0000 	ldr.w	r0, [r9]
 8003a74:	f003 fcd7 	bl	8007426 <osMessageQueueGetCount>
  if(count4 > 0) {
 8003a78:	b1b8      	cbz	r0, 8003aaa <_ZN14GameScreenView15handleTickEventEv+0x26e>
      osMessageQueueGet(DownKeyQueueHandle,&res, NULL, osWaitForever);
 8003a7a:	f04f 33ff 	mov.w	r3, #4294967295
 8003a7e:	f8d9 0000 	ldr.w	r0, [r9]
 8003a82:	2200      	movs	r2, #0
 8003a84:	f10d 0103 	add.w	r1, sp, #3
 8003a88:	f003 fc9d 	bl	80073c6 <osMessageQueueGet>
      if(res == 'D') {
 8003a8c:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8003a90:	2b44      	cmp	r3, #68	@ 0x44
 8003a92:	f040 8185 	bne.w	8003da0 <_ZN14GameScreenView15handleTickEventEv+0x564>
        gameInstance.ship.updateVelocityY(-gameInstance.ship.VELOCITY);
 8003a96:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
 8003a98:	4871      	ldr	r0, [pc, #452]	@ (8003c60 <_ZN14GameScreenView15handleTickEventEv+0x424>)
 8003a9a:	4249      	negs	r1, r1
 8003a9c:	b209      	sxth	r1, r1
 8003a9e:	f000 fc13 	bl	80042c8 <_ZN4Ship15updateVelocityYEs>
        osMessageQueueReset(UpKeyQueueHandle);
 8003aa2:	f8d8 0000 	ldr.w	r0, [r8]
 8003aa6:	f003 fcc0 	bl	800742a <osMessageQueueReset>
        gameInstance.ship.updateVelocityY(0);
      }
  }

  // update player position and sprite
  shipImage.moveTo(gameInstance.ship.coordinateX, gameInstance.ship.coordinateY);
 8003aaa:	4630      	mov	r0, r6
 8003aac:	f9b5 200e 	ldrsh.w	r2, [r5, #14]
 8003ab0:	f9b5 100c 	ldrsh.w	r1, [r5, #12]
 8003ab4:	f8df a1c4 	ldr.w	sl, [pc, #452]	@ 8003c7c <_ZN14GameScreenView15handleTickEventEv+0x440>
 8003ab8:	f7fe fdc7 	bl	800264a <_ZN8touchgfx8Drawable6moveToEss>

  // render ship bullet
  for(int i=0; i<MAX_BULLET;i++) {
 8003abc:	f504 695a 	add.w	r9, r4, #3488	@ 0xda0
 8003ac0:	4626      	mov	r6, r4
 8003ac2:	f604 7858 	addw	r8, r4, #3928	@ 0xf58
    switch(shipBullet[i].displayStatus){
 8003ac6:	f9ba 3010 	ldrsh.w	r3, [sl, #16]
 8003aca:	2b02      	cmp	r3, #2
 8003acc:	f000 8170 	beq.w	8003db0 <_ZN14GameScreenView15handleTickEventEv+0x574>
 8003ad0:	2b04      	cmp	r3, #4
 8003ad2:	f000 817f 	beq.w	8003dd4 <_ZN14GameScreenView15handleTickEventEv+0x598>
 8003ad6:	2b01      	cmp	r3, #1
 8003ad8:	d108      	bne.n	8003aec <_ZN14GameScreenView15handleTickEventEv+0x2b0>
    case IS_HIDDEN:
      break;
    case IS_SHOWN:
      shipBulletImage[i].moveTo(shipBullet[i].coordinateX, shipBullet[i].coordinateY);
 8003ada:	f8d9 3000 	ldr.w	r3, [r9]
 8003ade:	f9ba 2006 	ldrsh.w	r2, [sl, #6]
 8003ae2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003ae4:	f9ba 1004 	ldrsh.w	r1, [sl, #4]
 8003ae8:	4648      	mov	r0, r9
 8003aea:	4798      	blx	r3
  for(int i=0; i<MAX_BULLET;i++) {
 8003aec:	f109 092c 	add.w	r9, r9, #44	@ 0x2c
 8003af0:	45c8      	cmp	r8, r9
 8003af2:	f10a 0a1c 	add.w	sl, sl, #28
 8003af6:	d1e6      	bne.n	8003ac6 <_ZN14GameScreenView15handleTickEventEv+0x28a>
 8003af8:	f504 5a88 	add.w	sl, r4, #4352	@ 0x1100
 8003afc:	f8df 9180 	ldr.w	r9, [pc, #384]	@ 8003c80 <_ZN14GameScreenView15handleTickEventEv+0x444>
 8003b00:	f10a 0a10 	add.w	sl, sl, #16
    }
  }

  // render enemy bullet
  for(int i=0; i<MAX_BULLET;i++) {
    switch(enemyBullet[i].displayStatus){
 8003b04:	f9b9 3010 	ldrsh.w	r3, [r9, #16]
 8003b08:	2b02      	cmp	r3, #2
 8003b0a:	f000 8169 	beq.w	8003de0 <_ZN14GameScreenView15handleTickEventEv+0x5a4>
 8003b0e:	2b04      	cmp	r3, #4
 8003b10:	f000 8178 	beq.w	8003e04 <_ZN14GameScreenView15handleTickEventEv+0x5c8>
 8003b14:	2b01      	cmp	r3, #1
 8003b16:	d108      	bne.n	8003b2a <_ZN14GameScreenView15handleTickEventEv+0x2ee>
    case IS_HIDDEN:
      break;
    case IS_SHOWN:
      enemyBulletImage[i].moveTo(enemyBullet[i].coordinateX, enemyBullet[i].coordinateY);
 8003b18:	f8d8 3000 	ldr.w	r3, [r8]
 8003b1c:	f9b9 2006 	ldrsh.w	r2, [r9, #6]
 8003b20:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003b22:	f9b9 1004 	ldrsh.w	r1, [r9, #4]
 8003b26:	4640      	mov	r0, r8
 8003b28:	4798      	blx	r3
  for(int i=0; i<MAX_BULLET;i++) {
 8003b2a:	f108 082c 	add.w	r8, r8, #44	@ 0x2c
 8003b2e:	45d0      	cmp	r8, sl
 8003b30:	f109 091c 	add.w	r9, r9, #28
 8003b34:	d1e6      	bne.n	8003b04 <_ZN14GameScreenView15handleTickEventEv+0x2c8>
 8003b36:	f8df 814c 	ldr.w	r8, [pc, #332]	@ 8003c84 <_ZN14GameScreenView15handleTickEventEv+0x448>
 8003b3a:	f504 6a96 	add.w	sl, r4, #1200	@ 0x4b0
    }
  }

  // render enemy
  for(int i=0; i<MAX_ENEMY;i++) {
    switch(enemy[i].displayStatus){
 8003b3e:	f9b8 3010 	ldrsh.w	r3, [r8, #16]
 8003b42:	2b02      	cmp	r3, #2
 8003b44:	f000 8164 	beq.w	8003e10 <_ZN14GameScreenView15handleTickEventEv+0x5d4>
 8003b48:	2b04      	cmp	r3, #4
 8003b4a:	f000 817e 	beq.w	8003e4a <_ZN14GameScreenView15handleTickEventEv+0x60e>
 8003b4e:	2b01      	cmp	r3, #1
 8003b50:	d109      	bne.n	8003b66 <_ZN14GameScreenView15handleTickEventEv+0x32a>
    case IS_SHOWN:
      enemyImage[i].moveTo(enemy[i].coordinateX, enemy[i].coordinateY);
 8003b52:	f8d6 38f0 	ldr.w	r3, [r6, #2288]	@ 0x8f0
 8003b56:	f9b8 2006 	ldrsh.w	r2, [r8, #6]
 8003b5a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003b5c:	f9b8 1004 	ldrsh.w	r1, [r8, #4]
 8003b60:	f506 600f 	add.w	r0, r6, #2288	@ 0x8f0
 8003b64:	4798      	blx	r3
  for(int i=0; i<MAX_ENEMY;i++) {
 8003b66:	363c      	adds	r6, #60	@ 0x3c
 8003b68:	45b2      	cmp	sl, r6
 8003b6a:	f108 0820 	add.w	r8, r8, #32
 8003b6e:	d1e6      	bne.n	8003b3e <_ZN14GameScreenView15handleTickEventEv+0x302>
      break;
    }
  }

  // check if player is out of health and should end game
  if(gameInstance.ship.lives != hearts) {
 8003b70:	4a3c      	ldr	r2, [pc, #240]	@ (8003c64 <_ZN14GameScreenView15handleTickEventEv+0x428>)
 8003b72:	f9b5 302c 	ldrsh.w	r3, [r5, #44]	@ 0x2c
 8003b76:	7811      	ldrb	r1, [r2, #0]
 8003b78:	428b      	cmp	r3, r1
 8003b7a:	d02e      	beq.n	8003bda <_ZN14GameScreenView15handleTickEventEv+0x39e>
    hearts = gameInstance.ship.lives;
 8003b7c:	b2db      	uxtb	r3, r3
 8003b7e:	7013      	strb	r3, [r2, #0]
 8003b80:	2264      	movs	r2, #100	@ 0x64
 8003b82:	f884 2118 	strb.w	r2, [r4, #280]	@ 0x118
 8003b86:	f884 2144 	strb.w	r2, [r4, #324]	@ 0x144
 8003b8a:	f884 2170 	strb.w	r2, [r4, #368]	@ 0x170
 8003b8e:	f884 219c 	strb.w	r2, [r4, #412]	@ 0x19c
 8003b92:	f884 21c8 	strb.w	r2, [r4, #456]	@ 0x1c8
 8003b96:	f884 21f4 	strb.w	r2, [r4, #500]	@ 0x1f4
 8003b9a:	f884 2220 	strb.w	r2, [r4, #544]	@ 0x220
    heart_05.setAlpha(100);
    heart_04.setAlpha(100);
    heart_03.setAlpha(100);
    heart_02.setAlpha(100);
    heart_01.setAlpha(100);
    if(hearts >= 1) heart_07.setAlpha(255);
 8003b9e:	2b00      	cmp	r3, #0
 8003ba0:	f000 8160 	beq.w	8003e64 <_ZN14GameScreenView15handleTickEventEv+0x628>
 8003ba4:	22ff      	movs	r2, #255	@ 0xff
    if(hearts >= 2) heart_06.setAlpha(255);
 8003ba6:	2b01      	cmp	r3, #1
 8003ba8:	f884 2118 	strb.w	r2, [r4, #280]	@ 0x118
 8003bac:	d015      	beq.n	8003bda <_ZN14GameScreenView15handleTickEventEv+0x39e>
    if(hearts >= 3) heart_05.setAlpha(255);
 8003bae:	2b02      	cmp	r3, #2
 8003bb0:	f884 2144 	strb.w	r2, [r4, #324]	@ 0x144
 8003bb4:	d011      	beq.n	8003bda <_ZN14GameScreenView15handleTickEventEv+0x39e>
    if(hearts >= 4) heart_04.setAlpha(255);
 8003bb6:	2b03      	cmp	r3, #3
 8003bb8:	f884 2170 	strb.w	r2, [r4, #368]	@ 0x170
 8003bbc:	d00d      	beq.n	8003bda <_ZN14GameScreenView15handleTickEventEv+0x39e>
    if(hearts >= 5) heart_03.setAlpha(255);
 8003bbe:	2b04      	cmp	r3, #4
 8003bc0:	f884 219c 	strb.w	r2, [r4, #412]	@ 0x19c
 8003bc4:	d009      	beq.n	8003bda <_ZN14GameScreenView15handleTickEventEv+0x39e>
    if(hearts >= 6) heart_02.setAlpha(255);
 8003bc6:	2b05      	cmp	r3, #5
 8003bc8:	f884 21c8 	strb.w	r2, [r4, #456]	@ 0x1c8
 8003bcc:	d005      	beq.n	8003bda <_ZN14GameScreenView15handleTickEventEv+0x39e>
    if(hearts >= 7) heart_01.setAlpha(255);
 8003bce:	2b06      	cmp	r3, #6
 8003bd0:	f884 21f4 	strb.w	r2, [r4, #500]	@ 0x1f4
 8003bd4:	d001      	beq.n	8003bda <_ZN14GameScreenView15handleTickEventEv+0x39e>
 8003bd6:	f884 2220 	strb.w	r2, [r4, #544]	@ 0x220
        container.invalidate();
 8003bda:	4638      	mov	r0, r7
 8003bdc:	f009 fab2 	bl	800d144 <_ZNK8touchgfx8Drawable10invalidateEv>
      invalidate();
    }
  }

  invalidate();
}
 8003be0:	b003      	add	sp, #12
 8003be2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if(s1 == 2) score12.setVisible(true);
 8003be6:	2802      	cmp	r0, #2
 8003be8:	f47f ae7f 	bne.w	80038ea <_ZN14GameScreenView15handleTickEventEv+0xae>
        visible = vis;
 8003bec:	2301      	movs	r3, #1
 8003bee:	f884 3301 	strb.w	r3, [r4, #769]	@ 0x301
  if(s1 == 9) score19.setVisible(true);
 8003bf2:	e688      	b.n	8003906 <_ZN14GameScreenView15handleTickEventEv+0xca>
  if(s1 == 4) score14.setVisible(true);
 8003bf4:	2804      	cmp	r0, #4
 8003bf6:	d103      	bne.n	8003c00 <_ZN14GameScreenView15handleTickEventEv+0x3c4>
 8003bf8:	2301      	movs	r3, #1
 8003bfa:	f884 3359 	strb.w	r3, [r4, #857]	@ 0x359
  if(s1 == 9) score19.setVisible(true);
 8003bfe:	e682      	b.n	8003906 <_ZN14GameScreenView15handleTickEventEv+0xca>
  if(s1 == 5) score15.setVisible(true);
 8003c00:	2805      	cmp	r0, #5
 8003c02:	d103      	bne.n	8003c0c <_ZN14GameScreenView15handleTickEventEv+0x3d0>
 8003c04:	2301      	movs	r3, #1
 8003c06:	f884 3385 	strb.w	r3, [r4, #901]	@ 0x385
  if(s1 == 9) score19.setVisible(true);
 8003c0a:	e67c      	b.n	8003906 <_ZN14GameScreenView15handleTickEventEv+0xca>
  if(s1 == 6) score16.setVisible(true);
 8003c0c:	2806      	cmp	r0, #6
 8003c0e:	d103      	bne.n	8003c18 <_ZN14GameScreenView15handleTickEventEv+0x3dc>
 8003c10:	2301      	movs	r3, #1
 8003c12:	f884 33b1 	strb.w	r3, [r4, #945]	@ 0x3b1
  if(s1 == 9) score19.setVisible(true);
 8003c16:	e676      	b.n	8003906 <_ZN14GameScreenView15handleTickEventEv+0xca>
  if(s1 == 7) score17.setVisible(true);
 8003c18:	2807      	cmp	r0, #7
 8003c1a:	d103      	bne.n	8003c24 <_ZN14GameScreenView15handleTickEventEv+0x3e8>
 8003c1c:	2301      	movs	r3, #1
 8003c1e:	f884 33dd 	strb.w	r3, [r4, #989]	@ 0x3dd
  if(s1 == 9) score19.setVisible(true);
 8003c22:	e670      	b.n	8003906 <_ZN14GameScreenView15handleTickEventEv+0xca>
  if(s1 == 8) score18.setVisible(true);
 8003c24:	2808      	cmp	r0, #8
 8003c26:	d103      	bne.n	8003c30 <_ZN14GameScreenView15handleTickEventEv+0x3f4>
 8003c28:	2301      	movs	r3, #1
 8003c2a:	f884 3409 	strb.w	r3, [r4, #1033]	@ 0x409
  if(s1 == 9) score19.setVisible(true);
 8003c2e:	e66a      	b.n	8003906 <_ZN14GameScreenView15handleTickEventEv+0xca>
 8003c30:	2809      	cmp	r0, #9
 8003c32:	bf04      	itt	eq
 8003c34:	2301      	moveq	r3, #1
 8003c36:	f884 3435 	strbeq.w	r3, [r4, #1077]	@ 0x435
    }
 8003c3a:	e664      	b.n	8003906 <_ZN14GameScreenView15handleTickEventEv+0xca>
  if(s2 == 1) score21.setVisible(true);
 8003c3c:	2901      	cmp	r1, #1
 8003c3e:	d102      	bne.n	8003c46 <_ZN14GameScreenView15handleTickEventEv+0x40a>
        visible = vis;
 8003c40:	f884 148d 	strb.w	r1, [r4, #1165]	@ 0x48d
  if(s2 == 8) score28.setVisible(true);
 8003c44:	e665      	b.n	8003912 <_ZN14GameScreenView15handleTickEventEv+0xd6>
  if(s2 == 2) score22.setVisible(true);
 8003c46:	2902      	cmp	r1, #2
 8003c48:	d11e      	bne.n	8003c88 <_ZN14GameScreenView15handleTickEventEv+0x44c>
 8003c4a:	2301      	movs	r3, #1
 8003c4c:	f884 34b9 	strb.w	r3, [r4, #1209]	@ 0x4b9
  if(s2 == 9) score29.setVisible(true);
 8003c50:	e65f      	b.n	8003912 <_ZN14GameScreenView15handleTickEventEv+0xd6>
 8003c52:	bf00      	nop
 8003c54:	200025ae 	.word	0x200025ae
 8003c58:	200025ad 	.word	0x200025ad
 8003c5c:	200025a8 	.word	0x200025a8
 8003c60:	20002a70 	.word	0x20002a70
 8003c64:	20000014 	.word	0x20000014
 8003c68:	200025a4 	.word	0x200025a4
 8003c6c:	20002364 	.word	0x20002364
 8003c70:	20002360 	.word	0x20002360
 8003c74:	2000235c 	.word	0x2000235c
 8003c78:	20002358 	.word	0x20002358
 8003c7c:	20002950 	.word	0x20002950
 8003c80:	20002838 	.word	0x20002838
 8003c84:	200025b8 	.word	0x200025b8
  if(s2 == 3) score23.setVisible(true);
 8003c88:	2903      	cmp	r1, #3
 8003c8a:	d103      	bne.n	8003c94 <_ZN14GameScreenView15handleTickEventEv+0x458>
 8003c8c:	2301      	movs	r3, #1
 8003c8e:	f884 34e5 	strb.w	r3, [r4, #1253]	@ 0x4e5
  if(s2 == 9) score29.setVisible(true);
 8003c92:	e63e      	b.n	8003912 <_ZN14GameScreenView15handleTickEventEv+0xd6>
  if(s2 == 4) score24.setVisible(true);
 8003c94:	2904      	cmp	r1, #4
 8003c96:	d103      	bne.n	8003ca0 <_ZN14GameScreenView15handleTickEventEv+0x464>
 8003c98:	2301      	movs	r3, #1
 8003c9a:	f884 3511 	strb.w	r3, [r4, #1297]	@ 0x511
  if(s2 == 9) score29.setVisible(true);
 8003c9e:	e638      	b.n	8003912 <_ZN14GameScreenView15handleTickEventEv+0xd6>
  if(s2 == 5) score25.setVisible(true);
 8003ca0:	2905      	cmp	r1, #5
 8003ca2:	d103      	bne.n	8003cac <_ZN14GameScreenView15handleTickEventEv+0x470>
 8003ca4:	2301      	movs	r3, #1
 8003ca6:	f884 353d 	strb.w	r3, [r4, #1341]	@ 0x53d
  if(s2 == 9) score29.setVisible(true);
 8003caa:	e632      	b.n	8003912 <_ZN14GameScreenView15handleTickEventEv+0xd6>
  if(s2 == 6) score26.setVisible(true);
 8003cac:	2906      	cmp	r1, #6
 8003cae:	d103      	bne.n	8003cb8 <_ZN14GameScreenView15handleTickEventEv+0x47c>
 8003cb0:	2301      	movs	r3, #1
 8003cb2:	f884 3569 	strb.w	r3, [r4, #1385]	@ 0x569
  if(s2 == 9) score29.setVisible(true);
 8003cb6:	e62c      	b.n	8003912 <_ZN14GameScreenView15handleTickEventEv+0xd6>
  if(s2 == 7) score27.setVisible(true);
 8003cb8:	2907      	cmp	r1, #7
 8003cba:	d103      	bne.n	8003cc4 <_ZN14GameScreenView15handleTickEventEv+0x488>
 8003cbc:	2301      	movs	r3, #1
 8003cbe:	f884 3595 	strb.w	r3, [r4, #1429]	@ 0x595
  if(s2 == 9) score29.setVisible(true);
 8003cc2:	e626      	b.n	8003912 <_ZN14GameScreenView15handleTickEventEv+0xd6>
  if(s2 == 8) score28.setVisible(true);
 8003cc4:	2908      	cmp	r1, #8
 8003cc6:	d103      	bne.n	8003cd0 <_ZN14GameScreenView15handleTickEventEv+0x494>
 8003cc8:	2301      	movs	r3, #1
 8003cca:	f884 35c1 	strb.w	r3, [r4, #1473]	@ 0x5c1
  if(s2 == 9) score29.setVisible(true);
 8003cce:	e620      	b.n	8003912 <_ZN14GameScreenView15handleTickEventEv+0xd6>
 8003cd0:	2909      	cmp	r1, #9
 8003cd2:	bf04      	itt	eq
 8003cd4:	2301      	moveq	r3, #1
 8003cd6:	f884 35ed 	strbeq.w	r3, [r4, #1517]	@ 0x5ed
    }
 8003cda:	e61a      	b.n	8003912 <_ZN14GameScreenView15handleTickEventEv+0xd6>
  if(s3 == 1) score31.setVisible(true);
 8003cdc:	2a01      	cmp	r2, #1
 8003cde:	d102      	bne.n	8003ce6 <_ZN14GameScreenView15handleTickEventEv+0x4aa>
        visible = vis;
 8003ce0:	f884 2645 	strb.w	r2, [r4, #1605]	@ 0x645
  if(s3 == 8) score38.setVisible(true);
 8003ce4:	e61b      	b.n	800391e <_ZN14GameScreenView15handleTickEventEv+0xe2>
  if(s3 == 2) score32.setVisible(true);
 8003ce6:	2a02      	cmp	r2, #2
 8003ce8:	d103      	bne.n	8003cf2 <_ZN14GameScreenView15handleTickEventEv+0x4b6>
 8003cea:	2301      	movs	r3, #1
 8003cec:	f884 3671 	strb.w	r3, [r4, #1649]	@ 0x671
  if(s3 == 9) score39.setVisible(true);
 8003cf0:	e615      	b.n	800391e <_ZN14GameScreenView15handleTickEventEv+0xe2>
  if(s3 == 3) score33.setVisible(true);
 8003cf2:	2a03      	cmp	r2, #3
 8003cf4:	d103      	bne.n	8003cfe <_ZN14GameScreenView15handleTickEventEv+0x4c2>
 8003cf6:	2301      	movs	r3, #1
 8003cf8:	f884 369d 	strb.w	r3, [r4, #1693]	@ 0x69d
  if(s3 == 9) score39.setVisible(true);
 8003cfc:	e60f      	b.n	800391e <_ZN14GameScreenView15handleTickEventEv+0xe2>
  if(s3 == 4) score34.setVisible(true);
 8003cfe:	2a04      	cmp	r2, #4
 8003d00:	d103      	bne.n	8003d0a <_ZN14GameScreenView15handleTickEventEv+0x4ce>
 8003d02:	2301      	movs	r3, #1
 8003d04:	f884 36c9 	strb.w	r3, [r4, #1737]	@ 0x6c9
  if(s3 == 9) score39.setVisible(true);
 8003d08:	e609      	b.n	800391e <_ZN14GameScreenView15handleTickEventEv+0xe2>
  if(s3 == 5) score35.setVisible(true);
 8003d0a:	2a05      	cmp	r2, #5
 8003d0c:	d103      	bne.n	8003d16 <_ZN14GameScreenView15handleTickEventEv+0x4da>
 8003d0e:	2301      	movs	r3, #1
 8003d10:	f884 36f5 	strb.w	r3, [r4, #1781]	@ 0x6f5
  if(s3 == 9) score39.setVisible(true);
 8003d14:	e603      	b.n	800391e <_ZN14GameScreenView15handleTickEventEv+0xe2>
  if(s3 == 6) score36.setVisible(true);
 8003d16:	2a06      	cmp	r2, #6
 8003d18:	d103      	bne.n	8003d22 <_ZN14GameScreenView15handleTickEventEv+0x4e6>
 8003d1a:	2301      	movs	r3, #1
 8003d1c:	f884 3721 	strb.w	r3, [r4, #1825]	@ 0x721
  if(s3 == 9) score39.setVisible(true);
 8003d20:	e5fd      	b.n	800391e <_ZN14GameScreenView15handleTickEventEv+0xe2>
  if(s3 == 7) score37.setVisible(true);
 8003d22:	2a07      	cmp	r2, #7
 8003d24:	d103      	bne.n	8003d2e <_ZN14GameScreenView15handleTickEventEv+0x4f2>
 8003d26:	2301      	movs	r3, #1
 8003d28:	f884 374d 	strb.w	r3, [r4, #1869]	@ 0x74d
  if(s3 == 9) score39.setVisible(true);
 8003d2c:	e5f7      	b.n	800391e <_ZN14GameScreenView15handleTickEventEv+0xe2>
  if(s3 == 8) score38.setVisible(true);
 8003d2e:	2a08      	cmp	r2, #8
 8003d30:	d103      	bne.n	8003d3a <_ZN14GameScreenView15handleTickEventEv+0x4fe>
 8003d32:	2301      	movs	r3, #1
 8003d34:	f884 3779 	strb.w	r3, [r4, #1913]	@ 0x779
  if(s3 == 9) score39.setVisible(true);
 8003d38:	e5f1      	b.n	800391e <_ZN14GameScreenView15handleTickEventEv+0xe2>
 8003d3a:	2a09      	cmp	r2, #9
 8003d3c:	bf04      	itt	eq
 8003d3e:	2301      	moveq	r3, #1
 8003d40:	f884 37a5 	strbeq.w	r3, [r4, #1957]	@ 0x7a5
    }
 8003d44:	e5eb      	b.n	800391e <_ZN14GameScreenView15handleTickEventEv+0xe2>
	} else if (score > 50) {
 8003d46:	2e32      	cmp	r6, #50	@ 0x32
        container.add(d);
 8003d48:	bf8c      	ite	hi
 8003d4a:	f504 61fb 	addhi.w	r1, r4, #2008	@ 0x7d8
 8003d4e:	f204 71ac 	addwls	r1, r4, #1964	@ 0x7ac
 8003d52:	e609      	b.n	8003968 <_ZN14GameScreenView15handleTickEventEv+0x12c>
      } else if(res == 'N'){
 8003d54:	2b4e      	cmp	r3, #78	@ 0x4e
 8003d56:	f47f ae47 	bne.w	80039e8 <_ZN14GameScreenView15handleTickEventEv+0x1ac>
        gameInstance.ship.updateVelocityX(0);
 8003d5a:	4651      	mov	r1, sl
 8003d5c:	4845      	ldr	r0, [pc, #276]	@ (8003e74 <_ZN14GameScreenView15handleTickEventEv+0x638>)
 8003d5e:	f000 fab1 	bl	80042c4 <_ZN4Ship15updateVelocityXEs>
 8003d62:	231f      	movs	r3, #31
        shipImage.setBitmap(touchgfx::Bitmap(BITMAP_SHIP_MAIN_ID));
 8003d64:	a901      	add	r1, sp, #4
 8003d66:	4630      	mov	r0, r6
 8003d68:	f8ad 3004 	strh.w	r3, [sp, #4]
 8003d6c:	f006 fd8a 	bl	800a884 <_ZN8touchgfx13AnimatedImage9setBitmapERKNS_6BitmapE>
 8003d70:	e63a      	b.n	80039e8 <_ZN14GameScreenView15handleTickEventEv+0x1ac>
      } else if(res == 'N'){
 8003d72:	2b4e      	cmp	r3, #78	@ 0x4e
 8003d74:	f47f ae5c 	bne.w	8003a30 <_ZN14GameScreenView15handleTickEventEv+0x1f4>
        gameInstance.ship.updateVelocityX(0);
 8003d78:	483e      	ldr	r0, [pc, #248]	@ (8003e74 <_ZN14GameScreenView15handleTickEventEv+0x638>)
 8003d7a:	2100      	movs	r1, #0
 8003d7c:	f000 faa2 	bl	80042c4 <_ZN4Ship15updateVelocityXEs>
 8003d80:	231f      	movs	r3, #31
        shipImage.setBitmap(touchgfx::Bitmap(BITMAP_SHIP_MAIN_ID));
 8003d82:	a901      	add	r1, sp, #4
 8003d84:	4630      	mov	r0, r6
 8003d86:	f8ad 3004 	strh.w	r3, [sp, #4]
 8003d8a:	f006 fd7b 	bl	800a884 <_ZN8touchgfx13AnimatedImage9setBitmapERKNS_6BitmapE>
 8003d8e:	e64f      	b.n	8003a30 <_ZN14GameScreenView15handleTickEventEv+0x1f4>
      } else if(res == 'N'){
 8003d90:	2b4e      	cmp	r3, #78	@ 0x4e
 8003d92:	f47f ae6d 	bne.w	8003a70 <_ZN14GameScreenView15handleTickEventEv+0x234>
        gameInstance.ship.updateVelocityY(0);
 8003d96:	4837      	ldr	r0, [pc, #220]	@ (8003e74 <_ZN14GameScreenView15handleTickEventEv+0x638>)
 8003d98:	2100      	movs	r1, #0
 8003d9a:	f000 fa95 	bl	80042c8 <_ZN4Ship15updateVelocityYEs>
 8003d9e:	e667      	b.n	8003a70 <_ZN14GameScreenView15handleTickEventEv+0x234>
      } else if(res == 'N'){
 8003da0:	2b4e      	cmp	r3, #78	@ 0x4e
 8003da2:	f47f ae82 	bne.w	8003aaa <_ZN14GameScreenView15handleTickEventEv+0x26e>
        gameInstance.ship.updateVelocityY(0);
 8003da6:	4833      	ldr	r0, [pc, #204]	@ (8003e74 <_ZN14GameScreenView15handleTickEventEv+0x638>)
 8003da8:	2100      	movs	r1, #0
 8003daa:	f000 fa8d 	bl	80042c8 <_ZN4Ship15updateVelocityYEs>
 8003dae:	e67c      	b.n	8003aaa <_ZN14GameScreenView15handleTickEventEv+0x26e>
      shipBulletImage[i].moveTo(shipBullet[i].coordinateX, shipBullet[i].coordinateY);
 8003db0:	f8d9 3000 	ldr.w	r3, [r9]
 8003db4:	f9ba 2006 	ldrsh.w	r2, [sl, #6]
 8003db8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003dba:	f9ba 1004 	ldrsh.w	r1, [sl, #4]
 8003dbe:	4648      	mov	r0, r9
 8003dc0:	4798      	blx	r3
 8003dc2:	4649      	mov	r1, r9
 8003dc4:	4638      	mov	r0, r7
 8003dc6:	f005 fb37 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
      shipBullet[i].updateDisplayStatus(IS_SHOWN);
 8003dca:	2101      	movs	r1, #1
      shipBullet[i].updateDisplayStatus(IS_HIDDEN);
 8003dcc:	4650      	mov	r0, sl
 8003dce:	f000 f9a9 	bl	8004124 <_ZN6Entity19updateDisplayStatusEh>
      break;
 8003dd2:	e68b      	b.n	8003aec <_ZN14GameScreenView15handleTickEventEv+0x2b0>
        container.remove(d);
 8003dd4:	4649      	mov	r1, r9
 8003dd6:	4638      	mov	r0, r7
 8003dd8:	f005 fb6f 	bl	80094ba <_ZN8touchgfx9Container6removeERNS_8DrawableE>
      shipBullet[i].updateDisplayStatus(IS_HIDDEN);
 8003ddc:	2103      	movs	r1, #3
 8003dde:	e7f5      	b.n	8003dcc <_ZN14GameScreenView15handleTickEventEv+0x590>
      enemyBulletImage[i].moveTo(enemyBullet[i].coordinateX, enemyBullet[i].coordinateY);
 8003de0:	f8d8 3000 	ldr.w	r3, [r8]
 8003de4:	f9b9 2006 	ldrsh.w	r2, [r9, #6]
 8003de8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003dea:	f9b9 1004 	ldrsh.w	r1, [r9, #4]
 8003dee:	4640      	mov	r0, r8
 8003df0:	4798      	blx	r3
        container.add(d);
 8003df2:	4641      	mov	r1, r8
 8003df4:	4638      	mov	r0, r7
 8003df6:	f005 fb1f 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
      enemyBullet[i].updateDisplayStatus(IS_SHOWN);
 8003dfa:	2101      	movs	r1, #1
      enemyBullet[i].updateDisplayStatus(IS_HIDDEN);
 8003dfc:	4648      	mov	r0, r9
 8003dfe:	f000 f991 	bl	8004124 <_ZN6Entity19updateDisplayStatusEh>
      break;
 8003e02:	e692      	b.n	8003b2a <_ZN14GameScreenView15handleTickEventEv+0x2ee>
        container.remove(d);
 8003e04:	4641      	mov	r1, r8
 8003e06:	4638      	mov	r0, r7
 8003e08:	f005 fb57 	bl	80094ba <_ZN8touchgfx9Container6removeERNS_8DrawableE>
      enemyBullet[i].updateDisplayStatus(IS_HIDDEN);
 8003e0c:	2103      	movs	r1, #3
 8003e0e:	e7f5      	b.n	8003dfc <_ZN14GameScreenView15handleTickEventEv+0x5c0>
      enemyImage[i].moveTo(enemy[i].coordinateX, enemy[i].coordinateY);
 8003e10:	f8d6 38f0 	ldr.w	r3, [r6, #2288]	@ 0x8f0
 8003e14:	f9b8 2006 	ldrsh.w	r2, [r8, #6]
 8003e18:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003e1a:	f9b8 1004 	ldrsh.w	r1, [r8, #4]
 8003e1e:	f506 690f 	add.w	r9, r6, #2288	@ 0x8f0
 8003e22:	4648      	mov	r0, r9
 8003e24:	4798      	blx	r3
      enemyImage[i].startAnimation(false, true, true);
 8003e26:	f8d6 38f0 	ldr.w	r3, [r6, #2288]	@ 0x8f0
 8003e2a:	f8d3 b064 	ldr.w	fp, [r3, #100]	@ 0x64
 8003e2e:	2301      	movs	r3, #1
 8003e30:	461a      	mov	r2, r3
 8003e32:	2100      	movs	r1, #0
 8003e34:	4648      	mov	r0, r9
 8003e36:	47d8      	blx	fp
        container.add(d);
 8003e38:	4649      	mov	r1, r9
 8003e3a:	4638      	mov	r0, r7
 8003e3c:	f005 fafc 	bl	8009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>
      enemy[i].updateDisplayStatus(IS_SHOWN);
 8003e40:	2101      	movs	r1, #1
      enemy[i].updateDisplayStatus(IS_HIDDEN);
 8003e42:	4640      	mov	r0, r8
 8003e44:	f000 f96e 	bl	8004124 <_ZN6Entity19updateDisplayStatusEh>
      break;
 8003e48:	e68d      	b.n	8003b66 <_ZN14GameScreenView15handleTickEventEv+0x32a>
      enemyImage[i].stopAnimation();
 8003e4a:	f8d6 38f0 	ldr.w	r3, [r6, #2288]	@ 0x8f0
 8003e4e:	f506 690f 	add.w	r9, r6, #2288	@ 0x8f0
 8003e52:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8003e54:	4648      	mov	r0, r9
 8003e56:	4798      	blx	r3
        container.remove(d);
 8003e58:	4649      	mov	r1, r9
 8003e5a:	4638      	mov	r0, r7
 8003e5c:	f005 fb2d 	bl	80094ba <_ZN8touchgfx9Container6removeERNS_8DrawableE>
      enemy[i].updateDisplayStatus(IS_HIDDEN);
 8003e60:	2103      	movs	r1, #3
 8003e62:	e7ee      	b.n	8003e42 <_ZN14GameScreenView15handleTickEventEv+0x606>
      shouldStopTask = true;
 8003e64:	4b04      	ldr	r3, [pc, #16]	@ (8003e78 <_ZN14GameScreenView15handleTickEventEv+0x63c>)
 8003e66:	2201      	movs	r2, #1
        container.invalidate();
 8003e68:	4638      	mov	r0, r7
 8003e6a:	701a      	strb	r2, [r3, #0]
 8003e6c:	f009 f96a 	bl	800d144 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003e70:	e6b3      	b.n	8003bda <_ZN14GameScreenView15handleTickEventEv+0x39e>
 8003e72:	bf00      	nop
 8003e74:	20002a70 	.word	0x20002a70
 8003e78:	200025ad 	.word	0x200025ad

08003e7c <_ZN14GameScreenView11setupScreenEv>:
{
 8003e7c:	b510      	push	{r4, lr}
  osThreadTerminate(gameTaskHandle);
 8003e7e:	4c11      	ldr	r4, [pc, #68]	@ (8003ec4 <_ZN14GameScreenView11setupScreenEv+0x48>)
{
 8003e80:	b08a      	sub	sp, #40	@ 0x28
  GameScreenViewBase::setupScreen();
 8003e82:	f7fe fbfe 	bl	8002682 <_ZN18GameScreenViewBase11setupScreenEv>
  osThreadTerminate(gameTaskHandle);
 8003e86:	6820      	ldr	r0, [r4, #0]
 8003e88:	f003 f965 	bl	8007156 <osThreadTerminate>
  const osThreadAttr_t gameTask_attributes = {
 8003e8c:	2220      	movs	r2, #32
 8003e8e:	2100      	movs	r1, #0
 8003e90:	a802      	add	r0, sp, #8
 8003e92:	f017 fef2 	bl	801bc7a <memset>
 8003e96:	4b0c      	ldr	r3, [pc, #48]	@ (8003ec8 <_ZN14GameScreenView11setupScreenEv+0x4c>)
 8003e98:	9301      	str	r3, [sp, #4]
 8003e9a:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8003e9e:	2318      	movs	r3, #24
 8003ea0:	e9cd 2306 	strd	r2, r3, [sp, #24]
  gameTaskHandle = osThreadNew(gameTask, NULL, &gameTask_attributes);
 8003ea4:	2100      	movs	r1, #0
 8003ea6:	aa01      	add	r2, sp, #4
 8003ea8:	4808      	ldr	r0, [pc, #32]	@ (8003ecc <_ZN14GameScreenView11setupScreenEv+0x50>)
 8003eaa:	f003 f90d 	bl	80070c8 <osThreadNew>
  shouldEndGame = false;
 8003eae:	4a08      	ldr	r2, [pc, #32]	@ (8003ed0 <_ZN14GameScreenView11setupScreenEv+0x54>)
  gameTaskHandle = osThreadNew(gameTask, NULL, &gameTask_attributes);
 8003eb0:	6020      	str	r0, [r4, #0]
  shouldEndGame = false;
 8003eb2:	2300      	movs	r3, #0
 8003eb4:	7013      	strb	r3, [r2, #0]
  shouldStopTask = false;
 8003eb6:	4a07      	ldr	r2, [pc, #28]	@ (8003ed4 <_ZN14GameScreenView11setupScreenEv+0x58>)
 8003eb8:	7013      	strb	r3, [r2, #0]
  shouldStopScreen = false;
 8003eba:	4a07      	ldr	r2, [pc, #28]	@ (8003ed8 <_ZN14GameScreenView11setupScreenEv+0x5c>)
 8003ebc:	7013      	strb	r3, [r2, #0]
}
 8003ebe:	b00a      	add	sp, #40	@ 0x28
 8003ec0:	bd10      	pop	{r4, pc}
 8003ec2:	bf00      	nop
 8003ec4:	200025a8 	.word	0x200025a8
 8003ec8:	0801d9b8 	.word	0x0801d9b8
 8003ecc:	08004469 	.word	0x08004469
 8003ed0:	200025ae 	.word	0x200025ae
 8003ed4:	200025ad 	.word	0x200025ad
 8003ed8:	200025a4 	.word	0x200025a4

08003edc <_ZN19MenuScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MenuScreenPresenter() {};
 8003edc:	4770      	bx	lr

08003ede <_ZThn4_N19MenuScreenPresenterD1Ev>:
 8003ede:	3804      	subs	r0, #4
 8003ee0:	4770      	bx	lr

08003ee2 <_ZN19MenuScreenPresenter10deactivateEv>:
}

void MenuScreenPresenter::activate()
{

}
 8003ee2:	4770      	bx	lr

08003ee4 <_ZN19MenuScreenPresenterD0Ev>:
 8003ee4:	b510      	push	{r4, lr}
 8003ee6:	2110      	movs	r1, #16
 8003ee8:	4604      	mov	r4, r0
 8003eea:	f017 fc91 	bl	801b810 <_ZdlPvj>
 8003eee:	4620      	mov	r0, r4
 8003ef0:	bd10      	pop	{r4, pc}

08003ef2 <_ZThn4_N19MenuScreenPresenterD0Ev>:
 8003ef2:	f1a0 0004 	sub.w	r0, r0, #4
 8003ef6:	e7f5      	b.n	8003ee4 <_ZN19MenuScreenPresenterD0Ev>

08003ef8 <_ZN19MenuScreenPresenterC1ER14MenuScreenView>:
 8003ef8:	2200      	movs	r2, #0
 8003efa:	6082      	str	r2, [r0, #8]
    : view(v)
 8003efc:	4a02      	ldr	r2, [pc, #8]	@ (8003f08 <_ZN19MenuScreenPresenterC1ER14MenuScreenView+0x10>)
 8003efe:	6002      	str	r2, [r0, #0]
 8003f00:	3218      	adds	r2, #24
 8003f02:	6042      	str	r2, [r0, #4]
 8003f04:	60c1      	str	r1, [r0, #12]
}
 8003f06:	4770      	bx	lr
 8003f08:	0801da00 	.word	0x0801da00

08003f0c <_ZN14MenuScreenView14tearDownScreenEv>:
}

void MenuScreenView::tearDownScreen()
{
    MenuScreenViewBase::tearDownScreen();
}
 8003f0c:	4770      	bx	lr
	...

08003f10 <_ZN14MenuScreenViewD1Ev>:

class MenuScreenView : public MenuScreenViewBase
{
public:
    MenuScreenView();
    virtual ~MenuScreenView() {}
 8003f10:	b510      	push	{r4, lr}
 8003f12:	4b03      	ldr	r3, [pc, #12]	@ (8003f20 <_ZN14MenuScreenViewD1Ev+0x10>)
 8003f14:	6003      	str	r3, [r0, #0]
 8003f16:	4604      	mov	r4, r0
 8003f18:	f7ff f9f2 	bl	8003300 <_ZN18MenuScreenViewBaseD1Ev>
 8003f1c:	4620      	mov	r0, r4
 8003f1e:	bd10      	pop	{r4, pc}
 8003f20:	0801da28 	.word	0x0801da28

08003f24 <_ZN14MenuScreenViewD0Ev>:
 8003f24:	b510      	push	{r4, lr}
 8003f26:	4604      	mov	r4, r0
 8003f28:	f7ff fff2 	bl	8003f10 <_ZN14MenuScreenViewD1Ev>
 8003f2c:	4620      	mov	r0, r4
 8003f2e:	f44f 719c 	mov.w	r1, #312	@ 0x138
 8003f32:	f017 fc6d 	bl	801b810 <_ZdlPvj>
 8003f36:	4620      	mov	r0, r4
 8003f38:	bd10      	pop	{r4, pc}
	...

08003f3c <_ZN14MenuScreenViewC1Ev>:
MenuScreenView::MenuScreenView()
 8003f3c:	b510      	push	{r4, lr}
 8003f3e:	4604      	mov	r4, r0
 8003f40:	f7ff fa16 	bl	8003370 <_ZN18MenuScreenViewBaseC1Ev>
 8003f44:	4b03      	ldr	r3, [pc, #12]	@ (8003f54 <_ZN14MenuScreenViewC1Ev+0x18>)
 8003f46:	6023      	str	r3, [r4, #0]
	backgroundPosition = 0;
 8003f48:	2300      	movs	r3, #0
 8003f4a:	f8c4 3134 	str.w	r3, [r4, #308]	@ 0x134
}
 8003f4e:	4620      	mov	r0, r4
 8003f50:	bd10      	pop	{r4, pc}
 8003f52:	bf00      	nop
 8003f54:	0801da28 	.word	0x0801da28

08003f58 <_ZN14MenuScreenView11setupScreenEv>:
    MenuScreenViewBase::setupScreen();
 8003f58:	f7ff b9d3 	b.w	8003302 <_ZN18MenuScreenViewBase11setupScreenEv>

08003f5c <_ZN14MenuScreenView15handleTickEventEv>:

void MenuScreenView::handleTickEvent()
{
	MenuScreenViewBase::handleTickEvent();
	backgroundPosition++;
 8003f5c:	f8d0 3134 	ldr.w	r3, [r0, #308]	@ 0x134
 8003f60:	3301      	adds	r3, #1
	if (backgroundPosition > 430) backgroundPosition = 0;
 8003f62:	f5b3 7fd7 	cmp.w	r3, #430	@ 0x1ae
 8003f66:	bfc8      	it	gt
 8003f68:	2300      	movgt	r3, #0
 8003f6a:	f8c0 3134 	str.w	r3, [r0, #308]	@ 0x134
	backgroundStar1.setY(backgroundPosition);
 8003f6e:	f8a0 3072 	strh.w	r3, [r0, #114]	@ 0x72
	backgroundStar2.setY(backgroundPosition - 430);
 8003f72:	f5a3 73d7 	sub.w	r3, r3, #430	@ 0x1ae
        rect.y = y;
 8003f76:	f8a0 309e 	strh.w	r3, [r0, #158]	@ 0x9e
        container.invalidate();
 8003f7a:	3004      	adds	r0, #4
 8003f7c:	f009 b8e2 	b.w	800d144 <_ZNK8touchgfx8Drawable10invalidateEv>

08003f80 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8003f80:	2200      	movs	r2, #0
 8003f82:	6002      	str	r2, [r0, #0]
{

}
 8003f84:	4770      	bx	lr

08003f86 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8003f86:	4770      	bx	lr

08003f88 <_ZN6BulletD1Ev>:
	this->velocityX = 0;
	this->velocityY = 0;
	this->moveRate = MOVE_RATE;
}

Bullet::~Bullet() {
 8003f88:	b510      	push	{r4, lr}
 8003f8a:	4b03      	ldr	r3, [pc, #12]	@ (8003f98 <_ZN6BulletD1Ev+0x10>)
 8003f8c:	6003      	str	r3, [r0, #0]
 8003f8e:	4604      	mov	r4, r0

}
 8003f90:	f000 f8b3 	bl	80040fa <_ZN6EntityD1Ev>
 8003f94:	4620      	mov	r0, r4
 8003f96:	bd10      	pop	{r4, pc}
 8003f98:	0801da5c 	.word	0x0801da5c

08003f9c <_ZN6BulletD0Ev>:
Bullet::~Bullet() {
 8003f9c:	b510      	push	{r4, lr}
 8003f9e:	4604      	mov	r4, r0
}
 8003fa0:	f7ff fff2 	bl	8003f88 <_ZN6BulletD1Ev>
 8003fa4:	4620      	mov	r0, r4
 8003fa6:	211c      	movs	r1, #28
 8003fa8:	f017 fc32 	bl	801b810 <_ZdlPvj>
 8003fac:	4620      	mov	r0, r4
 8003fae:	bd10      	pop	{r4, pc}

08003fb0 <_ZN6BulletC1Ev>:
Bullet::Bullet() {
 8003fb0:	b510      	push	{r4, lr}
 8003fb2:	4604      	mov	r4, r0
 8003fb4:	f000 f8ac 	bl	8004110 <_ZN6EntityC1Ev>
 8003fb8:	4b06      	ldr	r3, [pc, #24]	@ (8003fd4 <_ZN6BulletC1Ev+0x24>)
	this->velocityX = 0;
 8003fba:	4907      	ldr	r1, [pc, #28]	@ (8003fd8 <_ZN6BulletC1Ev+0x28>)
Bullet::Bullet() {
 8003fbc:	6023      	str	r3, [r4, #0]
 8003fbe:	f44f 7361 	mov.w	r3, #900	@ 0x384
 8003fc2:	61a3      	str	r3, [r4, #24]
	this->velocityX = 0;
 8003fc4:	2300      	movs	r3, #0
 8003fc6:	e9c4 1302 	strd	r1, r3, [r4, #8]
	this->displayStatus = IS_HIDDEN;
 8003fca:	4b04      	ldr	r3, [pc, #16]	@ (8003fdc <_ZN6BulletC1Ev+0x2c>)
 8003fcc:	6123      	str	r3, [r4, #16]
}
 8003fce:	4620      	mov	r0, r4
 8003fd0:	bd10      	pop	{r4, pc}
 8003fd2:	bf00      	nop
 8003fd4:	0801da5c 	.word	0x0801da5c
 8003fd8:	00220010 	.word	0x00220010
 8003fdc:	03840003 	.word	0x03840003

08003fe0 <_ZN6Bullet6updateEh>:

bool Bullet::update(uint8_t dt) {
	if(this->coordinateX < -this->width || this->coordinateX > 240 ||
 8003fe0:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
bool Bullet::update(uint8_t dt) {
 8003fe4:	b510      	push	{r4, lr}
	if(this->coordinateX < -this->width || this->coordinateX > 240 ||
 8003fe6:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8003fea:	425b      	negs	r3, r3
 8003fec:	429c      	cmp	r4, r3
 8003fee:	db0b      	blt.n	8004008 <_ZN6Bullet6updateEh+0x28>
 8003ff0:	2cf0      	cmp	r4, #240	@ 0xf0
 8003ff2:	dc09      	bgt.n	8004008 <_ZN6Bullet6updateEh+0x28>
			this->coordinateY < -this->height || this->coordinateY > 320) {
 8003ff4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8003ff8:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8003ffc:	425b      	negs	r3, r3
	if(this->coordinateX < -this->width || this->coordinateX > 240 ||
 8003ffe:	429a      	cmp	r2, r3
 8004000:	db02      	blt.n	8004008 <_ZN6Bullet6updateEh+0x28>
			this->coordinateY < -this->height || this->coordinateY > 320) {
 8004002:	f5b2 7fa0 	cmp.w	r2, #320	@ 0x140
 8004006:	dd05      	ble.n	8004014 <_ZN6Bullet6updateEh+0x34>
		this->displayStatus = SHOULD_HIDE;
 8004008:	2304      	movs	r3, #4
 800400a:	8203      	strh	r3, [r0, #16]
		this->moveRate = MOVE_RATE;
 800400c:	6983      	ldr	r3, [r0, #24]
 800400e:	8243      	strh	r3, [r0, #18]
		return false;
 8004010:	2000      	movs	r0, #0
	if(this->moveRate > 0) return false;
	this->coordinateX += this->velocityX;
	this->coordinateY += this->velocityY;
	this->moveRate = MOVE_RATE;
	return true;
}
 8004012:	bd10      	pop	{r4, pc}
	this->moveRate -= dt;
 8004014:	8a43      	ldrh	r3, [r0, #18]
 8004016:	1a59      	subs	r1, r3, r1
 8004018:	b209      	sxth	r1, r1
	if(this->moveRate > 0) return false;
 800401a:	2900      	cmp	r1, #0
	this->moveRate -= dt;
 800401c:	8241      	strh	r1, [r0, #18]
	if(this->moveRate > 0) return false;
 800401e:	dcf7      	bgt.n	8004010 <_ZN6Bullet6updateEh+0x30>
	this->coordinateX += this->velocityX;
 8004020:	8983      	ldrh	r3, [r0, #12]
 8004022:	441c      	add	r4, r3
	this->coordinateY += this->velocityY;
 8004024:	89c3      	ldrh	r3, [r0, #14]
	this->coordinateX += this->velocityX;
 8004026:	8084      	strh	r4, [r0, #4]
	this->coordinateY += this->velocityY;
 8004028:	441a      	add	r2, r3
	this->moveRate = MOVE_RATE;
 800402a:	6983      	ldr	r3, [r0, #24]
	this->coordinateY += this->velocityY;
 800402c:	80c2      	strh	r2, [r0, #6]
	this->moveRate = MOVE_RATE;
 800402e:	8243      	strh	r3, [r0, #18]
	return true;
 8004030:	2001      	movs	r0, #1
 8004032:	e7ee      	b.n	8004012 <_ZN6Bullet6updateEh+0x32>

08004034 <_ZN5EnemyD1Ev>:
	this->velocityY = 0;
  this->moveRate = MOVE_RATE;
  this->fireRate = FIRE_RATE;
}

Enemy::~Enemy() {
 8004034:	b510      	push	{r4, lr}
 8004036:	4b03      	ldr	r3, [pc, #12]	@ (8004044 <_ZN5EnemyD1Ev+0x10>)
 8004038:	6003      	str	r3, [r0, #0]
 800403a:	4604      	mov	r4, r0

}
 800403c:	f000 f85d 	bl	80040fa <_ZN6EntityD1Ev>
 8004040:	4620      	mov	r0, r4
 8004042:	bd10      	pop	{r4, pc}
 8004044:	0801da70 	.word	0x0801da70

08004048 <_ZN5EnemyD0Ev>:
Enemy::~Enemy() {
 8004048:	b510      	push	{r4, lr}
 800404a:	4604      	mov	r4, r0
}
 800404c:	f7ff fff2 	bl	8004034 <_ZN5EnemyD1Ev>
 8004050:	4620      	mov	r0, r4
 8004052:	2120      	movs	r1, #32
 8004054:	f017 fbdc 	bl	801b810 <_ZdlPvj>
 8004058:	4620      	mov	r0, r4
 800405a:	bd10      	pop	{r4, pc}

0800405c <_ZN5EnemyC1Ev>:
Enemy::Enemy() {
 800405c:	b510      	push	{r4, lr}
 800405e:	4604      	mov	r4, r0
 8004060:	f000 f856 	bl	8004110 <_ZN6EntityC1Ev>
 8004064:	4b08      	ldr	r3, [pc, #32]	@ (8004088 <_ZN5EnemyC1Ev+0x2c>)
 8004066:	6023      	str	r3, [r4, #0]
 8004068:	f44f 7248 	mov.w	r2, #800	@ 0x320
 800406c:	f247 5330 	movw	r3, #30000	@ 0x7530
 8004070:	e9c4 2306 	strd	r2, r3, [r4, #24]
	this->velocityX = 0;
 8004074:	f04f 1130 	mov.w	r1, #3145776	@ 0x300030
 8004078:	2200      	movs	r2, #0
 800407a:	e9c4 1202 	strd	r1, r2, [r4, #8]
	this->displayStatus = IS_HIDDEN;
 800407e:	4a03      	ldr	r2, [pc, #12]	@ (800408c <_ZN5EnemyC1Ev+0x30>)
 8004080:	6122      	str	r2, [r4, #16]
  this->fireRate = FIRE_RATE;
 8004082:	82a3      	strh	r3, [r4, #20]
}
 8004084:	4620      	mov	r0, r4
 8004086:	bd10      	pop	{r4, pc}
 8004088:	0801da70 	.word	0x0801da70
 800408c:	03200003 	.word	0x03200003

08004090 <_ZN5Enemy6updateEh>:

bool Enemy::update(uint8_t dt) {
	if(this->coordinateX < -this->width || this->coordinateX > 240 ||
 8004090:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8004094:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8004098:	425b      	negs	r3, r3
 800409a:	429a      	cmp	r2, r3
bool Enemy::update(uint8_t dt) {
 800409c:	b510      	push	{r4, lr}
	if(this->coordinateX < -this->width || this->coordinateX > 240 ||
 800409e:	db08      	blt.n	80040b2 <_ZN5Enemy6updateEh+0x22>
 80040a0:	2af0      	cmp	r2, #240	@ 0xf0
 80040a2:	dc06      	bgt.n	80040b2 <_ZN5Enemy6updateEh+0x22>
			this->coordinateY < -this->height || this->coordinateX > 320) {
 80040a4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80040a8:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 80040ac:	425b      	negs	r3, r3
	if(this->coordinateX < -this->width || this->coordinateX > 240 ||
 80040ae:	429c      	cmp	r4, r3
 80040b0:	da07      	bge.n	80040c2 <_ZN5Enemy6updateEh+0x32>
		this->displayStatus = SHOULD_HIDE;
 80040b2:	2304      	movs	r3, #4
 80040b4:	8203      	strh	r3, [r0, #16]
		this->fireRate = FIRE_RATE;
 80040b6:	69c3      	ldr	r3, [r0, #28]
 80040b8:	8283      	strh	r3, [r0, #20]
		this->moveRate = MOVE_RATE;
 80040ba:	6983      	ldr	r3, [r0, #24]
 80040bc:	8243      	strh	r3, [r0, #18]
		return false;
 80040be:	2000      	movs	r0, #0
	if(this->moveRate > 0) return false;
	this->coordinateX += this->velocityX;
	this->coordinateY += this->velocityY;
	this->moveRate = MOVE_RATE;
	return true;
}
 80040c0:	bd10      	pop	{r4, pc}
	this->moveRate -= dt;
 80040c2:	8a43      	ldrh	r3, [r0, #18]
 80040c4:	1a59      	subs	r1, r3, r1
 80040c6:	b209      	sxth	r1, r1
	if(this->moveRate > 0) return false;
 80040c8:	2900      	cmp	r1, #0
	this->moveRate -= dt;
 80040ca:	8241      	strh	r1, [r0, #18]
	if(this->moveRate > 0) return false;
 80040cc:	dcf7      	bgt.n	80040be <_ZN5Enemy6updateEh+0x2e>
	this->coordinateX += this->velocityX;
 80040ce:	8983      	ldrh	r3, [r0, #12]
 80040d0:	441a      	add	r2, r3
	this->coordinateY += this->velocityY;
 80040d2:	89c3      	ldrh	r3, [r0, #14]
	this->coordinateX += this->velocityX;
 80040d4:	8082      	strh	r2, [r0, #4]
	this->coordinateY += this->velocityY;
 80040d6:	441c      	add	r4, r3
	this->moveRate = MOVE_RATE;
 80040d8:	6983      	ldr	r3, [r0, #24]
	this->coordinateY += this->velocityY;
 80040da:	80c4      	strh	r4, [r0, #6]
	this->moveRate = MOVE_RATE;
 80040dc:	8243      	strh	r3, [r0, #18]
	return true;
 80040de:	2001      	movs	r0, #1
 80040e0:	e7ee      	b.n	80040c0 <_ZN5Enemy6updateEh+0x30>

080040e2 <_ZN5Enemy12updateBulletEh>:

bool Enemy::updateBullet(uint8_t dt) {
	this->fireRate -= dt;
 80040e2:	8a83      	ldrh	r3, [r0, #20]
 80040e4:	1a59      	subs	r1, r3, r1
 80040e6:	b209      	sxth	r1, r1
	if(this->fireRate > 0) return false;
 80040e8:	2900      	cmp	r1, #0
	this->fireRate = FIRE_RATE;
 80040ea:	bfd8      	it	le
 80040ec:	69c3      	ldrle	r3, [r0, #28]
	this->fireRate -= dt;
 80040ee:	8281      	strh	r1, [r0, #20]
	this->fireRate = FIRE_RATE;
 80040f0:	bfda      	itte	le
 80040f2:	8283      	strhle	r3, [r0, #20]
	return true;
 80040f4:	2001      	movle	r0, #1
	if(this->fireRate > 0) return false;
 80040f6:	2000      	movgt	r0, #0
}
 80040f8:	4770      	bx	lr

080040fa <_ZN6EntityD1Ev>:
	this->height = 32;
}

Entity::~Entity() {
	// TODO Auto-generated destructor stub
}
 80040fa:	4770      	bx	lr

080040fc <_ZN6Entity6updateEv>:

bool Entity::update() {
	// TODO Auto-generated destructor stub
	return false;
}
 80040fc:	2000      	movs	r0, #0
 80040fe:	4770      	bx	lr

08004100 <_ZN6EntityD0Ev>:
Entity::~Entity() {
 8004100:	b510      	push	{r4, lr}
}
 8004102:	2118      	movs	r1, #24
Entity::~Entity() {
 8004104:	4604      	mov	r4, r0
}
 8004106:	f017 fb83 	bl	801b810 <_ZdlPvj>
 800410a:	4620      	mov	r0, r4
 800410c:	bd10      	pop	{r4, pc}
	...

08004110 <_ZN6EntityC1Ev>:
Entity::Entity() {
 8004110:	4a03      	ldr	r2, [pc, #12]	@ (8004120 <_ZN6EntityC1Ev+0x10>)
 8004112:	6002      	str	r2, [r0, #0]
	this->displayStatus = IS_HIDDEN;
 8004114:	2203      	movs	r2, #3
 8004116:	8202      	strh	r2, [r0, #16]
	this->width = 32;
 8004118:	f04f 1220 	mov.w	r2, #2097184	@ 0x200020
 800411c:	6082      	str	r2, [r0, #8]
}
 800411e:	4770      	bx	lr
 8004120:	0801da84 	.word	0x0801da84

08004124 <_ZN6Entity19updateDisplayStatusEh>:

void Entity::updateDisplayStatus(uint8_t status) {
	this->displayStatus = status;
 8004124:	8201      	strh	r1, [r0, #16]
}
 8004126:	4770      	bx	lr

08004128 <_ZN6Entity16updateCoordinateEtt>:
void Entity::updateCoordinate(uint16_t x, uint16_t y) {
	this->coordinateX = x;
 8004128:	8081      	strh	r1, [r0, #4]
	this->coordinateY = y;
 800412a:	80c2      	strh	r2, [r0, #6]
}
 800412c:	4770      	bx	lr

0800412e <_ZN6Entity14updateVelocityEtt>:

void Entity::updateVelocity(uint16_t x, uint16_t y) {
	this->velocityX = x;
 800412e:	8181      	strh	r1, [r0, #12]
	this->velocityY = y;
 8004130:	81c2      	strh	r2, [r0, #14]
}
 8004132:	4770      	bx	lr

08004134 <_ZN6Entity9isCollideERS_S0_>:

bool Entity::isCollide(Entity &a, Entity &b) {
    // Kiểm tra va chạm theo chiều ngang (giữ nguyên)
    bool collideX = (a.coordinateX + a.width > b.coordinateX) && (b.coordinateX + b.width > a.coordinateX);
 8004134:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8004138:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
bool Entity::isCollide(Entity &a, Entity &b) {
 800413c:	b510      	push	{r4, lr}
    bool collideX = (a.coordinateX + a.width > b.coordinateX) && (b.coordinateX + b.width > a.coordinateX);
 800413e:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 8004142:	4413      	add	r3, r2
 8004144:	42a3      	cmp	r3, r4
 8004146:	dd25      	ble.n	8004194 <_ZN6Entity9isCollideERS_S0_+0x60>
 8004148:	f9b1 3008 	ldrsh.w	r3, [r1, #8]
 800414c:	4423      	add	r3, r4
 800414e:	429a      	cmp	r2, r3
 8004150:	bfac      	ite	ge
 8004152:	2200      	movge	r2, #0
 8004154:	2201      	movlt	r2, #1

    // Tính toán trung tâm theo chiều dọc của mỗi đối tượng
    int centerY_a = a.coordinateY + a.height / 2;
 8004156:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800415a:	eb03 74d3 	add.w	r4, r3, r3, lsr #31
 800415e:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
    int centerY_b = b.coordinateY + b.height / 2;
 8004162:	f9b1 000a 	ldrsh.w	r0, [r1, #10]
 8004166:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 800416a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
    int centerY_a = a.coordinateY + a.height / 2;
 800416e:	eb03 0364 	add.w	r3, r3, r4, asr #1
    int centerY_b = b.coordinateY + b.height / 2;
 8004172:	eb01 0160 	add.w	r1, r1, r0, asr #1

    // Kiểm tra va chạm theo chiều dọc trong phạm vi 10 pixel từ trung tâm mỗi đối tượng
    bool collideY = (centerY_a - 5 < centerY_b + 5) && (centerY_a + 5 > centerY_b - 5);
 8004176:	1f1c      	subs	r4, r3, #4
 8004178:	1d48      	adds	r0, r1, #5
 800417a:	4284      	cmp	r4, r0
 800417c:	dc0c      	bgt.n	8004198 <_ZN6Entity9isCollideERS_S0_+0x64>
 800417e:	3304      	adds	r3, #4
 8004180:	3905      	subs	r1, #5
 8004182:	428b      	cmp	r3, r1
 8004184:	bfb4      	ite	lt
 8004186:	2300      	movlt	r3, #0
 8004188:	2301      	movge	r3, #1

    // Trả về kết quả kiểm tra va chạm tổng thể
    return collideX && collideY;
 800418a:	2a00      	cmp	r2, #0
}
 800418c:	bf0c      	ite	eq
 800418e:	4610      	moveq	r0, r2
 8004190:	4618      	movne	r0, r3
 8004192:	bd10      	pop	{r4, pc}
    bool collideX = (a.coordinateX + a.width > b.coordinateX) && (b.coordinateX + b.width > a.coordinateX);
 8004194:	2200      	movs	r2, #0
 8004196:	e7de      	b.n	8004156 <_ZN6Entity9isCollideERS_S0_+0x22>
    bool collideY = (centerY_a - 5 < centerY_b + 5) && (centerY_a + 5 > centerY_b - 5);
 8004198:	2300      	movs	r3, #0
 800419a:	e7f6      	b.n	800418a <_ZN6Entity9isCollideERS_S0_+0x56>

0800419c <_ZN4GameC1Ev>:
#include "Game.hpp"

Game::Game() {
 800419c:	b510      	push	{r4, lr}
 800419e:	4b05      	ldr	r3, [pc, #20]	@ (80041b4 <_ZN4GameC1Ev+0x18>)
 80041a0:	6003      	str	r3, [r0, #0]
 80041a2:	2300      	movs	r3, #0
 80041a4:	4604      	mov	r4, r0
 80041a6:	8083      	strh	r3, [r0, #4]
 80041a8:	7183      	strb	r3, [r0, #6]
 80041aa:	3008      	adds	r0, #8
 80041ac:	f000 f832 	bl	8004214 <_ZN4ShipC1Ev>

}
 80041b0:	4620      	mov	r0, r4
 80041b2:	bd10      	pop	{r4, pc}
 80041b4:	0801da98 	.word	0x0801da98

080041b8 <_ZN4Game11updateScoreEs>:

Game::~Game() {
}

void Game::updateScore(short score) {
	this->score += score;
 80041b8:	8883      	ldrh	r3, [r0, #4]
 80041ba:	4419      	add	r1, r3
 80041bc:	8081      	strh	r1, [r0, #4]
}
 80041be:	4770      	bx	lr

080041c0 <_ZN4GameD1Ev>:
Game::~Game() {
 80041c0:	b510      	push	{r4, lr}
 80041c2:	4b04      	ldr	r3, [pc, #16]	@ (80041d4 <_ZN4GameD1Ev+0x14>)
 80041c4:	4604      	mov	r4, r0
 80041c6:	f840 3b08 	str.w	r3, [r0], #8
}
 80041ca:	f000 f80f 	bl	80041ec <_ZN4ShipD1Ev>
 80041ce:	4620      	mov	r0, r4
 80041d0:	bd10      	pop	{r4, pc}
 80041d2:	bf00      	nop
 80041d4:	0801da98 	.word	0x0801da98

080041d8 <_ZN4GameD0Ev>:
Game::~Game() {
 80041d8:	b510      	push	{r4, lr}
 80041da:	4604      	mov	r4, r0
}
 80041dc:	f7ff fff0 	bl	80041c0 <_ZN4GameD1Ev>
 80041e0:	4620      	mov	r0, r4
 80041e2:	2130      	movs	r1, #48	@ 0x30
 80041e4:	f017 fb14 	bl	801b810 <_ZdlPvj>
 80041e8:	4620      	mov	r0, r4
 80041ea:	bd10      	pop	{r4, pc}

080041ec <_ZN4ShipD1Ev>:
	this->height = 58;
	this->fireRate = FIRE_RATE;
	this->moveRate = MOVE_RATE;
}

Ship::~Ship() {
 80041ec:	b510      	push	{r4, lr}
 80041ee:	4b03      	ldr	r3, [pc, #12]	@ (80041fc <_ZN4ShipD1Ev+0x10>)
 80041f0:	6003      	str	r3, [r0, #0]
 80041f2:	4604      	mov	r4, r0
	// TODO Auto-generated destructor stub

}
 80041f4:	f7ff ff81 	bl	80040fa <_ZN6EntityD1Ev>
 80041f8:	4620      	mov	r0, r4
 80041fa:	bd10      	pop	{r4, pc}
 80041fc:	0801daa8 	.word	0x0801daa8

08004200 <_ZN4ShipD0Ev>:
Ship::~Ship() {
 8004200:	b510      	push	{r4, lr}
 8004202:	4604      	mov	r4, r0
}
 8004204:	f7ff fff2 	bl	80041ec <_ZN4ShipD1Ev>
 8004208:	4620      	mov	r0, r4
 800420a:	2128      	movs	r1, #40	@ 0x28
 800420c:	f017 fb00 	bl	801b810 <_ZdlPvj>
 8004210:	4620      	mov	r0, r4
 8004212:	bd10      	pop	{r4, pc}

08004214 <_ZN4ShipC1Ev>:
Ship::Ship() {
 8004214:	b510      	push	{r4, lr}
 8004216:	4604      	mov	r4, r0
 8004218:	f7ff ff7a 	bl	8004110 <_ZN6EntityC1Ev>
 800421c:	2103      	movs	r1, #3
 800421e:	6221      	str	r1, [r4, #32]
 8004220:	2107      	movs	r1, #7
	this->width = 48;
 8004222:	4809      	ldr	r0, [pc, #36]	@ (8004248 <_ZN4ShipC1Ev+0x34>)
Ship::Ship() {
 8004224:	84a1      	strh	r1, [r4, #36]	@ 0x24
	this->width = 48;
 8004226:	4909      	ldr	r1, [pc, #36]	@ (800424c <_ZN4ShipC1Ev+0x38>)
Ship::Ship() {
 8004228:	4b09      	ldr	r3, [pc, #36]	@ (8004250 <_ZN4ShipC1Ev+0x3c>)
 800422a:	6023      	str	r3, [r4, #0]
	this->width = 48;
 800422c:	e9c4 0101 	strd	r0, r1, [r4, #4]
Ship::Ship() {
 8004230:	f44f 73c8 	mov.w	r3, #400	@ 0x190
 8004234:	f242 7210 	movw	r2, #10000	@ 0x2710
	this->velocityX = 0;
 8004238:	2100      	movs	r1, #0
Ship::Ship() {
 800423a:	e9c4 3206 	strd	r3, r2, [r4, #24]
	this->velocityX = 0;
 800423e:	60e1      	str	r1, [r4, #12]
	this->fireRate = FIRE_RATE;
 8004240:	82a2      	strh	r2, [r4, #20]
	this->moveRate = MOVE_RATE;
 8004242:	8263      	strh	r3, [r4, #18]
}
 8004244:	4620      	mov	r0, r4
 8004246:	bd10      	pop	{r4, pc}
 8004248:	00dc0068 	.word	0x00dc0068
 800424c:	003a0030 	.word	0x003a0030
 8004250:	0801daa8 	.word	0x0801daa8

08004254 <_ZN4Ship6updateEh>:

bool Ship::update(uint8_t dt) {
	this->moveRate -= dt;
 8004254:	8a43      	ldrh	r3, [r0, #18]
 8004256:	1a59      	subs	r1, r3, r1
 8004258:	b209      	sxth	r1, r1
	if(this->moveRate > 0) return false;
 800425a:	2900      	cmp	r1, #0
	this->moveRate -= dt;
 800425c:	8241      	strh	r1, [r0, #18]
	if(this->moveRate > 0) return false;
 800425e:	dc1f      	bgt.n	80042a0 <_ZN4Ship6updateEh+0x4c>
	this->coordinateX += this->velocityX;
 8004260:	8882      	ldrh	r2, [r0, #4]
 8004262:	8983      	ldrh	r3, [r0, #12]
	this->coordinateY += this->velocityY;
 8004264:	89c1      	ldrh	r1, [r0, #14]
	this->coordinateX += this->velocityX;
 8004266:	441a      	add	r2, r3
	this->coordinateY += this->velocityY;
 8004268:	88c3      	ldrh	r3, [r0, #6]
	this->coordinateX += this->velocityX;
 800426a:	b212      	sxth	r2, r2
	this->coordinateY += this->velocityY;
 800426c:	440b      	add	r3, r1
 800426e:	b21b      	sxth	r3, r3
	this->moveRate = MOVE_RATE;
 8004270:	6981      	ldr	r1, [r0, #24]
	this->coordinateX += this->velocityX;
 8004272:	8082      	strh	r2, [r0, #4]

	if(this->coordinateX < 0) this->coordinateX = 0;
 8004274:	2a00      	cmp	r2, #0
	this->coordinateY += this->velocityY;
 8004276:	80c3      	strh	r3, [r0, #6]
	this->moveRate = MOVE_RATE;
 8004278:	8241      	strh	r1, [r0, #18]
	if(this->coordinateX < 0) this->coordinateX = 0;
 800427a:	da07      	bge.n	800428c <_ZN4Ship6updateEh+0x38>
 800427c:	2200      	movs	r2, #0
	else if(this->coordinateX > 208) this->coordinateX = 208;
 800427e:	8082      	strh	r2, [r0, #4]
	if(this->coordinateY < 0) this->coordinateY = 0;
 8004280:	2b00      	cmp	r3, #0
 8004282:	da07      	bge.n	8004294 <_ZN4Ship6updateEh+0x40>
 8004284:	2300      	movs	r3, #0
 8004286:	80c3      	strh	r3, [r0, #6]
	else if(this->coordinateY > 288) this->coordinateY = 288;

	return true;
 8004288:	2001      	movs	r0, #1
 800428a:	4770      	bx	lr
	else if(this->coordinateX > 208) this->coordinateX = 208;
 800428c:	2ad0      	cmp	r2, #208	@ 0xd0
 800428e:	ddf7      	ble.n	8004280 <_ZN4Ship6updateEh+0x2c>
 8004290:	22d0      	movs	r2, #208	@ 0xd0
 8004292:	e7f4      	b.n	800427e <_ZN4Ship6updateEh+0x2a>
	else if(this->coordinateY > 288) this->coordinateY = 288;
 8004294:	f5b3 7f90 	cmp.w	r3, #288	@ 0x120
 8004298:	ddf6      	ble.n	8004288 <_ZN4Ship6updateEh+0x34>
 800429a:	f44f 7390 	mov.w	r3, #288	@ 0x120
 800429e:	e7f2      	b.n	8004286 <_ZN4Ship6updateEh+0x32>
	if(this->moveRate > 0) return false;
 80042a0:	2000      	movs	r0, #0
}
 80042a2:	4770      	bx	lr

080042a4 <_ZN4Ship12updateBulletEh>:

bool Ship::updateBullet(uint8_t dt) {
	this->fireRate -= dt;
 80042a4:	8a83      	ldrh	r3, [r0, #20]
 80042a6:	1a59      	subs	r1, r3, r1
 80042a8:	b209      	sxth	r1, r1
	if(this->fireRate > 0) return false;
 80042aa:	2900      	cmp	r1, #0
	this->fireRate = FIRE_RATE;
 80042ac:	bfd8      	it	le
 80042ae:	69c3      	ldrle	r3, [r0, #28]
	this->fireRate -= dt;
 80042b0:	8281      	strh	r1, [r0, #20]
	this->fireRate = FIRE_RATE;
 80042b2:	bfda      	itte	le
 80042b4:	8283      	strhle	r3, [r0, #20]
	return true;
 80042b6:	2001      	movle	r0, #1
	if(this->fireRate > 0) return false;
 80042b8:	2000      	movgt	r0, #0
}
 80042ba:	4770      	bx	lr

080042bc <_ZN4Ship12updateShipHpEs>:

void Ship::updateShipHp(short change) {
 this->lives += change;
 80042bc:	8c83      	ldrh	r3, [r0, #36]	@ 0x24
 80042be:	4419      	add	r1, r3
 80042c0:	8481      	strh	r1, [r0, #36]	@ 0x24
}
 80042c2:	4770      	bx	lr

080042c4 <_ZN4Ship15updateVelocityXEs>:

void Ship::updateVelocityX(short X) {
	this->velocityX = X;
 80042c4:	8181      	strh	r1, [r0, #12]
}
 80042c6:	4770      	bx	lr

080042c8 <_ZN4Ship15updateVelocityYEs>:
void Ship::updateVelocityY(short Y) {
	this->velocityY = Y;
 80042c8:	81c1      	strh	r1, [r0, #14]
}
 80042ca:	4770      	bx	lr

080042cc <_Z11updateEnemyh>:

		if(gameInstance.ship.lives <= 0) shouldEndGame = true;
	}
}

void updateEnemy(uint8_t dt) {
 80042cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	spawnRate -=dt;
 80042d0:	f8df a090 	ldr.w	sl, [pc, #144]	@ 8004364 <_Z11updateEnemyh+0x98>
 80042d4:	4c22      	ldr	r4, [pc, #136]	@ (8004360 <_Z11updateEnemyh+0x94>)
 80042d6:	f8da 3000 	ldr.w	r3, [sl]
		uint16_t ex = 0;
		uint16_t ey = 0;
		uint16_t vx;
		uint16_t vy = 0;

		if(spawnSeed%2) {
 80042da:	f8df 808c 	ldr.w	r8, [pc, #140]	@ 8004368 <_Z11updateEnemyh+0x9c>
 80042de:	f8df 908c 	ldr.w	r9, [pc, #140]	@ 800436c <_Z11updateEnemyh+0xa0>
	spawnRate -=dt;
 80042e2:	1a1b      	subs	r3, r3, r0
void updateEnemy(uint8_t dt) {
 80042e4:	4605      	mov	r5, r0
	spawnRate -=dt;
 80042e6:	f8ca 3000 	str.w	r3, [sl]
 80042ea:	2614      	movs	r6, #20
		if(enemy[i].displayStatus != IS_HIDDEN) {
 80042ec:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 80042f0:	2b03      	cmp	r3, #3
 80042f2:	d009      	beq.n	8004308 <_Z11updateEnemyh+0x3c>
			enemy[i].update(dt);
 80042f4:	4629      	mov	r1, r5
 80042f6:	4620      	mov	r0, r4
 80042f8:	f7ff feca 	bl	8004090 <_ZN5Enemy6updateEh>
	for(int i=0;i<MAX_ENEMY;i++) {
 80042fc:	3e01      	subs	r6, #1
 80042fe:	f104 0420 	add.w	r4, r4, #32
 8004302:	d1f3      	bne.n	80042ec <_Z11updateEnemyh+0x20>
		enemy[i].updateVelocity(vx, vy);
		enemy[i].updateDisplayStatus(SHOULD_SHOW);

		spawnRate = MAX_SPAWN_RATE;
	}
}
 8004304:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		if(spawnRate > 0) continue;
 8004308:	f8da 3000 	ldr.w	r3, [sl]
 800430c:	2b00      	cmp	r3, #0
 800430e:	dcf5      	bgt.n	80042fc <_Z11updateEnemyh+0x30>
		if(spawnSeed%2) {
 8004310:	f8d8 3000 	ldr.w	r3, [r8]
 8004314:	f003 0201 	and.w	r2, r3, #1
			vx = -1;
 8004318:	2a00      	cmp	r2, #0
 800431a:	f64f 71e0 	movw	r1, #65504	@ 0xffe0
 800431e:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8004322:	bf0c      	ite	eq
 8004324:	21f0      	moveq	r1, #240	@ 0xf0
 8004326:	2701      	movne	r7, #1
		switch(spawnSeed) {
 8004328:	2b03      	cmp	r3, #3
 800432a:	bf94      	ite	ls
 800432c:	f819 2003 	ldrbls.w	r2, [r9, r3]
			ex = 240;
 8004330:	2200      	movhi	r2, #0
		if(spawnSeed >= 3) {
 8004332:	2b02      	cmp	r3, #2
			spawnSeed++;
 8004334:	bfd4      	ite	le
 8004336:	3301      	addle	r3, #1
			spawnSeed = 0;
 8004338:	2300      	movgt	r3, #0
		enemy[i].updateCoordinate(ex, ey);
 800433a:	4620      	mov	r0, r4
 800433c:	f8c8 3000 	str.w	r3, [r8]
 8004340:	f7ff fef2 	bl	8004128 <_ZN6Entity16updateCoordinateEtt>
		enemy[i].updateVelocity(vx, vy);
 8004344:	2200      	movs	r2, #0
 8004346:	4639      	mov	r1, r7
 8004348:	4620      	mov	r0, r4
 800434a:	f7ff fef0 	bl	800412e <_ZN6Entity14updateVelocityEtt>
		enemy[i].updateDisplayStatus(SHOULD_SHOW);
 800434e:	2102      	movs	r1, #2
 8004350:	4620      	mov	r0, r4
 8004352:	f7ff fee7 	bl	8004124 <_ZN6Entity19updateDisplayStatusEh>
		spawnRate = MAX_SPAWN_RATE;
 8004356:	f644 6320 	movw	r3, #20000	@ 0x4e20
 800435a:	f8ca 3000 	str.w	r3, [sl]
 800435e:	e7cd      	b.n	80042fc <_Z11updateEnemyh+0x30>
 8004360:	200025b8 	.word	0x200025b8
 8004364:	20000018 	.word	0x20000018
 8004368:	200025b4 	.word	0x200025b4
 800436c:	0801dab4 	.word	0x0801dab4

08004370 <_Z16updateShipBulleth>:

void updateShipBullet(uint8_t dt) {
 8004370:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	bool shouldFire = gameInstance.ship.updateBullet(dt);
 8004374:	4601      	mov	r1, r0
void updateShipBullet(uint8_t dt) {
 8004376:	4606      	mov	r6, r0
	bool shouldFire = gameInstance.ship.updateBullet(dt);
 8004378:	4814      	ldr	r0, [pc, #80]	@ (80043cc <_Z16updateShipBulleth+0x5c>)
 800437a:	4c15      	ldr	r4, [pc, #84]	@ (80043d0 <_Z16updateShipBulleth+0x60>)
				shipBullet[i].update(dt);
				continue;
			}

			if(shouldFire) {
				shipBullet[i].updateCoordinate(sx + 8, sy - 16);
 800437c:	f8df 8054 	ldr.w	r8, [pc, #84]	@ 80043d4 <_Z16updateShipBulleth+0x64>
 8004380:	f8df 9054 	ldr.w	r9, [pc, #84]	@ 80043d8 <_Z16updateShipBulleth+0x68>
	bool shouldFire = gameInstance.ship.updateBullet(dt);
 8004384:	f7ff ff8e 	bl	80042a4 <_ZN4Ship12updateBulletEh>
 8004388:	f504 778c 	add.w	r7, r4, #280	@ 0x118
 800438c:	4605      	mov	r5, r0
			if(shipBullet[i].displayStatus != IS_HIDDEN) {
 800438e:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 8004392:	2b03      	cmp	r3, #3
 8004394:	d008      	beq.n	80043a8 <_Z16updateShipBulleth+0x38>
				shipBullet[i].update(dt);
 8004396:	4631      	mov	r1, r6
 8004398:	4620      	mov	r0, r4
 800439a:	f7ff fe21 	bl	8003fe0 <_ZN6Bullet6updateEh>
	for(int i=0; i<MAX_BULLET;i++) {
 800439e:	341c      	adds	r4, #28
 80043a0:	42bc      	cmp	r4, r7
 80043a2:	d1f4      	bne.n	800438e <_Z16updateShipBulleth+0x1e>
				shipBullet[i].updateDisplayStatus(SHOULD_SHOW);
				shouldFire = false;
			}
		}
}
 80043a4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
			if(shouldFire) {
 80043a8:	b175      	cbz	r5, 80043c8 <_Z16updateShipBulleth+0x58>
				shipBullet[i].updateCoordinate(sx + 8, sy - 16);
 80043aa:	f8b8 2000 	ldrh.w	r2, [r8]
 80043ae:	f8b9 1000 	ldrh.w	r1, [r9]
 80043b2:	3a10      	subs	r2, #16
 80043b4:	3108      	adds	r1, #8
 80043b6:	b289      	uxth	r1, r1
 80043b8:	4620      	mov	r0, r4
 80043ba:	b292      	uxth	r2, r2
 80043bc:	f7ff feb4 	bl	8004128 <_ZN6Entity16updateCoordinateEtt>
				shipBullet[i].updateDisplayStatus(SHOULD_SHOW);
 80043c0:	2102      	movs	r1, #2
 80043c2:	4620      	mov	r0, r4
 80043c4:	f7ff feae 	bl	8004124 <_ZN6Entity19updateDisplayStatusEh>
void updateShipBullet(uint8_t dt) {
 80043c8:	2500      	movs	r5, #0
 80043ca:	e7e8      	b.n	800439e <_Z16updateShipBulleth+0x2e>
 80043cc:	20002a70 	.word	0x20002a70
 80043d0:	20002950 	.word	0x20002950
 80043d4:	200025b0 	.word	0x200025b0
 80043d8:	200025b2 	.word	0x200025b2

080043dc <_Z17updateEnemyBulleth>:

void updateEnemyBullet(uint8_t dt) {
 80043dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80043e0:	4c1f      	ldr	r4, [pc, #124]	@ (8004460 <_Z17updateEnemyBulleth+0x84>)
 80043e2:	4605      	mov	r5, r0
	for(int j=0; j<MAX_ENEMY;j++) {
 80043e4:	2700      	movs	r7, #0
		if(enemy[j].displayStatus != IS_SHOWN) continue;
		if(enemy[j].updateBullet(dt) == false) continue;
		for(int i=0; i<MAX_BULLET;i++) {
			if(enemyBullet[i].displayStatus != IS_HIDDEN) continue;
			enemyBullet[i].updateCoordinate(enemy[j].coordinateX + 20, enemy[j].coordinateY + 16);
 80043e6:	f04f 081c 	mov.w	r8, #28
		if(enemy[j].displayStatus != IS_SHOWN) continue;
 80043ea:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 80043ee:	2b01      	cmp	r3, #1
 80043f0:	d110      	bne.n	8004414 <_Z17updateEnemyBulleth+0x38>
		if(enemy[j].updateBullet(dt) == false) continue;
 80043f2:	4629      	mov	r1, r5
 80043f4:	4620      	mov	r0, r4
 80043f6:	f7ff fe74 	bl	80040e2 <_ZN5Enemy12updateBulletEh>
 80043fa:	b158      	cbz	r0, 8004414 <_Z17updateEnemyBulleth+0x38>
 80043fc:	4a19      	ldr	r2, [pc, #100]	@ (8004464 <_Z17updateEnemyBulleth+0x88>)
		for(int i=0; i<MAX_BULLET;i++) {
 80043fe:	2300      	movs	r3, #0
 8004400:	4616      	mov	r6, r2
			if(enemyBullet[i].displayStatus != IS_HIDDEN) continue;
 8004402:	f9b2 1010 	ldrsh.w	r1, [r2, #16]
 8004406:	2903      	cmp	r1, #3
 8004408:	d019      	beq.n	800443e <_Z17updateEnemyBulleth+0x62>
		for(int i=0; i<MAX_BULLET;i++) {
 800440a:	3301      	adds	r3, #1
 800440c:	2b0a      	cmp	r3, #10
 800440e:	f102 021c 	add.w	r2, r2, #28
 8004412:	d1f6      	bne.n	8004402 <_Z17updateEnemyBulleth+0x26>
	for(int j=0; j<MAX_ENEMY;j++) {
 8004414:	3701      	adds	r7, #1
 8004416:	2f14      	cmp	r7, #20
 8004418:	f104 0420 	add.w	r4, r4, #32
 800441c:	d1e5      	bne.n	80043ea <_Z17updateEnemyBulleth+0xe>
 800441e:	4c11      	ldr	r4, [pc, #68]	@ (8004464 <_Z17updateEnemyBulleth+0x88>)
 8004420:	260a      	movs	r6, #10
			break;
		}
	}

	for(int i=0; i<MAX_BULLET;i++) {
		if(enemyBullet[i].displayStatus != IS_SHOWN) continue;
 8004422:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 8004426:	2b01      	cmp	r3, #1
 8004428:	d103      	bne.n	8004432 <_Z17updateEnemyBulleth+0x56>
		enemyBullet[i].update(dt);
 800442a:	4629      	mov	r1, r5
 800442c:	4620      	mov	r0, r4
 800442e:	f7ff fdd7 	bl	8003fe0 <_ZN6Bullet6updateEh>
	for(int i=0; i<MAX_BULLET;i++) {
 8004432:	3e01      	subs	r6, #1
 8004434:	f104 041c 	add.w	r4, r4, #28
 8004438:	d1f3      	bne.n	8004422 <_Z17updateEnemyBulleth+0x46>
	}

}
 800443a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			enemyBullet[i].updateCoordinate(enemy[j].coordinateX + 20, enemy[j].coordinateY + 16);
 800443e:	88e2      	ldrh	r2, [r4, #6]
 8004440:	88a1      	ldrh	r1, [r4, #4]
 8004442:	fb08 6603 	mla	r6, r8, r3, r6
 8004446:	3210      	adds	r2, #16
 8004448:	3114      	adds	r1, #20
 800444a:	4630      	mov	r0, r6
 800444c:	b292      	uxth	r2, r2
 800444e:	b289      	uxth	r1, r1
 8004450:	f7ff fe6a 	bl	8004128 <_ZN6Entity16updateCoordinateEtt>
			enemyBullet[i].updateDisplayStatus(SHOULD_SHOW);
 8004454:	2102      	movs	r1, #2
 8004456:	4630      	mov	r0, r6
 8004458:	f7ff fe64 	bl	8004124 <_ZN6Entity19updateDisplayStatusEh>
			break;
 800445c:	e7da      	b.n	8004414 <_Z17updateEnemyBulleth+0x38>
 800445e:	bf00      	nop
 8004460:	200025b8 	.word	0x200025b8
 8004464:	20002838 	.word	0x20002838

08004468 <_Z8gameTaskPv>:
void gameTask(void *argument) {
 8004468:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800446c:	f8df 91a8 	ldr.w	r9, [pc, #424]	@ 8004618 <_Z8gameTaskPv+0x1b0>
 8004470:	f8df a1a8 	ldr.w	sl, [pc, #424]	@ 800461c <_Z8gameTaskPv+0x1b4>
 8004474:	2400      	movs	r4, #0
		shipBullet[i].updateCoordinate(-50, -50);
 8004476:	eb04 0609 	add.w	r6, r4, r9
 800447a:	f64f 72ce 	movw	r2, #65486	@ 0xffce
 800447e:	4611      	mov	r1, r2
 8004480:	4630      	mov	r0, r6
 8004482:	f7ff fe51 	bl	8004128 <_ZN6Entity16updateCoordinateEtt>
		enemyBullet[i].updateCoordinate(-50, -50);
 8004486:	eb04 050a 	add.w	r5, r4, sl
 800448a:	f64f 72ce 	movw	r2, #65486	@ 0xffce
 800448e:	4611      	mov	r1, r2
 8004490:	4628      	mov	r0, r5
 8004492:	f7ff fe49 	bl	8004128 <_ZN6Entity16updateCoordinateEtt>
		shipBullet[i].updateVelocity(0, -5);
 8004496:	f64f 72fb 	movw	r2, #65531	@ 0xfffb
 800449a:	2100      	movs	r1, #0
 800449c:	4630      	mov	r0, r6
 800449e:	f7ff fe46 	bl	800412e <_ZN6Entity14updateVelocityEtt>
		enemyBullet[i].updateVelocity(0, 5);
 80044a2:	2205      	movs	r2, #5
 80044a4:	2100      	movs	r1, #0
 80044a6:	4628      	mov	r0, r5
 80044a8:	f7ff fe41 	bl	800412e <_ZN6Entity14updateVelocityEtt>
		shipBullet[i].updateDisplayStatus(IS_HIDDEN);
 80044ac:	2103      	movs	r1, #3
 80044ae:	4630      	mov	r0, r6
 80044b0:	f7ff fe38 	bl	8004124 <_ZN6Entity19updateDisplayStatusEh>
	for(int i=0; i<MAX_BULLET;i++) {
 80044b4:	341c      	adds	r4, #28
		enemyBullet[i].updateDisplayStatus(IS_HIDDEN);
 80044b6:	2103      	movs	r1, #3
 80044b8:	4628      	mov	r0, r5
 80044ba:	f7ff fe33 	bl	8004124 <_ZN6Entity19updateDisplayStatusEh>
	for(int i=0; i<MAX_BULLET;i++) {
 80044be:	f5b4 7f8c 	cmp.w	r4, #280	@ 0x118
 80044c2:	d1d8      	bne.n	8004476 <_Z8gameTaskPv+0xe>
 80044c4:	4f4c      	ldr	r7, [pc, #304]	@ (80045f8 <_Z8gameTaskPv+0x190>)
	for(int i=0; i<MAX_ENEMY;i++) {
 80044c6:	2500      	movs	r5, #0
	for(int i=0; i<MAX_BULLET;i++) {
 80044c8:	463c      	mov	r4, r7
		enemy[i].updateCoordinate(-50, -50);
 80044ca:	f64f 72ce 	movw	r2, #65486	@ 0xffce
 80044ce:	4611      	mov	r1, r2
 80044d0:	4620      	mov	r0, r4
 80044d2:	f7ff fe29 	bl	8004128 <_ZN6Entity16updateCoordinateEtt>
	for(int i=0; i<MAX_ENEMY;i++) {
 80044d6:	3501      	adds	r5, #1
		enemy[i].updateDisplayStatus(IS_HIDDEN);
 80044d8:	4620      	mov	r0, r4
 80044da:	2103      	movs	r1, #3
 80044dc:	f7ff fe22 	bl	8004124 <_ZN6Entity19updateDisplayStatusEh>
	for(int i=0; i<MAX_ENEMY;i++) {
 80044e0:	2d14      	cmp	r5, #20
 80044e2:	f104 0420 	add.w	r4, r4, #32
 80044e6:	d1f0      	bne.n	80044ca <_Z8gameTaskPv+0x62>
		if(shouldEndGame == true && shouldStopTask == true) break;
 80044e8:	4a44      	ldr	r2, [pc, #272]	@ (80045fc <_Z8gameTaskPv+0x194>)
 80044ea:	4b45      	ldr	r3, [pc, #276]	@ (8004600 <_Z8gameTaskPv+0x198>)
 80044ec:	7812      	ldrb	r2, [r2, #0]
 80044ee:	781b      	ldrb	r3, [r3, #0]
 80044f0:	b112      	cbz	r2, 80044f8 <_Z8gameTaskPv+0x90>
 80044f2:	2b00      	cmp	r3, #0
 80044f4:	d17d      	bne.n	80045f2 <_Z8gameTaskPv+0x18a>
 80044f6:	e7fe      	b.n	80044f6 <_Z8gameTaskPv+0x8e>
		sx = gameInstance.ship.coordinateX;
 80044f8:	4d42      	ldr	r5, [pc, #264]	@ (8004604 <_Z8gameTaskPv+0x19c>)
 80044fa:	4b43      	ldr	r3, [pc, #268]	@ (8004608 <_Z8gameTaskPv+0x1a0>)
 80044fc:	89aa      	ldrh	r2, [r5, #12]
			dt = 1;
 80044fe:	4c43      	ldr	r4, [pc, #268]	@ (800460c <_Z8gameTaskPv+0x1a4>)
		sx = gameInstance.ship.coordinateX;
 8004500:	801a      	strh	r2, [r3, #0]
		sy = gameInstance.ship.coordinateY;
 8004502:	4b43      	ldr	r3, [pc, #268]	@ (8004610 <_Z8gameTaskPv+0x1a8>)
 8004504:	89ea      	ldrh	r2, [r5, #14]
 8004506:	801a      	strh	r2, [r3, #0]
			dt = 1;
 8004508:	2001      	movs	r0, #1
 800450a:	7020      	strb	r0, [r4, #0]
		updateEnemy(dt);
 800450c:	f7ff fede 	bl	80042cc <_Z11updateEnemyh>
		gameInstance.ship.update(dt);
 8004510:	7821      	ldrb	r1, [r4, #0]
 8004512:	f105 0008 	add.w	r0, r5, #8
 8004516:	f7ff fe9d 	bl	8004254 <_ZN4Ship6updateEh>
		updateShipBullet(dt);
 800451a:	7820      	ldrb	r0, [r4, #0]
 800451c:	f7ff ff28 	bl	8004370 <_Z16updateShipBulleth>
		updateEnemyBullet(dt);
 8004520:	7820      	ldrb	r0, [r4, #0]
 8004522:	f7ff ff5b 	bl	80043dc <_Z17updateEnemyBulleth>
 8004526:	463c      	mov	r4, r7
 8004528:	2614      	movs	r6, #20
			if(Entity::isCollide(enemy[i], gameInstance.ship)) {
 800452a:	f105 0808 	add.w	r8, r5, #8
			if(enemy[i].displayStatus != IS_SHOWN) continue;
 800452e:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 8004532:	2b01      	cmp	r3, #1
 8004534:	d14c      	bne.n	80045d0 <_Z8gameTaskPv+0x168>
			if(Entity::isCollide(enemy[i], gameInstance.ship)) {
 8004536:	4641      	mov	r1, r8
 8004538:	4620      	mov	r0, r4
 800453a:	f7ff fdfb 	bl	8004134 <_ZN6Entity9isCollideERS_S0_>
 800453e:	2800      	cmp	r0, #0
 8004540:	d046      	beq.n	80045d0 <_Z8gameTaskPv+0x168>
				gameInstance.ship.updateShipHp(-1);
 8004542:	4834      	ldr	r0, [pc, #208]	@ (8004614 <_Z8gameTaskPv+0x1ac>)
 8004544:	f04f 31ff 	mov.w	r1, #4294967295
 8004548:	f7ff feb8 	bl	80042bc <_ZN4Ship12updateShipHpEs>
				enemy[i].updateDisplayStatus(SHOULD_HIDE);
 800454c:	2104      	movs	r1, #4
 800454e:	4620      	mov	r0, r4
 8004550:	f7ff fde8 	bl	8004124 <_ZN6Entity19updateDisplayStatusEh>
		updateEnemyBullet(dt);
 8004554:	463e      	mov	r6, r7
 8004556:	2414      	movs	r4, #20
			if(enemy[i].displayStatus != IS_SHOWN) continue;
 8004558:	f9b6 3010 	ldrsh.w	r3, [r6, #16]
 800455c:	2b01      	cmp	r3, #1
 800455e:	d117      	bne.n	8004590 <_Z8gameTaskPv+0x128>
 8004560:	46c8      	mov	r8, r9
 8004562:	f04f 0b0a 	mov.w	fp, #10
				if(shipBullet[j].displayStatus != IS_SHOWN) continue;
 8004566:	f9b8 1010 	ldrsh.w	r1, [r8, #16]
 800456a:	2901      	cmp	r1, #1
 800456c:	d135      	bne.n	80045da <_Z8gameTaskPv+0x172>
				if(Entity::isCollide(enemy[i], shipBullet[j])) {
 800456e:	4641      	mov	r1, r8
 8004570:	4630      	mov	r0, r6
 8004572:	f7ff fddf 	bl	8004134 <_ZN6Entity9isCollideERS_S0_>
 8004576:	b380      	cbz	r0, 80045da <_Z8gameTaskPv+0x172>
					enemy[i].updateDisplayStatus(SHOULD_HIDE);
 8004578:	2104      	movs	r1, #4
 800457a:	4630      	mov	r0, r6
 800457c:	f7ff fdd2 	bl	8004124 <_ZN6Entity19updateDisplayStatusEh>
					shipBullet[j].updateDisplayStatus(SHOULD_HIDE);
 8004580:	2104      	movs	r1, #4
 8004582:	4640      	mov	r0, r8
 8004584:	f7ff fdce 	bl	8004124 <_ZN6Entity19updateDisplayStatusEh>
					gameInstance.updateScore(5);
 8004588:	481e      	ldr	r0, [pc, #120]	@ (8004604 <_Z8gameTaskPv+0x19c>)
 800458a:	2105      	movs	r1, #5
 800458c:	f7ff fe14 	bl	80041b8 <_ZN4Game11updateScoreEs>
		for(int i=0;i<MAX_ENEMY;i++) {
 8004590:	3c01      	subs	r4, #1
 8004592:	f106 0620 	add.w	r6, r6, #32
 8004596:	d1df      	bne.n	8004558 <_Z8gameTaskPv+0xf0>
			if(Entity::isCollide(enemyBullet[i], gameInstance.ship)) {
 8004598:	491e      	ldr	r1, [pc, #120]	@ (8004614 <_Z8gameTaskPv+0x1ac>)
 800459a:	4656      	mov	r6, sl
			if(enemyBullet[i].displayStatus != IS_SHOWN) continue;
 800459c:	f9b6 3010 	ldrsh.w	r3, [r6, #16]
 80045a0:	2b01      	cmp	r3, #1
 80045a2:	d120      	bne.n	80045e6 <_Z8gameTaskPv+0x17e>
			if(Entity::isCollide(enemyBullet[i], gameInstance.ship)) {
 80045a4:	4630      	mov	r0, r6
 80045a6:	f7ff fdc5 	bl	8004134 <_ZN6Entity9isCollideERS_S0_>
 80045aa:	491a      	ldr	r1, [pc, #104]	@ (8004614 <_Z8gameTaskPv+0x1ac>)
 80045ac:	b1d8      	cbz	r0, 80045e6 <_Z8gameTaskPv+0x17e>
				gameInstance.ship.updateShipHp(-1);
 80045ae:	4819      	ldr	r0, [pc, #100]	@ (8004614 <_Z8gameTaskPv+0x1ac>)
 80045b0:	f04f 31ff 	mov.w	r1, #4294967295
 80045b4:	f7ff fe82 	bl	80042bc <_ZN4Ship12updateShipHpEs>
				enemyBullet[i].updateDisplayStatus(SHOULD_HIDE);
 80045b8:	2104      	movs	r1, #4
 80045ba:	4630      	mov	r0, r6
 80045bc:	f7ff fdb2 	bl	8004124 <_ZN6Entity19updateDisplayStatusEh>
		if(gameInstance.ship.lives <= 0) shouldEndGame = true;
 80045c0:	f9b5 302c 	ldrsh.w	r3, [r5, #44]	@ 0x2c
 80045c4:	2b00      	cmp	r3, #0
 80045c6:	dc8f      	bgt.n	80044e8 <_Z8gameTaskPv+0x80>
 80045c8:	4a0c      	ldr	r2, [pc, #48]	@ (80045fc <_Z8gameTaskPv+0x194>)
 80045ca:	2301      	movs	r3, #1
 80045cc:	7013      	strb	r3, [r2, #0]
 80045ce:	e78b      	b.n	80044e8 <_Z8gameTaskPv+0x80>
		for(int i=0;i<MAX_ENEMY;i++) {
 80045d0:	3e01      	subs	r6, #1
 80045d2:	f104 0420 	add.w	r4, r4, #32
 80045d6:	d1aa      	bne.n	800452e <_Z8gameTaskPv+0xc6>
 80045d8:	e7bc      	b.n	8004554 <_Z8gameTaskPv+0xec>
			for(int j=0;j<MAX_BULLET;j++) {
 80045da:	f1bb 0b01 	subs.w	fp, fp, #1
 80045de:	f108 081c 	add.w	r8, r8, #28
 80045e2:	d1c0      	bne.n	8004566 <_Z8gameTaskPv+0xfe>
 80045e4:	e7d4      	b.n	8004590 <_Z8gameTaskPv+0x128>
		for(int i=0;i<MAX_BULLET;i++) {
 80045e6:	3401      	adds	r4, #1
 80045e8:	2c0a      	cmp	r4, #10
 80045ea:	f106 061c 	add.w	r6, r6, #28
 80045ee:	d1d5      	bne.n	800459c <_Z8gameTaskPv+0x134>
 80045f0:	e7e6      	b.n	80045c0 <_Z8gameTaskPv+0x158>
}
 80045f2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80045f6:	bf00      	nop
 80045f8:	200025b8 	.word	0x200025b8
 80045fc:	200025ae 	.word	0x200025ae
 8004600:	200025ad 	.word	0x200025ad
 8004604:	20002a68 	.word	0x20002a68
 8004608:	200025b2 	.word	0x200025b2
 800460c:	200025ac 	.word	0x200025ac
 8004610:	200025b0 	.word	0x200025b0
 8004614:	20002a70 	.word	0x20002a70
 8004618:	20002950 	.word	0x20002950
 800461c:	20002838 	.word	0x20002838

08004620 <_GLOBAL__sub_I_gameInstance>:
}
 8004620:	b538      	push	{r3, r4, r5, lr}
Game gameInstance;
 8004622:	480f      	ldr	r0, [pc, #60]	@ (8004660 <_GLOBAL__sub_I_gameInstance+0x40>)
Bullet shipBullet[MAX_BULLET];
 8004624:	4d0f      	ldr	r5, [pc, #60]	@ (8004664 <_GLOBAL__sub_I_gameInstance+0x44>)
Game gameInstance;
 8004626:	f7ff fdb9 	bl	800419c <_ZN4GameC1Ev>
 800462a:	2400      	movs	r4, #0
Bullet shipBullet[MAX_BULLET];
 800462c:	1928      	adds	r0, r5, r4
 800462e:	341c      	adds	r4, #28
 8004630:	f7ff fcbe 	bl	8003fb0 <_ZN6BulletC1Ev>
 8004634:	f5b4 7f8c 	cmp.w	r4, #280	@ 0x118
 8004638:	d1f8      	bne.n	800462c <_GLOBAL__sub_I_gameInstance+0xc>
Bullet enemyBullet[MAX_BULLET];
 800463a:	4d0b      	ldr	r5, [pc, #44]	@ (8004668 <_GLOBAL__sub_I_gameInstance+0x48>)
 800463c:	2400      	movs	r4, #0
 800463e:	1928      	adds	r0, r5, r4
 8004640:	341c      	adds	r4, #28
 8004642:	f7ff fcb5 	bl	8003fb0 <_ZN6BulletC1Ev>
 8004646:	f5b4 7f8c 	cmp.w	r4, #280	@ 0x118
 800464a:	d1f8      	bne.n	800463e <_GLOBAL__sub_I_gameInstance+0x1e>
Enemy enemy[MAX_ENEMY];
 800464c:	4d07      	ldr	r5, [pc, #28]	@ (800466c <_GLOBAL__sub_I_gameInstance+0x4c>)
 800464e:	2400      	movs	r4, #0
 8004650:	1928      	adds	r0, r5, r4
 8004652:	3420      	adds	r4, #32
 8004654:	f7ff fd02 	bl	800405c <_ZN5EnemyC1Ev>
 8004658:	f5b4 7f20 	cmp.w	r4, #640	@ 0x280
 800465c:	d1f8      	bne.n	8004650 <_GLOBAL__sub_I_gameInstance+0x30>
}
 800465e:	bd38      	pop	{r3, r4, r5, pc}
 8004660:	20002a68 	.word	0x20002a68
 8004664:	20002950 	.word	0x20002950
 8004668:	20002838 	.word	0x20002838
 800466c:	200025b8 	.word	0x200025b8

08004670 <_GLOBAL__sub_D_gameInstance>:
 8004670:	4816      	ldr	r0, [pc, #88]	@ (80046cc <_GLOBAL__sub_D_gameInstance+0x5c>)
 8004672:	b538      	push	{r3, r4, r5, lr}
 8004674:	2415      	movs	r4, #21
Enemy enemy[MAX_ENEMY];
 8004676:	3c01      	subs	r4, #1
 8004678:	f1a0 0520 	sub.w	r5, r0, #32
 800467c:	d112      	bne.n	80046a4 <_GLOBAL__sub_D_gameInstance+0x34>
 800467e:	4814      	ldr	r0, [pc, #80]	@ (80046d0 <_GLOBAL__sub_D_gameInstance+0x60>)
 8004680:	240b      	movs	r4, #11
Bullet enemyBullet[MAX_BULLET];
 8004682:	3c01      	subs	r4, #1
 8004684:	f1a0 051c 	sub.w	r5, r0, #28
 8004688:	d114      	bne.n	80046b4 <_GLOBAL__sub_D_gameInstance+0x44>
 800468a:	4812      	ldr	r0, [pc, #72]	@ (80046d4 <_GLOBAL__sub_D_gameInstance+0x64>)
 800468c:	240b      	movs	r4, #11
Bullet shipBullet[MAX_BULLET];
 800468e:	3c01      	subs	r4, #1
 8004690:	f1a0 051c 	sub.w	r5, r0, #28
 8004694:	d015      	beq.n	80046c2 <_GLOBAL__sub_D_gameInstance+0x52>
 8004696:	f8d0 30fc 	ldr.w	r3, [r0, #252]	@ 0xfc
 800469a:	30fc      	adds	r0, #252	@ 0xfc
 800469c:	685b      	ldr	r3, [r3, #4]
 800469e:	4798      	blx	r3
 80046a0:	4628      	mov	r0, r5
 80046a2:	e7f4      	b.n	800468e <_GLOBAL__sub_D_gameInstance+0x1e>
Enemy enemy[MAX_ENEMY];
 80046a4:	f8d5 3280 	ldr.w	r3, [r5, #640]	@ 0x280
 80046a8:	f500 7018 	add.w	r0, r0, #608	@ 0x260
 80046ac:	685b      	ldr	r3, [r3, #4]
 80046ae:	4798      	blx	r3
 80046b0:	4628      	mov	r0, r5
 80046b2:	e7e0      	b.n	8004676 <_GLOBAL__sub_D_gameInstance+0x6>
Bullet enemyBullet[MAX_BULLET];
 80046b4:	f8d5 3118 	ldr.w	r3, [r5, #280]	@ 0x118
 80046b8:	30fc      	adds	r0, #252	@ 0xfc
 80046ba:	685b      	ldr	r3, [r3, #4]
 80046bc:	4798      	blx	r3
 80046be:	4628      	mov	r0, r5
 80046c0:	e7df      	b.n	8004682 <_GLOBAL__sub_D_gameInstance+0x12>
}
 80046c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
Game gameInstance;
 80046c6:	4804      	ldr	r0, [pc, #16]	@ (80046d8 <_GLOBAL__sub_D_gameInstance+0x68>)
 80046c8:	f7ff bd7a 	b.w	80041c0 <_ZN4GameD1Ev>
 80046cc:	200025b8 	.word	0x200025b8
 80046d0:	20002838 	.word	0x20002838
 80046d4:	20002950 	.word	0x20002950
 80046d8:	20002a68 	.word	0x20002a68

080046dc <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 80046dc:	20f0      	movs	r0, #240	@ 0xf0
 80046de:	4770      	bx	lr

080046e0 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 80046e0:	f44f 70a0 	mov.w	r0, #320	@ 0x140
 80046e4:	4770      	bx	lr

080046e6 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 80046e6:	2029      	movs	r0, #41	@ 0x29
 80046e8:	f7fd b8fa 	b.w	80018e0 <LCD_IO_WriteReg>

080046ec <ili9341_DisplayOff>:
 80046ec:	2028      	movs	r0, #40	@ 0x28
 80046ee:	f7fd b8f7 	b.w	80018e0 <LCD_IO_WriteReg>

080046f2 <ili9341_Init>:
{
 80046f2:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80046f4:	f7fd f8c8 	bl	8001888 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 80046f8:	20ca      	movs	r0, #202	@ 0xca
 80046fa:	f7fd f8f1 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80046fe:	20c3      	movs	r0, #195	@ 0xc3
 8004700:	f7fd f8d2 	bl	80018a8 <LCD_IO_WriteData>
 8004704:	2008      	movs	r0, #8
 8004706:	f7fd f8cf 	bl	80018a8 <LCD_IO_WriteData>
 800470a:	2050      	movs	r0, #80	@ 0x50
 800470c:	f7fd f8cc 	bl	80018a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004710:	20cf      	movs	r0, #207	@ 0xcf
 8004712:	f7fd f8e5 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004716:	2000      	movs	r0, #0
 8004718:	f7fd f8c6 	bl	80018a8 <LCD_IO_WriteData>
 800471c:	20c1      	movs	r0, #193	@ 0xc1
 800471e:	f7fd f8c3 	bl	80018a8 <LCD_IO_WriteData>
 8004722:	2030      	movs	r0, #48	@ 0x30
 8004724:	f7fd f8c0 	bl	80018a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004728:	20ed      	movs	r0, #237	@ 0xed
 800472a:	f7fd f8d9 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800472e:	2064      	movs	r0, #100	@ 0x64
 8004730:	f7fd f8ba 	bl	80018a8 <LCD_IO_WriteData>
 8004734:	2003      	movs	r0, #3
 8004736:	f7fd f8b7 	bl	80018a8 <LCD_IO_WriteData>
 800473a:	2012      	movs	r0, #18
 800473c:	f7fd f8b4 	bl	80018a8 <LCD_IO_WriteData>
 8004740:	2081      	movs	r0, #129	@ 0x81
 8004742:	f7fd f8b1 	bl	80018a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004746:	20e8      	movs	r0, #232	@ 0xe8
 8004748:	f7fd f8ca 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800474c:	2085      	movs	r0, #133	@ 0x85
 800474e:	f7fd f8ab 	bl	80018a8 <LCD_IO_WriteData>
 8004752:	2000      	movs	r0, #0
 8004754:	f7fd f8a8 	bl	80018a8 <LCD_IO_WriteData>
 8004758:	2078      	movs	r0, #120	@ 0x78
 800475a:	f7fd f8a5 	bl	80018a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800475e:	20cb      	movs	r0, #203	@ 0xcb
 8004760:	f7fd f8be 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004764:	2039      	movs	r0, #57	@ 0x39
 8004766:	f7fd f89f 	bl	80018a8 <LCD_IO_WriteData>
 800476a:	202c      	movs	r0, #44	@ 0x2c
 800476c:	f7fd f89c 	bl	80018a8 <LCD_IO_WriteData>
 8004770:	2000      	movs	r0, #0
 8004772:	f7fd f899 	bl	80018a8 <LCD_IO_WriteData>
 8004776:	2034      	movs	r0, #52	@ 0x34
 8004778:	f7fd f896 	bl	80018a8 <LCD_IO_WriteData>
 800477c:	2002      	movs	r0, #2
 800477e:	f7fd f893 	bl	80018a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004782:	20f7      	movs	r0, #247	@ 0xf7
 8004784:	f7fd f8ac 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004788:	2020      	movs	r0, #32
 800478a:	f7fd f88d 	bl	80018a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800478e:	20ea      	movs	r0, #234	@ 0xea
 8004790:	f7fd f8a6 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004794:	2000      	movs	r0, #0
 8004796:	f7fd f887 	bl	80018a8 <LCD_IO_WriteData>
 800479a:	2000      	movs	r0, #0
 800479c:	f7fd f884 	bl	80018a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80047a0:	20b1      	movs	r0, #177	@ 0xb1
 80047a2:	f7fd f89d 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80047a6:	2000      	movs	r0, #0
 80047a8:	f7fd f87e 	bl	80018a8 <LCD_IO_WriteData>
 80047ac:	201b      	movs	r0, #27
 80047ae:	f7fd f87b 	bl	80018a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80047b2:	20b6      	movs	r0, #182	@ 0xb6
 80047b4:	f7fd f894 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80047b8:	200a      	movs	r0, #10
 80047ba:	f7fd f875 	bl	80018a8 <LCD_IO_WriteData>
 80047be:	20a2      	movs	r0, #162	@ 0xa2
 80047c0:	f7fd f872 	bl	80018a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80047c4:	20c0      	movs	r0, #192	@ 0xc0
 80047c6:	f7fd f88b 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80047ca:	2010      	movs	r0, #16
 80047cc:	f7fd f86c 	bl	80018a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80047d0:	20c1      	movs	r0, #193	@ 0xc1
 80047d2:	f7fd f885 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80047d6:	2010      	movs	r0, #16
 80047d8:	f7fd f866 	bl	80018a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80047dc:	20c5      	movs	r0, #197	@ 0xc5
 80047de:	f7fd f87f 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80047e2:	2045      	movs	r0, #69	@ 0x45
 80047e4:	f7fd f860 	bl	80018a8 <LCD_IO_WriteData>
 80047e8:	2015      	movs	r0, #21
 80047ea:	f7fd f85d 	bl	80018a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80047ee:	20c7      	movs	r0, #199	@ 0xc7
 80047f0:	f7fd f876 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80047f4:	2090      	movs	r0, #144	@ 0x90
 80047f6:	f7fd f857 	bl	80018a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80047fa:	2036      	movs	r0, #54	@ 0x36
 80047fc:	f7fd f870 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004800:	20c8      	movs	r0, #200	@ 0xc8
 8004802:	f7fd f851 	bl	80018a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004806:	20f2      	movs	r0, #242	@ 0xf2
 8004808:	f7fd f86a 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800480c:	2000      	movs	r0, #0
 800480e:	f7fd f84b 	bl	80018a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004812:	20b0      	movs	r0, #176	@ 0xb0
 8004814:	f7fd f864 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004818:	20c2      	movs	r0, #194	@ 0xc2
 800481a:	f7fd f845 	bl	80018a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800481e:	20b6      	movs	r0, #182	@ 0xb6
 8004820:	f7fd f85e 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004824:	200a      	movs	r0, #10
 8004826:	f7fd f83f 	bl	80018a8 <LCD_IO_WriteData>
 800482a:	20a7      	movs	r0, #167	@ 0xa7
 800482c:	f7fd f83c 	bl	80018a8 <LCD_IO_WriteData>
 8004830:	2027      	movs	r0, #39	@ 0x27
 8004832:	f7fd f839 	bl	80018a8 <LCD_IO_WriteData>
 8004836:	2004      	movs	r0, #4
 8004838:	f7fd f836 	bl	80018a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800483c:	202a      	movs	r0, #42	@ 0x2a
 800483e:	f7fd f84f 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004842:	2000      	movs	r0, #0
 8004844:	f7fd f830 	bl	80018a8 <LCD_IO_WriteData>
 8004848:	2000      	movs	r0, #0
 800484a:	f7fd f82d 	bl	80018a8 <LCD_IO_WriteData>
 800484e:	2000      	movs	r0, #0
 8004850:	f7fd f82a 	bl	80018a8 <LCD_IO_WriteData>
 8004854:	20ef      	movs	r0, #239	@ 0xef
 8004856:	f7fd f827 	bl	80018a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800485a:	202b      	movs	r0, #43	@ 0x2b
 800485c:	f7fd f840 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004860:	2000      	movs	r0, #0
 8004862:	f7fd f821 	bl	80018a8 <LCD_IO_WriteData>
 8004866:	2000      	movs	r0, #0
 8004868:	f7fd f81e 	bl	80018a8 <LCD_IO_WriteData>
 800486c:	2001      	movs	r0, #1
 800486e:	f7fd f81b 	bl	80018a8 <LCD_IO_WriteData>
 8004872:	203f      	movs	r0, #63	@ 0x3f
 8004874:	f7fd f818 	bl	80018a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004878:	20f6      	movs	r0, #246	@ 0xf6
 800487a:	f7fd f831 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800487e:	2001      	movs	r0, #1
 8004880:	f7fd f812 	bl	80018a8 <LCD_IO_WriteData>
 8004884:	2000      	movs	r0, #0
 8004886:	f7fd f80f 	bl	80018a8 <LCD_IO_WriteData>
 800488a:	2006      	movs	r0, #6
 800488c:	f7fd f80c 	bl	80018a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004890:	202c      	movs	r0, #44	@ 0x2c
 8004892:	f7fd f825 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8004896:	20c8      	movs	r0, #200	@ 0xc8
 8004898:	f7fd f870 	bl	800197c <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800489c:	2026      	movs	r0, #38	@ 0x26
 800489e:	f7fd f81f 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80048a2:	2001      	movs	r0, #1
 80048a4:	f7fd f800 	bl	80018a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80048a8:	20e0      	movs	r0, #224	@ 0xe0
 80048aa:	f7fd f819 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80048ae:	200f      	movs	r0, #15
 80048b0:	f7fc fffa 	bl	80018a8 <LCD_IO_WriteData>
 80048b4:	2029      	movs	r0, #41	@ 0x29
 80048b6:	f7fc fff7 	bl	80018a8 <LCD_IO_WriteData>
 80048ba:	2024      	movs	r0, #36	@ 0x24
 80048bc:	f7fc fff4 	bl	80018a8 <LCD_IO_WriteData>
 80048c0:	200c      	movs	r0, #12
 80048c2:	f7fc fff1 	bl	80018a8 <LCD_IO_WriteData>
 80048c6:	200e      	movs	r0, #14
 80048c8:	f7fc ffee 	bl	80018a8 <LCD_IO_WriteData>
 80048cc:	2009      	movs	r0, #9
 80048ce:	f7fc ffeb 	bl	80018a8 <LCD_IO_WriteData>
 80048d2:	204e      	movs	r0, #78	@ 0x4e
 80048d4:	f7fc ffe8 	bl	80018a8 <LCD_IO_WriteData>
 80048d8:	2078      	movs	r0, #120	@ 0x78
 80048da:	f7fc ffe5 	bl	80018a8 <LCD_IO_WriteData>
 80048de:	203c      	movs	r0, #60	@ 0x3c
 80048e0:	f7fc ffe2 	bl	80018a8 <LCD_IO_WriteData>
 80048e4:	2009      	movs	r0, #9
 80048e6:	f7fc ffdf 	bl	80018a8 <LCD_IO_WriteData>
 80048ea:	2013      	movs	r0, #19
 80048ec:	f7fc ffdc 	bl	80018a8 <LCD_IO_WriteData>
 80048f0:	2005      	movs	r0, #5
 80048f2:	f7fc ffd9 	bl	80018a8 <LCD_IO_WriteData>
 80048f6:	2017      	movs	r0, #23
 80048f8:	f7fc ffd6 	bl	80018a8 <LCD_IO_WriteData>
 80048fc:	2011      	movs	r0, #17
 80048fe:	f7fc ffd3 	bl	80018a8 <LCD_IO_WriteData>
 8004902:	2000      	movs	r0, #0
 8004904:	f7fc ffd0 	bl	80018a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004908:	20e1      	movs	r0, #225	@ 0xe1
 800490a:	f7fc ffe9 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800490e:	2000      	movs	r0, #0
 8004910:	f7fc ffca 	bl	80018a8 <LCD_IO_WriteData>
 8004914:	2016      	movs	r0, #22
 8004916:	f7fc ffc7 	bl	80018a8 <LCD_IO_WriteData>
 800491a:	201b      	movs	r0, #27
 800491c:	f7fc ffc4 	bl	80018a8 <LCD_IO_WriteData>
 8004920:	2004      	movs	r0, #4
 8004922:	f7fc ffc1 	bl	80018a8 <LCD_IO_WriteData>
 8004926:	2011      	movs	r0, #17
 8004928:	f7fc ffbe 	bl	80018a8 <LCD_IO_WriteData>
 800492c:	2007      	movs	r0, #7
 800492e:	f7fc ffbb 	bl	80018a8 <LCD_IO_WriteData>
 8004932:	2031      	movs	r0, #49	@ 0x31
 8004934:	f7fc ffb8 	bl	80018a8 <LCD_IO_WriteData>
 8004938:	2033      	movs	r0, #51	@ 0x33
 800493a:	f7fc ffb5 	bl	80018a8 <LCD_IO_WriteData>
 800493e:	2042      	movs	r0, #66	@ 0x42
 8004940:	f7fc ffb2 	bl	80018a8 <LCD_IO_WriteData>
 8004944:	2005      	movs	r0, #5
 8004946:	f7fc ffaf 	bl	80018a8 <LCD_IO_WriteData>
 800494a:	200c      	movs	r0, #12
 800494c:	f7fc ffac 	bl	80018a8 <LCD_IO_WriteData>
 8004950:	200a      	movs	r0, #10
 8004952:	f7fc ffa9 	bl	80018a8 <LCD_IO_WriteData>
 8004956:	2028      	movs	r0, #40	@ 0x28
 8004958:	f7fc ffa6 	bl	80018a8 <LCD_IO_WriteData>
 800495c:	202f      	movs	r0, #47	@ 0x2f
 800495e:	f7fc ffa3 	bl	80018a8 <LCD_IO_WriteData>
 8004962:	200f      	movs	r0, #15
 8004964:	f7fc ffa0 	bl	80018a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004968:	2011      	movs	r0, #17
 800496a:	f7fc ffb9 	bl	80018e0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800496e:	20c8      	movs	r0, #200	@ 0xc8
 8004970:	f7fd f804 	bl	800197c <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8004974:	2029      	movs	r0, #41	@ 0x29
 8004976:	f7fc ffb3 	bl	80018e0 <LCD_IO_WriteReg>
}
 800497a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 800497e:	202c      	movs	r0, #44	@ 0x2c
 8004980:	f7fc bfae 	b.w	80018e0 <LCD_IO_WriteReg>

08004984 <ili9341_ReadID>:
{
 8004984:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8004986:	f7fc ff7f 	bl	8001888 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 800498a:	2103      	movs	r1, #3
 800498c:	20d3      	movs	r0, #211	@ 0xd3
 800498e:	f7fc ffc3 	bl	8001918 <LCD_IO_ReadData>
}
 8004992:	b280      	uxth	r0, r0
 8004994:	bd08      	pop	{r3, pc}

08004996 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8004996:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8004998:	b2c4      	uxtb	r4, r0
 800499a:	2202      	movs	r2, #2
 800499c:	2103      	movs	r1, #3
 800499e:	4620      	mov	r0, r4
 80049a0:	f7fc ff28 	bl	80017f4 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 80049a4:	200a      	movs	r0, #10
 80049a6:	f7fc ff6d 	bl	8001884 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80049aa:	4620      	mov	r0, r4
 80049ac:	2200      	movs	r2, #0
 80049ae:	2103      	movs	r1, #3
 80049b0:	f7fc ff20 	bl	80017f4 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 80049b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80049b8:	2002      	movs	r0, #2
 80049ba:	f7fc bf63 	b.w	8001884 <IOE_Delay>

080049be <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 80049be:	b538      	push	{r3, r4, r5, lr}
 80049c0:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80049c2:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 80049c4:	f7fc ff14 	bl	80017f0 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80049c8:	2100      	movs	r1, #0
 80049ca:	4620      	mov	r0, r4
 80049cc:	f7fc ff2a 	bl	8001824 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80049d0:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80049d2:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80049d4:	4620      	mov	r0, r4
 80049d6:	f7fc ff25 	bl	8001824 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80049da:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 80049de:	b280      	uxth	r0, r0
 80049e0:	bd38      	pop	{r3, r4, r5, pc}

080049e2 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 80049e2:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 80049e4:	b2c4      	uxtb	r4, r0
 80049e6:	2140      	movs	r1, #64	@ 0x40
 80049e8:	4620      	mov	r0, r4
 80049ea:	f7fc ff1b 	bl	8001824 <IOE_Read>
  
  if(state > 0)
 80049ee:	0603      	lsls	r3, r0, #24
 80049f0:	d507      	bpl.n	8004a02 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 80049f2:	214c      	movs	r1, #76	@ 0x4c
 80049f4:	4620      	mov	r0, r4
 80049f6:	f7fc ff15 	bl	8001824 <IOE_Read>
 80049fa:	3800      	subs	r0, #0
 80049fc:	bf18      	it	ne
 80049fe:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8004a00:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004a02:	2201      	movs	r2, #1
 8004a04:	214b      	movs	r1, #75	@ 0x4b
 8004a06:	4620      	mov	r0, r4
 8004a08:	f7fc fef4 	bl	80017f4 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8004a0c:	4620      	mov	r0, r4
 8004a0e:	2200      	movs	r2, #0
 8004a10:	214b      	movs	r1, #75	@ 0x4b
 8004a12:	f7fc feef 	bl	80017f4 <IOE_Write>
  uint8_t ret = 0;
 8004a16:	2000      	movs	r0, #0
 8004a18:	e7f2      	b.n	8004a00 <stmpe811_TS_DetectTouch+0x1e>

08004a1a <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8004a1a:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8004a1c:	2304      	movs	r3, #4
 8004a1e:	b2c4      	uxtb	r4, r0
{
 8004a20:	460e      	mov	r6, r1
 8004a22:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8004a24:	21d7      	movs	r1, #215	@ 0xd7
 8004a26:	eb0d 0203 	add.w	r2, sp, r3
 8004a2a:	4620      	mov	r0, r4
 8004a2c:	f7fc ff14 	bl	8001858 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8004a30:	9b01      	ldr	r3, [sp, #4]
 8004a32:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8004a34:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8004a36:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8004a3a:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004a3c:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8004a3e:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004a40:	2201      	movs	r2, #1
 8004a42:	214b      	movs	r1, #75	@ 0x4b
 8004a44:	f7fc fed6 	bl	80017f4 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8004a48:	2200      	movs	r2, #0
 8004a4a:	214b      	movs	r1, #75	@ 0x4b
 8004a4c:	4620      	mov	r0, r4
 8004a4e:	f7fc fed1 	bl	80017f4 <IOE_Write>
}
 8004a52:	b002      	add	sp, #8
 8004a54:	bd70      	pop	{r4, r5, r6, pc}
	...

08004a58 <stmpe811_Init>:
{
 8004a58:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8004a5a:	4a0a      	ldr	r2, [pc, #40]	@ (8004a84 <stmpe811_Init+0x2c>)
 8004a5c:	7813      	ldrb	r3, [r2, #0]
 8004a5e:	4298      	cmp	r0, r3
{
 8004a60:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8004a62:	d00d      	beq.n	8004a80 <stmpe811_Init+0x28>
 8004a64:	7851      	ldrb	r1, [r2, #1]
 8004a66:	4288      	cmp	r0, r1
 8004a68:	d00a      	beq.n	8004a80 <stmpe811_Init+0x28>
 8004a6a:	b10b      	cbz	r3, 8004a70 <stmpe811_Init+0x18>
 8004a6c:	b941      	cbnz	r1, 8004a80 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8004a6e:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 8004a70:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8004a72:	f7fc febd 	bl	80017f0 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8004a76:	4620      	mov	r0, r4
}
 8004a78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8004a7c:	f7ff bf8b 	b.w	8004996 <stmpe811_Reset>
}
 8004a80:	bd10      	pop	{r4, pc}
 8004a82:	bf00      	nop
 8004a84:	20002a98 	.word	0x20002a98

08004a88 <stmpe811_EnableGlobalIT>:
{
 8004a88:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8004a8a:	b2c4      	uxtb	r4, r0
 8004a8c:	2109      	movs	r1, #9
 8004a8e:	4620      	mov	r0, r4
 8004a90:	f7fc fec8 	bl	8001824 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8004a94:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8004a98:	b2d2      	uxtb	r2, r2
 8004a9a:	4620      	mov	r0, r4
 8004a9c:	2109      	movs	r1, #9
}
 8004a9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8004aa2:	f7fc bea7 	b.w	80017f4 <IOE_Write>

08004aa6 <stmpe811_DisableGlobalIT>:
{
 8004aa6:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8004aa8:	b2c4      	uxtb	r4, r0
 8004aaa:	2109      	movs	r1, #9
 8004aac:	4620      	mov	r0, r4
 8004aae:	f7fc feb9 	bl	8001824 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8004ab2:	2109      	movs	r1, #9
 8004ab4:	f000 02fe 	and.w	r2, r0, #254	@ 0xfe
 8004ab8:	4620      	mov	r0, r4
}
 8004aba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8004abe:	f7fc be99 	b.w	80017f4 <IOE_Write>

08004ac2 <stmpe811_EnableITSource>:
{
 8004ac2:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004ac4:	b2c4      	uxtb	r4, r0
{
 8004ac6:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004ac8:	4620      	mov	r0, r4
 8004aca:	210a      	movs	r1, #10
 8004acc:	f7fc feaa 	bl	8001824 <IOE_Read>
  tmp |= Source; 
 8004ad0:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004ad4:	b2d2      	uxtb	r2, r2
 8004ad6:	4620      	mov	r0, r4
 8004ad8:	210a      	movs	r1, #10
}
 8004ada:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004ade:	f7fc be89 	b.w	80017f4 <IOE_Write>

08004ae2 <stmpe811_TS_EnableIT>:
{
 8004ae2:	b510      	push	{r4, lr}
 8004ae4:	4604      	mov	r4, r0
  IOE_ITConfig();
 8004ae6:	f7fc fe84 	bl	80017f2 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004aea:	4620      	mov	r0, r4
 8004aec:	211f      	movs	r1, #31
 8004aee:	f7ff ffe8 	bl	8004ac2 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8004af2:	4620      	mov	r0, r4
}
 8004af4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 8004af8:	f7ff bfc6 	b.w	8004a88 <stmpe811_EnableGlobalIT>

08004afc <stmpe811_DisableITSource>:
{
 8004afc:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004afe:	b2c4      	uxtb	r4, r0
{
 8004b00:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004b02:	4620      	mov	r0, r4
 8004b04:	210a      	movs	r1, #10
 8004b06:	f7fc fe8d 	bl	8001824 <IOE_Read>
  tmp &= ~Source; 
 8004b0a:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004b0e:	b2d2      	uxtb	r2, r2
 8004b10:	4620      	mov	r0, r4
 8004b12:	210a      	movs	r1, #10
}
 8004b14:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004b18:	f7fc be6c 	b.w	80017f4 <IOE_Write>

08004b1c <stmpe811_TS_DisableIT>:
{
 8004b1c:	b510      	push	{r4, lr}
 8004b1e:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8004b20:	f7ff ffc1 	bl	8004aa6 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004b24:	4620      	mov	r0, r4
 8004b26:	211f      	movs	r1, #31
}
 8004b28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004b2c:	f7ff bfe6 	b.w	8004afc <stmpe811_DisableITSource>

08004b30 <stmpe811_ReadGITStatus>:
{
 8004b30:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8004b32:	b2c0      	uxtb	r0, r0
{
 8004b34:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8004b36:	210b      	movs	r1, #11
 8004b38:	f7fc fe74 	bl	8001824 <IOE_Read>
}
 8004b3c:	4020      	ands	r0, r4
 8004b3e:	bd10      	pop	{r4, pc}

08004b40 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8004b40:	211f      	movs	r1, #31
 8004b42:	f7ff bff5 	b.w	8004b30 <stmpe811_ReadGITStatus>

08004b46 <stmpe811_ClearGlobalIT>:
{
 8004b46:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8004b48:	b2c0      	uxtb	r0, r0
 8004b4a:	210b      	movs	r1, #11
 8004b4c:	f7fc be52 	b.w	80017f4 <IOE_Write>

08004b50 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8004b50:	211f      	movs	r1, #31
 8004b52:	f7ff bff8 	b.w	8004b46 <stmpe811_ClearGlobalIT>

08004b56 <stmpe811_IO_EnableAF>:
{
 8004b56:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8004b58:	b2c4      	uxtb	r4, r0
{
 8004b5a:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8004b5c:	4620      	mov	r0, r4
 8004b5e:	2117      	movs	r1, #23
 8004b60:	f7fc fe60 	bl	8001824 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8004b64:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8004b68:	b2d2      	uxtb	r2, r2
 8004b6a:	4620      	mov	r0, r4
 8004b6c:	2117      	movs	r1, #23
}
 8004b6e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8004b72:	f7fc be3f 	b.w	80017f4 <IOE_Write>

08004b76 <stmpe811_TS_Start>:
{
 8004b76:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8004b78:	b2c4      	uxtb	r4, r0
{
 8004b7a:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8004b7c:	2104      	movs	r1, #4
 8004b7e:	4620      	mov	r0, r4
 8004b80:	f7fc fe50 	bl	8001824 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8004b84:	2104      	movs	r1, #4
 8004b86:	f000 02fb 	and.w	r2, r0, #251	@ 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8004b8a:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8004b8c:	4620      	mov	r0, r4
 8004b8e:	f7fc fe31 	bl	80017f4 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8004b92:	4630      	mov	r0, r6
 8004b94:	21f0      	movs	r1, #240	@ 0xf0
 8004b96:	f7ff ffde 	bl	8004b56 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8004b9a:	f005 02f8 	and.w	r2, r5, #248	@ 0xf8
 8004b9e:	4620      	mov	r0, r4
 8004ba0:	2104      	movs	r1, #4
 8004ba2:	f7fc fe27 	bl	80017f4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8004ba6:	2249      	movs	r2, #73	@ 0x49
 8004ba8:	2120      	movs	r1, #32
 8004baa:	4620      	mov	r0, r4
 8004bac:	f7fc fe22 	bl	80017f4 <IOE_Write>
  IOE_Delay(2); 
 8004bb0:	2002      	movs	r0, #2
 8004bb2:	f7fc fe67 	bl	8001884 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8004bb6:	4620      	mov	r0, r4
 8004bb8:	2201      	movs	r2, #1
 8004bba:	2121      	movs	r1, #33	@ 0x21
 8004bbc:	f7fc fe1a 	bl	80017f4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8004bc0:	4620      	mov	r0, r4
 8004bc2:	229a      	movs	r2, #154	@ 0x9a
 8004bc4:	2141      	movs	r1, #65	@ 0x41
 8004bc6:	f7fc fe15 	bl	80017f4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8004bca:	4620      	mov	r0, r4
 8004bcc:	2201      	movs	r2, #1
 8004bce:	214a      	movs	r1, #74	@ 0x4a
 8004bd0:	f7fc fe10 	bl	80017f4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004bd4:	4620      	mov	r0, r4
 8004bd6:	2201      	movs	r2, #1
 8004bd8:	214b      	movs	r1, #75	@ 0x4b
 8004bda:	f7fc fe0b 	bl	80017f4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8004bde:	4620      	mov	r0, r4
 8004be0:	2200      	movs	r2, #0
 8004be2:	214b      	movs	r1, #75	@ 0x4b
 8004be4:	f7fc fe06 	bl	80017f4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8004be8:	4620      	mov	r0, r4
 8004bea:	2201      	movs	r2, #1
 8004bec:	2156      	movs	r1, #86	@ 0x56
 8004bee:	f7fc fe01 	bl	80017f4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8004bf2:	4620      	mov	r0, r4
 8004bf4:	2201      	movs	r2, #1
 8004bf6:	2158      	movs	r1, #88	@ 0x58
 8004bf8:	f7fc fdfc 	bl	80017f4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8004bfc:	4620      	mov	r0, r4
 8004bfe:	2201      	movs	r2, #1
 8004c00:	2140      	movs	r1, #64	@ 0x40
 8004c02:	f7fc fdf7 	bl	80017f4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8004c06:	4620      	mov	r0, r4
 8004c08:	22ff      	movs	r2, #255	@ 0xff
 8004c0a:	210b      	movs	r1, #11
 8004c0c:	f7fc fdf2 	bl	80017f4 <IOE_Write>
}
 8004c10:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8004c14:	2002      	movs	r0, #2
 8004c16:	f7fc be35 	b.w	8001884 <IOE_Delay>
	...

08004c1c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8004c1c:	4b05      	ldr	r3, [pc, #20]	@ (8004c34 <SystemInit+0x18>)
 8004c1e:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8004c22:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 8004c26:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8004c2a:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8004c2e:	609a      	str	r2, [r3, #8]
#endif
}
 8004c30:	4770      	bx	lr
 8004c32:	bf00      	nop
 8004c34:	e000ed00 	.word	0xe000ed00

08004c38 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8004c38:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8004c3a:	4b0b      	ldr	r3, [pc, #44]	@ (8004c68 <HAL_Init+0x30>)
 8004c3c:	681a      	ldr	r2, [r3, #0]
 8004c3e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004c42:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8004c44:	681a      	ldr	r2, [r3, #0]
 8004c46:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8004c4a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004c4c:	681a      	ldr	r2, [r3, #0]
 8004c4e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004c52:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004c54:	2003      	movs	r0, #3
 8004c56:	f000 f82f 	bl	8004cb8 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8004c5a:	2000      	movs	r0, #0
 8004c5c:	f7fd f8d0 	bl	8001e00 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8004c60:	f7fc fe9a 	bl	8001998 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8004c64:	2000      	movs	r0, #0
 8004c66:	bd08      	pop	{r3, pc}
 8004c68:	40023c00 	.word	0x40023c00

08004c6c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8004c6c:	4a03      	ldr	r2, [pc, #12]	@ (8004c7c <HAL_IncTick+0x10>)
 8004c6e:	4b04      	ldr	r3, [pc, #16]	@ (8004c80 <HAL_IncTick+0x14>)
 8004c70:	6811      	ldr	r1, [r2, #0]
 8004c72:	781b      	ldrb	r3, [r3, #0]
 8004c74:	440b      	add	r3, r1
 8004c76:	6013      	str	r3, [r2, #0]
}
 8004c78:	4770      	bx	lr
 8004c7a:	bf00      	nop
 8004c7c:	20002a9c 	.word	0x20002a9c
 8004c80:	20000080 	.word	0x20000080

08004c84 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8004c84:	4b01      	ldr	r3, [pc, #4]	@ (8004c8c <HAL_GetTick+0x8>)
 8004c86:	6818      	ldr	r0, [r3, #0]
}
 8004c88:	4770      	bx	lr
 8004c8a:	bf00      	nop
 8004c8c:	20002a9c 	.word	0x20002a9c

08004c90 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8004c90:	b538      	push	{r3, r4, r5, lr}
 8004c92:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8004c94:	f7ff fff6 	bl	8004c84 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8004c98:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8004c9a:	bf1c      	itt	ne
 8004c9c:	4b05      	ldrne	r3, [pc, #20]	@ (8004cb4 <HAL_Delay+0x24>)
 8004c9e:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8004ca0:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8004ca2:	bf18      	it	ne
 8004ca4:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8004ca6:	f7ff ffed 	bl	8004c84 <HAL_GetTick>
 8004caa:	1b43      	subs	r3, r0, r5
 8004cac:	42a3      	cmp	r3, r4
 8004cae:	d3fa      	bcc.n	8004ca6 <HAL_Delay+0x16>
  {
  }
}
 8004cb0:	bd38      	pop	{r3, r4, r5, pc}
 8004cb2:	bf00      	nop
 8004cb4:	20000080 	.word	0x20000080

08004cb8 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004cb8:	4907      	ldr	r1, [pc, #28]	@ (8004cd8 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8004cba:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004cbc:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004cc0:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004cc2:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004cc4:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004cc8:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8004cca:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8004ccc:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8004cd0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 8004cd4:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8004cd6:	4770      	bx	lr
 8004cd8:	e000ed00 	.word	0xe000ed00

08004cdc <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8004cdc:	4b16      	ldr	r3, [pc, #88]	@ (8004d38 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8004cde:	b530      	push	{r4, r5, lr}
 8004ce0:	68dc      	ldr	r4, [r3, #12]
 8004ce2:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004ce6:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004cea:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004cec:	2b04      	cmp	r3, #4
 8004cee:	bf28      	it	cs
 8004cf0:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004cf2:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004cf4:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004cf8:	bf8c      	ite	hi
 8004cfa:	3c03      	subhi	r4, #3
 8004cfc:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004cfe:	fa05 f303 	lsl.w	r3, r5, r3
 8004d02:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004d06:	40a5      	lsls	r5, r4
 8004d08:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004d0c:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 8004d0e:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004d10:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004d14:	bfac      	ite	ge
 8004d16:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004d1a:	4a08      	ldrlt	r2, [pc, #32]	@ (8004d3c <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004d1c:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004d20:	bfb8      	it	lt
 8004d22:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004d26:	b2db      	uxtb	r3, r3
 8004d28:	bfaa      	itet	ge
 8004d2a:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004d2e:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004d30:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8004d34:	bd30      	pop	{r4, r5, pc}
 8004d36:	bf00      	nop
 8004d38:	e000ed00 	.word	0xe000ed00
 8004d3c:	e000ed14 	.word	0xe000ed14

08004d40 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004d40:	2800      	cmp	r0, #0
 8004d42:	db07      	blt.n	8004d54 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004d44:	0941      	lsrs	r1, r0, #5
 8004d46:	4a04      	ldr	r2, [pc, #16]	@ (8004d58 <HAL_NVIC_EnableIRQ+0x18>)
 8004d48:	f000 001f 	and.w	r0, r0, #31
 8004d4c:	2301      	movs	r3, #1
 8004d4e:	4083      	lsls	r3, r0
 8004d50:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8004d54:	4770      	bx	lr
 8004d56:	bf00      	nop
 8004d58:	e000e100 	.word	0xe000e100

08004d5c <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8004d5c:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8004d5e:	4604      	mov	r4, r0
 8004d60:	b150      	cbz	r0, 8004d78 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004d62:	7943      	ldrb	r3, [r0, #5]
 8004d64:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004d68:	b913      	cbnz	r3, 8004d70 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8004d6a:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8004d6c:	f7fc fe34 	bl	80019d8 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8004d70:	2301      	movs	r3, #1
 8004d72:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8004d74:	2000      	movs	r0, #0
}
 8004d76:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004d78:	2001      	movs	r0, #1
 8004d7a:	e7fc      	b.n	8004d76 <HAL_CRC_Init+0x1a>

08004d7c <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8004d7c:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8004d7e:	4604      	mov	r4, r0
 8004d80:	b330      	cbz	r0, 8004dd0 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8004d82:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 8004d86:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004d8a:	b91b      	cbnz	r3, 8004d94 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8004d8c:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8004d90:	f7fc fe3a 	bl	8001a08 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004d94:	6822      	ldr	r2, [r4, #0]
 8004d96:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004d98:	2302      	movs	r3, #2
 8004d9a:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004d9e:	6813      	ldr	r3, [r2, #0]
 8004da0:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8004da4:	430b      	orrs	r3, r1
 8004da6:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004da8:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8004daa:	68a1      	ldr	r1, [r4, #8]
 8004dac:	f023 0307 	bic.w	r3, r3, #7
 8004db0:	430b      	orrs	r3, r1
 8004db2:	6353      	str	r3, [r2, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004db4:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8004db6:	68e1      	ldr	r1, [r4, #12]
 8004db8:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8004dbc:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8004dc0:	430b      	orrs	r3, r1
 8004dc2:	6413      	str	r3, [r2, #64]	@ 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004dc4:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004dc6:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004dc8:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004dca:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 8004dce:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004dd0:	2001      	movs	r0, #1
 8004dd2:	e7fc      	b.n	8004dce <HAL_DMA2D_Init+0x52>

08004dd4 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 8004dd4:	4770      	bx	lr

08004dd6 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 8004dd6:	4770      	bx	lr

08004dd8 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004dd8:	6803      	ldr	r3, [r0, #0]
{
 8004dda:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004ddc:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8004dde:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004de0:	07f2      	lsls	r2, r6, #31
{
 8004de2:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004de4:	d514      	bpl.n	8004e10 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 8004de6:	05e9      	lsls	r1, r5, #23
 8004de8:	d512      	bpl.n	8004e10 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004dea:	681a      	ldr	r2, [r3, #0]
 8004dec:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8004df0:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8004df2:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8004df4:	f042 0201 	orr.w	r2, r2, #1
 8004df8:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8004dfa:	2201      	movs	r2, #1
 8004dfc:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004dfe:	2304      	movs	r3, #4
 8004e00:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004e04:	2300      	movs	r3, #0
 8004e06:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8004e0a:	6943      	ldr	r3, [r0, #20]
 8004e0c:	b103      	cbz	r3, 8004e10 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 8004e0e:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8004e10:	06b2      	lsls	r2, r6, #26
 8004e12:	d516      	bpl.n	8004e42 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 8004e14:	04ab      	lsls	r3, r5, #18
 8004e16:	d514      	bpl.n	8004e42 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8004e18:	6823      	ldr	r3, [r4, #0]
 8004e1a:	681a      	ldr	r2, [r3, #0]
 8004e1c:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8004e20:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8004e22:	2220      	movs	r2, #32
 8004e24:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8004e26:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004e28:	f043 0302 	orr.w	r3, r3, #2
 8004e2c:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004e2e:	2304      	movs	r3, #4
 8004e30:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004e34:	2300      	movs	r3, #0
 8004e36:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8004e3a:	6963      	ldr	r3, [r4, #20]
 8004e3c:	b10b      	cbz	r3, 8004e42 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8004e3e:	4620      	mov	r0, r4
 8004e40:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8004e42:	0730      	lsls	r0, r6, #28
 8004e44:	d516      	bpl.n	8004e74 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8004e46:	0529      	lsls	r1, r5, #20
 8004e48:	d514      	bpl.n	8004e74 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8004e4a:	6823      	ldr	r3, [r4, #0]
 8004e4c:	681a      	ldr	r2, [r3, #0]
 8004e4e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004e52:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004e54:	2208      	movs	r2, #8
 8004e56:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8004e58:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004e5a:	f043 0304 	orr.w	r3, r3, #4
 8004e5e:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004e60:	2304      	movs	r3, #4
 8004e62:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004e66:	2300      	movs	r3, #0
 8004e68:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8004e6c:	6963      	ldr	r3, [r4, #20]
 8004e6e:	b10b      	cbz	r3, 8004e74 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8004e70:	4620      	mov	r0, r4
 8004e72:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8004e74:	0772      	lsls	r2, r6, #29
 8004e76:	d50b      	bpl.n	8004e90 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 8004e78:	056b      	lsls	r3, r5, #21
 8004e7a:	d509      	bpl.n	8004e90 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004e7c:	6823      	ldr	r3, [r4, #0]
 8004e7e:	681a      	ldr	r2, [r3, #0]
 8004e80:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004e84:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8004e86:	2204      	movs	r2, #4
 8004e88:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004e8a:	4620      	mov	r0, r4
 8004e8c:	f7ff ffa2 	bl	8004dd4 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004e90:	07b0      	lsls	r0, r6, #30
 8004e92:	d514      	bpl.n	8004ebe <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8004e94:	05a9      	lsls	r1, r5, #22
 8004e96:	d512      	bpl.n	8004ebe <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8004e98:	6823      	ldr	r3, [r4, #0]
 8004e9a:	681a      	ldr	r2, [r3, #0]
 8004e9c:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8004ea0:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8004ea2:	2202      	movs	r2, #2
 8004ea4:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004ea6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004ea8:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004eaa:	2301      	movs	r3, #1
 8004eac:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004eb0:	2300      	movs	r3, #0
 8004eb2:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 8004eb6:	6923      	ldr	r3, [r4, #16]
 8004eb8:	b10b      	cbz	r3, 8004ebe <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 8004eba:	4620      	mov	r0, r4
 8004ebc:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8004ebe:	06f2      	lsls	r2, r6, #27
 8004ec0:	d513      	bpl.n	8004eea <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004ec2:	04eb      	lsls	r3, r5, #19
 8004ec4:	d511      	bpl.n	8004eea <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004ec6:	6823      	ldr	r3, [r4, #0]
 8004ec8:	681a      	ldr	r2, [r3, #0]
 8004eca:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8004ece:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004ed0:	2210      	movs	r2, #16
 8004ed2:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004ed4:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004ed6:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004ed8:	2301      	movs	r3, #1
 8004eda:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004ede:	2300      	movs	r3, #0
 8004ee0:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004ee4:	4620      	mov	r0, r4
 8004ee6:	f7ff ff76 	bl	8004dd6 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8004eea:	bd70      	pop	{r4, r5, r6, pc}

08004eec <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8004eec:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8004eee:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 8004ef2:	2a01      	cmp	r2, #1
{
 8004ef4:	4603      	mov	r3, r0
 8004ef6:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hdma2d);
 8004efa:	d02b      	beq.n	8004f54 <HAL_DMA2D_ConfigLayer+0x68>
 8004efc:	2201      	movs	r2, #1
 8004efe:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004f02:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004f06:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 8004f0a:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 8004f0e:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 8004f10:	4f17      	ldr	r7, [pc, #92]	@ (8004f70 <HAL_DMA2D_ConfigLayer+0x84>)
 8004f12:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004f16:	3c09      	subs	r4, #9
 8004f18:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8004f1a:	bf9c      	itt	ls
 8004f1c:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
 8004f20:	4310      	orrls	r0, r2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004f22:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004f26:	681a      	ldr	r2, [r3, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8004f28:	bf88      	it	hi
 8004f2a:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8004f2e:	b991      	cbnz	r1, 8004f56 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004f30:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8004f32:	4039      	ands	r1, r7
 8004f34:	4301      	orrs	r1, r0
 8004f36:	6251      	str	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004f38:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8004f3a:	6999      	ldr	r1, [r3, #24]
 8004f3c:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004f3e:	d803      	bhi.n	8004f48 <HAL_DMA2D_ConfigLayer+0x5c>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8004f40:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8004f42:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8004f46:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004f48:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8004f4a:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004f4c:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 8004f50:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 8004f54:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004f56:	69d1      	ldr	r1, [r2, #28]
 8004f58:	4039      	ands	r1, r7
 8004f5a:	4301      	orrs	r1, r0
 8004f5c:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004f5e:	1999      	adds	r1, r3, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004f60:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004f62:	6989      	ldr	r1, [r1, #24]
 8004f64:	6111      	str	r1, [r2, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8004f66:	bf9c      	itt	ls
 8004f68:	f025 457f 	bicls.w	r5, r5, #4278190080	@ 0xff000000
 8004f6c:	6215      	strls	r5, [r2, #32]
 8004f6e:	e7eb      	b.n	8004f48 <HAL_DMA2D_ConfigLayer+0x5c>
 8004f70:	00fcfff0 	.word	0x00fcfff0

08004f74 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004f74:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004f78:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 8005138 <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004f7c:	4a6c      	ldr	r2, [pc, #432]	@ (8005130 <HAL_GPIO_Init+0x1bc>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004f7e:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004f80:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8004f82:	2401      	movs	r4, #1
 8004f84:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004f86:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8004f8a:	43ac      	bics	r4, r5
 8004f8c:	f040 80b7 	bne.w	80050fe <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004f90:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004f92:	2703      	movs	r7, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004f94:	f005 0403 	and.w	r4, r5, #3
 8004f98:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004f9c:	fa07 fc08 	lsl.w	ip, r7, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004fa0:	1e67      	subs	r7, r4, #1
 8004fa2:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004fa4:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004fa8:	d834      	bhi.n	8005014 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 8004faa:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004fac:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 8004fb0:	68cf      	ldr	r7, [r1, #12]
 8004fb2:	fa07 f708 	lsl.w	r7, r7, r8
 8004fb6:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8004fba:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8004fbc:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004fbe:	ea27 0e06 	bic.w	lr, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8004fc2:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8004fc6:	409f      	lsls	r7, r3
 8004fc8:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8004fcc:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8004fce:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004fd0:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004fd4:	688f      	ldr	r7, [r1, #8]
 8004fd6:	fa07 f708 	lsl.w	r7, r7, r8
 8004fda:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004fde:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8004fe0:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004fe2:	d119      	bne.n	8005018 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8004fe4:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8004fe8:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004fec:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8004ff0:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004ff4:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8004ff8:	f04f 0e0f 	mov.w	lr, #15
 8004ffc:	fa0e fe0b 	lsl.w	lr, lr, fp
 8005000:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8005004:	690f      	ldr	r7, [r1, #16]
 8005006:	fa07 f70b 	lsl.w	r7, r7, fp
 800500a:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 800500e:	f8ca 7020 	str.w	r7, [sl, #32]
 8005012:	e001      	b.n	8005018 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8005014:	2c03      	cmp	r4, #3
 8005016:	d1da      	bne.n	8004fce <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8005018:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800501a:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800501e:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8005022:	433c      	orrs	r4, r7
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8005024:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      GPIOx->MODER = temp;
 8005028:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800502a:	d068      	beq.n	80050fe <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800502c:	2400      	movs	r4, #0
 800502e:	9401      	str	r4, [sp, #4]
 8005030:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8005034:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 8005038:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 800503c:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8005040:	f023 0703 	bic.w	r7, r3, #3
 8005044:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 8005048:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 800504c:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 8005050:	9401      	str	r4, [sp, #4]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005052:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005056:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8005058:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800505c:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8005060:	240f      	movs	r4, #15
 8005062:	fa04 f40c 	lsl.w	r4, r4, ip
 8005066:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800506a:	4c32      	ldr	r4, [pc, #200]	@ (8005134 <HAL_GPIO_Init+0x1c0>)
 800506c:	42a0      	cmp	r0, r4
 800506e:	d04d      	beq.n	800510c <HAL_GPIO_Init+0x198>
 8005070:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005074:	42a0      	cmp	r0, r4
 8005076:	d04b      	beq.n	8005110 <HAL_GPIO_Init+0x19c>
 8005078:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800507c:	42a0      	cmp	r0, r4
 800507e:	d049      	beq.n	8005114 <HAL_GPIO_Init+0x1a0>
 8005080:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005084:	42a0      	cmp	r0, r4
 8005086:	d047      	beq.n	8005118 <HAL_GPIO_Init+0x1a4>
 8005088:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800508c:	42a0      	cmp	r0, r4
 800508e:	d045      	beq.n	800511c <HAL_GPIO_Init+0x1a8>
 8005090:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005094:	42a0      	cmp	r0, r4
 8005096:	d043      	beq.n	8005120 <HAL_GPIO_Init+0x1ac>
 8005098:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800509c:	42a0      	cmp	r0, r4
 800509e:	d041      	beq.n	8005124 <HAL_GPIO_Init+0x1b0>
 80050a0:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80050a4:	42a0      	cmp	r0, r4
 80050a6:	d03f      	beq.n	8005128 <HAL_GPIO_Init+0x1b4>
 80050a8:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80050ac:	42a0      	cmp	r0, r4
 80050ae:	d03d      	beq.n	800512c <HAL_GPIO_Init+0x1b8>
 80050b0:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80050b4:	42a0      	cmp	r0, r4
 80050b6:	bf14      	ite	ne
 80050b8:	240a      	movne	r4, #10
 80050ba:	2409      	moveq	r4, #9
 80050bc:	fa04 f40c 	lsl.w	r4, r4, ip
 80050c0:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 80050c4:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR;
 80050c6:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 80050c8:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80050ca:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp &= ~((uint32_t)iocurrent);
 80050ce:	bf0c      	ite	eq
 80050d0:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 80050d2:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;
 80050d4:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 80050d6:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80050d8:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        temp &= ~((uint32_t)iocurrent);
 80050dc:	bf0c      	ite	eq
 80050de:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 80050e0:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;
 80050e2:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 80050e4:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80050e6:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        temp &= ~((uint32_t)iocurrent);
 80050ea:	bf0c      	ite	eq
 80050ec:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 80050ee:	4334      	orrne	r4, r6
        }
        EXTI->EMR = temp;
 80050f0:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80050f2:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80050f4:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 80050f6:	bf54      	ite	pl
 80050f8:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 80050fa:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 80050fc:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80050fe:	3301      	adds	r3, #1
 8005100:	2b10      	cmp	r3, #16
 8005102:	f47f af3d 	bne.w	8004f80 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8005106:	b003      	add	sp, #12
 8005108:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800510c:	2400      	movs	r4, #0
 800510e:	e7d5      	b.n	80050bc <HAL_GPIO_Init+0x148>
 8005110:	2401      	movs	r4, #1
 8005112:	e7d3      	b.n	80050bc <HAL_GPIO_Init+0x148>
 8005114:	2402      	movs	r4, #2
 8005116:	e7d1      	b.n	80050bc <HAL_GPIO_Init+0x148>
 8005118:	2403      	movs	r4, #3
 800511a:	e7cf      	b.n	80050bc <HAL_GPIO_Init+0x148>
 800511c:	2404      	movs	r4, #4
 800511e:	e7cd      	b.n	80050bc <HAL_GPIO_Init+0x148>
 8005120:	2405      	movs	r4, #5
 8005122:	e7cb      	b.n	80050bc <HAL_GPIO_Init+0x148>
 8005124:	2406      	movs	r4, #6
 8005126:	e7c9      	b.n	80050bc <HAL_GPIO_Init+0x148>
 8005128:	2407      	movs	r4, #7
 800512a:	e7c7      	b.n	80050bc <HAL_GPIO_Init+0x148>
 800512c:	2408      	movs	r4, #8
 800512e:	e7c5      	b.n	80050bc <HAL_GPIO_Init+0x148>
 8005130:	40013c00 	.word	0x40013c00
 8005134:	40020000 	.word	0x40020000
 8005138:	40023800 	.word	0x40023800

0800513c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800513c:	6903      	ldr	r3, [r0, #16]
 800513e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8005140:	bf14      	ite	ne
 8005142:	2001      	movne	r0, #1
 8005144:	2000      	moveq	r0, #0
 8005146:	4770      	bx	lr

08005148 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8005148:	b10a      	cbz	r2, 800514e <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800514a:	6181      	str	r1, [r0, #24]
  }
}
 800514c:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800514e:	0409      	lsls	r1, r1, #16
 8005150:	e7fb      	b.n	800514a <HAL_GPIO_WritePin+0x2>

08005152 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8005152:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8005154:	ea01 0203 	and.w	r2, r1, r3
 8005158:	ea21 0103 	bic.w	r1, r1, r3
 800515c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8005160:	6181      	str	r1, [r0, #24]
}
 8005162:	4770      	bx	lr

08005164 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005164:	6801      	ldr	r1, [r0, #0]
 8005166:	694b      	ldr	r3, [r1, #20]
 8005168:	f413 6380 	ands.w	r3, r3, #1024	@ 0x400
 800516c:	f04f 0200 	mov.w	r2, #0
 8005170:	d010      	beq.n	8005194 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005172:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 8005176:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8005178:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800517a:	6302      	str	r2, [r0, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800517c:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005180:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005184:	6c03      	ldr	r3, [r0, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005186:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800518a:	f043 0304 	orr.w	r3, r3, #4
 800518e:	6403      	str	r3, [r0, #64]	@ 0x40

    return HAL_ERROR;
 8005190:	2001      	movs	r0, #1
 8005192:	4770      	bx	lr
  }
  return HAL_OK;
 8005194:	4618      	mov	r0, r3
}
 8005196:	4770      	bx	lr

08005198 <I2C_WaitOnFlagUntilTimeout>:
{
 8005198:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 800519c:	4606      	mov	r6, r0
 800519e:	460f      	mov	r7, r1
 80051a0:	4691      	mov	r9, r2
 80051a2:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80051a4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80051a8:	6833      	ldr	r3, [r6, #0]
 80051aa:	f1ba 0f01 	cmp.w	sl, #1
 80051ae:	bf0c      	ite	eq
 80051b0:	695c      	ldreq	r4, [r3, #20]
 80051b2:	699c      	ldrne	r4, [r3, #24]
 80051b4:	ea27 0404 	bic.w	r4, r7, r4
 80051b8:	b2a4      	uxth	r4, r4
 80051ba:	fab4 f484 	clz	r4, r4
 80051be:	0964      	lsrs	r4, r4, #5
 80051c0:	45a1      	cmp	r9, r4
 80051c2:	d001      	beq.n	80051c8 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 80051c4:	2000      	movs	r0, #0
 80051c6:	e017      	b.n	80051f8 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 80051c8:	1c6a      	adds	r2, r5, #1
 80051ca:	d0ee      	beq.n	80051aa <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80051cc:	f7ff fd5a 	bl	8004c84 <HAL_GetTick>
 80051d0:	9b08      	ldr	r3, [sp, #32]
 80051d2:	1ac0      	subs	r0, r0, r3
 80051d4:	42a8      	cmp	r0, r5
 80051d6:	d801      	bhi.n	80051dc <I2C_WaitOnFlagUntilTimeout+0x44>
 80051d8:	2d00      	cmp	r5, #0
 80051da:	d1e5      	bne.n	80051a8 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80051dc:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80051de:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80051e0:	6333      	str	r3, [r6, #48]	@ 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80051e2:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80051e6:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80051ea:	6c32      	ldr	r2, [r6, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 80051ec:	f886 303c 	strb.w	r3, [r6, #60]	@ 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80051f0:	f042 0220 	orr.w	r2, r2, #32
 80051f4:	6432      	str	r2, [r6, #64]	@ 0x40
        return HAL_ERROR;
 80051f6:	2001      	movs	r0, #1
}
 80051f8:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

080051fc <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 80051fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005200:	4604      	mov	r4, r0
 8005202:	460f      	mov	r7, r1
 8005204:	4616      	mov	r6, r2
 8005206:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8005208:	6825      	ldr	r5, [r4, #0]
 800520a:	6968      	ldr	r0, [r5, #20]
 800520c:	ea27 0000 	bic.w	r0, r7, r0
 8005210:	b280      	uxth	r0, r0
 8005212:	b1c0      	cbz	r0, 8005246 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005214:	696b      	ldr	r3, [r5, #20]
 8005216:	055a      	lsls	r2, r3, #21
 8005218:	d517      	bpl.n	800524a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4e>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800521a:	682b      	ldr	r3, [r5, #0]
 800521c:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8005220:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005222:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 8005226:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8005228:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800522a:	2300      	movs	r3, #0
 800522c:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800522e:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005232:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005236:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8005238:	f043 0304 	orr.w	r3, r3, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800523c:	6423      	str	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 800523e:	2300      	movs	r3, #0
 8005240:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8005244:	2001      	movs	r0, #1
}
 8005246:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 800524a:	1c73      	adds	r3, r6, #1
 800524c:	d0dd      	beq.n	800520a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800524e:	f7ff fd19 	bl	8004c84 <HAL_GetTick>
 8005252:	eba0 0008 	sub.w	r0, r0, r8
 8005256:	42b0      	cmp	r0, r6
 8005258:	d801      	bhi.n	800525e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x62>
 800525a:	2e00      	cmp	r6, #0
 800525c:	d1d4      	bne.n	8005208 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800525e:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8005260:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005262:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8005264:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005268:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800526c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800526e:	4313      	orrs	r3, r2
 8005270:	e7e4      	b.n	800523c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08005272 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8005272:	b570      	push	{r4, r5, r6, lr}
 8005274:	4604      	mov	r4, r0
 8005276:	460d      	mov	r5, r1
 8005278:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800527a:	6823      	ldr	r3, [r4, #0]
 800527c:	695b      	ldr	r3, [r3, #20]
 800527e:	061b      	lsls	r3, r3, #24
 8005280:	d501      	bpl.n	8005286 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8005282:	2000      	movs	r0, #0
 8005284:	e01a      	b.n	80052bc <I2C_WaitOnTXEFlagUntilTimeout+0x4a>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005286:	4620      	mov	r0, r4
 8005288:	f7ff ff6c 	bl	8005164 <I2C_IsAcknowledgeFailed>
 800528c:	b9a8      	cbnz	r0, 80052ba <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800528e:	1c6a      	adds	r2, r5, #1
 8005290:	d0f3      	beq.n	800527a <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005292:	f7ff fcf7 	bl	8004c84 <HAL_GetTick>
 8005296:	1b80      	subs	r0, r0, r6
 8005298:	42a8      	cmp	r0, r5
 800529a:	d801      	bhi.n	80052a0 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 800529c:	2d00      	cmp	r5, #0
 800529e:	d1ec      	bne.n	800527a <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80052a0:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80052a2:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80052a4:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80052a6:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80052aa:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80052ae:	6c22      	ldr	r2, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 80052b0:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80052b4:	f042 0220 	orr.w	r2, r2, #32
 80052b8:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 80052ba:	2001      	movs	r0, #1
}
 80052bc:	bd70      	pop	{r4, r5, r6, pc}
	...

080052c0 <I2C_RequestMemoryWrite>:
{
 80052c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80052c4:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80052c6:	6802      	ldr	r2, [r0, #0]
{
 80052c8:	b085      	sub	sp, #20
 80052ca:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
 80052ce:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80052d0:	6813      	ldr	r3, [r2, #0]
 80052d2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80052d6:	6013      	str	r3, [r2, #0]
{
 80052d8:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80052da:	463b      	mov	r3, r7
 80052dc:	f8cd 8000 	str.w	r8, [sp]
 80052e0:	2200      	movs	r2, #0
 80052e2:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 80052e6:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80052e8:	f7ff ff56 	bl	8005198 <I2C_WaitOnFlagUntilTimeout>
 80052ec:	6823      	ldr	r3, [r4, #0]
 80052ee:	b138      	cbz	r0, 8005300 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80052f0:	681b      	ldr	r3, [r3, #0]
 80052f2:	05db      	lsls	r3, r3, #23
 80052f4:	d502      	bpl.n	80052fc <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80052f6:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80052fa:	6423      	str	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 80052fc:	2603      	movs	r6, #3
 80052fe:	e020      	b.n	8005342 <I2C_RequestMemoryWrite+0x82>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8005300:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8005304:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005306:	491a      	ldr	r1, [pc, #104]	@ (8005370 <I2C_RequestMemoryWrite+0xb0>)
 8005308:	4643      	mov	r3, r8
 800530a:	463a      	mov	r2, r7
 800530c:	4620      	mov	r0, r4
 800530e:	f7ff ff75 	bl	80051fc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005312:	b9a8      	cbnz	r0, 8005340 <I2C_RequestMemoryWrite+0x80>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005314:	6823      	ldr	r3, [r4, #0]
 8005316:	9003      	str	r0, [sp, #12]
 8005318:	695a      	ldr	r2, [r3, #20]
 800531a:	9203      	str	r2, [sp, #12]
 800531c:	699b      	ldr	r3, [r3, #24]
 800531e:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005320:	4642      	mov	r2, r8
 8005322:	4639      	mov	r1, r7
 8005324:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005326:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005328:	f7ff ffa3 	bl	8005272 <I2C_WaitOnTXEFlagUntilTimeout>
 800532c:	4606      	mov	r6, r0
 800532e:	b160      	cbz	r0, 800534a <I2C_RequestMemoryWrite+0x8a>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005330:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8005332:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005334:	bf01      	itttt	eq
 8005336:	6822      	ldreq	r2, [r4, #0]
 8005338:	6813      	ldreq	r3, [r2, #0]
 800533a:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800533e:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 8005340:	2601      	movs	r6, #1
}
 8005342:	4630      	mov	r0, r6
 8005344:	b005      	add	sp, #20
 8005346:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800534a:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800534e:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005350:	d102      	bne.n	8005358 <I2C_RequestMemoryWrite+0x98>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005352:	b2ed      	uxtb	r5, r5
 8005354:	611d      	str	r5, [r3, #16]
 8005356:	e7f4      	b.n	8005342 <I2C_RequestMemoryWrite+0x82>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8005358:	0a2a      	lsrs	r2, r5, #8
 800535a:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800535c:	4639      	mov	r1, r7
 800535e:	4642      	mov	r2, r8
 8005360:	4620      	mov	r0, r4
 8005362:	f7ff ff86 	bl	8005272 <I2C_WaitOnTXEFlagUntilTimeout>
 8005366:	2800      	cmp	r0, #0
 8005368:	d1e2      	bne.n	8005330 <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800536a:	6823      	ldr	r3, [r4, #0]
 800536c:	e7f1      	b.n	8005352 <I2C_RequestMemoryWrite+0x92>
 800536e:	bf00      	nop
 8005370:	00010002 	.word	0x00010002

08005374 <I2C_RequestMemoryRead>:
{
 8005374:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005378:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800537a:	6803      	ldr	r3, [r0, #0]
{
 800537c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800537e:	681a      	ldr	r2, [r3, #0]
 8005380:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8005384:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005386:	681a      	ldr	r2, [r3, #0]
{
 8005388:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800538c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8005390:	601a      	str	r2, [r3, #0]
{
 8005392:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005394:	463b      	mov	r3, r7
 8005396:	f8cd 8000 	str.w	r8, [sp]
 800539a:	2200      	movs	r2, #0
 800539c:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 80053a0:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80053a2:	f7ff fef9 	bl	8005198 <I2C_WaitOnFlagUntilTimeout>
 80053a6:	6823      	ldr	r3, [r4, #0]
 80053a8:	b138      	cbz	r0, 80053ba <I2C_RequestMemoryRead+0x46>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80053aa:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80053ac:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80053ae:	bf44      	itt	mi
 80053b0:	f44f 7300 	movmi.w	r3, #512	@ 0x200
 80053b4:	6423      	strmi	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 80053b6:	2003      	movs	r0, #3
 80053b8:	e021      	b.n	80053fe <I2C_RequestMemoryRead+0x8a>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80053ba:	fa5f f986 	uxtb.w	r9, r6
 80053be:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 80053c2:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80053c4:	492b      	ldr	r1, [pc, #172]	@ (8005474 <I2C_RequestMemoryRead+0x100>)
 80053c6:	4643      	mov	r3, r8
 80053c8:	463a      	mov	r2, r7
 80053ca:	4620      	mov	r0, r4
 80053cc:	f7ff ff16 	bl	80051fc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80053d0:	b9a0      	cbnz	r0, 80053fc <I2C_RequestMemoryRead+0x88>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80053d2:	6823      	ldr	r3, [r4, #0]
 80053d4:	9003      	str	r0, [sp, #12]
 80053d6:	695a      	ldr	r2, [r3, #20]
 80053d8:	9203      	str	r2, [sp, #12]
 80053da:	699b      	ldr	r3, [r3, #24]
 80053dc:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80053de:	4642      	mov	r2, r8
 80053e0:	4639      	mov	r1, r7
 80053e2:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80053e4:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80053e6:	f7ff ff44 	bl	8005272 <I2C_WaitOnTXEFlagUntilTimeout>
 80053ea:	b158      	cbz	r0, 8005404 <I2C_RequestMemoryRead+0x90>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80053ec:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80053ee:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80053f0:	bf01      	itttt	eq
 80053f2:	6822      	ldreq	r2, [r4, #0]
 80053f4:	6813      	ldreq	r3, [r2, #0]
 80053f6:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 80053fa:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 80053fc:	2001      	movs	r0, #1
}
 80053fe:	b004      	add	sp, #16
 8005400:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005404:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005408:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800540a:	d11a      	bne.n	8005442 <I2C_RequestMemoryRead+0xce>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800540c:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800540e:	4642      	mov	r2, r8
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005410:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005412:	4639      	mov	r1, r7
 8005414:	4620      	mov	r0, r4
 8005416:	f7ff ff2c 	bl	8005272 <I2C_WaitOnTXEFlagUntilTimeout>
 800541a:	4602      	mov	r2, r0
 800541c:	2800      	cmp	r0, #0
 800541e:	d1e5      	bne.n	80053ec <I2C_RequestMemoryRead+0x78>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005420:	6821      	ldr	r1, [r4, #0]
 8005422:	680b      	ldr	r3, [r1, #0]
 8005424:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005428:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800542a:	4620      	mov	r0, r4
 800542c:	f8cd 8000 	str.w	r8, [sp]
 8005430:	463b      	mov	r3, r7
 8005432:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8005436:	f7ff feaf 	bl	8005198 <I2C_WaitOnFlagUntilTimeout>
 800543a:	6822      	ldr	r2, [r4, #0]
 800543c:	b160      	cbz	r0, 8005458 <I2C_RequestMemoryRead+0xe4>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800543e:	6813      	ldr	r3, [r2, #0]
 8005440:	e7b4      	b.n	80053ac <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8005442:	0a2a      	lsrs	r2, r5, #8
 8005444:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005446:	4639      	mov	r1, r7
 8005448:	4642      	mov	r2, r8
 800544a:	4620      	mov	r0, r4
 800544c:	f7ff ff11 	bl	8005272 <I2C_WaitOnTXEFlagUntilTimeout>
 8005450:	2800      	cmp	r0, #0
 8005452:	d1cb      	bne.n	80053ec <I2C_RequestMemoryRead+0x78>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005454:	6823      	ldr	r3, [r4, #0]
 8005456:	e7d9      	b.n	800540c <I2C_RequestMemoryRead+0x98>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8005458:	f049 0301 	orr.w	r3, r9, #1
 800545c:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800545e:	4905      	ldr	r1, [pc, #20]	@ (8005474 <I2C_RequestMemoryRead+0x100>)
 8005460:	4643      	mov	r3, r8
 8005462:	463a      	mov	r2, r7
 8005464:	4620      	mov	r0, r4
 8005466:	f7ff fec9 	bl	80051fc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800546a:	3800      	subs	r0, #0
 800546c:	bf18      	it	ne
 800546e:	2001      	movne	r0, #1
 8005470:	e7c5      	b.n	80053fe <I2C_RequestMemoryRead+0x8a>
 8005472:	bf00      	nop
 8005474:	00010002 	.word	0x00010002

08005478 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8005478:	b570      	push	{r4, r5, r6, lr}
 800547a:	4604      	mov	r4, r0
 800547c:	460d      	mov	r5, r1
 800547e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8005480:	6823      	ldr	r3, [r4, #0]
 8005482:	695b      	ldr	r3, [r3, #20]
 8005484:	075b      	lsls	r3, r3, #29
 8005486:	d501      	bpl.n	800548c <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8005488:	2000      	movs	r0, #0
 800548a:	e01a      	b.n	80054c2 <I2C_WaitOnBTFFlagUntilTimeout+0x4a>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800548c:	4620      	mov	r0, r4
 800548e:	f7ff fe69 	bl	8005164 <I2C_IsAcknowledgeFailed>
 8005492:	b9a8      	cbnz	r0, 80054c0 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8005494:	1c6a      	adds	r2, r5, #1
 8005496:	d0f3      	beq.n	8005480 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005498:	f7ff fbf4 	bl	8004c84 <HAL_GetTick>
 800549c:	1b80      	subs	r0, r0, r6
 800549e:	42a8      	cmp	r0, r5
 80054a0:	d801      	bhi.n	80054a6 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 80054a2:	2d00      	cmp	r5, #0
 80054a4:	d1ec      	bne.n	8005480 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80054a6:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80054a8:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80054aa:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80054ac:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80054b0:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80054b4:	6c22      	ldr	r2, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 80054b6:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80054ba:	f042 0220 	orr.w	r2, r2, #32
 80054be:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 80054c0:	2001      	movs	r0, #1
}
 80054c2:	bd70      	pop	{r4, r5, r6, pc}

080054c4 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 80054c4:	b570      	push	{r4, r5, r6, lr}
 80054c6:	4604      	mov	r4, r0
 80054c8:	460d      	mov	r5, r1
 80054ca:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80054cc:	6821      	ldr	r1, [r4, #0]
 80054ce:	694b      	ldr	r3, [r1, #20]
 80054d0:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 80054d4:	d001      	beq.n	80054da <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 80054d6:	2000      	movs	r0, #0
 80054d8:	e011      	b.n	80054fe <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 80054da:	694a      	ldr	r2, [r1, #20]
 80054dc:	06d2      	lsls	r2, r2, #27
 80054de:	d50f      	bpl.n	8005500 <I2C_WaitOnRXNEFlagUntilTimeout+0x3c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80054e0:	f06f 0210 	mvn.w	r2, #16
 80054e4:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80054e6:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80054e8:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80054ea:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80054ee:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 80054f2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80054f4:	6423      	str	r3, [r4, #64]	@ 0x40
      __HAL_UNLOCK(hi2c);
 80054f6:	2300      	movs	r3, #0
 80054f8:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 80054fc:	2001      	movs	r0, #1
}
 80054fe:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005500:	f7ff fbc0 	bl	8004c84 <HAL_GetTick>
 8005504:	1b80      	subs	r0, r0, r6
 8005506:	42a8      	cmp	r0, r5
 8005508:	d801      	bhi.n	800550e <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 800550a:	2d00      	cmp	r5, #0
 800550c:	d1de      	bne.n	80054cc <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800550e:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 8005510:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8005512:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005514:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005518:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800551c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800551e:	4313      	orrs	r3, r2
 8005520:	e7e8      	b.n	80054f4 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
	...

08005524 <HAL_I2C_Init>:
{
 8005524:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8005526:	4604      	mov	r4, r0
 8005528:	b908      	cbnz	r0, 800552e <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800552a:	2001      	movs	r0, #1
}
 800552c:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800552e:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8005532:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005536:	b91b      	cbnz	r3, 8005540 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8005538:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 800553c:	f7fc fa86 	bl	8001a4c <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005540:	2324      	movs	r3, #36	@ 0x24
 8005542:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8005546:	6823      	ldr	r3, [r4, #0]
 8005548:	681a      	ldr	r2, [r3, #0]
 800554a:	f022 0201 	bic.w	r2, r2, #1
 800554e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8005550:	681a      	ldr	r2, [r3, #0]
 8005552:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8005556:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8005558:	681a      	ldr	r2, [r3, #0]
 800555a:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800555e:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8005560:	f000 fe70 	bl	8006244 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8005564:	4b3f      	ldr	r3, [pc, #252]	@ (8005664 <HAL_I2C_Init+0x140>)
 8005566:	6865      	ldr	r5, [r4, #4]
 8005568:	429d      	cmp	r5, r3
 800556a:	bf94      	ite	ls
 800556c:	4b3e      	ldrls	r3, [pc, #248]	@ (8005668 <HAL_I2C_Init+0x144>)
 800556e:	4b3f      	ldrhi	r3, [pc, #252]	@ (800566c <HAL_I2C_Init+0x148>)
 8005570:	4298      	cmp	r0, r3
 8005572:	bf8c      	ite	hi
 8005574:	2300      	movhi	r3, #0
 8005576:	2301      	movls	r3, #1
 8005578:	2b00      	cmp	r3, #0
 800557a:	d1d6      	bne.n	800552a <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800557c:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800557e:	4e39      	ldr	r6, [pc, #228]	@ (8005664 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005580:	6851      	ldr	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8005582:	4b3b      	ldr	r3, [pc, #236]	@ (8005670 <HAL_I2C_Init+0x14c>)
 8005584:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005588:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 800558c:	4319      	orrs	r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800558e:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005590:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005592:	bf88      	it	hi
 8005594:	f44f 7696 	movhi.w	r6, #300	@ 0x12c
 8005598:	6a11      	ldr	r1, [r2, #32]
 800559a:	bf88      	it	hi
 800559c:	4373      	mulhi	r3, r6
 800559e:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 80055a2:	bf84      	itt	hi
 80055a4:	f44f 767a 	movhi.w	r6, #1000	@ 0x3e8
 80055a8:	fbb3 f3f6 	udivhi	r3, r3, r6
 80055ac:	3301      	adds	r3, #1
 80055ae:	430b      	orrs	r3, r1
 80055b0:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80055b2:	69d1      	ldr	r1, [r2, #28]
 80055b4:	1e43      	subs	r3, r0, #1
 80055b6:	482b      	ldr	r0, [pc, #172]	@ (8005664 <HAL_I2C_Init+0x140>)
 80055b8:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 80055bc:	4285      	cmp	r5, r0
 80055be:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 80055c2:	d832      	bhi.n	800562a <HAL_I2C_Init+0x106>
 80055c4:	006d      	lsls	r5, r5, #1
 80055c6:	f640 70fc 	movw	r0, #4092	@ 0xffc
 80055ca:	fbb3 f3f5 	udiv	r3, r3, r5
 80055ce:	3301      	adds	r3, #1
 80055d0:	4203      	tst	r3, r0
 80055d2:	d042      	beq.n	800565a <HAL_I2C_Init+0x136>
 80055d4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80055d8:	4319      	orrs	r1, r3
 80055da:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80055dc:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 80055e0:	6811      	ldr	r1, [r2, #0]
 80055e2:	4303      	orrs	r3, r0
 80055e4:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 80055e8:	430b      	orrs	r3, r1
 80055ea:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80055ec:	6891      	ldr	r1, [r2, #8]
 80055ee:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 80055f2:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 80055f6:	4303      	orrs	r3, r0
 80055f8:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 80055fc:	430b      	orrs	r3, r1
 80055fe:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8005600:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8005604:	68d1      	ldr	r1, [r2, #12]
 8005606:	4303      	orrs	r3, r0
 8005608:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 800560c:	430b      	orrs	r3, r1
 800560e:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8005610:	6813      	ldr	r3, [r2, #0]
 8005612:	f043 0301 	orr.w	r3, r3, #1
 8005616:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005618:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800561a:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800561c:	6420      	str	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800561e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8005622:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005624:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
  return HAL_OK;
 8005628:	e780      	b.n	800552c <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800562a:	68a0      	ldr	r0, [r4, #8]
 800562c:	b950      	cbnz	r0, 8005644 <HAL_I2C_Init+0x120>
 800562e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005632:	fbb3 f3f5 	udiv	r3, r3, r5
 8005636:	3301      	adds	r3, #1
 8005638:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800563c:	b17b      	cbz	r3, 800565e <HAL_I2C_Init+0x13a>
 800563e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8005642:	e7c9      	b.n	80055d8 <HAL_I2C_Init+0xb4>
 8005644:	2019      	movs	r0, #25
 8005646:	4368      	muls	r0, r5
 8005648:	fbb3 f3f0 	udiv	r3, r3, r0
 800564c:	3301      	adds	r3, #1
 800564e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005652:	b123      	cbz	r3, 800565e <HAL_I2C_Init+0x13a>
 8005654:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8005658:	e7be      	b.n	80055d8 <HAL_I2C_Init+0xb4>
 800565a:	2304      	movs	r3, #4
 800565c:	e7bc      	b.n	80055d8 <HAL_I2C_Init+0xb4>
 800565e:	2301      	movs	r3, #1
 8005660:	e7ba      	b.n	80055d8 <HAL_I2C_Init+0xb4>
 8005662:	bf00      	nop
 8005664:	000186a0 	.word	0x000186a0
 8005668:	001e847f 	.word	0x001e847f
 800566c:	003d08ff 	.word	0x003d08ff
 8005670:	000f4240 	.word	0x000f4240

08005674 <HAL_I2C_Mem_Write>:
{
 8005674:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005678:	4604      	mov	r4, r0
 800567a:	4699      	mov	r9, r3
 800567c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800567e:	460f      	mov	r7, r1
 8005680:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8005682:	f7ff faff 	bl	8004c84 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005686:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 800568a:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800568c:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800568e:	d003      	beq.n	8005698 <HAL_I2C_Mem_Write+0x24>
      return HAL_BUSY;
 8005690:	2002      	movs	r0, #2
}
 8005692:	b003      	add	sp, #12
 8005694:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005698:	9000      	str	r0, [sp, #0]
 800569a:	493c      	ldr	r1, [pc, #240]	@ (800578c <HAL_I2C_Mem_Write+0x118>)
 800569c:	2319      	movs	r3, #25
 800569e:	2201      	movs	r2, #1
 80056a0:	4620      	mov	r0, r4
 80056a2:	f7ff fd79 	bl	8005198 <I2C_WaitOnFlagUntilTimeout>
 80056a6:	2800      	cmp	r0, #0
 80056a8:	d1f2      	bne.n	8005690 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 80056aa:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 80056ae:	2b01      	cmp	r3, #1
 80056b0:	d0ee      	beq.n	8005690 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80056b2:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80056b4:	2301      	movs	r3, #1
 80056b6:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80056ba:	6803      	ldr	r3, [r0, #0]
 80056bc:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80056be:	bf5e      	ittt	pl
 80056c0:	6803      	ldrpl	r3, [r0, #0]
 80056c2:	f043 0301 	orrpl.w	r3, r3, #1
 80056c6:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80056c8:	6803      	ldr	r3, [r0, #0]
 80056ca:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80056ce:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80056d0:	2321      	movs	r3, #33	@ 0x21
 80056d2:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80056d6:	2340      	movs	r3, #64	@ 0x40
 80056d8:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80056dc:	2300      	movs	r3, #0
 80056de:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 80056e0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80056e2:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 80056e4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80056e8:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80056ea:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80056ec:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80056ee:	4b28      	ldr	r3, [pc, #160]	@ (8005790 <HAL_I2C_Mem_Write+0x11c>)
 80056f0:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80056f2:	4642      	mov	r2, r8
 80056f4:	e9cd 6500 	strd	r6, r5, [sp]
 80056f8:	464b      	mov	r3, r9
 80056fa:	4639      	mov	r1, r7
 80056fc:	4620      	mov	r0, r4
 80056fe:	f7ff fddf 	bl	80052c0 <I2C_RequestMemoryWrite>
 8005702:	2800      	cmp	r0, #0
 8005704:	d02a      	beq.n	800575c <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8005706:	2001      	movs	r0, #1
 8005708:	e7c3      	b.n	8005692 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800570a:	f7ff fdb2 	bl	8005272 <I2C_WaitOnTXEFlagUntilTimeout>
 800570e:	b140      	cbz	r0, 8005722 <HAL_I2C_Mem_Write+0xae>
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005710:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8005712:	2b04      	cmp	r3, #4
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005714:	bf01      	itttt	eq
 8005716:	6822      	ldreq	r2, [r4, #0]
 8005718:	6813      	ldreq	r3, [r2, #0]
 800571a:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800571e:	6013      	streq	r3, [r2, #0]
 8005720:	e7f1      	b.n	8005706 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005722:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005724:	6827      	ldr	r7, [r4, #0]
 8005726:	461a      	mov	r2, r3
 8005728:	f812 1b01 	ldrb.w	r1, [r2], #1
 800572c:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800572e:	6262      	str	r2, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8005730:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8005732:	8d21      	ldrh	r1, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8005734:	3a01      	subs	r2, #1
 8005736:	b292      	uxth	r2, r2
 8005738:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800573a:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 800573c:	1e48      	subs	r0, r1, #1
 800573e:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005740:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8005742:	8520      	strh	r0, [r4, #40]	@ 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005744:	d50a      	bpl.n	800575c <HAL_I2C_Mem_Write+0xe8>
 8005746:	b148      	cbz	r0, 800575c <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005748:	785a      	ldrb	r2, [r3, #1]
 800574a:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 800574c:	3302      	adds	r3, #2
 800574e:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 8005750:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005752:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8005754:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8005756:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8005758:	8521      	strh	r1, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 800575a:	8563      	strh	r3, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 800575c:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800575e:	462a      	mov	r2, r5
 8005760:	4631      	mov	r1, r6
 8005762:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8005764:	2b00      	cmp	r3, #0
 8005766:	d1d0      	bne.n	800570a <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005768:	f7ff fe86 	bl	8005478 <I2C_WaitOnBTFFlagUntilTimeout>
 800576c:	2800      	cmp	r0, #0
 800576e:	d1cf      	bne.n	8005710 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005770:	6822      	ldr	r2, [r4, #0]
 8005772:	6813      	ldr	r3, [r2, #0]
 8005774:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8005778:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800577a:	2320      	movs	r3, #32
 800577c:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8005780:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005784:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    return HAL_OK;
 8005788:	e783      	b.n	8005692 <HAL_I2C_Mem_Write+0x1e>
 800578a:	bf00      	nop
 800578c:	00100002 	.word	0x00100002
 8005790:	ffff0000 	.word	0xffff0000

08005794 <HAL_I2C_Mem_Read>:
{
 8005794:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005798:	4604      	mov	r4, r0
 800579a:	b087      	sub	sp, #28
 800579c:	4699      	mov	r9, r3
 800579e:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 80057a0:	460d      	mov	r5, r1
 80057a2:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80057a4:	f7ff fa6e 	bl	8004c84 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80057a8:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 80057ac:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80057ae:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80057b0:	d004      	beq.n	80057bc <HAL_I2C_Mem_Read+0x28>
      return HAL_BUSY;
 80057b2:	2502      	movs	r5, #2
}
 80057b4:	4628      	mov	r0, r5
 80057b6:	b007      	add	sp, #28
 80057b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80057bc:	9000      	str	r0, [sp, #0]
 80057be:	4976      	ldr	r1, [pc, #472]	@ (8005998 <HAL_I2C_Mem_Read+0x204>)
 80057c0:	2319      	movs	r3, #25
 80057c2:	2201      	movs	r2, #1
 80057c4:	4620      	mov	r0, r4
 80057c6:	f7ff fce7 	bl	8005198 <I2C_WaitOnFlagUntilTimeout>
 80057ca:	2800      	cmp	r0, #0
 80057cc:	d1f1      	bne.n	80057b2 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 80057ce:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 80057d2:	2b01      	cmp	r3, #1
 80057d4:	d0ed      	beq.n	80057b2 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80057d6:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80057d8:	2301      	movs	r3, #1
 80057da:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80057de:	6803      	ldr	r3, [r0, #0]
 80057e0:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80057e2:	bf5e      	ittt	pl
 80057e4:	6803      	ldrpl	r3, [r0, #0]
 80057e6:	f043 0301 	orrpl.w	r3, r3, #1
 80057ea:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80057ec:	6803      	ldr	r3, [r0, #0]
 80057ee:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80057f2:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80057f4:	2322      	movs	r3, #34	@ 0x22
 80057f6:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80057fa:	2340      	movs	r3, #64	@ 0x40
 80057fc:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005800:	2300      	movs	r3, #0
 8005802:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8005804:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005806:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8005808:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800580c:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800580e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005810:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005812:	4b62      	ldr	r3, [pc, #392]	@ (800599c <HAL_I2C_Mem_Read+0x208>)
 8005814:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005816:	4629      	mov	r1, r5
 8005818:	e9cd 7600 	strd	r7, r6, [sp]
 800581c:	464b      	mov	r3, r9
 800581e:	4642      	mov	r2, r8
 8005820:	4620      	mov	r0, r4
 8005822:	f7ff fda7 	bl	8005374 <I2C_RequestMemoryRead>
 8005826:	4605      	mov	r5, r0
 8005828:	b108      	cbz	r0, 800582e <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800582a:	2501      	movs	r5, #1
 800582c:	e7c2      	b.n	80057b4 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800582e:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005830:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8005832:	b9b2      	cbnz	r2, 8005862 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005834:	9002      	str	r0, [sp, #8]
 8005836:	695a      	ldr	r2, [r3, #20]
 8005838:	9202      	str	r2, [sp, #8]
 800583a:	699a      	ldr	r2, [r3, #24]
 800583c:	9202      	str	r2, [sp, #8]
 800583e:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005840:	681a      	ldr	r2, [r3, #0]
 8005842:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005846:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005848:	f8df 8154 	ldr.w	r8, [pc, #340]	@ 80059a0 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 800584c:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800584e:	2b00      	cmp	r3, #0
 8005850:	d12c      	bne.n	80058ac <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8005852:	2220      	movs	r2, #32
 8005854:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8005858:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800585c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 8005860:	e7a8      	b.n	80057b4 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8005862:	2a01      	cmp	r2, #1
 8005864:	d10a      	bne.n	800587c <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005866:	681a      	ldr	r2, [r3, #0]
 8005868:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800586c:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800586e:	9003      	str	r0, [sp, #12]
 8005870:	695a      	ldr	r2, [r3, #20]
 8005872:	9203      	str	r2, [sp, #12]
 8005874:	699a      	ldr	r2, [r3, #24]
 8005876:	9203      	str	r2, [sp, #12]
 8005878:	9a03      	ldr	r2, [sp, #12]
 800587a:	e7e1      	b.n	8005840 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 800587c:	2a02      	cmp	r2, #2
 800587e:	d10e      	bne.n	800589e <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005880:	681a      	ldr	r2, [r3, #0]
 8005882:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005886:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005888:	681a      	ldr	r2, [r3, #0]
 800588a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800588e:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005890:	9004      	str	r0, [sp, #16]
 8005892:	695a      	ldr	r2, [r3, #20]
 8005894:	9204      	str	r2, [sp, #16]
 8005896:	699b      	ldr	r3, [r3, #24]
 8005898:	9304      	str	r3, [sp, #16]
 800589a:	9b04      	ldr	r3, [sp, #16]
 800589c:	e7d4      	b.n	8005848 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800589e:	9005      	str	r0, [sp, #20]
 80058a0:	695a      	ldr	r2, [r3, #20]
 80058a2:	9205      	str	r2, [sp, #20]
 80058a4:	699b      	ldr	r3, [r3, #24]
 80058a6:	9305      	str	r3, [sp, #20]
 80058a8:	9b05      	ldr	r3, [sp, #20]
 80058aa:	e7cd      	b.n	8005848 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 80058ac:	2b03      	cmp	r3, #3
 80058ae:	d856      	bhi.n	800595e <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 80058b0:	2b01      	cmp	r3, #1
 80058b2:	d115      	bne.n	80058e0 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80058b4:	4632      	mov	r2, r6
 80058b6:	4639      	mov	r1, r7
 80058b8:	4620      	mov	r0, r4
 80058ba:	f7ff fe03 	bl	80054c4 <I2C_WaitOnRXNEFlagUntilTimeout>
 80058be:	2800      	cmp	r0, #0
 80058c0:	d1b3      	bne.n	800582a <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80058c2:	6823      	ldr	r3, [r4, #0]
 80058c4:	691a      	ldr	r2, [r3, #16]
 80058c6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80058c8:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80058ca:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80058cc:	3301      	adds	r3, #1
 80058ce:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 80058d0:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 80058d2:	3b01      	subs	r3, #1
 80058d4:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 80058d6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80058d8:	3b01      	subs	r3, #1
 80058da:	b29b      	uxth	r3, r3
 80058dc:	8563      	strh	r3, [r4, #42]	@ 0x2a
 80058de:	e7b5      	b.n	800584c <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 80058e0:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80058e2:	9600      	str	r6, [sp, #0]
 80058e4:	463b      	mov	r3, r7
 80058e6:	f04f 0200 	mov.w	r2, #0
 80058ea:	4641      	mov	r1, r8
 80058ec:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 80058ee:	d119      	bne.n	8005924 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80058f0:	f7ff fc52 	bl	8005198 <I2C_WaitOnFlagUntilTimeout>
 80058f4:	2800      	cmp	r0, #0
 80058f6:	d198      	bne.n	800582a <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80058f8:	6823      	ldr	r3, [r4, #0]
 80058fa:	681a      	ldr	r2, [r3, #0]
 80058fc:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005900:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005902:	691a      	ldr	r2, [r3, #16]
 8005904:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005906:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005908:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800590a:	1c53      	adds	r3, r2, #1
 800590c:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800590e:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8005910:	3b01      	subs	r3, #1
 8005912:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8005914:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005916:	3b01      	subs	r3, #1
 8005918:	b29b      	uxth	r3, r3
 800591a:	8563      	strh	r3, [r4, #42]	@ 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800591c:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800591e:	691b      	ldr	r3, [r3, #16]
 8005920:	7053      	strb	r3, [r2, #1]
 8005922:	e7d2      	b.n	80058ca <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005924:	f7ff fc38 	bl	8005198 <I2C_WaitOnFlagUntilTimeout>
 8005928:	4602      	mov	r2, r0
 800592a:	2800      	cmp	r0, #0
 800592c:	f47f af7d 	bne.w	800582a <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005930:	6823      	ldr	r3, [r4, #0]
 8005932:	6819      	ldr	r1, [r3, #0]
 8005934:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 8005938:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800593a:	6919      	ldr	r1, [r3, #16]
 800593c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800593e:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 8005940:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005942:	3301      	adds	r3, #1
 8005944:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8005946:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8005948:	3b01      	subs	r3, #1
 800594a:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 800594c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800594e:	3b01      	subs	r3, #1
 8005950:	b29b      	uxth	r3, r3
 8005952:	8563      	strh	r3, [r4, #42]	@ 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005954:	4641      	mov	r1, r8
 8005956:	9600      	str	r6, [sp, #0]
 8005958:	463b      	mov	r3, r7
 800595a:	4620      	mov	r0, r4
 800595c:	e7c8      	b.n	80058f0 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800595e:	4632      	mov	r2, r6
 8005960:	4639      	mov	r1, r7
 8005962:	4620      	mov	r0, r4
 8005964:	f7ff fdae 	bl	80054c4 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005968:	2800      	cmp	r0, #0
 800596a:	f47f af5e 	bne.w	800582a <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800596e:	6823      	ldr	r3, [r4, #0]
 8005970:	691a      	ldr	r2, [r3, #16]
 8005972:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005974:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8005976:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005978:	1c53      	adds	r3, r2, #1
 800597a:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferSize--;
 800597c:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800597e:	3b01      	subs	r3, #1
 8005980:	8523      	strh	r3, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 8005982:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005984:	3b01      	subs	r3, #1
 8005986:	b29b      	uxth	r3, r3
 8005988:	8563      	strh	r3, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800598a:	6823      	ldr	r3, [r4, #0]
 800598c:	6959      	ldr	r1, [r3, #20]
 800598e:	0749      	lsls	r1, r1, #29
 8005990:	f57f af5c 	bpl.w	800584c <HAL_I2C_Mem_Read+0xb8>
 8005994:	e7c3      	b.n	800591e <HAL_I2C_Mem_Read+0x18a>
 8005996:	bf00      	nop
 8005998:	00100002 	.word	0x00100002
 800599c:	ffff0000 	.word	0xffff0000
 80059a0:	00010004 	.word	0x00010004

080059a4 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 80059a4:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80059a6:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80059aa:	2b20      	cmp	r3, #32
 80059ac:	b2dc      	uxtb	r4, r3
 80059ae:	d116      	bne.n	80059de <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 80059b0:	2324      	movs	r3, #36	@ 0x24
 80059b2:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80059b6:	6803      	ldr	r3, [r0, #0]
 80059b8:	681a      	ldr	r2, [r3, #0]
 80059ba:	f022 0201 	bic.w	r2, r2, #1
 80059be:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 80059c0:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80059c2:	f022 0210 	bic.w	r2, r2, #16
 80059c6:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 80059c8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80059ca:	4311      	orrs	r1, r2
 80059cc:	6259      	str	r1, [r3, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 80059ce:	681a      	ldr	r2, [r3, #0]
 80059d0:	f042 0201 	orr.w	r2, r2, #1
 80059d4:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80059d6:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 80059da:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80059dc:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 80059de:	2002      	movs	r0, #2
 80059e0:	e7fc      	b.n	80059dc <HAL_I2CEx_ConfigAnalogFilter+0x38>

080059e2 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80059e2:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80059e4:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80059e8:	2b20      	cmp	r3, #32
 80059ea:	b2dc      	uxtb	r4, r3
 80059ec:	d116      	bne.n	8005a1c <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80059ee:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 80059f0:	2324      	movs	r3, #36	@ 0x24
 80059f2:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    __HAL_I2C_DISABLE(hi2c);
 80059f6:	6813      	ldr	r3, [r2, #0]
 80059f8:	f023 0301 	bic.w	r3, r3, #1
 80059fc:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 80059fe:	6a55      	ldr	r5, [r2, #36]	@ 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8005a00:	f64f 73f0 	movw	r3, #65520	@ 0xfff0
 8005a04:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8005a06:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8005a08:	b29b      	uxth	r3, r3
 8005a0a:	6253      	str	r3, [r2, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 8005a0c:	6813      	ldr	r3, [r2, #0]
 8005a0e:	f043 0301 	orr.w	r3, r3, #1
 8005a12:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8005a14:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 8005a18:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005a1a:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8005a1c:	2002      	movs	r0, #2
 8005a1e:	e7fc      	b.n	8005a1a <HAL_I2CEx_ConfigDigitalFilter+0x38>

08005a20 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005a20:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005a22:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005a26:	01d2      	lsls	r2, r2, #7
 8005a28:	3284      	adds	r2, #132	@ 0x84
 8005a2a:	1883      	adds	r3, r0, r2
{
 8005a2c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005a30:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005a32:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005a34:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8005a36:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005a3a:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8005a3e:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005a40:	68c5      	ldr	r5, [r0, #12]
 8005a42:	f10c 0701 	add.w	r7, ip, #1
 8005a46:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005a4a:	f3c6 460b 	ubfx	r6, r6, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005a4e:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005a50:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005a52:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005a56:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005a58:	68c6      	ldr	r6, [r0, #12]
 8005a5a:	68cd      	ldr	r5, [r1, #12]
 8005a5c:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8005a60:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005a62:	689d      	ldr	r5, [r3, #8]
 8005a64:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8005a68:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005a6a:	68c7      	ldr	r7, [r0, #12]
 8005a6c:	688d      	ldr	r5, [r1, #8]
 8005a6e:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8005a72:	3501      	adds	r5, #1
 8005a74:	443d      	add	r5, r7
 8005a76:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8005a7a:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005a7c:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005a7e:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005a80:	f025 0507 	bic.w	r5, r5, #7
 8005a84:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005a86:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005a8a:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005a8c:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8005a8e:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005a92:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005a96:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005a9a:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 8005a9e:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8005aa2:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8005aa6:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8005aaa:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8005aac:	695d      	ldr	r5, [r3, #20]
 8005aae:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 8005ab2:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8005ab4:	694d      	ldr	r5, [r1, #20]
 8005ab6:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005ab8:	69dd      	ldr	r5, [r3, #28]
 8005aba:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 8005abe:	f025 0507 	bic.w	r5, r5, #7
 8005ac2:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8005ac4:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8005ac8:	433d      	orrs	r5, r7
 8005aca:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005acc:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005ace:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005ad0:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005ad4:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005ad6:	b31e      	cbz	r6, 8005b20 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005ad8:	2e01      	cmp	r6, #1
 8005ada:	d023      	beq.n	8005b24 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005adc:	1eb5      	subs	r5, r6, #2
 8005ade:	2d02      	cmp	r5, #2
 8005ae0:	d922      	bls.n	8005b28 <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
  {
    tmp = 2U;
 8005ae2:	2e07      	cmp	r6, #7
 8005ae4:	bf14      	ite	ne
 8005ae6:	2501      	movne	r5, #1
 8005ae8:	2502      	moveq	r5, #2
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005aea:	6ade      	ldr	r6, [r3, #44]	@ 0x2c
 8005aec:	f006 26e0 	and.w	r6, r6, #3758153728	@ 0xe000e000
 8005af0:	62de      	str	r6, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005af2:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005af6:	6a8e      	ldr	r6, [r1, #40]	@ 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005af8:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005afa:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005afc:	436e      	muls	r6, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005afe:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005b00:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8005b04:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8005b06:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 8005b08:	f424 64ff 	bic.w	r4, r4, #2040	@ 0x7f8
 8005b0c:	f024 0407 	bic.w	r4, r4, #7
 8005b10:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005b12:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8005b14:	5883      	ldr	r3, [r0, r2]
 8005b16:	f043 0301 	orr.w	r3, r3, #1
 8005b1a:	5083      	str	r3, [r0, r2]
}
 8005b1c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8005b20:	2504      	movs	r5, #4
 8005b22:	e7e2      	b.n	8005aea <LTDC_SetConfig+0xca>
    tmp = 3U;
 8005b24:	2503      	movs	r5, #3
 8005b26:	e7e0      	b.n	8005aea <LTDC_SetConfig+0xca>
    tmp = 2U;
 8005b28:	2502      	movs	r5, #2
 8005b2a:	e7de      	b.n	8005aea <LTDC_SetConfig+0xca>

08005b2c <HAL_LTDC_Init>:
{
 8005b2c:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8005b2e:	4604      	mov	r4, r0
 8005b30:	2800      	cmp	r0, #0
 8005b32:	d063      	beq.n	8005bfc <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005b34:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8005b38:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005b3c:	b91b      	cbnz	r3, 8005b46 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8005b3e:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 8005b42:	f7fb ffdf 	bl	8001b04 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005b46:	2302      	movs	r3, #2
 8005b48:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005b4c:	6823      	ldr	r3, [r4, #0]
 8005b4e:	699a      	ldr	r2, [r3, #24]
 8005b50:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8005b54:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005b56:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8005b5a:	4302      	orrs	r2, r0
 8005b5c:	68e0      	ldr	r0, [r4, #12]
 8005b5e:	6999      	ldr	r1, [r3, #24]
 8005b60:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005b62:	6920      	ldr	r0, [r4, #16]
 8005b64:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005b66:	430a      	orrs	r2, r1
 8005b68:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005b6a:	689a      	ldr	r2, [r3, #8]
 8005b6c:	4924      	ldr	r1, [pc, #144]	@ (8005c00 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8005b6e:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005b70:	400a      	ands	r2, r1
 8005b72:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005b74:	689a      	ldr	r2, [r3, #8]
 8005b76:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005b7a:	69a0      	ldr	r0, [r4, #24]
 8005b7c:	4302      	orrs	r2, r0
 8005b7e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005b80:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8005b82:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005b84:	400a      	ands	r2, r1
 8005b86:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005b88:	68da      	ldr	r2, [r3, #12]
 8005b8a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005b8e:	6a20      	ldr	r0, [r4, #32]
 8005b90:	4302      	orrs	r2, r0
 8005b92:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005b94:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8005b96:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005b98:	400a      	ands	r2, r1
 8005b9a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8005b9c:	691a      	ldr	r2, [r3, #16]
 8005b9e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005ba2:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8005ba4:	4302      	orrs	r2, r0
 8005ba6:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005ba8:	695a      	ldr	r2, [r3, #20]
 8005baa:	400a      	ands	r2, r1
 8005bac:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005bae:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8005bb0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005bb2:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005bb6:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8005bb8:	430a      	orrs	r2, r1
 8005bba:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005bbc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8005bbe:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8005bc2:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005bc6:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 8005bca:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005bcc:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8005bce:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 8005bd2:	432a      	orrs	r2, r5
 8005bd4:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8005bd8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005bdc:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8005bde:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005be0:	f042 0206 	orr.w	r2, r2, #6
 8005be4:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8005be6:	699a      	ldr	r2, [r3, #24]
 8005be8:	f042 0201 	orr.w	r2, r2, #1
 8005bec:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005bee:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8005bf0:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005bf2:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8005bf6:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 8005bfa:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005bfc:	2001      	movs	r0, #1
 8005bfe:	e7fc      	b.n	8005bfa <HAL_LTDC_Init+0xce>
 8005c00:	f000f800 	.word	0xf000f800

08005c04 <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 8005c04:	4770      	bx	lr

08005c06 <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 8005c06:	4770      	bx	lr

08005c08 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005c08:	6803      	ldr	r3, [r0, #0]
{
 8005c0a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005c0c:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8005c0e:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005c10:	0772      	lsls	r2, r6, #29
{
 8005c12:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005c14:	d514      	bpl.n	8005c40 <HAL_LTDC_IRQHandler+0x38>
 8005c16:	0769      	lsls	r1, r5, #29
 8005c18:	d512      	bpl.n	8005c40 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005c1a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005c1c:	f022 0204 	bic.w	r2, r2, #4
 8005c20:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005c22:	2204      	movs	r2, #4
 8005c24:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005c26:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8005c2a:	f043 0301 	orr.w	r3, r3, #1
 8005c2e:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 8005c32:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005c34:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005c38:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005c3c:	f7ff ffe2 	bl	8005c04 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8005c40:	07b2      	lsls	r2, r6, #30
 8005c42:	d516      	bpl.n	8005c72 <HAL_LTDC_IRQHandler+0x6a>
 8005c44:	07ab      	lsls	r3, r5, #30
 8005c46:	d514      	bpl.n	8005c72 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005c48:	6823      	ldr	r3, [r4, #0]
 8005c4a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005c4c:	f022 0202 	bic.w	r2, r2, #2
 8005c50:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005c52:	2202      	movs	r2, #2
 8005c54:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005c56:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 8005c5a:	4313      	orrs	r3, r2
 8005c5c:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005c60:	2304      	movs	r3, #4
 8005c62:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005c66:	2300      	movs	r3, #0
 8005c68:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005c6c:	4620      	mov	r0, r4
 8005c6e:	f7ff ffc9 	bl	8005c04 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8005c72:	07f0      	lsls	r0, r6, #31
 8005c74:	d510      	bpl.n	8005c98 <HAL_LTDC_IRQHandler+0x90>
 8005c76:	07e9      	lsls	r1, r5, #31
 8005c78:	d50e      	bpl.n	8005c98 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005c7a:	6823      	ldr	r3, [r4, #0]
 8005c7c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005c7e:	f022 0201 	bic.w	r2, r2, #1
 8005c82:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8005c84:	2201      	movs	r2, #1
 8005c86:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 8005c88:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8005c8a:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005c8e:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8005c92:	4620      	mov	r0, r4
 8005c94:	f7fb fab4 	bl	8001200 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8005c98:	0732      	lsls	r2, r6, #28
 8005c9a:	d511      	bpl.n	8005cc0 <HAL_LTDC_IRQHandler+0xb8>
 8005c9c:	072b      	lsls	r3, r5, #28
 8005c9e:	d50f      	bpl.n	8005cc0 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005ca0:	6823      	ldr	r3, [r4, #0]
 8005ca2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005ca4:	f022 0208 	bic.w	r2, r2, #8
 8005ca8:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8005caa:	2208      	movs	r2, #8
 8005cac:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8005cae:	2301      	movs	r3, #1
 8005cb0:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005cb4:	2300      	movs	r3, #0
 8005cb6:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005cba:	4620      	mov	r0, r4
 8005cbc:	f7ff ffa3 	bl	8005c06 <HAL_LTDC_ReloadEventCallback>
}
 8005cc0:	bd70      	pop	{r4, r5, r6, pc}

08005cc2 <HAL_LTDC_ConfigLayer>:
{
 8005cc2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8005cc6:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
 8005cca:	2b01      	cmp	r3, #1
{
 8005ccc:	4606      	mov	r6, r0
 8005cce:	460f      	mov	r7, r1
 8005cd0:	4694      	mov	ip, r2
 8005cd2:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8005cd6:	d01f      	beq.n	8005d18 <HAL_LTDC_ConfigLayer+0x56>
 8005cd8:	f04f 0801 	mov.w	r8, #1
 8005cdc:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005ce0:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005ce4:	2434      	movs	r4, #52	@ 0x34
 8005ce6:	460d      	mov	r5, r1
 8005ce8:	fb04 6402 	mla	r4, r4, r2, r6
 8005cec:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005cee:	3438      	adds	r4, #56	@ 0x38
 8005cf0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005cf2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005cf4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005cf6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005cf8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005cfa:	682b      	ldr	r3, [r5, #0]
 8005cfc:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005cfe:	4630      	mov	r0, r6
 8005d00:	4662      	mov	r2, ip
 8005d02:	4639      	mov	r1, r7
 8005d04:	f7ff fe8c 	bl	8005a20 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005d08:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8005d0a:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005d0c:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8005d10:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8005d14:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 8005d18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005d1c <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8005d1c:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
 8005d20:	2a01      	cmp	r2, #1
{
 8005d22:	4603      	mov	r3, r0
 8005d24:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8005d28:	d012      	beq.n	8005d50 <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005d2a:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005d2c:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005d30:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 8005d32:	f020 0001 	bic.w	r0, r0, #1
 8005d36:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8005d38:	4806      	ldr	r0, [pc, #24]	@ (8005d54 <HAL_LTDC_ProgramLineEvent+0x38>)
 8005d3a:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8005d3c:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8005d3e:	f041 0101 	orr.w	r1, r1, #1
 8005d42:	6351      	str	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 8005d44:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8005d46:	2201      	movs	r2, #1
 8005d48:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8005d4c:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
}
 8005d50:	4770      	bx	lr
 8005d52:	bf00      	nop
 8005d54:	40016800 	.word	0x40016800

08005d58 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005d58:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8005d5c:	4604      	mov	r4, r0
 8005d5e:	b340      	cbz	r0, 8005db2 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005d60:	6803      	ldr	r3, [r0, #0]
 8005d62:	07de      	lsls	r6, r3, #31
 8005d64:	d410      	bmi.n	8005d88 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005d66:	6823      	ldr	r3, [r4, #0]
 8005d68:	079d      	lsls	r5, r3, #30
 8005d6a:	d45b      	bmi.n	8005e24 <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005d6c:	6823      	ldr	r3, [r4, #0]
 8005d6e:	0719      	lsls	r1, r3, #28
 8005d70:	f100 809d 	bmi.w	8005eae <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005d74:	6823      	ldr	r3, [r4, #0]
 8005d76:	075a      	lsls	r2, r3, #29
 8005d78:	f100 80bd 	bmi.w	8005ef6 <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005d7c:	69a3      	ldr	r3, [r4, #24]
 8005d7e:	2b00      	cmp	r3, #0
 8005d80:	f040 8124 	bne.w	8005fcc <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8005d84:	2000      	movs	r0, #0
 8005d86:	e02c      	b.n	8005de2 <HAL_RCC_OscConfig+0x8a>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8005d88:	4b8d      	ldr	r3, [pc, #564]	@ (8005fc0 <HAL_RCC_OscConfig+0x268>)
 8005d8a:	689a      	ldr	r2, [r3, #8]
 8005d8c:	f002 020c 	and.w	r2, r2, #12
 8005d90:	2a04      	cmp	r2, #4
 8005d92:	d007      	beq.n	8005da4 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005d94:	689a      	ldr	r2, [r3, #8]
 8005d96:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8005d9a:	2a08      	cmp	r2, #8
 8005d9c:	d10b      	bne.n	8005db6 <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005d9e:	685b      	ldr	r3, [r3, #4]
 8005da0:	0259      	lsls	r1, r3, #9
 8005da2:	d508      	bpl.n	8005db6 <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005da4:	4b86      	ldr	r3, [pc, #536]	@ (8005fc0 <HAL_RCC_OscConfig+0x268>)
 8005da6:	681b      	ldr	r3, [r3, #0]
 8005da8:	039a      	lsls	r2, r3, #14
 8005daa:	d5dc      	bpl.n	8005d66 <HAL_RCC_OscConfig+0xe>
 8005dac:	6863      	ldr	r3, [r4, #4]
 8005dae:	2b00      	cmp	r3, #0
 8005db0:	d1d9      	bne.n	8005d66 <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 8005db2:	2001      	movs	r0, #1
 8005db4:	e015      	b.n	8005de2 <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005db6:	6863      	ldr	r3, [r4, #4]
 8005db8:	4d81      	ldr	r5, [pc, #516]	@ (8005fc0 <HAL_RCC_OscConfig+0x268>)
 8005dba:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005dbe:	d113      	bne.n	8005de8 <HAL_RCC_OscConfig+0x90>
 8005dc0:	682b      	ldr	r3, [r5, #0]
 8005dc2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005dc6:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8005dc8:	f7fe ff5c 	bl	8004c84 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005dcc:	4e7c      	ldr	r6, [pc, #496]	@ (8005fc0 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8005dce:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005dd0:	6833      	ldr	r3, [r6, #0]
 8005dd2:	039b      	lsls	r3, r3, #14
 8005dd4:	d4c7      	bmi.n	8005d66 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8005dd6:	f7fe ff55 	bl	8004c84 <HAL_GetTick>
 8005dda:	1b40      	subs	r0, r0, r5
 8005ddc:	2864      	cmp	r0, #100	@ 0x64
 8005dde:	d9f7      	bls.n	8005dd0 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 8005de0:	2003      	movs	r0, #3
}
 8005de2:	b002      	add	sp, #8
 8005de4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005de8:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8005dec:	d104      	bne.n	8005df8 <HAL_RCC_OscConfig+0xa0>
 8005dee:	682b      	ldr	r3, [r5, #0]
 8005df0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8005df4:	602b      	str	r3, [r5, #0]
 8005df6:	e7e3      	b.n	8005dc0 <HAL_RCC_OscConfig+0x68>
 8005df8:	682a      	ldr	r2, [r5, #0]
 8005dfa:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8005dfe:	602a      	str	r2, [r5, #0]
 8005e00:	682a      	ldr	r2, [r5, #0]
 8005e02:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8005e06:	602a      	str	r2, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8005e08:	2b00      	cmp	r3, #0
 8005e0a:	d1dd      	bne.n	8005dc8 <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 8005e0c:	f7fe ff3a 	bl	8004c84 <HAL_GetTick>
 8005e10:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005e12:	682b      	ldr	r3, [r5, #0]
 8005e14:	039f      	lsls	r7, r3, #14
 8005e16:	d5a6      	bpl.n	8005d66 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8005e18:	f7fe ff34 	bl	8004c84 <HAL_GetTick>
 8005e1c:	1b80      	subs	r0, r0, r6
 8005e1e:	2864      	cmp	r0, #100	@ 0x64
 8005e20:	d9f7      	bls.n	8005e12 <HAL_RCC_OscConfig+0xba>
 8005e22:	e7dd      	b.n	8005de0 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8005e24:	4b66      	ldr	r3, [pc, #408]	@ (8005fc0 <HAL_RCC_OscConfig+0x268>)
 8005e26:	689a      	ldr	r2, [r3, #8]
 8005e28:	f012 0f0c 	tst.w	r2, #12
 8005e2c:	d007      	beq.n	8005e3e <HAL_RCC_OscConfig+0xe6>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005e2e:	689a      	ldr	r2, [r3, #8]
 8005e30:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8005e34:	2a08      	cmp	r2, #8
 8005e36:	d111      	bne.n	8005e5c <HAL_RCC_OscConfig+0x104>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005e38:	685b      	ldr	r3, [r3, #4]
 8005e3a:	025d      	lsls	r5, r3, #9
 8005e3c:	d40e      	bmi.n	8005e5c <HAL_RCC_OscConfig+0x104>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005e3e:	4a60      	ldr	r2, [pc, #384]	@ (8005fc0 <HAL_RCC_OscConfig+0x268>)
 8005e40:	6813      	ldr	r3, [r2, #0]
 8005e42:	0799      	lsls	r1, r3, #30
 8005e44:	d502      	bpl.n	8005e4c <HAL_RCC_OscConfig+0xf4>
 8005e46:	68e3      	ldr	r3, [r4, #12]
 8005e48:	2b01      	cmp	r3, #1
 8005e4a:	d1b2      	bne.n	8005db2 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005e4c:	6813      	ldr	r3, [r2, #0]
 8005e4e:	6921      	ldr	r1, [r4, #16]
 8005e50:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8005e54:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005e58:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005e5a:	e787      	b.n	8005d6c <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8005e5c:	68e2      	ldr	r2, [r4, #12]
 8005e5e:	4b59      	ldr	r3, [pc, #356]	@ (8005fc4 <HAL_RCC_OscConfig+0x26c>)
 8005e60:	b1b2      	cbz	r2, 8005e90 <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 8005e62:	2201      	movs	r2, #1
 8005e64:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8005e66:	f7fe ff0d 	bl	8004c84 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005e6a:	4d55      	ldr	r5, [pc, #340]	@ (8005fc0 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8005e6c:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005e6e:	682b      	ldr	r3, [r5, #0]
 8005e70:	079b      	lsls	r3, r3, #30
 8005e72:	d507      	bpl.n	8005e84 <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005e74:	682b      	ldr	r3, [r5, #0]
 8005e76:	6922      	ldr	r2, [r4, #16]
 8005e78:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8005e7c:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8005e80:	602b      	str	r3, [r5, #0]
 8005e82:	e773      	b.n	8005d6c <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8005e84:	f7fe fefe 	bl	8004c84 <HAL_GetTick>
 8005e88:	1b80      	subs	r0, r0, r6
 8005e8a:	2802      	cmp	r0, #2
 8005e8c:	d9ef      	bls.n	8005e6e <HAL_RCC_OscConfig+0x116>
 8005e8e:	e7a7      	b.n	8005de0 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 8005e90:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8005e92:	f7fe fef7 	bl	8004c84 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005e96:	4e4a      	ldr	r6, [pc, #296]	@ (8005fc0 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8005e98:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005e9a:	6833      	ldr	r3, [r6, #0]
 8005e9c:	079f      	lsls	r7, r3, #30
 8005e9e:	f57f af65 	bpl.w	8005d6c <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8005ea2:	f7fe feef 	bl	8004c84 <HAL_GetTick>
 8005ea6:	1b40      	subs	r0, r0, r5
 8005ea8:	2802      	cmp	r0, #2
 8005eaa:	d9f6      	bls.n	8005e9a <HAL_RCC_OscConfig+0x142>
 8005eac:	e798      	b.n	8005de0 <HAL_RCC_OscConfig+0x88>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8005eae:	6962      	ldr	r2, [r4, #20]
 8005eb0:	4b44      	ldr	r3, [pc, #272]	@ (8005fc4 <HAL_RCC_OscConfig+0x26c>)
 8005eb2:	b182      	cbz	r2, 8005ed6 <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 8005eb4:	2201      	movs	r2, #1
 8005eb6:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 8005eba:	f7fe fee3 	bl	8004c84 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005ebe:	4e40      	ldr	r6, [pc, #256]	@ (8005fc0 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8005ec0:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005ec2:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 8005ec4:	079b      	lsls	r3, r3, #30
 8005ec6:	f53f af55 	bmi.w	8005d74 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8005eca:	f7fe fedb 	bl	8004c84 <HAL_GetTick>
 8005ece:	1b40      	subs	r0, r0, r5
 8005ed0:	2802      	cmp	r0, #2
 8005ed2:	d9f6      	bls.n	8005ec2 <HAL_RCC_OscConfig+0x16a>
 8005ed4:	e784      	b.n	8005de0 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 8005ed6:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 8005eda:	f7fe fed3 	bl	8004c84 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005ede:	4e38      	ldr	r6, [pc, #224]	@ (8005fc0 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8005ee0:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005ee2:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 8005ee4:	079f      	lsls	r7, r3, #30
 8005ee6:	f57f af45 	bpl.w	8005d74 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8005eea:	f7fe fecb 	bl	8004c84 <HAL_GetTick>
 8005eee:	1b40      	subs	r0, r0, r5
 8005ef0:	2802      	cmp	r0, #2
 8005ef2:	d9f6      	bls.n	8005ee2 <HAL_RCC_OscConfig+0x18a>
 8005ef4:	e774      	b.n	8005de0 <HAL_RCC_OscConfig+0x88>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005ef6:	4b32      	ldr	r3, [pc, #200]	@ (8005fc0 <HAL_RCC_OscConfig+0x268>)
 8005ef8:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005efa:	f012 5280 	ands.w	r2, r2, #268435456	@ 0x10000000
 8005efe:	d128      	bne.n	8005f52 <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 8005f00:	9201      	str	r2, [sp, #4]
 8005f02:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005f04:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8005f08:	641a      	str	r2, [r3, #64]	@ 0x40
 8005f0a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005f0c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005f10:	9301      	str	r3, [sp, #4]
 8005f12:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8005f14:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005f16:	4d2c      	ldr	r5, [pc, #176]	@ (8005fc8 <HAL_RCC_OscConfig+0x270>)
 8005f18:	682b      	ldr	r3, [r5, #0]
 8005f1a:	05d8      	lsls	r0, r3, #23
 8005f1c:	d51b      	bpl.n	8005f56 <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005f1e:	68a3      	ldr	r3, [r4, #8]
 8005f20:	4d27      	ldr	r5, [pc, #156]	@ (8005fc0 <HAL_RCC_OscConfig+0x268>)
 8005f22:	2b01      	cmp	r3, #1
 8005f24:	d127      	bne.n	8005f76 <HAL_RCC_OscConfig+0x21e>
 8005f26:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005f28:	f043 0301 	orr.w	r3, r3, #1
 8005f2c:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 8005f2e:	f7fe fea9 	bl	8004c84 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005f32:	4e23      	ldr	r6, [pc, #140]	@ (8005fc0 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8005f34:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005f36:	f241 3888 	movw	r8, #5000	@ 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005f3a:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 8005f3c:	079a      	lsls	r2, r3, #30
 8005f3e:	d539      	bpl.n	8005fb4 <HAL_RCC_OscConfig+0x25c>
    if(pwrclkchanged == SET)
 8005f40:	2f00      	cmp	r7, #0
 8005f42:	f43f af1b 	beq.w	8005d7c <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8005f46:	4a1e      	ldr	r2, [pc, #120]	@ (8005fc0 <HAL_RCC_OscConfig+0x268>)
 8005f48:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8005f4a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005f4e:	6413      	str	r3, [r2, #64]	@ 0x40
 8005f50:	e714      	b.n	8005d7c <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8005f52:	2700      	movs	r7, #0
 8005f54:	e7df      	b.n	8005f16 <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8005f56:	682b      	ldr	r3, [r5, #0]
 8005f58:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005f5c:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8005f5e:	f7fe fe91 	bl	8004c84 <HAL_GetTick>
 8005f62:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005f64:	682b      	ldr	r3, [r5, #0]
 8005f66:	05d9      	lsls	r1, r3, #23
 8005f68:	d4d9      	bmi.n	8005f1e <HAL_RCC_OscConfig+0x1c6>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005f6a:	f7fe fe8b 	bl	8004c84 <HAL_GetTick>
 8005f6e:	1b80      	subs	r0, r0, r6
 8005f70:	2802      	cmp	r0, #2
 8005f72:	d9f7      	bls.n	8005f64 <HAL_RCC_OscConfig+0x20c>
 8005f74:	e734      	b.n	8005de0 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005f76:	2b05      	cmp	r3, #5
 8005f78:	d104      	bne.n	8005f84 <HAL_RCC_OscConfig+0x22c>
 8005f7a:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005f7c:	f043 0304 	orr.w	r3, r3, #4
 8005f80:	672b      	str	r3, [r5, #112]	@ 0x70
 8005f82:	e7d0      	b.n	8005f26 <HAL_RCC_OscConfig+0x1ce>
 8005f84:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 8005f86:	f022 0201 	bic.w	r2, r2, #1
 8005f8a:	672a      	str	r2, [r5, #112]	@ 0x70
 8005f8c:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 8005f8e:	f022 0204 	bic.w	r2, r2, #4
 8005f92:	672a      	str	r2, [r5, #112]	@ 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8005f94:	2b00      	cmp	r3, #0
 8005f96:	d1ca      	bne.n	8005f2e <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 8005f98:	f7fe fe74 	bl	8004c84 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005f9c:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8005fa0:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005fa2:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005fa4:	079b      	lsls	r3, r3, #30
 8005fa6:	d5cb      	bpl.n	8005f40 <HAL_RCC_OscConfig+0x1e8>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005fa8:	f7fe fe6c 	bl	8004c84 <HAL_GetTick>
 8005fac:	1b80      	subs	r0, r0, r6
 8005fae:	4540      	cmp	r0, r8
 8005fb0:	d9f7      	bls.n	8005fa2 <HAL_RCC_OscConfig+0x24a>
 8005fb2:	e715      	b.n	8005de0 <HAL_RCC_OscConfig+0x88>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005fb4:	f7fe fe66 	bl	8004c84 <HAL_GetTick>
 8005fb8:	1b40      	subs	r0, r0, r5
 8005fba:	4540      	cmp	r0, r8
 8005fbc:	d9bd      	bls.n	8005f3a <HAL_RCC_OscConfig+0x1e2>
 8005fbe:	e70f      	b.n	8005de0 <HAL_RCC_OscConfig+0x88>
 8005fc0:	40023800 	.word	0x40023800
 8005fc4:	42470000 	.word	0x42470000
 8005fc8:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8005fcc:	4d37      	ldr	r5, [pc, #220]	@ (80060ac <HAL_RCC_OscConfig+0x354>)
 8005fce:	68aa      	ldr	r2, [r5, #8]
 8005fd0:	f002 020c 	and.w	r2, r2, #12
 8005fd4:	2a08      	cmp	r2, #8
 8005fd6:	d03e      	beq.n	8006056 <HAL_RCC_OscConfig+0x2fe>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005fd8:	2b02      	cmp	r3, #2
 8005fda:	4b35      	ldr	r3, [pc, #212]	@ (80060b0 <HAL_RCC_OscConfig+0x358>)
 8005fdc:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 8005fe0:	661a      	str	r2, [r3, #96]	@ 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005fe2:	d12b      	bne.n	800603c <HAL_RCC_OscConfig+0x2e4>
        tickstart = HAL_GetTick();
 8005fe4:	f7fe fe4e 	bl	8004c84 <HAL_GetTick>
 8005fe8:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005fea:	682b      	ldr	r3, [r5, #0]
 8005fec:	0199      	lsls	r1, r3, #6
 8005fee:	d41f      	bmi.n	8006030 <HAL_RCC_OscConfig+0x2d8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8005ff0:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8005ff4:	4313      	orrs	r3, r2
 8005ff6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005ff8:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005ffc:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8005ffe:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006002:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8006004:	0852      	lsrs	r2, r2, #1
 8006006:	3a01      	subs	r2, #1
 8006008:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800600c:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800600e:	4b28      	ldr	r3, [pc, #160]	@ (80060b0 <HAL_RCC_OscConfig+0x358>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006010:	4d26      	ldr	r5, [pc, #152]	@ (80060ac <HAL_RCC_OscConfig+0x354>)
        __HAL_RCC_PLL_ENABLE();
 8006012:	2201      	movs	r2, #1
 8006014:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 8006016:	f7fe fe35 	bl	8004c84 <HAL_GetTick>
 800601a:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800601c:	682b      	ldr	r3, [r5, #0]
 800601e:	019a      	lsls	r2, r3, #6
 8006020:	f53f aeb0 	bmi.w	8005d84 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006024:	f7fe fe2e 	bl	8004c84 <HAL_GetTick>
 8006028:	1b00      	subs	r0, r0, r4
 800602a:	2802      	cmp	r0, #2
 800602c:	d9f6      	bls.n	800601c <HAL_RCC_OscConfig+0x2c4>
 800602e:	e6d7      	b.n	8005de0 <HAL_RCC_OscConfig+0x88>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006030:	f7fe fe28 	bl	8004c84 <HAL_GetTick>
 8006034:	1b80      	subs	r0, r0, r6
 8006036:	2802      	cmp	r0, #2
 8006038:	d9d7      	bls.n	8005fea <HAL_RCC_OscConfig+0x292>
 800603a:	e6d1      	b.n	8005de0 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 800603c:	f7fe fe22 	bl	8004c84 <HAL_GetTick>
 8006040:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006042:	682b      	ldr	r3, [r5, #0]
 8006044:	019b      	lsls	r3, r3, #6
 8006046:	f57f ae9d 	bpl.w	8005d84 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800604a:	f7fe fe1b 	bl	8004c84 <HAL_GetTick>
 800604e:	1b00      	subs	r0, r0, r4
 8006050:	2802      	cmp	r0, #2
 8006052:	d9f6      	bls.n	8006042 <HAL_RCC_OscConfig+0x2ea>
 8006054:	e6c4      	b.n	8005de0 <HAL_RCC_OscConfig+0x88>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8006056:	2b01      	cmp	r3, #1
 8006058:	f43f aeab 	beq.w	8005db2 <HAL_RCC_OscConfig+0x5a>
        pll_config = RCC->PLLCFGR;
 800605c:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800605e:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006060:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006064:	4291      	cmp	r1, r2
 8006066:	f47f aea4 	bne.w	8005db2 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800606a:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800606c:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006070:	428a      	cmp	r2, r1
 8006072:	f47f ae9e 	bne.w	8005db2 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8006076:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006078:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 800607c:	401a      	ands	r2, r3
 800607e:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8006082:	f47f ae96 	bne.w	8005db2 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8006086:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8006088:	0852      	lsrs	r2, r2, #1
 800608a:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 800608e:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8006090:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8006094:	f47f ae8d 	bne.w	8005db2 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8006098:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800609a:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800609e:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 80060a2:	bf14      	ite	ne
 80060a4:	2001      	movne	r0, #1
 80060a6:	2000      	moveq	r0, #0
 80060a8:	e69b      	b.n	8005de2 <HAL_RCC_OscConfig+0x8a>
 80060aa:	bf00      	nop
 80060ac:	40023800 	.word	0x40023800
 80060b0:	42470000 	.word	0x42470000

080060b4 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80060b4:	4913      	ldr	r1, [pc, #76]	@ (8006104 <HAL_RCC_GetSysClockFreq+0x50>)
{
 80060b6:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80060b8:	688b      	ldr	r3, [r1, #8]
 80060ba:	f003 030c 	and.w	r3, r3, #12
 80060be:	2b04      	cmp	r3, #4
 80060c0:	d01c      	beq.n	80060fc <HAL_RCC_GetSysClockFreq+0x48>
 80060c2:	2b08      	cmp	r3, #8
 80060c4:	d11c      	bne.n	8006100 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80060c6:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80060c8:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80060ca:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80060cc:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80060d0:	bf14      	ite	ne
 80060d2:	480d      	ldrne	r0, [pc, #52]	@ (8006108 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80060d4:	480d      	ldreq	r0, [pc, #52]	@ (800610c <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80060d6:	f3c1 1188 	ubfx	r1, r1, #6, #9
 80060da:	bf18      	it	ne
 80060dc:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80060de:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80060e2:	fba1 0100 	umull	r0, r1, r1, r0
 80060e6:	f7fa f8d3 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 80060ea:	4b06      	ldr	r3, [pc, #24]	@ (8006104 <HAL_RCC_GetSysClockFreq+0x50>)
 80060ec:	685b      	ldr	r3, [r3, #4]
 80060ee:	f3c3 4301 	ubfx	r3, r3, #16, #2
 80060f2:	3301      	adds	r3, #1
 80060f4:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 80060f6:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 80060fa:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80060fc:	4802      	ldr	r0, [pc, #8]	@ (8006108 <HAL_RCC_GetSysClockFreq+0x54>)
 80060fe:	e7fc      	b.n	80060fa <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8006100:	4802      	ldr	r0, [pc, #8]	@ (800610c <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8006102:	e7fa      	b.n	80060fa <HAL_RCC_GetSysClockFreq+0x46>
 8006104:	40023800 	.word	0x40023800
 8006108:	007a1200 	.word	0x007a1200
 800610c:	00f42400 	.word	0x00f42400

08006110 <HAL_RCC_ClockConfig>:
{
 8006110:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006114:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8006116:	4604      	mov	r4, r0
 8006118:	b910      	cbnz	r0, 8006120 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800611a:	2001      	movs	r0, #1
}
 800611c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8006120:	4b43      	ldr	r3, [pc, #268]	@ (8006230 <HAL_RCC_ClockConfig+0x120>)
 8006122:	681a      	ldr	r2, [r3, #0]
 8006124:	f002 020f 	and.w	r2, r2, #15
 8006128:	428a      	cmp	r2, r1
 800612a:	d328      	bcc.n	800617e <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800612c:	6821      	ldr	r1, [r4, #0]
 800612e:	078f      	lsls	r7, r1, #30
 8006130:	d42d      	bmi.n	800618e <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8006132:	07c8      	lsls	r0, r1, #31
 8006134:	d440      	bmi.n	80061b8 <HAL_RCC_ClockConfig+0xa8>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8006136:	4b3e      	ldr	r3, [pc, #248]	@ (8006230 <HAL_RCC_ClockConfig+0x120>)
 8006138:	681a      	ldr	r2, [r3, #0]
 800613a:	f002 020f 	and.w	r2, r2, #15
 800613e:	42aa      	cmp	r2, r5
 8006140:	d865      	bhi.n	800620e <HAL_RCC_ClockConfig+0xfe>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006142:	6822      	ldr	r2, [r4, #0]
 8006144:	0751      	lsls	r1, r2, #29
 8006146:	d46b      	bmi.n	8006220 <HAL_RCC_ClockConfig+0x110>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006148:	0713      	lsls	r3, r2, #28
 800614a:	d507      	bpl.n	800615c <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800614c:	4a39      	ldr	r2, [pc, #228]	@ (8006234 <HAL_RCC_ClockConfig+0x124>)
 800614e:	6921      	ldr	r1, [r4, #16]
 8006150:	6893      	ldr	r3, [r2, #8]
 8006152:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 8006156:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800615a:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800615c:	f7ff ffaa 	bl	80060b4 <HAL_RCC_GetSysClockFreq>
 8006160:	4b34      	ldr	r3, [pc, #208]	@ (8006234 <HAL_RCC_ClockConfig+0x124>)
 8006162:	4a35      	ldr	r2, [pc, #212]	@ (8006238 <HAL_RCC_ClockConfig+0x128>)
 8006164:	689b      	ldr	r3, [r3, #8]
 8006166:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800616a:	5cd3      	ldrb	r3, [r2, r3]
 800616c:	40d8      	lsrs	r0, r3
 800616e:	4b33      	ldr	r3, [pc, #204]	@ (800623c <HAL_RCC_ClockConfig+0x12c>)
 8006170:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8006172:	4b33      	ldr	r3, [pc, #204]	@ (8006240 <HAL_RCC_ClockConfig+0x130>)
 8006174:	6818      	ldr	r0, [r3, #0]
 8006176:	f7fb fe43 	bl	8001e00 <HAL_InitTick>
  return HAL_OK;
 800617a:	2000      	movs	r0, #0
 800617c:	e7ce      	b.n	800611c <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800617e:	b2ca      	uxtb	r2, r1
 8006180:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006182:	681b      	ldr	r3, [r3, #0]
 8006184:	f003 030f 	and.w	r3, r3, #15
 8006188:	428b      	cmp	r3, r1
 800618a:	d1c6      	bne.n	800611a <HAL_RCC_ClockConfig+0xa>
 800618c:	e7ce      	b.n	800612c <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800618e:	4b29      	ldr	r3, [pc, #164]	@ (8006234 <HAL_RCC_ClockConfig+0x124>)
 8006190:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8006194:	bf1e      	ittt	ne
 8006196:	689a      	ldrne	r2, [r3, #8]
 8006198:	f442 52e0 	orrne.w	r2, r2, #7168	@ 0x1c00
 800619c:	609a      	strne	r2, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800619e:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80061a0:	bf42      	ittt	mi
 80061a2:	689a      	ldrmi	r2, [r3, #8]
 80061a4:	f442 4260 	orrmi.w	r2, r2, #57344	@ 0xe000
 80061a8:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80061aa:	689a      	ldr	r2, [r3, #8]
 80061ac:	68a0      	ldr	r0, [r4, #8]
 80061ae:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 80061b2:	4302      	orrs	r2, r0
 80061b4:	609a      	str	r2, [r3, #8]
 80061b6:	e7bc      	b.n	8006132 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80061b8:	6862      	ldr	r2, [r4, #4]
 80061ba:	4b1e      	ldr	r3, [pc, #120]	@ (8006234 <HAL_RCC_ClockConfig+0x124>)
 80061bc:	2a01      	cmp	r2, #1
 80061be:	d11c      	bne.n	80061fa <HAL_RCC_ClockConfig+0xea>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80061c0:	681b      	ldr	r3, [r3, #0]
 80061c2:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80061c6:	d0a8      	beq.n	800611a <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80061c8:	4e1a      	ldr	r6, [pc, #104]	@ (8006234 <HAL_RCC_ClockConfig+0x124>)
 80061ca:	68b3      	ldr	r3, [r6, #8]
 80061cc:	f023 0303 	bic.w	r3, r3, #3
 80061d0:	4313      	orrs	r3, r2
 80061d2:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 80061d4:	f7fe fd56 	bl	8004c84 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80061d8:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 80061dc:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80061de:	68b3      	ldr	r3, [r6, #8]
 80061e0:	6862      	ldr	r2, [r4, #4]
 80061e2:	f003 030c 	and.w	r3, r3, #12
 80061e6:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 80061ea:	d0a4      	beq.n	8006136 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80061ec:	f7fe fd4a 	bl	8004c84 <HAL_GetTick>
 80061f0:	1bc0      	subs	r0, r0, r7
 80061f2:	4540      	cmp	r0, r8
 80061f4:	d9f3      	bls.n	80061de <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 80061f6:	2003      	movs	r0, #3
 80061f8:	e790      	b.n	800611c <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80061fa:	1e91      	subs	r1, r2, #2
 80061fc:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80061fe:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006200:	d802      	bhi.n	8006208 <HAL_RCC_ClockConfig+0xf8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006202:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 8006206:	e7de      	b.n	80061c6 <HAL_RCC_ClockConfig+0xb6>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006208:	f013 0f02 	tst.w	r3, #2
 800620c:	e7db      	b.n	80061c6 <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800620e:	b2ea      	uxtb	r2, r5
 8006210:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006212:	681b      	ldr	r3, [r3, #0]
 8006214:	f003 030f 	and.w	r3, r3, #15
 8006218:	42ab      	cmp	r3, r5
 800621a:	f47f af7e 	bne.w	800611a <HAL_RCC_ClockConfig+0xa>
 800621e:	e790      	b.n	8006142 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8006220:	4904      	ldr	r1, [pc, #16]	@ (8006234 <HAL_RCC_ClockConfig+0x124>)
 8006222:	68e0      	ldr	r0, [r4, #12]
 8006224:	688b      	ldr	r3, [r1, #8]
 8006226:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 800622a:	4303      	orrs	r3, r0
 800622c:	608b      	str	r3, [r1, #8]
 800622e:	e78b      	b.n	8006148 <HAL_RCC_ClockConfig+0x38>
 8006230:	40023c00 	.word	0x40023c00
 8006234:	40023800 	.word	0x40023800
 8006238:	0801dac0 	.word	0x0801dac0
 800623c:	2000007c 	.word	0x2000007c
 8006240:	20000084 	.word	0x20000084

08006244 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8006244:	4b04      	ldr	r3, [pc, #16]	@ (8006258 <HAL_RCC_GetPCLK1Freq+0x14>)
 8006246:	4a05      	ldr	r2, [pc, #20]	@ (800625c <HAL_RCC_GetPCLK1Freq+0x18>)
 8006248:	689b      	ldr	r3, [r3, #8]
 800624a:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800624e:	5cd3      	ldrb	r3, [r2, r3]
 8006250:	4a03      	ldr	r2, [pc, #12]	@ (8006260 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8006252:	6810      	ldr	r0, [r2, #0]
}
 8006254:	40d8      	lsrs	r0, r3
 8006256:	4770      	bx	lr
 8006258:	40023800 	.word	0x40023800
 800625c:	0801dab8 	.word	0x0801dab8
 8006260:	2000007c 	.word	0x2000007c

08006264 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8006264:	230f      	movs	r3, #15
 8006266:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8006268:	4b0b      	ldr	r3, [pc, #44]	@ (8006298 <HAL_RCC_GetClockConfig+0x34>)
 800626a:	689a      	ldr	r2, [r3, #8]
 800626c:	f002 0203 	and.w	r2, r2, #3
 8006270:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8006272:	689a      	ldr	r2, [r3, #8]
 8006274:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 8006278:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800627a:	689a      	ldr	r2, [r3, #8]
 800627c:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 8006280:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8006282:	689b      	ldr	r3, [r3, #8]
 8006284:	08db      	lsrs	r3, r3, #3
 8006286:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 800628a:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800628c:	4b03      	ldr	r3, [pc, #12]	@ (800629c <HAL_RCC_GetClockConfig+0x38>)
 800628e:	681b      	ldr	r3, [r3, #0]
 8006290:	f003 030f 	and.w	r3, r3, #15
 8006294:	600b      	str	r3, [r1, #0]
}
 8006296:	4770      	bx	lr
 8006298:	40023800 	.word	0x40023800
 800629c:	40023c00 	.word	0x40023c00

080062a0 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 80062a0:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80062a2:	f013 0f43 	tst.w	r3, #67	@ 0x43
{
 80062a6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80062a8:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80062aa:	f040 8088 	bne.w	80063be <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 80062ae:	6823      	ldr	r3, [r4, #0]
 80062b0:	f013 0f0c 	tst.w	r3, #12
 80062b4:	d045      	beq.n	8006342 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 80062b6:	4b8c      	ldr	r3, [pc, #560]	@ (80064e8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80062b8:	4d8c      	ldr	r5, [pc, #560]	@ (80064ec <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_DISABLE();
 80062ba:	2200      	movs	r2, #0
 80062bc:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 80062be:	f7fe fce1 	bl	8004c84 <HAL_GetTick>
 80062c2:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80062c4:	682b      	ldr	r3, [r5, #0]
 80062c6:	0099      	lsls	r1, r3, #2
 80062c8:	f100 80cb 	bmi.w	8006462 <HAL_RCCEx_PeriphCLKConfig+0x1c2>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 80062cc:	6821      	ldr	r1, [r4, #0]
 80062ce:	074a      	lsls	r2, r1, #29
 80062d0:	d515      	bpl.n	80062fe <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80062d2:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80062d6:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80062da:	061b      	lsls	r3, r3, #24
 80062dc:	f002 42e0 	and.w	r2, r2, #1879048192	@ 0x70000000
 80062e0:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80062e4:	4313      	orrs	r3, r2
 80062e6:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 80062ea:	f8d5 308c 	ldr.w	r3, [r5, #140]	@ 0x8c
 80062ee:	6a22      	ldr	r2, [r4, #32]
 80062f0:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 80062f4:	3a01      	subs	r2, #1
 80062f6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80062fa:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80062fe:	070b      	lsls	r3, r1, #28
 8006300:	d514      	bpl.n	800632c <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006302:	4a7a      	ldr	r2, [pc, #488]	@ (80064ec <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8006304:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006306:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800630a:	6920      	ldr	r0, [r4, #16]
 800630c:	071b      	lsls	r3, r3, #28
 800630e:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 8006312:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006316:	430b      	orrs	r3, r1
 8006318:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800631c:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 8006320:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8006322:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8006326:	430b      	orrs	r3, r1
 8006328:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 800632c:	4b6e      	ldr	r3, [pc, #440]	@ (80064e8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800632e:	4e6f      	ldr	r6, [pc, #444]	@ (80064ec <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_ENABLE();
 8006330:	2201      	movs	r2, #1
 8006332:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 8006334:	f7fe fca6 	bl	8004c84 <HAL_GetTick>
 8006338:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800633a:	6833      	ldr	r3, [r6, #0]
 800633c:	009f      	lsls	r7, r3, #2
 800633e:	f140 8097 	bpl.w	8006470 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8006342:	6823      	ldr	r3, [r4, #0]
 8006344:	0698      	lsls	r0, r3, #26
 8006346:	d534      	bpl.n	80063b2 <HAL_RCCEx_PeriphCLKConfig+0x112>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8006348:	2300      	movs	r3, #0
 800634a:	9301      	str	r3, [sp, #4]
 800634c:	4b67      	ldr	r3, [pc, #412]	@ (80064ec <HAL_RCCEx_PeriphCLKConfig+0x24c>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 800634e:	4d68      	ldr	r5, [pc, #416]	@ (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8006350:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8006352:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8006356:	641a      	str	r2, [r3, #64]	@ 0x40
 8006358:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800635a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800635e:	9301      	str	r3, [sp, #4]
 8006360:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8006362:	682b      	ldr	r3, [r5, #0]
 8006364:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006368:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 800636a:	f7fe fc8b 	bl	8004c84 <HAL_GetTick>
 800636e:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8006370:	682b      	ldr	r3, [r5, #0]
 8006372:	05d8      	lsls	r0, r3, #23
 8006374:	f140 8083 	bpl.w	800647e <HAL_RCCEx_PeriphCLKConfig+0x1de>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006378:	4d5c      	ldr	r5, [pc, #368]	@ (80064ec <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800637a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800637c:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800637e:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 8006382:	f040 8083 	bne.w	800648c <HAL_RCCEx_PeriphCLKConfig+0x1ec>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006386:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8006388:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 800638c:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 8006390:	4a56      	ldr	r2, [pc, #344]	@ (80064ec <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 8006392:	f040 809e 	bne.w	80064d2 <HAL_RCCEx_PeriphCLKConfig+0x232>
 8006396:	6891      	ldr	r1, [r2, #8]
 8006398:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 800639c:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 80063a0:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 80063a4:	4301      	orrs	r1, r0
 80063a6:	6091      	str	r1, [r2, #8]
 80063a8:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 80063aa:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80063ae:	430b      	orrs	r3, r1
 80063b0:	6713      	str	r3, [r2, #112]	@ 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 80063b2:	6823      	ldr	r3, [r4, #0]
 80063b4:	06db      	lsls	r3, r3, #27
 80063b6:	f100 8090 	bmi.w	80064da <HAL_RCCEx_PeriphCLKConfig+0x23a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
 80063ba:	2000      	movs	r0, #0
 80063bc:	e04f      	b.n	800645e <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 80063be:	4b4a      	ldr	r3, [pc, #296]	@ (80064e8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80063c0:	4e4a      	ldr	r6, [pc, #296]	@ (80064ec <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_DISABLE();
 80063c2:	2200      	movs	r2, #0
 80063c4:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 80063c6:	f7fe fc5d 	bl	8004c84 <HAL_GetTick>
 80063ca:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80063cc:	6833      	ldr	r3, [r6, #0]
 80063ce:	011f      	lsls	r7, r3, #4
 80063d0:	d43f      	bmi.n	8006452 <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80063d2:	6821      	ldr	r1, [r4, #0]
 80063d4:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 80063d6:	bf41      	itttt	mi
 80063d8:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 80063dc:	071b      	lslmi	r3, r3, #28
 80063de:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 80063e2:	f8c6 3084 	strmi.w	r3, [r6, #132]	@ 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 80063e6:	078a      	lsls	r2, r1, #30
 80063e8:	d515      	bpl.n	8006416 <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80063ea:	4a40      	ldr	r2, [pc, #256]	@ (80064ec <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80063ec:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80063ee:	f8d2 0084 	ldr.w	r0, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80063f2:	6865      	ldr	r5, [r4, #4]
 80063f4:	061b      	lsls	r3, r3, #24
 80063f6:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 80063fa:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 80063fe:	4303      	orrs	r3, r0
 8006400:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8006404:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 8006408:	69e3      	ldr	r3, [r4, #28]
 800640a:	f020 001f 	bic.w	r0, r0, #31
 800640e:	3b01      	subs	r3, #1
 8006410:	4303      	orrs	r3, r0
 8006412:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8006416:	064b      	lsls	r3, r1, #25
 8006418:	d50a      	bpl.n	8006430 <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800641a:	68e3      	ldr	r3, [r4, #12]
 800641c:	6862      	ldr	r2, [r4, #4]
 800641e:	061b      	lsls	r3, r3, #24
 8006420:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006424:	68a2      	ldr	r2, [r4, #8]
 8006426:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800642a:	4a30      	ldr	r2, [pc, #192]	@ (80064ec <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800642c:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8006430:	4b2d      	ldr	r3, [pc, #180]	@ (80064e8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006432:	4e2e      	ldr	r6, [pc, #184]	@ (80064ec <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_ENABLE();
 8006434:	2201      	movs	r2, #1
 8006436:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 8006438:	f7fe fc24 	bl	8004c84 <HAL_GetTick>
 800643c:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800643e:	6833      	ldr	r3, [r6, #0]
 8006440:	011f      	lsls	r7, r3, #4
 8006442:	f53f af34 	bmi.w	80062ae <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006446:	f7fe fc1d 	bl	8004c84 <HAL_GetTick>
 800644a:	1b40      	subs	r0, r0, r5
 800644c:	2802      	cmp	r0, #2
 800644e:	d9f6      	bls.n	800643e <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8006450:	e004      	b.n	800645c <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006452:	f7fe fc17 	bl	8004c84 <HAL_GetTick>
 8006456:	1b40      	subs	r0, r0, r5
 8006458:	2802      	cmp	r0, #2
 800645a:	d9b7      	bls.n	80063cc <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 800645c:	2003      	movs	r0, #3
}
 800645e:	b003      	add	sp, #12
 8006460:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006462:	f7fe fc0f 	bl	8004c84 <HAL_GetTick>
 8006466:	1b80      	subs	r0, r0, r6
 8006468:	2802      	cmp	r0, #2
 800646a:	f67f af2b 	bls.w	80062c4 <HAL_RCCEx_PeriphCLKConfig+0x24>
 800646e:	e7f5      	b.n	800645c <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006470:	f7fe fc08 	bl	8004c84 <HAL_GetTick>
 8006474:	1b40      	subs	r0, r0, r5
 8006476:	2802      	cmp	r0, #2
 8006478:	f67f af5f 	bls.w	800633a <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800647c:	e7ee      	b.n	800645c <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800647e:	f7fe fc01 	bl	8004c84 <HAL_GetTick>
 8006482:	1b80      	subs	r0, r0, r6
 8006484:	2802      	cmp	r0, #2
 8006486:	f67f af73 	bls.w	8006370 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 800648a:	e7e7      	b.n	800645c <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800648c:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 8006490:	4293      	cmp	r3, r2
 8006492:	f43f af78 	beq.w	8006386 <HAL_RCCEx_PeriphCLKConfig+0xe6>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006496:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8006498:	4a13      	ldr	r2, [pc, #76]	@ (80064e8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800649a:	2101      	movs	r1, #1
 800649c:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80064a0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 80064a4:	2100      	movs	r1, #0
 80064a6:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      RCC->BDCR = tmpreg1;
 80064aa:	672b      	str	r3, [r5, #112]	@ 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80064ac:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80064ae:	07d9      	lsls	r1, r3, #31
 80064b0:	f57f af69 	bpl.w	8006386 <HAL_RCCEx_PeriphCLKConfig+0xe6>
        tickstart = HAL_GetTick();
 80064b4:	f7fe fbe6 	bl	8004c84 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80064b8:	f241 3788 	movw	r7, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 80064bc:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80064be:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80064c0:	079a      	lsls	r2, r3, #30
 80064c2:	f53f af60 	bmi.w	8006386 <HAL_RCCEx_PeriphCLKConfig+0xe6>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80064c6:	f7fe fbdd 	bl	8004c84 <HAL_GetTick>
 80064ca:	1b80      	subs	r0, r0, r6
 80064cc:	42b8      	cmp	r0, r7
 80064ce:	d9f6      	bls.n	80064be <HAL_RCCEx_PeriphCLKConfig+0x21e>
 80064d0:	e7c4      	b.n	800645c <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80064d2:	6891      	ldr	r1, [r2, #8]
 80064d4:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 80064d8:	e765      	b.n	80063a6 <HAL_RCCEx_PeriphCLKConfig+0x106>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 80064da:	4b06      	ldr	r3, [pc, #24]	@ (80064f4 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 80064dc:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 80064e0:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
 80064e4:	e769      	b.n	80063ba <HAL_RCCEx_PeriphCLKConfig+0x11a>
 80064e6:	bf00      	nop
 80064e8:	42470000 	.word	0x42470000
 80064ec:	40023800 	.word	0x40023800
 80064f0:	40007000 	.word	0x40007000
 80064f4:	42471000 	.word	0x42471000

080064f8 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 80064f8:	b538      	push	{r3, r4, r5, lr}
 80064fa:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 80064fc:	4604      	mov	r4, r0
 80064fe:	b1c8      	cbz	r0, 8006534 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8006500:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8006504:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006508:	b91b      	cbnz	r3, 8006512 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800650a:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800650e:	f7fb fc0b 	bl	8001d28 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006512:	2302      	movs	r3, #2
 8006514:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006518:	1d21      	adds	r1, r4, #4
 800651a:	6820      	ldr	r0, [r4, #0]
 800651c:	f000 fcfe 	bl	8006f1c <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8006520:	6862      	ldr	r2, [r4, #4]
 8006522:	6820      	ldr	r0, [r4, #0]
 8006524:	4629      	mov	r1, r5
 8006526:	f000 fd31 	bl	8006f8c <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800652a:	2301      	movs	r3, #1
 800652c:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  return HAL_OK;
 8006530:	2000      	movs	r0, #0
}
 8006532:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006534:	2001      	movs	r0, #1
 8006536:	e7fc      	b.n	8006532 <HAL_SDRAM_Init+0x3a>

08006538 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8006538:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800653a:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800653e:	2b02      	cmp	r3, #2
{
 8006540:	4605      	mov	r5, r0
 8006542:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8006544:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 8006546:	d012      	beq.n	800656e <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8006548:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 800654c:	2c01      	cmp	r4, #1
 800654e:	d10f      	bne.n	8006570 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006550:	2302      	movs	r3, #2
 8006552:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8006556:	6828      	ldr	r0, [r5, #0]
 8006558:	f000 fd4e 	bl	8006ff8 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800655c:	6833      	ldr	r3, [r6, #0]
 800655e:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006560:	bf06      	itte	eq
 8006562:	2305      	moveq	r3, #5
 8006564:	f885 302c 	strbeq.w	r3, [r5, #44]	@ 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 8006568:	f885 402c 	strbne.w	r4, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800656c:	2000      	movs	r0, #0
}
 800656e:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 8006570:	2001      	movs	r0, #1
 8006572:	e7fc      	b.n	800656e <HAL_SDRAM_SendCommand+0x36>

08006574 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8006574:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006576:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800657a:	2b02      	cmp	r3, #2
{
 800657c:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800657e:	b2d8      	uxtb	r0, r3
 8006580:	d00d      	beq.n	800659e <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8006582:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 8006586:	2b01      	cmp	r3, #1
 8006588:	b2dd      	uxtb	r5, r3
 800658a:	d109      	bne.n	80065a0 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800658c:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800658e:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006590:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8006594:	f000 fd54 	bl	8007040 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8006598:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800659c:	2000      	movs	r0, #0
}
 800659e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80065a0:	2001      	movs	r0, #1
 80065a2:	e7fc      	b.n	800659e <HAL_SDRAM_ProgramRefreshRate+0x2a>

080065a4 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 80065a4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80065a8:	461c      	mov	r4, r3
 80065aa:	4616      	mov	r6, r2
 80065ac:	460f      	mov	r7, r1
 80065ae:	4605      	mov	r5, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 80065b0:	f7fe fb68 	bl	8004c84 <HAL_GetTick>
 80065b4:	4434      	add	r4, r6
 80065b6:	1a24      	subs	r4, r4, r0
  tmp_tickstart = HAL_GetTick();
 80065b8:	f7fe fb64 	bl	8004c84 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 80065bc:	4b24      	ldr	r3, [pc, #144]	@ (8006650 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xac>)
 80065be:	681b      	ldr	r3, [r3, #0]
 80065c0:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 80065c4:	4363      	muls	r3, r4
  tmp_tickstart = HAL_GetTick();
 80065c6:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 80065c8:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 80065ca:	682a      	ldr	r2, [r5, #0]
 80065cc:	6893      	ldr	r3, [r2, #8]
 80065ce:	ea37 0303 	bics.w	r3, r7, r3
 80065d2:	d001      	beq.n	80065d8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x34>
      }
      count--;
    }
  }

  return HAL_OK;
 80065d4:	2000      	movs	r0, #0
 80065d6:	e02e      	b.n	8006636 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x92>
    if (Timeout != HAL_MAX_DELAY)
 80065d8:	1c73      	adds	r3, r6, #1
 80065da:	d0f7      	beq.n	80065cc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x28>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 80065dc:	f7fe fb52 	bl	8004c84 <HAL_GetTick>
 80065e0:	eba0 0008 	sub.w	r0, r0, r8
 80065e4:	42a0      	cmp	r0, r4
 80065e6:	d329      	bcc.n	800663c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x98>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 80065e8:	682b      	ldr	r3, [r5, #0]
 80065ea:	685a      	ldr	r2, [r3, #4]
 80065ec:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 80065f0:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80065f2:	686a      	ldr	r2, [r5, #4]
 80065f4:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 80065f8:	d10a      	bne.n	8006610 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6c>
 80065fa:	68aa      	ldr	r2, [r5, #8]
 80065fc:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 8006600:	d002      	beq.n	8006608 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x64>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006602:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8006606:	d103      	bne.n	8006610 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6c>
          __HAL_SPI_DISABLE(hspi);
 8006608:	681a      	ldr	r2, [r3, #0]
 800660a:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800660e:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8006610:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 8006612:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 8006616:	d107      	bne.n	8006628 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x84>
          SPI_RESET_CRC(hspi);
 8006618:	681a      	ldr	r2, [r3, #0]
 800661a:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800661e:	601a      	str	r2, [r3, #0]
 8006620:	681a      	ldr	r2, [r3, #0]
 8006622:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8006626:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8006628:	2301      	movs	r3, #1
 800662a:	f885 3051 	strb.w	r3, [r5, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 800662e:	2300      	movs	r3, #0
 8006630:	f885 3050 	strb.w	r3, [r5, #80]	@ 0x50
        return HAL_TIMEOUT;
 8006634:	2003      	movs	r0, #3
}
 8006636:	b002      	add	sp, #8
 8006638:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if (count == 0U)
 800663c:	9a01      	ldr	r2, [sp, #4]
      count--;
 800663e:	9b01      	ldr	r3, [sp, #4]
      if (count == 0U)
 8006640:	2a00      	cmp	r2, #0
      count--;
 8006642:	f103 33ff 	add.w	r3, r3, #4294967295
 8006646:	9301      	str	r3, [sp, #4]
 8006648:	bf08      	it	eq
 800664a:	4614      	moveq	r4, r2
 800664c:	e7bd      	b.n	80065ca <SPI_WaitFlagStateUntilTimeout.constprop.0+0x26>
 800664e:	bf00      	nop
 8006650:	2000007c 	.word	0x2000007c

08006654 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8006654:	b538      	push	{r3, r4, r5, lr}
 8006656:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006658:	6842      	ldr	r2, [r0, #4]
 800665a:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
{
 800665e:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006660:	d006      	beq.n	8006670 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006662:	460a      	mov	r2, r1
 8006664:	2101      	movs	r1, #1
 8006666:	f7ff ff9d 	bl	80065a4 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800666a:	b9b8      	cbnz	r0, 800669c <SPI_EndRxTransaction+0x48>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800666c:	2000      	movs	r0, #0
}
 800666e:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006670:	6882      	ldr	r2, [r0, #8]
 8006672:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 8006676:	d002      	beq.n	800667e <SPI_EndRxTransaction+0x2a>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006678:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 800667c:	d107      	bne.n	800668e <SPI_EndRxTransaction+0x3a>
    __HAL_SPI_DISABLE(hspi);
 800667e:	6825      	ldr	r5, [r4, #0]
 8006680:	6828      	ldr	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8006682:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
    __HAL_SPI_DISABLE(hspi);
 8006686:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 800668a:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800668c:	d003      	beq.n	8006696 <SPI_EndRxTransaction+0x42>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800668e:	460a      	mov	r2, r1
 8006690:	2180      	movs	r1, #128	@ 0x80
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006692:	4620      	mov	r0, r4
 8006694:	e7e7      	b.n	8006666 <SPI_EndRxTransaction+0x12>
 8006696:	460a      	mov	r2, r1
 8006698:	2101      	movs	r1, #1
 800669a:	e7fa      	b.n	8006692 <SPI_EndRxTransaction+0x3e>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800669c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800669e:	f043 0320 	orr.w	r3, r3, #32
 80066a2:	6563      	str	r3, [r4, #84]	@ 0x54
        return HAL_TIMEOUT;
 80066a4:	2003      	movs	r0, #3
 80066a6:	e7e2      	b.n	800666e <SPI_EndRxTransaction+0x1a>

080066a8 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 80066a8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80066aa:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 80066ac:	4a12      	ldr	r2, [pc, #72]	@ (80066f8 <SPI_EndRxTxTransaction+0x50>)
 80066ae:	6815      	ldr	r5, [r2, #0]
 80066b0:	4a12      	ldr	r2, [pc, #72]	@ (80066fc <SPI_EndRxTxTransaction+0x54>)
 80066b2:	fbb5 f5f2 	udiv	r5, r5, r2
 80066b6:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80066ba:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80066bc:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 80066be:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80066c0:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
{
 80066c4:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80066c6:	d10b      	bne.n	80066e0 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80066c8:	460a      	mov	r2, r1
 80066ca:	2180      	movs	r1, #128	@ 0x80
 80066cc:	f7ff ff6a 	bl	80065a4 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 80066d0:	b178      	cbz	r0, 80066f2 <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80066d2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80066d4:	f043 0320 	orr.w	r3, r3, #32
 80066d8:	6563      	str	r3, [r4, #84]	@ 0x54
      return HAL_TIMEOUT;
 80066da:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 80066dc:	b003      	add	sp, #12
 80066de:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 80066e0:	9b01      	ldr	r3, [sp, #4]
 80066e2:	b133      	cbz	r3, 80066f2 <SPI_EndRxTxTransaction+0x4a>
      count--;
 80066e4:	9b01      	ldr	r3, [sp, #4]
 80066e6:	3b01      	subs	r3, #1
 80066e8:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 80066ea:	6823      	ldr	r3, [r4, #0]
 80066ec:	689b      	ldr	r3, [r3, #8]
 80066ee:	061b      	lsls	r3, r3, #24
 80066f0:	d4f6      	bmi.n	80066e0 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 80066f2:	2000      	movs	r0, #0
 80066f4:	e7f2      	b.n	80066dc <SPI_EndRxTxTransaction+0x34>
 80066f6:	bf00      	nop
 80066f8:	2000007c 	.word	0x2000007c
 80066fc:	016e3600 	.word	0x016e3600

08006700 <HAL_SPI_Init>:
{
 8006700:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8006702:	4604      	mov	r4, r0
 8006704:	2800      	cmp	r0, #0
 8006706:	d055      	beq.n	80067b4 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8006708:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800670a:	2b00      	cmp	r3, #0
 800670c:	d14e      	bne.n	80067ac <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800670e:	6842      	ldr	r2, [r0, #4]
 8006710:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8006714:	d000      	beq.n	8006718 <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8006716:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8006718:	2300      	movs	r3, #0
 800671a:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800671c:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8006720:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006724:	b923      	cbnz	r3, 8006730 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 8006726:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
    HAL_SPI_MspInit(hspi);
 800672a:	4620      	mov	r0, r4
 800672c:	f7fb fac6 	bl	8001cbc <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8006730:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8006732:	68a0      	ldr	r0, [r4, #8]
 8006734:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8006736:	2302      	movs	r3, #2
 8006738:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_SPI_DISABLE(hspi);
 800673c:	680b      	ldr	r3, [r1, #0]
 800673e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006742:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8006744:	6863      	ldr	r3, [r4, #4]
 8006746:	f400 4004 	and.w	r0, r0, #33792	@ 0x8400
 800674a:	f403 7382 	and.w	r3, r3, #260	@ 0x104
 800674e:	4303      	orrs	r3, r0
 8006750:	68e0      	ldr	r0, [r4, #12]
 8006752:	f400 6000 	and.w	r0, r0, #2048	@ 0x800
 8006756:	4303      	orrs	r3, r0
 8006758:	6920      	ldr	r0, [r4, #16]
 800675a:	f000 0002 	and.w	r0, r0, #2
 800675e:	4303      	orrs	r3, r0
 8006760:	6960      	ldr	r0, [r4, #20]
 8006762:	f000 0001 	and.w	r0, r0, #1
 8006766:	4303      	orrs	r3, r0
 8006768:	f402 7000 	and.w	r0, r2, #512	@ 0x200
 800676c:	4303      	orrs	r3, r0
 800676e:	69e0      	ldr	r0, [r4, #28]
 8006770:	f000 0038 	and.w	r0, r0, #56	@ 0x38
 8006774:	4303      	orrs	r3, r0
 8006776:	6a20      	ldr	r0, [r4, #32]
 8006778:	f000 0080 	and.w	r0, r0, #128	@ 0x80
 800677c:	4303      	orrs	r3, r0
 800677e:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8006780:	f400 5000 	and.w	r0, r0, #8192	@ 0x2000
 8006784:	4303      	orrs	r3, r0
 8006786:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8006788:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800678a:	0c12      	lsrs	r2, r2, #16
 800678c:	f003 0310 	and.w	r3, r3, #16
 8006790:	f002 0204 	and.w	r2, r2, #4
 8006794:	431a      	orrs	r2, r3
 8006796:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8006798:	69cb      	ldr	r3, [r1, #28]
 800679a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800679e:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80067a0:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 80067a2:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80067a4:	6560      	str	r0, [r4, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 80067a6:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
}
 80067aa:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 80067ac:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 80067ae:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80067b2:	e7b1      	b.n	8006718 <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 80067b4:	2001      	movs	r0, #1
 80067b6:	e7f8      	b.n	80067aa <HAL_SPI_Init+0xaa>

080067b8 <HAL_SPI_Transmit>:
{
 80067b8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80067bc:	461f      	mov	r7, r3
  __HAL_LOCK(hspi);
 80067be:	f890 3050 	ldrb.w	r3, [r0, #80]	@ 0x50
 80067c2:	2b01      	cmp	r3, #1
{
 80067c4:	4604      	mov	r4, r0
 80067c6:	460d      	mov	r5, r1
 80067c8:	4690      	mov	r8, r2
  __HAL_LOCK(hspi);
 80067ca:	f000 80a0 	beq.w	800690e <HAL_SPI_Transmit+0x156>
 80067ce:	2301      	movs	r3, #1
 80067d0:	f880 3050 	strb.w	r3, [r0, #80]	@ 0x50
  tickstart = HAL_GetTick();
 80067d4:	f7fe fa56 	bl	8004c84 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 80067d8:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 80067dc:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 80067de:	4681      	mov	r9, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 80067e0:	b2d8      	uxtb	r0, r3
 80067e2:	f040 8092 	bne.w	800690a <HAL_SPI_Transmit+0x152>
  if ((pData == NULL) || (Size == 0U))
 80067e6:	2d00      	cmp	r5, #0
 80067e8:	d061      	beq.n	80068ae <HAL_SPI_Transmit+0xf6>
 80067ea:	f1b8 0f00 	cmp.w	r8, #0
 80067ee:	d05e      	beq.n	80068ae <HAL_SPI_Transmit+0xf6>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80067f0:	2303      	movs	r3, #3
 80067f2:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80067f6:	2300      	movs	r3, #0
 80067f8:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->RxISR       = NULL;
 80067fa:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->TxXferCount = Size;
 80067fe:	f8a4 8036 	strh.w	r8, [r4, #54]	@ 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8006802:	63a3      	str	r3, [r4, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 8006804:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 8006806:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006808:	68a3      	ldr	r3, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800680a:	6826      	ldr	r6, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800680c:	6325      	str	r5, [r4, #48]	@ 0x30
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800680e:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
  hspi->TxXferSize  = Size;
 8006812:	f8a4 8034 	strh.w	r8, [r4, #52]	@ 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006816:	d107      	bne.n	8006828 <HAL_SPI_Transmit+0x70>
    __HAL_SPI_DISABLE(hspi);
 8006818:	6833      	ldr	r3, [r6, #0]
 800681a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800681e:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 8006820:	6833      	ldr	r3, [r6, #0]
 8006822:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8006826:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006828:	6833      	ldr	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800682a:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800682c:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 800682e:	bf5e      	ittt	pl
 8006830:	6833      	ldrpl	r3, [r6, #0]
 8006832:	f043 0340 	orrpl.w	r3, r3, #64	@ 0x40
 8006836:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006838:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800683c:	6863      	ldr	r3, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800683e:	d13f      	bne.n	80068c0 <HAL_SPI_Transmit+0x108>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006840:	b113      	cbz	r3, 8006848 <HAL_SPI_Transmit+0x90>
 8006842:	f1b8 0f01 	cmp.w	r8, #1
 8006846:	d107      	bne.n	8006858 <HAL_SPI_Transmit+0xa0>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006848:	f835 3b02 	ldrh.w	r3, [r5], #2
 800684c:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800684e:	6325      	str	r5, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8006850:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006852:	3b01      	subs	r3, #1
 8006854:	b29b      	uxth	r3, r3
 8006856:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 8006858:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800685a:	b29b      	uxth	r3, r3
 800685c:	b9a3      	cbnz	r3, 8006888 <HAL_SPI_Transmit+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800685e:	464a      	mov	r2, r9
 8006860:	4639      	mov	r1, r7
 8006862:	4620      	mov	r0, r4
 8006864:	f7ff ff20 	bl	80066a8 <SPI_EndRxTxTransaction>
 8006868:	2800      	cmp	r0, #0
 800686a:	d14b      	bne.n	8006904 <HAL_SPI_Transmit+0x14c>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800686c:	68a3      	ldr	r3, [r4, #8]
 800686e:	b933      	cbnz	r3, 800687e <HAL_SPI_Transmit+0xc6>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006870:	9301      	str	r3, [sp, #4]
 8006872:	6823      	ldr	r3, [r4, #0]
 8006874:	68da      	ldr	r2, [r3, #12]
 8006876:	9201      	str	r2, [sp, #4]
 8006878:	689b      	ldr	r3, [r3, #8]
 800687a:	9301      	str	r3, [sp, #4]
 800687c:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800687e:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 8006880:	3800      	subs	r0, #0
 8006882:	bf18      	it	ne
 8006884:	2001      	movne	r0, #1
error:
 8006886:	e012      	b.n	80068ae <HAL_SPI_Transmit+0xf6>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006888:	6822      	ldr	r2, [r4, #0]
 800688a:	6893      	ldr	r3, [r2, #8]
 800688c:	0798      	lsls	r0, r3, #30
 800688e:	d505      	bpl.n	800689c <HAL_SPI_Transmit+0xe4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006890:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006892:	f833 1b02 	ldrh.w	r1, [r3], #2
 8006896:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006898:	6323      	str	r3, [r4, #48]	@ 0x30
 800689a:	e7d9      	b.n	8006850 <HAL_SPI_Transmit+0x98>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800689c:	f7fe f9f2 	bl	8004c84 <HAL_GetTick>
 80068a0:	eba0 0009 	sub.w	r0, r0, r9
 80068a4:	42b8      	cmp	r0, r7
 80068a6:	d3d7      	bcc.n	8006858 <HAL_SPI_Transmit+0xa0>
 80068a8:	1c79      	adds	r1, r7, #1
 80068aa:	d0d5      	beq.n	8006858 <HAL_SPI_Transmit+0xa0>
          errorcode = HAL_TIMEOUT;
 80068ac:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 80068ae:	2301      	movs	r3, #1
 80068b0:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_UNLOCK(hspi);
 80068b4:	2300      	movs	r3, #0
 80068b6:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
}
 80068ba:	b003      	add	sp, #12
 80068bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80068c0:	b113      	cbz	r3, 80068c8 <HAL_SPI_Transmit+0x110>
 80068c2:	f1b8 0f01 	cmp.w	r8, #1
 80068c6:	d108      	bne.n	80068da <HAL_SPI_Transmit+0x122>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80068c8:	782b      	ldrb	r3, [r5, #0]
 80068ca:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 80068cc:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80068ce:	3301      	adds	r3, #1
 80068d0:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 80068d2:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80068d4:	3b01      	subs	r3, #1
 80068d6:	b29b      	uxth	r3, r3
 80068d8:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 80068da:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80068dc:	b29b      	uxth	r3, r3
 80068de:	2b00      	cmp	r3, #0
 80068e0:	d0bd      	beq.n	800685e <HAL_SPI_Transmit+0xa6>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80068e2:	6823      	ldr	r3, [r4, #0]
 80068e4:	689a      	ldr	r2, [r3, #8]
 80068e6:	0792      	lsls	r2, r2, #30
 80068e8:	d503      	bpl.n	80068f2 <HAL_SPI_Transmit+0x13a>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80068ea:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 80068ec:	7812      	ldrb	r2, [r2, #0]
 80068ee:	731a      	strb	r2, [r3, #12]
 80068f0:	e7ec      	b.n	80068cc <HAL_SPI_Transmit+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80068f2:	f7fe f9c7 	bl	8004c84 <HAL_GetTick>
 80068f6:	eba0 0009 	sub.w	r0, r0, r9
 80068fa:	42b8      	cmp	r0, r7
 80068fc:	d3ed      	bcc.n	80068da <HAL_SPI_Transmit+0x122>
 80068fe:	1c7b      	adds	r3, r7, #1
 8006900:	d0eb      	beq.n	80068da <HAL_SPI_Transmit+0x122>
 8006902:	e7d3      	b.n	80068ac <HAL_SPI_Transmit+0xf4>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006904:	2320      	movs	r3, #32
 8006906:	6563      	str	r3, [r4, #84]	@ 0x54
 8006908:	e7b0      	b.n	800686c <HAL_SPI_Transmit+0xb4>
    errorcode = HAL_BUSY;
 800690a:	2002      	movs	r0, #2
 800690c:	e7cf      	b.n	80068ae <HAL_SPI_Transmit+0xf6>
  __HAL_LOCK(hspi);
 800690e:	2002      	movs	r0, #2
 8006910:	e7d3      	b.n	80068ba <HAL_SPI_Transmit+0x102>

08006912 <HAL_SPI_TransmitReceive>:
{
 8006912:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006916:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8006918:	f890 3050 	ldrb.w	r3, [r0, #80]	@ 0x50
{
 800691c:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
  __HAL_LOCK(hspi);
 8006920:	2b01      	cmp	r3, #1
{
 8006922:	4604      	mov	r4, r0
 8006924:	460d      	mov	r5, r1
 8006926:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8006928:	f000 80e3 	beq.w	8006af2 <HAL_SPI_TransmitReceive+0x1e0>
 800692c:	2301      	movs	r3, #1
 800692e:	f880 3050 	strb.w	r3, [r0, #80]	@ 0x50
  tickstart = HAL_GetTick();
 8006932:	f7fe f9a7 	bl	8004c84 <HAL_GetTick>
  tmp_state           = hspi->State;
 8006936:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  tmp_mode            = hspi->Init.Mode;
 800693a:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800693c:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800693e:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 8006940:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006942:	d00a      	beq.n	800695a <HAL_SPI_TransmitReceive+0x48>
 8006944:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8006948:	f040 80d1 	bne.w	8006aee <HAL_SPI_TransmitReceive+0x1dc>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800694c:	68a3      	ldr	r3, [r4, #8]
 800694e:	2b00      	cmp	r3, #0
 8006950:	f040 80cd 	bne.w	8006aee <HAL_SPI_TransmitReceive+0x1dc>
 8006954:	2904      	cmp	r1, #4
 8006956:	f040 80ca 	bne.w	8006aee <HAL_SPI_TransmitReceive+0x1dc>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800695a:	b115      	cbz	r5, 8006962 <HAL_SPI_TransmitReceive+0x50>
 800695c:	f1b9 0f00 	cmp.w	r9, #0
 8006960:	d109      	bne.n	8006976 <HAL_SPI_TransmitReceive+0x64>
    errorcode = HAL_ERROR;
 8006962:	2001      	movs	r0, #1
  hspi->State = HAL_SPI_STATE_READY;
 8006964:	2301      	movs	r3, #1
 8006966:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_UNLOCK(hspi);
 800696a:	2300      	movs	r3, #0
 800696c:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
}
 8006970:	b003      	add	sp, #12
 8006972:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8006976:	2e00      	cmp	r6, #0
 8006978:	d0f3      	beq.n	8006962 <HAL_SPI_TransmitReceive+0x50>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800697a:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800697e:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8006982:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8006984:	bf1c      	itt	ne
 8006986:	2305      	movne	r3, #5
 8006988:	f884 3051 	strbne.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800698c:	2300      	movs	r3, #0
 800698e:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->TxISR       = NULL;
 8006990:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006994:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8006996:	87e6      	strh	r6, [r4, #62]	@ 0x3e
  hspi->TxXferCount = Size;
 8006998:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800699a:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 800699c:	87a6      	strh	r6, [r4, #60]	@ 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800699e:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 80069a0:	bf58      	it	pl
 80069a2:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 80069a4:	6325      	str	r5, [r4, #48]	@ 0x30
    __HAL_SPI_ENABLE(hspi);
 80069a6:	bf58      	it	pl
 80069a8:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
  hspi->TxXferSize  = Size;
 80069ac:	86a6      	strh	r6, [r4, #52]	@ 0x34
    __HAL_SPI_ENABLE(hspi);
 80069ae:	bf58      	it	pl
 80069b0:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80069b2:	68e1      	ldr	r1, [r4, #12]
 80069b4:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 80069b8:	d148      	bne.n	8006a4c <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80069ba:	b10a      	cbz	r2, 80069c0 <HAL_SPI_TransmitReceive+0xae>
 80069bc:	2e01      	cmp	r6, #1
 80069be:	d107      	bne.n	80069d0 <HAL_SPI_TransmitReceive+0xbe>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80069c0:	f835 2b02 	ldrh.w	r2, [r5], #2
 80069c4:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 80069c6:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80069c8:	6325      	str	r5, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 80069ca:	3b01      	subs	r3, #1
 80069cc:	b29b      	uxth	r3, r3
 80069ce:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 80069d0:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80069d2:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80069d4:	b29b      	uxth	r3, r3
 80069d6:	b963      	cbnz	r3, 80069f2 <HAL_SPI_TransmitReceive+0xe0>
 80069d8:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80069da:	b29b      	uxth	r3, r3
 80069dc:	b94b      	cbnz	r3, 80069f2 <HAL_SPI_TransmitReceive+0xe0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80069de:	463a      	mov	r2, r7
 80069e0:	4641      	mov	r1, r8
 80069e2:	4620      	mov	r0, r4
 80069e4:	f7ff fe60 	bl	80066a8 <SPI_EndRxTxTransaction>
 80069e8:	2800      	cmp	r0, #0
 80069ea:	d074      	beq.n	8006ad6 <HAL_SPI_TransmitReceive+0x1c4>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80069ec:	2320      	movs	r3, #32
 80069ee:	6563      	str	r3, [r4, #84]	@ 0x54
    goto error;
 80069f0:	e7b7      	b.n	8006962 <HAL_SPI_TransmitReceive+0x50>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80069f2:	6821      	ldr	r1, [r4, #0]
 80069f4:	688b      	ldr	r3, [r1, #8]
 80069f6:	079a      	lsls	r2, r3, #30
 80069f8:	d50d      	bpl.n	8006a16 <HAL_SPI_TransmitReceive+0x104>
 80069fa:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80069fc:	b29b      	uxth	r3, r3
 80069fe:	b153      	cbz	r3, 8006a16 <HAL_SPI_TransmitReceive+0x104>
 8006a00:	b145      	cbz	r5, 8006a14 <HAL_SPI_TransmitReceive+0x102>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006a02:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006a04:	f833 2b02 	ldrh.w	r2, [r3], #2
 8006a08:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006a0a:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8006a0c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006a0e:	3b01      	subs	r3, #1
 8006a10:	b29b      	uxth	r3, r3
 8006a12:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 0U;
 8006a14:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006a16:	688a      	ldr	r2, [r1, #8]
 8006a18:	f012 0201 	ands.w	r2, r2, #1
 8006a1c:	d00c      	beq.n	8006a38 <HAL_SPI_TransmitReceive+0x126>
 8006a1e:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006a20:	b29b      	uxth	r3, r3
 8006a22:	b14b      	cbz	r3, 8006a38 <HAL_SPI_TransmitReceive+0x126>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006a24:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006a26:	68c9      	ldr	r1, [r1, #12]
 8006a28:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006a2c:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006a2e:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006a30:	3b01      	subs	r3, #1
 8006a32:	b29b      	uxth	r3, r3
 8006a34:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8006a36:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8006a38:	f7fe f924 	bl	8004c84 <HAL_GetTick>
 8006a3c:	1bc0      	subs	r0, r0, r7
 8006a3e:	4540      	cmp	r0, r8
 8006a40:	d3c7      	bcc.n	80069d2 <HAL_SPI_TransmitReceive+0xc0>
 8006a42:	f1b8 3fff 	cmp.w	r8, #4294967295
 8006a46:	d0c4      	beq.n	80069d2 <HAL_SPI_TransmitReceive+0xc0>
        errorcode = HAL_TIMEOUT;
 8006a48:	2003      	movs	r0, #3
 8006a4a:	e78b      	b.n	8006964 <HAL_SPI_TransmitReceive+0x52>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006a4c:	b10a      	cbz	r2, 8006a52 <HAL_SPI_TransmitReceive+0x140>
 8006a4e:	2e01      	cmp	r6, #1
 8006a50:	d108      	bne.n	8006a64 <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006a52:	782a      	ldrb	r2, [r5, #0]
 8006a54:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8006a56:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006a58:	3301      	adds	r3, #1
 8006a5a:	6323      	str	r3, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 8006a5c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006a5e:	3b01      	subs	r3, #1
 8006a60:	b29b      	uxth	r3, r3
 8006a62:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8006a64:	2501      	movs	r5, #1
 8006a66:	e02d      	b.n	8006ac4 <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006a68:	6822      	ldr	r2, [r4, #0]
 8006a6a:	6893      	ldr	r3, [r2, #8]
 8006a6c:	079b      	lsls	r3, r3, #30
 8006a6e:	d50e      	bpl.n	8006a8e <HAL_SPI_TransmitReceive+0x17c>
 8006a70:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006a72:	b29b      	uxth	r3, r3
 8006a74:	b15b      	cbz	r3, 8006a8e <HAL_SPI_TransmitReceive+0x17c>
 8006a76:	b14d      	cbz	r5, 8006a8c <HAL_SPI_TransmitReceive+0x17a>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8006a78:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006a7a:	781b      	ldrb	r3, [r3, #0]
 8006a7c:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8006a7e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006a80:	3301      	adds	r3, #1
 8006a82:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8006a84:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006a86:	3b01      	subs	r3, #1
 8006a88:	b29b      	uxth	r3, r3
 8006a8a:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 0U;
 8006a8c:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006a8e:	6822      	ldr	r2, [r4, #0]
 8006a90:	6891      	ldr	r1, [r2, #8]
 8006a92:	f011 0101 	ands.w	r1, r1, #1
 8006a96:	d00d      	beq.n	8006ab4 <HAL_SPI_TransmitReceive+0x1a2>
 8006a98:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006a9a:	b29b      	uxth	r3, r3
 8006a9c:	b153      	cbz	r3, 8006ab4 <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8006a9e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006aa0:	68d2      	ldr	r2, [r2, #12]
 8006aa2:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8006aa4:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006aa6:	3301      	adds	r3, #1
 8006aa8:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006aaa:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006aac:	3b01      	subs	r3, #1
 8006aae:	b29b      	uxth	r3, r3
 8006ab0:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8006ab2:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8006ab4:	f7fe f8e6 	bl	8004c84 <HAL_GetTick>
 8006ab8:	1bc0      	subs	r0, r0, r7
 8006aba:	4540      	cmp	r0, r8
 8006abc:	d302      	bcc.n	8006ac4 <HAL_SPI_TransmitReceive+0x1b2>
 8006abe:	f1b8 3fff 	cmp.w	r8, #4294967295
 8006ac2:	d1c1      	bne.n	8006a48 <HAL_SPI_TransmitReceive+0x136>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006ac4:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006ac6:	b29b      	uxth	r3, r3
 8006ac8:	2b00      	cmp	r3, #0
 8006aca:	d1cd      	bne.n	8006a68 <HAL_SPI_TransmitReceive+0x156>
 8006acc:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006ace:	b29b      	uxth	r3, r3
 8006ad0:	2b00      	cmp	r3, #0
 8006ad2:	d1c9      	bne.n	8006a68 <HAL_SPI_TransmitReceive+0x156>
 8006ad4:	e783      	b.n	80069de <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006ad6:	68a3      	ldr	r3, [r4, #8]
 8006ad8:	2b00      	cmp	r3, #0
 8006ada:	f47f af43 	bne.w	8006964 <HAL_SPI_TransmitReceive+0x52>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006ade:	6823      	ldr	r3, [r4, #0]
 8006ae0:	9001      	str	r0, [sp, #4]
 8006ae2:	68da      	ldr	r2, [r3, #12]
 8006ae4:	9201      	str	r2, [sp, #4]
 8006ae6:	689b      	ldr	r3, [r3, #8]
 8006ae8:	9301      	str	r3, [sp, #4]
 8006aea:	9b01      	ldr	r3, [sp, #4]
 8006aec:	e73a      	b.n	8006964 <HAL_SPI_TransmitReceive+0x52>
    errorcode = HAL_BUSY;
 8006aee:	2002      	movs	r0, #2
 8006af0:	e738      	b.n	8006964 <HAL_SPI_TransmitReceive+0x52>
  __HAL_LOCK(hspi);
 8006af2:	2002      	movs	r0, #2
 8006af4:	e73c      	b.n	8006970 <HAL_SPI_TransmitReceive+0x5e>

08006af6 <HAL_SPI_Receive>:
{
 8006af6:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006afa:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8006afc:	6843      	ldr	r3, [r0, #4]
 8006afe:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
{
 8006b02:	4604      	mov	r4, r0
 8006b04:	4689      	mov	r9, r1
 8006b06:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8006b08:	d10c      	bne.n	8006b24 <HAL_SPI_Receive+0x2e>
 8006b0a:	6883      	ldr	r3, [r0, #8]
 8006b0c:	b953      	cbnz	r3, 8006b24 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8006b0e:	2304      	movs	r3, #4
 8006b10:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8006b14:	4613      	mov	r3, r2
 8006b16:	9500      	str	r5, [sp, #0]
 8006b18:	460a      	mov	r2, r1
 8006b1a:	f7ff fefa 	bl	8006912 <HAL_SPI_TransmitReceive>
}
 8006b1e:	b003      	add	sp, #12
 8006b20:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 8006b24:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8006b28:	2b01      	cmp	r3, #1
 8006b2a:	d07f      	beq.n	8006c2c <HAL_SPI_Receive+0x136>
 8006b2c:	2301      	movs	r3, #1
 8006b2e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  tickstart = HAL_GetTick();
 8006b32:	f7fe f8a7 	bl	8004c84 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8006b36:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8006b3a:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006b3c:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8006b3e:	b2d8      	uxtb	r0, r3
 8006b40:	d172      	bne.n	8006c28 <HAL_SPI_Receive+0x132>
  if ((pData == NULL) || (Size == 0U))
 8006b42:	f1b9 0f00 	cmp.w	r9, #0
 8006b46:	d05c      	beq.n	8006c02 <HAL_SPI_Receive+0x10c>
 8006b48:	2f00      	cmp	r7, #0
 8006b4a:	d05a      	beq.n	8006c02 <HAL_SPI_Receive+0x10c>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006b4c:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8006b4e:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006b52:	2600      	movs	r6, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8006b54:	2304      	movs	r3, #4
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006b56:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8006b5a:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->TxISR       = NULL;
 8006b5e:	e9c4 6610 	strd	r6, r6, [r4, #64]	@ 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006b62:	6566      	str	r6, [r4, #84]	@ 0x54
    __HAL_SPI_DISABLE(hspi);
 8006b64:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8006b66:	87e7      	strh	r7, [r4, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 8006b68:	87a7      	strh	r7, [r4, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8006b6a:	6326      	str	r6, [r4, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 8006b6c:	86a6      	strh	r6, [r4, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 8006b6e:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006b70:	d107      	bne.n	8006b82 <HAL_SPI_Receive+0x8c>
    __HAL_SPI_DISABLE(hspi);
 8006b72:	681a      	ldr	r2, [r3, #0]
 8006b74:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006b78:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8006b7a:	681a      	ldr	r2, [r3, #0]
 8006b7c:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8006b80:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006b82:	681a      	ldr	r2, [r3, #0]
 8006b84:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8006b86:	bf5e      	ittt	pl
 8006b88:	681a      	ldrpl	r2, [r3, #0]
 8006b8a:	f042 0240 	orrpl.w	r2, r2, #64	@ 0x40
 8006b8e:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8006b90:	68e3      	ldr	r3, [r4, #12]
 8006b92:	b1f3      	cbz	r3, 8006bd2 <HAL_SPI_Receive+0xdc>
    while (hspi->RxXferCount > 0U)
 8006b94:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006b96:	b29b      	uxth	r3, r3
 8006b98:	b1fb      	cbz	r3, 8006bda <HAL_SPI_Receive+0xe4>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006b9a:	6823      	ldr	r3, [r4, #0]
 8006b9c:	689a      	ldr	r2, [r3, #8]
 8006b9e:	07d2      	lsls	r2, r2, #31
 8006ba0:	d536      	bpl.n	8006c10 <HAL_SPI_Receive+0x11a>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006ba2:	68da      	ldr	r2, [r3, #12]
 8006ba4:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006ba6:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006baa:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006bac:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006bae:	3b01      	subs	r3, #1
 8006bb0:	b29b      	uxth	r3, r3
 8006bb2:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8006bb4:	e7ee      	b.n	8006b94 <HAL_SPI_Receive+0x9e>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006bb6:	6823      	ldr	r3, [r4, #0]
 8006bb8:	689a      	ldr	r2, [r3, #8]
 8006bba:	07d0      	lsls	r0, r2, #31
 8006bbc:	d518      	bpl.n	8006bf0 <HAL_SPI_Receive+0xfa>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8006bbe:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8006bc0:	7b1b      	ldrb	r3, [r3, #12]
 8006bc2:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8006bc4:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006bc6:	3301      	adds	r3, #1
 8006bc8:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006bca:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006bcc:	3b01      	subs	r3, #1
 8006bce:	b29b      	uxth	r3, r3
 8006bd0:	87e3      	strh	r3, [r4, #62]	@ 0x3e
    while (hspi->RxXferCount > 0U)
 8006bd2:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006bd4:	b29b      	uxth	r3, r3
 8006bd6:	2b00      	cmp	r3, #0
 8006bd8:	d1ed      	bne.n	8006bb6 <HAL_SPI_Receive+0xc0>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006bda:	4642      	mov	r2, r8
 8006bdc:	4629      	mov	r1, r5
 8006bde:	4620      	mov	r0, r4
 8006be0:	f7ff fd38 	bl	8006654 <SPI_EndRxTransaction>
 8006be4:	b9e8      	cbnz	r0, 8006c22 <HAL_SPI_Receive+0x12c>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006be6:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 8006be8:	3800      	subs	r0, #0
 8006bea:	bf18      	it	ne
 8006bec:	2001      	movne	r0, #1
error :
 8006bee:	e008      	b.n	8006c02 <HAL_SPI_Receive+0x10c>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006bf0:	f7fe f848 	bl	8004c84 <HAL_GetTick>
 8006bf4:	eba0 0008 	sub.w	r0, r0, r8
 8006bf8:	42a8      	cmp	r0, r5
 8006bfa:	d3ea      	bcc.n	8006bd2 <HAL_SPI_Receive+0xdc>
 8006bfc:	1c69      	adds	r1, r5, #1
 8006bfe:	d0e8      	beq.n	8006bd2 <HAL_SPI_Receive+0xdc>
          errorcode = HAL_TIMEOUT;
 8006c00:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8006c02:	2301      	movs	r3, #1
 8006c04:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_UNLOCK(hspi);
 8006c08:	2300      	movs	r3, #0
 8006c0a:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  return errorcode;
 8006c0e:	e786      	b.n	8006b1e <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006c10:	f7fe f838 	bl	8004c84 <HAL_GetTick>
 8006c14:	eba0 0008 	sub.w	r0, r0, r8
 8006c18:	42a8      	cmp	r0, r5
 8006c1a:	d3bb      	bcc.n	8006b94 <HAL_SPI_Receive+0x9e>
 8006c1c:	1c6b      	adds	r3, r5, #1
 8006c1e:	d0b9      	beq.n	8006b94 <HAL_SPI_Receive+0x9e>
 8006c20:	e7ee      	b.n	8006c00 <HAL_SPI_Receive+0x10a>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006c22:	2320      	movs	r3, #32
 8006c24:	6563      	str	r3, [r4, #84]	@ 0x54
 8006c26:	e7de      	b.n	8006be6 <HAL_SPI_Receive+0xf0>
    errorcode = HAL_BUSY;
 8006c28:	2002      	movs	r0, #2
 8006c2a:	e7ea      	b.n	8006c02 <HAL_SPI_Receive+0x10c>
  __HAL_LOCK(hspi);
 8006c2c:	2002      	movs	r0, #2
 8006c2e:	e776      	b.n	8006b1e <HAL_SPI_Receive+0x28>

08006c30 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8006c30:	4770      	bx	lr
	...

08006c34 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8006c34:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8006c38:	2b01      	cmp	r3, #1
 8006c3a:	d130      	bne.n	8006c9e <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006c3c:	2302      	movs	r3, #2
 8006c3e:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8006c42:	6803      	ldr	r3, [r0, #0]
 8006c44:	68da      	ldr	r2, [r3, #12]
 8006c46:	f042 0201 	orr.w	r2, r2, #1
 8006c4a:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006c4c:	4a15      	ldr	r2, [pc, #84]	@ (8006ca4 <HAL_TIM_Base_Start_IT+0x70>)
 8006c4e:	4293      	cmp	r3, r2
 8006c50:	d01a      	beq.n	8006c88 <HAL_TIM_Base_Start_IT+0x54>
 8006c52:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006c56:	d017      	beq.n	8006c88 <HAL_TIM_Base_Start_IT+0x54>
 8006c58:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8006c5c:	4293      	cmp	r3, r2
 8006c5e:	d013      	beq.n	8006c88 <HAL_TIM_Base_Start_IT+0x54>
 8006c60:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006c64:	4293      	cmp	r3, r2
 8006c66:	d00f      	beq.n	8006c88 <HAL_TIM_Base_Start_IT+0x54>
 8006c68:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006c6c:	4293      	cmp	r3, r2
 8006c6e:	d00b      	beq.n	8006c88 <HAL_TIM_Base_Start_IT+0x54>
 8006c70:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8006c74:	4293      	cmp	r3, r2
 8006c76:	d007      	beq.n	8006c88 <HAL_TIM_Base_Start_IT+0x54>
 8006c78:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 8006c7c:	4293      	cmp	r3, r2
 8006c7e:	d003      	beq.n	8006c88 <HAL_TIM_Base_Start_IT+0x54>
 8006c80:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 8006c84:	4293      	cmp	r3, r2
 8006c86:	d104      	bne.n	8006c92 <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006c88:	689a      	ldr	r2, [r3, #8]
 8006c8a:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006c8e:	2a06      	cmp	r2, #6
 8006c90:	d003      	beq.n	8006c9a <HAL_TIM_Base_Start_IT+0x66>
    {
      __HAL_TIM_ENABLE(htim);
 8006c92:	681a      	ldr	r2, [r3, #0]
 8006c94:	f042 0201 	orr.w	r2, r2, #1
 8006c98:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8006c9a:	2000      	movs	r0, #0
 8006c9c:	4770      	bx	lr
    return HAL_ERROR;
 8006c9e:	2001      	movs	r0, #1
}
 8006ca0:	4770      	bx	lr
 8006ca2:	bf00      	nop
 8006ca4:	40010000 	.word	0x40010000

08006ca8 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8006ca8:	4770      	bx	lr

08006caa <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8006caa:	4770      	bx	lr

08006cac <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8006cac:	4770      	bx	lr

08006cae <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 8006cae:	4770      	bx	lr

08006cb0 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006cb0:	6803      	ldr	r3, [r0, #0]
 8006cb2:	691a      	ldr	r2, [r3, #16]
 8006cb4:	0791      	lsls	r1, r2, #30
{
 8006cb6:	b510      	push	{r4, lr}
 8006cb8:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006cba:	d50e      	bpl.n	8006cda <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8006cbc:	68da      	ldr	r2, [r3, #12]
 8006cbe:	0792      	lsls	r2, r2, #30
 8006cc0:	d50b      	bpl.n	8006cda <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8006cc2:	f06f 0202 	mvn.w	r2, #2
 8006cc6:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006cc8:	2201      	movs	r2, #1
 8006cca:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006ccc:	699b      	ldr	r3, [r3, #24]
 8006cce:	079b      	lsls	r3, r3, #30
 8006cd0:	d077      	beq.n	8006dc2 <HAL_TIM_IRQHandler+0x112>
          HAL_TIM_IC_CaptureCallback(htim);
 8006cd2:	f7ff ffea 	bl	8006caa <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006cd6:	2300      	movs	r3, #0
 8006cd8:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8006cda:	6823      	ldr	r3, [r4, #0]
 8006cdc:	691a      	ldr	r2, [r3, #16]
 8006cde:	0750      	lsls	r0, r2, #29
 8006ce0:	d510      	bpl.n	8006d04 <HAL_TIM_IRQHandler+0x54>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8006ce2:	68da      	ldr	r2, [r3, #12]
 8006ce4:	0751      	lsls	r1, r2, #29
 8006ce6:	d50d      	bpl.n	8006d04 <HAL_TIM_IRQHandler+0x54>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8006ce8:	f06f 0204 	mvn.w	r2, #4
 8006cec:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006cee:	2202      	movs	r2, #2
 8006cf0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006cf2:	699b      	ldr	r3, [r3, #24]
 8006cf4:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 8006cf8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006cfa:	d068      	beq.n	8006dce <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 8006cfc:	f7ff ffd5 	bl	8006caa <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006d00:	2300      	movs	r3, #0
 8006d02:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8006d04:	6823      	ldr	r3, [r4, #0]
 8006d06:	691a      	ldr	r2, [r3, #16]
 8006d08:	0712      	lsls	r2, r2, #28
 8006d0a:	d50f      	bpl.n	8006d2c <HAL_TIM_IRQHandler+0x7c>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8006d0c:	68da      	ldr	r2, [r3, #12]
 8006d0e:	0710      	lsls	r0, r2, #28
 8006d10:	d50c      	bpl.n	8006d2c <HAL_TIM_IRQHandler+0x7c>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8006d12:	f06f 0208 	mvn.w	r2, #8
 8006d16:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006d18:	2204      	movs	r2, #4
 8006d1a:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006d1c:	69db      	ldr	r3, [r3, #28]
 8006d1e:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 8006d20:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006d22:	d05a      	beq.n	8006dda <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8006d24:	f7ff ffc1 	bl	8006caa <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006d28:	2300      	movs	r3, #0
 8006d2a:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8006d2c:	6823      	ldr	r3, [r4, #0]
 8006d2e:	691a      	ldr	r2, [r3, #16]
 8006d30:	06d2      	lsls	r2, r2, #27
 8006d32:	d510      	bpl.n	8006d56 <HAL_TIM_IRQHandler+0xa6>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8006d34:	68da      	ldr	r2, [r3, #12]
 8006d36:	06d0      	lsls	r0, r2, #27
 8006d38:	d50d      	bpl.n	8006d56 <HAL_TIM_IRQHandler+0xa6>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8006d3a:	f06f 0210 	mvn.w	r2, #16
 8006d3e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006d40:	2208      	movs	r2, #8
 8006d42:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006d44:	69db      	ldr	r3, [r3, #28]
 8006d46:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 8006d4a:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006d4c:	d04b      	beq.n	8006de6 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8006d4e:	f7ff ffac 	bl	8006caa <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006d52:	2300      	movs	r3, #0
 8006d54:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8006d56:	6823      	ldr	r3, [r4, #0]
 8006d58:	691a      	ldr	r2, [r3, #16]
 8006d5a:	07d1      	lsls	r1, r2, #31
 8006d5c:	d508      	bpl.n	8006d70 <HAL_TIM_IRQHandler+0xc0>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8006d5e:	68da      	ldr	r2, [r3, #12]
 8006d60:	07d2      	lsls	r2, r2, #31
 8006d62:	d505      	bpl.n	8006d70 <HAL_TIM_IRQHandler+0xc0>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8006d64:	f06f 0201 	mvn.w	r2, #1
 8006d68:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8006d6a:	4620      	mov	r0, r4
 8006d6c:	f7fa fe08 	bl	8001980 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8006d70:	6823      	ldr	r3, [r4, #0]
 8006d72:	691a      	ldr	r2, [r3, #16]
 8006d74:	0610      	lsls	r0, r2, #24
 8006d76:	d508      	bpl.n	8006d8a <HAL_TIM_IRQHandler+0xda>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8006d78:	68da      	ldr	r2, [r3, #12]
 8006d7a:	0611      	lsls	r1, r2, #24
 8006d7c:	d505      	bpl.n	8006d8a <HAL_TIM_IRQHandler+0xda>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8006d7e:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8006d82:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8006d84:	4620      	mov	r0, r4
 8006d86:	f000 f8c8 	bl	8006f1a <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8006d8a:	6823      	ldr	r3, [r4, #0]
 8006d8c:	691a      	ldr	r2, [r3, #16]
 8006d8e:	0652      	lsls	r2, r2, #25
 8006d90:	d508      	bpl.n	8006da4 <HAL_TIM_IRQHandler+0xf4>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8006d92:	68da      	ldr	r2, [r3, #12]
 8006d94:	0650      	lsls	r0, r2, #25
 8006d96:	d505      	bpl.n	8006da4 <HAL_TIM_IRQHandler+0xf4>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8006d98:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8006d9c:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8006d9e:	4620      	mov	r0, r4
 8006da0:	f7ff ff85 	bl	8006cae <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8006da4:	6823      	ldr	r3, [r4, #0]
 8006da6:	691a      	ldr	r2, [r3, #16]
 8006da8:	0691      	lsls	r1, r2, #26
 8006daa:	d522      	bpl.n	8006df2 <HAL_TIM_IRQHandler+0x142>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8006dac:	68da      	ldr	r2, [r3, #12]
 8006dae:	0692      	lsls	r2, r2, #26
 8006db0:	d51f      	bpl.n	8006df2 <HAL_TIM_IRQHandler+0x142>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006db2:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 8006db6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006db8:	611a      	str	r2, [r3, #16]
}
 8006dba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8006dbe:	f000 b8ab 	b.w	8006f18 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8006dc2:	f7ff ff71 	bl	8006ca8 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006dc6:	4620      	mov	r0, r4
 8006dc8:	f7ff ff70 	bl	8006cac <HAL_TIM_PWM_PulseFinishedCallback>
 8006dcc:	e783      	b.n	8006cd6 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006dce:	f7ff ff6b 	bl	8006ca8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006dd2:	4620      	mov	r0, r4
 8006dd4:	f7ff ff6a 	bl	8006cac <HAL_TIM_PWM_PulseFinishedCallback>
 8006dd8:	e792      	b.n	8006d00 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006dda:	f7ff ff65 	bl	8006ca8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006dde:	4620      	mov	r0, r4
 8006de0:	f7ff ff64 	bl	8006cac <HAL_TIM_PWM_PulseFinishedCallback>
 8006de4:	e7a0      	b.n	8006d28 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006de6:	f7ff ff5f 	bl	8006ca8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006dea:	4620      	mov	r0, r4
 8006dec:	f7ff ff5e 	bl	8006cac <HAL_TIM_PWM_PulseFinishedCallback>
 8006df0:	e7af      	b.n	8006d52 <HAL_TIM_IRQHandler+0xa2>
}
 8006df2:	bd10      	pop	{r4, pc}

08006df4 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006df4:	4a30      	ldr	r2, [pc, #192]	@ (8006eb8 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 8006df6:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006df8:	4290      	cmp	r0, r2
 8006dfa:	d012      	beq.n	8006e22 <TIM_Base_SetConfig+0x2e>
 8006dfc:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8006e00:	d00f      	beq.n	8006e22 <TIM_Base_SetConfig+0x2e>
 8006e02:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8006e06:	4290      	cmp	r0, r2
 8006e08:	d00b      	beq.n	8006e22 <TIM_Base_SetConfig+0x2e>
 8006e0a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006e0e:	4290      	cmp	r0, r2
 8006e10:	d007      	beq.n	8006e22 <TIM_Base_SetConfig+0x2e>
 8006e12:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006e16:	4290      	cmp	r0, r2
 8006e18:	d003      	beq.n	8006e22 <TIM_Base_SetConfig+0x2e>
 8006e1a:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8006e1e:	4290      	cmp	r0, r2
 8006e20:	d119      	bne.n	8006e56 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8006e22:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006e24:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 8006e28:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8006e2a:	4a23      	ldr	r2, [pc, #140]	@ (8006eb8 <TIM_Base_SetConfig+0xc4>)
 8006e2c:	4290      	cmp	r0, r2
 8006e2e:	d029      	beq.n	8006e84 <TIM_Base_SetConfig+0x90>
 8006e30:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8006e34:	d026      	beq.n	8006e84 <TIM_Base_SetConfig+0x90>
 8006e36:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8006e3a:	4290      	cmp	r0, r2
 8006e3c:	d022      	beq.n	8006e84 <TIM_Base_SetConfig+0x90>
 8006e3e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006e42:	4290      	cmp	r0, r2
 8006e44:	d01e      	beq.n	8006e84 <TIM_Base_SetConfig+0x90>
 8006e46:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006e4a:	4290      	cmp	r0, r2
 8006e4c:	d01a      	beq.n	8006e84 <TIM_Base_SetConfig+0x90>
 8006e4e:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8006e52:	4290      	cmp	r0, r2
 8006e54:	d016      	beq.n	8006e84 <TIM_Base_SetConfig+0x90>
 8006e56:	4a19      	ldr	r2, [pc, #100]	@ (8006ebc <TIM_Base_SetConfig+0xc8>)
 8006e58:	4290      	cmp	r0, r2
 8006e5a:	d013      	beq.n	8006e84 <TIM_Base_SetConfig+0x90>
 8006e5c:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006e60:	4290      	cmp	r0, r2
 8006e62:	d00f      	beq.n	8006e84 <TIM_Base_SetConfig+0x90>
 8006e64:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006e68:	4290      	cmp	r0, r2
 8006e6a:	d00b      	beq.n	8006e84 <TIM_Base_SetConfig+0x90>
 8006e6c:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 8006e70:	4290      	cmp	r0, r2
 8006e72:	d007      	beq.n	8006e84 <TIM_Base_SetConfig+0x90>
 8006e74:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006e78:	4290      	cmp	r0, r2
 8006e7a:	d003      	beq.n	8006e84 <TIM_Base_SetConfig+0x90>
 8006e7c:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006e80:	4290      	cmp	r0, r2
 8006e82:	d103      	bne.n	8006e8c <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006e84:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8006e86:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006e8a:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006e8c:	694a      	ldr	r2, [r1, #20]
 8006e8e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006e92:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8006e94:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8006e96:	688b      	ldr	r3, [r1, #8]
 8006e98:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8006e9a:	680b      	ldr	r3, [r1, #0]
 8006e9c:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8006e9e:	4b06      	ldr	r3, [pc, #24]	@ (8006eb8 <TIM_Base_SetConfig+0xc4>)
 8006ea0:	4298      	cmp	r0, r3
 8006ea2:	d003      	beq.n	8006eac <TIM_Base_SetConfig+0xb8>
 8006ea4:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8006ea8:	4298      	cmp	r0, r3
 8006eaa:	d101      	bne.n	8006eb0 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006eac:	690b      	ldr	r3, [r1, #16]
 8006eae:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006eb0:	2301      	movs	r3, #1
 8006eb2:	6143      	str	r3, [r0, #20]
}
 8006eb4:	4770      	bx	lr
 8006eb6:	bf00      	nop
 8006eb8:	40010000 	.word	0x40010000
 8006ebc:	40014000 	.word	0x40014000

08006ec0 <HAL_TIM_Base_Init>:
{
 8006ec0:	b510      	push	{r4, lr}
  if (htim == NULL)
 8006ec2:	4604      	mov	r4, r0
 8006ec4:	b330      	cbz	r0, 8006f14 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 8006ec6:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8006eca:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006ece:	b91b      	cbnz	r3, 8006ed8 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8006ed0:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 8006ed4:	f7ff feac 	bl	8006c30 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8006ed8:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006eda:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8006edc:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006ee0:	1d21      	adds	r1, r4, #4
 8006ee2:	f7ff ff87 	bl	8006df4 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006ee6:	2301      	movs	r3, #1
 8006ee8:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  return HAL_OK;
 8006eec:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006eee:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 8006ef2:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 8006ef6:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006efa:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006efe:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8006f02:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8006f06:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 8006f0a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 8006f0e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 8006f12:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006f14:	2001      	movs	r0, #1
 8006f16:	e7fc      	b.n	8006f12 <HAL_TIM_Base_Init+0x52>

08006f18 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 8006f18:	4770      	bx	lr

08006f1a <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 8006f1a:	4770      	bx	lr

08006f1c <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8006f1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006f20:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 8006f24:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 8006f28:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 8006f2c:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
 8006f30:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8006f34:	6809      	ldr	r1, [r1, #0]
 8006f36:	ea43 0308 	orr.w	r3, r3, r8
 8006f3a:	b991      	cbnz	r1, 8006f62 <FMC_SDRAM_Init+0x46>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006f3c:	ea43 030e 	orr.w	r3, r3, lr
 8006f40:	4313      	orrs	r3, r2
 8006f42:	ea43 030c 	orr.w	r3, r3, ip
 8006f46:	6801      	ldr	r1, [r0, #0]
 8006f48:	433b      	orrs	r3, r7
 8006f4a:	4333      	orrs	r3, r6
 8006f4c:	432b      	orrs	r3, r5
 8006f4e:	f421 41ff 	bic.w	r1, r1, #32640	@ 0x7f80
 8006f52:	4323      	orrs	r3, r4
 8006f54:	f021 017f 	bic.w	r1, r1, #127	@ 0x7f
 8006f58:	430b      	orrs	r3, r1
 8006f5a:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8006f5c:	2000      	movs	r0, #0
 8006f5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006f62:	6801      	ldr	r1, [r0, #0]
 8006f64:	ea43 030e 	orr.w	r3, r3, lr
 8006f68:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 8006f6c:	430b      	orrs	r3, r1
 8006f6e:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8006f70:	ea42 030c 	orr.w	r3, r2, ip
 8006f74:	6841      	ldr	r1, [r0, #4]
 8006f76:	433b      	orrs	r3, r7
 8006f78:	4333      	orrs	r3, r6
 8006f7a:	432b      	orrs	r3, r5
 8006f7c:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 8006f80:	4323      	orrs	r3, r4
 8006f82:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 8006f86:	4313      	orrs	r3, r2
 8006f88:	6043      	str	r3, [r0, #4]
 8006f8a:	e7e7      	b.n	8006f5c <FMC_SDRAM_Init+0x40>

08006f8c <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006f8c:	68cb      	ldr	r3, [r1, #12]
 8006f8e:	f103 3cff 	add.w	ip, r3, #4294967295
 8006f92:	694b      	ldr	r3, [r1, #20]
{
 8006f94:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006f96:	680f      	ldr	r7, [r1, #0]
 8006f98:	684c      	ldr	r4, [r1, #4]
 8006f9a:	688e      	ldr	r6, [r1, #8]
 8006f9c:	690d      	ldr	r5, [r1, #16]
 8006f9e:	6989      	ldr	r1, [r1, #24]
 8006fa0:	3b01      	subs	r3, #1
 8006fa2:	051b      	lsls	r3, r3, #20
 8006fa4:	3c01      	subs	r4, #1
 8006fa6:	3e01      	subs	r6, #1
 8006fa8:	3d01      	subs	r5, #1
 8006faa:	3901      	subs	r1, #1
 8006fac:	3f01      	subs	r7, #1
 8006fae:	0124      	lsls	r4, r4, #4
 8006fb0:	0236      	lsls	r6, r6, #8
 8006fb2:	042d      	lsls	r5, r5, #16
 8006fb4:	0609      	lsls	r1, r1, #24
 8006fb6:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8006fba:	b95a      	cbnz	r2, 8006fd4 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006fbc:	433b      	orrs	r3, r7
 8006fbe:	4323      	orrs	r3, r4
 8006fc0:	6882      	ldr	r2, [r0, #8]
 8006fc2:	4333      	orrs	r3, r6
 8006fc4:	432b      	orrs	r3, r5
 8006fc6:	430b      	orrs	r3, r1
 8006fc8:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8006fcc:	4313      	orrs	r3, r2
 8006fce:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 8006fd0:	2000      	movs	r0, #0
 8006fd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006fd4:	6882      	ldr	r2, [r0, #8]
 8006fd6:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8006fda:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 8006fde:	431a      	orrs	r2, r3
 8006fe0:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8006fe2:	ea44 0306 	orr.w	r3, r4, r6
 8006fe6:	68c2      	ldr	r2, [r0, #12]
 8006fe8:	433b      	orrs	r3, r7
 8006fea:	432b      	orrs	r3, r5
 8006fec:	430b      	orrs	r3, r1
 8006fee:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8006ff2:	4313      	orrs	r3, r2
 8006ff4:	60c3      	str	r3, [r0, #12]
 8006ff6:	e7eb      	b.n	8006fd0 <FMC_SDRAM_Timing_Init+0x44>

08006ff8 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8006ff8:	b570      	push	{r4, r5, r6, lr}
 8006ffa:	4604      	mov	r4, r0
 8006ffc:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8006ffe:	6902      	ldr	r2, [r0, #16]
 8007000:	e9d1 3000 	ldrd	r3, r0, [r1]
 8007004:	4303      	orrs	r3, r0
 8007006:	68c8      	ldr	r0, [r1, #12]
 8007008:	0d92      	lsrs	r2, r2, #22
 800700a:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 800700e:	0592      	lsls	r2, r2, #22
 8007010:	4313      	orrs	r3, r2
 8007012:	688a      	ldr	r2, [r1, #8]
 8007014:	3a01      	subs	r2, #1
 8007016:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800701a:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800701c:	f7fd fe32 	bl	8004c84 <HAL_GetTick>
 8007020:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8007022:	69a0      	ldr	r0, [r4, #24]
 8007024:	f010 0020 	ands.w	r0, r0, #32
 8007028:	d003      	beq.n	8007032 <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800702a:	1c6b      	adds	r3, r5, #1
 800702c:	d0f9      	beq.n	8007022 <FMC_SDRAM_SendCommand+0x2a>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800702e:	b90d      	cbnz	r5, 8007034 <FMC_SDRAM_SendCommand+0x3c>
      {
        return HAL_TIMEOUT;
 8007030:	2003      	movs	r0, #3
      }
    }
  }
  return HAL_OK;
}
 8007032:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8007034:	f7fd fe26 	bl	8004c84 <HAL_GetTick>
 8007038:	1b80      	subs	r0, r0, r6
 800703a:	42a8      	cmp	r0, r5
 800703c:	d9f1      	bls.n	8007022 <FMC_SDRAM_SendCommand+0x2a>
 800703e:	e7f7      	b.n	8007030 <FMC_SDRAM_SendCommand+0x38>

08007040 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8007040:	6943      	ldr	r3, [r0, #20]
 8007042:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8007046:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
 800704a:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 800704e:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 8007050:	2000      	movs	r0, #0
 8007052:	4770      	bx	lr

08007054 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8007054:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8007056:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800705a:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800705c:	f001 fee2 	bl	8008e24 <xTaskGetSchedulerState>
 8007060:	2801      	cmp	r0, #1
 8007062:	d003      	beq.n	800706c <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8007064:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8007068:	f000 bc14 	b.w	8007894 <xPortSysTickHandler>
}
 800706c:	bd08      	pop	{r3, pc}
	...

08007070 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007070:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8007074:	b92b      	cbnz	r3, 8007082 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8007076:	4b06      	ldr	r3, [pc, #24]	@ (8007090 <osKernelInitialize+0x20>)
 8007078:	6818      	ldr	r0, [r3, #0]
 800707a:	b928      	cbnz	r0, 8007088 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800707c:	2201      	movs	r2, #1
 800707e:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8007080:	4770      	bx	lr
    stat = osErrorISR;
 8007082:	f06f 0005 	mvn.w	r0, #5
 8007086:	4770      	bx	lr
    } else {
      stat = osError;
 8007088:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800708c:	4770      	bx	lr
 800708e:	bf00      	nop
 8007090:	20003160 	.word	0x20003160

08007094 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8007094:	b510      	push	{r4, lr}
 8007096:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800709a:	b95c      	cbnz	r4, 80070b4 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800709c:	4b08      	ldr	r3, [pc, #32]	@ (80070c0 <osKernelStart+0x2c>)
 800709e:	681a      	ldr	r2, [r3, #0]
 80070a0:	2a01      	cmp	r2, #1
 80070a2:	d10a      	bne.n	80070ba <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80070a4:	4a07      	ldr	r2, [pc, #28]	@ (80070c4 <osKernelStart+0x30>)
 80070a6:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 80070a8:	2202      	movs	r2, #2
 80070aa:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 80070ac:	f001 fc38 	bl	8008920 <vTaskStartScheduler>
      stat = osOK;
 80070b0:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 80070b2:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 80070b4:	f06f 0005 	mvn.w	r0, #5
 80070b8:	e7fb      	b.n	80070b2 <osKernelStart+0x1e>
      stat = osError;
 80070ba:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80070be:	e7f8      	b.n	80070b2 <osKernelStart+0x1e>
 80070c0:	20003160 	.word	0x20003160
 80070c4:	e000ed00 	.word	0xe000ed00

080070c8 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80070c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80070ca:	b087      	sub	sp, #28
 80070cc:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80070ce:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80070d0:	460b      	mov	r3, r1
  hTask = NULL;
 80070d2:	9205      	str	r2, [sp, #20]
 80070d4:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 80070d8:	b9ca      	cbnz	r2, 800710e <osThreadNew+0x46>
 80070da:	b1c0      	cbz	r0, 800710e <osThreadNew+0x46>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 80070dc:	b36c      	cbz	r4, 800713a <osThreadNew+0x72>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 80070de:	69a5      	ldr	r5, [r4, #24]
 80070e0:	2d00      	cmp	r5, #0
 80070e2:	bf08      	it	eq
 80070e4:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80070e6:	1e69      	subs	r1, r5, #1
 80070e8:	2937      	cmp	r1, #55	@ 0x37
 80070ea:	46ac      	mov	ip, r5
 80070ec:	d82a      	bhi.n	8007144 <osThreadNew+0x7c>
 80070ee:	6861      	ldr	r1, [r4, #4]
 80070f0:	07c9      	lsls	r1, r1, #31
 80070f2:	d427      	bmi.n	8007144 <osThreadNew+0x7c>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 80070f4:	6966      	ldr	r6, [r4, #20]
 80070f6:	b16e      	cbz	r6, 8007114 <osThreadNew+0x4c>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 80070f8:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80070fa:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 80070fe:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007100:	b157      	cbz	r7, 8007118 <osThreadNew+0x50>
 8007102:	f1be 0f5f 	cmp.w	lr, #95	@ 0x5f
 8007106:	d902      	bls.n	800710e <osThreadNew+0x46>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007108:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800710a:	b104      	cbz	r4, 800710e <osThreadNew+0x46>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800710c:	b9e6      	cbnz	r6, 8007148 <osThreadNew+0x80>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 800710e:	9805      	ldr	r0, [sp, #20]
}
 8007110:	b007      	add	sp, #28
 8007112:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8007114:	2280      	movs	r2, #128	@ 0x80
 8007116:	e7f0      	b.n	80070fa <osThreadNew+0x32>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8007118:	f1be 0f00 	cmp.w	lr, #0
 800711c:	d1f7      	bne.n	800710e <osThreadNew+0x46>
      if (mem == 0) {
 800711e:	6924      	ldr	r4, [r4, #16]
 8007120:	2c00      	cmp	r4, #0
 8007122:	d1f4      	bne.n	800710e <osThreadNew+0x46>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8007124:	ac05      	add	r4, sp, #20
 8007126:	e9cd c400 	strd	ip, r4, [sp]
 800712a:	b292      	uxth	r2, r2
 800712c:	f001 fb2f 	bl	800878e <xTaskCreate>
 8007130:	2801      	cmp	r0, #1
            hTask = NULL;
 8007132:	bf1c      	itt	ne
 8007134:	2300      	movne	r3, #0
 8007136:	9305      	strne	r3, [sp, #20]
 8007138:	e7e9      	b.n	800710e <osThreadNew+0x46>
    name = NULL;
 800713a:	4621      	mov	r1, r4
    prio  = (UBaseType_t)osPriorityNormal;
 800713c:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8007140:	2280      	movs	r2, #128	@ 0x80
 8007142:	e7ef      	b.n	8007124 <osThreadNew+0x5c>
        return (NULL);
 8007144:	4610      	mov	r0, r2
 8007146:	e7e3      	b.n	8007110 <osThreadNew+0x48>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8007148:	e9cd 4701 	strd	r4, r7, [sp, #4]
 800714c:	9500      	str	r5, [sp, #0]
 800714e:	f001 fae6 	bl	800871e <xTaskCreateStatic>
 8007152:	9005      	str	r0, [sp, #20]
 8007154:	e7db      	b.n	800710e <osThreadNew+0x46>

08007156 <osThreadTerminate>:
  vTaskDelete (NULL);
#endif
  for (;;);
}

osStatus_t osThreadTerminate (osThreadId_t thread_id) {
 8007156:	b538      	push	{r3, r4, r5, lr}
 8007158:	4605      	mov	r5, r0
 800715a:	f3ef 8405 	mrs	r4, IPSR
  TaskHandle_t hTask = (TaskHandle_t)thread_id;
  osStatus_t stat;
#ifndef USE_FreeRTOS_HEAP_1
  eTaskState tstate;

  if (IS_IRQ()) {
 800715e:	b94c      	cbnz	r4, 8007174 <osThreadTerminate+0x1e>
    stat = osErrorISR;
  }
  else if (hTask == NULL) {
 8007160:	b158      	cbz	r0, 800717a <osThreadTerminate+0x24>
    stat = osErrorParameter;
  }
  else {
    tstate = eTaskGetState (hTask);
 8007162:	f001 fb9b 	bl	800889c <eTaskGetState>

    if (tstate != eDeleted) {
 8007166:	2804      	cmp	r0, #4
 8007168:	d00a      	beq.n	8007180 <osThreadTerminate+0x2a>
      stat = osOK;
      vTaskDelete (hTask);
 800716a:	4628      	mov	r0, r5
 800716c:	f001 fb3e 	bl	80087ec <vTaskDelete>
      stat = osOK;
 8007170:	4620      	mov	r0, r4
#else
  stat = osError;
#endif

  return (stat);
}
 8007172:	bd38      	pop	{r3, r4, r5, pc}
    stat = osErrorISR;
 8007174:	f06f 0005 	mvn.w	r0, #5
 8007178:	e7fb      	b.n	8007172 <osThreadTerminate+0x1c>
    stat = osErrorParameter;
 800717a:	f06f 0003 	mvn.w	r0, #3
 800717e:	e7f8      	b.n	8007172 <osThreadTerminate+0x1c>
      stat = osErrorResource;
 8007180:	f06f 0002 	mvn.w	r0, #2
  return (stat);
 8007184:	e7f5      	b.n	8007172 <osThreadTerminate+0x1c>

08007186 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8007186:	b508      	push	{r3, lr}
 8007188:	f3ef 8205 	mrs	r2, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800718c:	b922      	cbnz	r2, 8007198 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800718e:	b108      	cbz	r0, 8007194 <osDelay+0xe>
      vTaskDelay(ticks);
 8007190:	f001 fd24 	bl	8008bdc <vTaskDelay>
    stat = osOK;
 8007194:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8007196:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 8007198:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 800719c:	e7fb      	b.n	8007196 <osDelay+0x10>

0800719e <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800719e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80071a0:	4604      	mov	r4, r0
 80071a2:	460e      	mov	r6, r1
 80071a4:	4615      	mov	r5, r2
 80071a6:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80071aa:	b942      	cbnz	r2, 80071be <osSemaphoreNew+0x20>
 80071ac:	b138      	cbz	r0, 80071be <osSemaphoreNew+0x20>
 80071ae:	4288      	cmp	r0, r1
 80071b0:	d305      	bcc.n	80071be <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 80071b2:	b155      	cbz	r5, 80071ca <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 80071b4:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 80071b8:	b12b      	cbz	r3, 80071c6 <osSemaphoreNew+0x28>
 80071ba:	2f4f      	cmp	r7, #79	@ 0x4f
 80071bc:	d822      	bhi.n	8007204 <osSemaphoreNew+0x66>
  hSemaphore = NULL;
 80071be:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 80071c0:	4620      	mov	r0, r4
 80071c2:	b003      	add	sp, #12
 80071c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 80071c6:	2f00      	cmp	r7, #0
 80071c8:	d1f9      	bne.n	80071be <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 80071ca:	2c01      	cmp	r4, #1
 80071cc:	d00c      	beq.n	80071e8 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 80071ce:	4620      	mov	r0, r4
 80071d0:	4631      	mov	r1, r6
 80071d2:	f000 fd99 	bl	8007d08 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 80071d6:	4604      	mov	r4, r0
 80071d8:	2800      	cmp	r0, #0
 80071da:	d0f0      	beq.n	80071be <osSemaphoreNew+0x20>
        if (attr != NULL) {
 80071dc:	b985      	cbnz	r5, 8007200 <osSemaphoreNew+0x62>
        vQueueAddToRegistry (hSemaphore, name);
 80071de:	4629      	mov	r1, r5
 80071e0:	4620      	mov	r0, r4
 80071e2:	f001 f8d7 	bl	8008394 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 80071e6:	e7eb      	b.n	80071c0 <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 80071e8:	2203      	movs	r2, #3
 80071ea:	2100      	movs	r1, #0
 80071ec:	2001      	movs	r0, #1
 80071ee:	f000 fd42 	bl	8007c76 <xQueueGenericCreate>
 80071f2:	e00e      	b.n	8007212 <osSemaphoreNew+0x74>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 80071f4:	461a      	mov	r2, r3
 80071f6:	f000 fd65 	bl	8007cc4 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80071fa:	4604      	mov	r4, r0
 80071fc:	2800      	cmp	r0, #0
 80071fe:	d0de      	beq.n	80071be <osSemaphoreNew+0x20>
          name = attr->name;
 8007200:	682d      	ldr	r5, [r5, #0]
 8007202:	e7ec      	b.n	80071de <osSemaphoreNew+0x40>
      if (max_count == 1U) {
 8007204:	2801      	cmp	r0, #1
 8007206:	d1f5      	bne.n	80071f4 <osSemaphoreNew+0x56>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8007208:	2103      	movs	r1, #3
 800720a:	9100      	str	r1, [sp, #0]
 800720c:	4611      	mov	r1, r2
 800720e:	f000 fce4 	bl	8007bda <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8007212:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8007214:	2800      	cmp	r0, #0
 8007216:	d0d2      	beq.n	80071be <osSemaphoreNew+0x20>
 8007218:	2e00      	cmp	r6, #0
 800721a:	d0df      	beq.n	80071dc <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800721c:	2300      	movs	r3, #0
 800721e:	461a      	mov	r2, r3
 8007220:	4619      	mov	r1, r3
 8007222:	f000 fd8f 	bl	8007d44 <xQueueGenericSend>
 8007226:	2801      	cmp	r0, #1
 8007228:	d0d8      	beq.n	80071dc <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 800722a:	4620      	mov	r0, r4
 800722c:	f001 f8dc 	bl	80083e8 <vQueueDelete>
      if (hSemaphore != NULL) {
 8007230:	e7c5      	b.n	80071be <osSemaphoreNew+0x20>

08007232 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8007232:	b513      	push	{r0, r1, r4, lr}
 8007234:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007236:	b328      	cbz	r0, 8007284 <osSemaphoreAcquire+0x52>
 8007238:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800723c:	b1cb      	cbz	r3, 8007272 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800723e:	bb09      	cbnz	r1, 8007284 <osSemaphoreAcquire+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007240:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007242:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007244:	f001 f839 	bl	80082ba <xQueueReceiveFromISR>
 8007248:	2801      	cmp	r0, #1
 800724a:	d003      	beq.n	8007254 <osSemaphoreAcquire+0x22>
        stat = osErrorResource;
 800724c:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8007250:	b002      	add	sp, #8
 8007252:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8007254:	9b01      	ldr	r3, [sp, #4]
 8007256:	b90b      	cbnz	r3, 800725c <osSemaphoreAcquire+0x2a>
  stat = osOK;
 8007258:	2000      	movs	r0, #0
 800725a:	e7f9      	b.n	8007250 <osSemaphoreAcquire+0x1e>
        portYIELD_FROM_ISR (yield);
 800725c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007260:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007264:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007268:	f3bf 8f4f 	dsb	sy
 800726c:	f3bf 8f6f 	isb	sy
 8007270:	e7f2      	b.n	8007258 <osSemaphoreAcquire+0x26>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8007272:	f000 ff65 	bl	8008140 <xQueueSemaphoreTake>
 8007276:	2801      	cmp	r0, #1
 8007278:	d0ee      	beq.n	8007258 <osSemaphoreAcquire+0x26>
      if (timeout != 0U) {
 800727a:	2c00      	cmp	r4, #0
 800727c:	d0e6      	beq.n	800724c <osSemaphoreAcquire+0x1a>
        stat = osErrorTimeout;
 800727e:	f06f 0001 	mvn.w	r0, #1
 8007282:	e7e5      	b.n	8007250 <osSemaphoreAcquire+0x1e>
    stat = osErrorParameter;
 8007284:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007288:	e7e2      	b.n	8007250 <osSemaphoreAcquire+0x1e>

0800728a <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800728a:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800728c:	b318      	cbz	r0, 80072d6 <osSemaphoreRelease+0x4c>
 800728e:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007292:	b1cb      	cbz	r3, 80072c8 <osSemaphoreRelease+0x3e>
    yield = pdFALSE;
 8007294:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007296:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8007298:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800729a:	f000 fe62 	bl	8007f62 <xQueueGiveFromISR>
 800729e:	2801      	cmp	r0, #1
 80072a0:	d004      	beq.n	80072ac <osSemaphoreRelease+0x22>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 80072a2:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 80072a6:	b003      	add	sp, #12
 80072a8:	f85d fb04 	ldr.w	pc, [sp], #4
      portYIELD_FROM_ISR (yield);
 80072ac:	9b01      	ldr	r3, [sp, #4]
 80072ae:	b14b      	cbz	r3, 80072c4 <osSemaphoreRelease+0x3a>
 80072b0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80072b4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80072b8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80072bc:	f3bf 8f4f 	dsb	sy
 80072c0:	f3bf 8f6f 	isb	sy
  stat = osOK;
 80072c4:	2000      	movs	r0, #0
 80072c6:	e7ee      	b.n	80072a6 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80072c8:	461a      	mov	r2, r3
 80072ca:	4619      	mov	r1, r3
 80072cc:	f000 fd3a 	bl	8007d44 <xQueueGenericSend>
 80072d0:	2801      	cmp	r0, #1
 80072d2:	d0f7      	beq.n	80072c4 <osSemaphoreRelease+0x3a>
 80072d4:	e7e5      	b.n	80072a2 <osSemaphoreRelease+0x18>
    stat = osErrorParameter;
 80072d6:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80072da:	e7e4      	b.n	80072a6 <osSemaphoreRelease+0x1c>

080072dc <osSemaphoreGetCount>:

uint32_t osSemaphoreGetCount (osSemaphoreId_t semaphore_id) {
  SemaphoreHandle_t hSemaphore = (SemaphoreHandle_t)semaphore_id;
  uint32_t count;

  if (hSemaphore == NULL) {
 80072dc:	b130      	cbz	r0, 80072ec <osSemaphoreGetCount+0x10>
 80072de:	f3ef 8305 	mrs	r3, IPSR
    count = 0U;
  }
  else if (IS_IRQ()) {
 80072e2:	b10b      	cbz	r3, 80072e8 <osSemaphoreGetCount+0xc>
    count = uxQueueMessagesWaitingFromISR (hSemaphore);
 80072e4:	f001 b849 	b.w	800837a <uxQueueMessagesWaitingFromISR>
  } else {
    count = (uint32_t)uxSemaphoreGetCount (hSemaphore);
 80072e8:	f001 b834 	b.w	8008354 <uxQueueMessagesWaiting>
  }

  return (count);
}
 80072ec:	4770      	bx	lr

080072ee <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 80072ee:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80072f0:	4605      	mov	r5, r0
 80072f2:	460e      	mov	r6, r1
 80072f4:	4614      	mov	r4, r2
 80072f6:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80072fa:	b11f      	cbz	r7, 8007304 <osMessageQueueNew+0x16>
  hQueue = NULL;
 80072fc:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 80072fe:	4628      	mov	r0, r5
 8007300:	b003      	add	sp, #12
 8007302:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007304:	2800      	cmp	r0, #0
 8007306:	d0f9      	beq.n	80072fc <osMessageQueueNew+0xe>
 8007308:	2900      	cmp	r1, #0
 800730a:	d0f7      	beq.n	80072fc <osMessageQueueNew+0xe>
    if (attr != NULL) {
 800730c:	b1da      	cbz	r2, 8007346 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800730e:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 8007312:	b183      	cbz	r3, 8007336 <osMessageQueueNew+0x48>
 8007314:	2a4f      	cmp	r2, #79	@ 0x4f
 8007316:	d9f1      	bls.n	80072fc <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007318:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800731a:	2a00      	cmp	r2, #0
 800731c:	d0ee      	beq.n	80072fc <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800731e:	6966      	ldr	r6, [r4, #20]
 8007320:	434d      	muls	r5, r1
 8007322:	42ae      	cmp	r6, r5
 8007324:	d3ea      	bcc.n	80072fc <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8007326:	9700      	str	r7, [sp, #0]
 8007328:	f000 fc57 	bl	8007bda <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800732c:	4605      	mov	r5, r0
 800732e:	2800      	cmp	r0, #0
 8007330:	d0e4      	beq.n	80072fc <osMessageQueueNew+0xe>
        name = attr->name;
 8007332:	6824      	ldr	r4, [r4, #0]
 8007334:	e011      	b.n	800735a <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8007336:	2a00      	cmp	r2, #0
 8007338:	d1e0      	bne.n	80072fc <osMessageQueueNew+0xe>
 800733a:	6923      	ldr	r3, [r4, #16]
 800733c:	2b00      	cmp	r3, #0
 800733e:	d1dd      	bne.n	80072fc <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8007340:	6963      	ldr	r3, [r4, #20]
 8007342:	2b00      	cmp	r3, #0
 8007344:	d1da      	bne.n	80072fc <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8007346:	4628      	mov	r0, r5
 8007348:	2200      	movs	r2, #0
 800734a:	4631      	mov	r1, r6
 800734c:	f000 fc93 	bl	8007c76 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8007350:	4605      	mov	r5, r0
 8007352:	2800      	cmp	r0, #0
 8007354:	d0d2      	beq.n	80072fc <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8007356:	2c00      	cmp	r4, #0
 8007358:	d1eb      	bne.n	8007332 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 800735a:	4621      	mov	r1, r4
 800735c:	4628      	mov	r0, r5
 800735e:	f001 f819 	bl	8008394 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8007362:	e7cc      	b.n	80072fe <osMessageQueueNew+0x10>

08007364 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8007364:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007366:	461c      	mov	r4, r3
 8007368:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800736c:	b1de      	cbz	r6, 80073a6 <osMessageQueuePut+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800736e:	b338      	cbz	r0, 80073c0 <osMessageQueuePut+0x5c>
 8007370:	b331      	cbz	r1, 80073c0 <osMessageQueuePut+0x5c>
 8007372:	bb2b      	cbnz	r3, 80073c0 <osMessageQueuePut+0x5c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007374:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007376:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007378:	f000 fd96 	bl	8007ea8 <xQueueGenericSendFromISR>
 800737c:	2801      	cmp	r0, #1
 800737e:	d003      	beq.n	8007388 <osMessageQueuePut+0x24>
        stat = osErrorResource;
 8007380:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8007384:	b002      	add	sp, #8
 8007386:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8007388:	9b01      	ldr	r3, [sp, #4]
 800738a:	b90b      	cbnz	r3, 8007390 <osMessageQueuePut+0x2c>
  stat = osOK;
 800738c:	2000      	movs	r0, #0
 800738e:	e7f9      	b.n	8007384 <osMessageQueuePut+0x20>
        portYIELD_FROM_ISR (yield);
 8007390:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007394:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007398:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800739c:	f3bf 8f4f 	dsb	sy
 80073a0:	f3bf 8f6f 	isb	sy
 80073a4:	e7f2      	b.n	800738c <osMessageQueuePut+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80073a6:	b158      	cbz	r0, 80073c0 <osMessageQueuePut+0x5c>
 80073a8:	b151      	cbz	r1, 80073c0 <osMessageQueuePut+0x5c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80073aa:	4633      	mov	r3, r6
 80073ac:	4622      	mov	r2, r4
 80073ae:	f000 fcc9 	bl	8007d44 <xQueueGenericSend>
 80073b2:	2801      	cmp	r0, #1
 80073b4:	d0ea      	beq.n	800738c <osMessageQueuePut+0x28>
        if (timeout != 0U) {
 80073b6:	2c00      	cmp	r4, #0
 80073b8:	d0e2      	beq.n	8007380 <osMessageQueuePut+0x1c>
          stat = osErrorTimeout;
 80073ba:	f06f 0001 	mvn.w	r0, #1
 80073be:	e7e1      	b.n	8007384 <osMessageQueuePut+0x20>
      stat = osErrorParameter;
 80073c0:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80073c4:	e7de      	b.n	8007384 <osMessageQueuePut+0x20>

080073c6 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 80073c6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80073c8:	461c      	mov	r4, r3
 80073ca:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80073ce:	b1db      	cbz	r3, 8007408 <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80073d0:	b330      	cbz	r0, 8007420 <osMessageQueueGet+0x5a>
 80073d2:	b329      	cbz	r1, 8007420 <osMessageQueueGet+0x5a>
 80073d4:	bb24      	cbnz	r4, 8007420 <osMessageQueueGet+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80073d6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80073d8:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80073da:	f000 ff6e 	bl	80082ba <xQueueReceiveFromISR>
 80073de:	2801      	cmp	r0, #1
 80073e0:	d003      	beq.n	80073ea <osMessageQueueGet+0x24>
        stat = osErrorResource;
 80073e2:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 80073e6:	b003      	add	sp, #12
 80073e8:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 80073ea:	9b01      	ldr	r3, [sp, #4]
 80073ec:	b90b      	cbnz	r3, 80073f2 <osMessageQueueGet+0x2c>
  stat = osOK;
 80073ee:	2000      	movs	r0, #0
 80073f0:	e7f9      	b.n	80073e6 <osMessageQueueGet+0x20>
        portYIELD_FROM_ISR (yield);
 80073f2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80073f6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80073fa:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80073fe:	f3bf 8f4f 	dsb	sy
 8007402:	f3bf 8f6f 	isb	sy
 8007406:	e7f2      	b.n	80073ee <osMessageQueueGet+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007408:	b150      	cbz	r0, 8007420 <osMessageQueueGet+0x5a>
 800740a:	b149      	cbz	r1, 8007420 <osMessageQueueGet+0x5a>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800740c:	4622      	mov	r2, r4
 800740e:	f000 fdf9 	bl	8008004 <xQueueReceive>
 8007412:	2801      	cmp	r0, #1
 8007414:	d0eb      	beq.n	80073ee <osMessageQueueGet+0x28>
        if (timeout != 0U) {
 8007416:	2c00      	cmp	r4, #0
 8007418:	d0e3      	beq.n	80073e2 <osMessageQueueGet+0x1c>
          stat = osErrorTimeout;
 800741a:	f06f 0001 	mvn.w	r0, #1
 800741e:	e7e2      	b.n	80073e6 <osMessageQueueGet+0x20>
      stat = osErrorParameter;
 8007420:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007424:	e7df      	b.n	80073e6 <osMessageQueueGet+0x20>

08007426 <osMessageQueueGetCount>:
  }

  return (size);
}

uint32_t osMessageQueueGetCount (osMessageQueueId_t mq_id) {
 8007426:	f7ff bf59 	b.w	80072dc <osSemaphoreGetCount>

0800742a <osMessageQueueReset>:
  }

  return (space);
}

osStatus_t osMessageQueueReset (osMessageQueueId_t mq_id) {
 800742a:	b510      	push	{r4, lr}
 800742c:	f3ef 8405 	mrs	r4, IPSR
  QueueHandle_t hQueue = (QueueHandle_t)mq_id;
  osStatus_t stat;

  if (IS_IRQ()) {
 8007430:	b92c      	cbnz	r4, 800743e <osMessageQueueReset+0x14>
    stat = osErrorISR;
  }
  else if (hQueue == NULL) {
 8007432:	b138      	cbz	r0, 8007444 <osMessageQueueReset+0x1a>
    stat = osErrorParameter;
  }
  else {
    stat = osOK;
    (void)xQueueReset (hQueue);
 8007434:	4621      	mov	r1, r4
 8007436:	f000 fb91 	bl	8007b5c <xQueueGenericReset>
    stat = osOK;
 800743a:	4620      	mov	r0, r4
  }

  return (stat);
}
 800743c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800743e:	f06f 0005 	mvn.w	r0, #5
 8007442:	e7fb      	b.n	800743c <osMessageQueueReset+0x12>
    stat = osErrorParameter;
 8007444:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007448:	e7f8      	b.n	800743c <osMessageQueueReset+0x12>
	...

0800744c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800744c:	4b03      	ldr	r3, [pc, #12]	@ (800745c <vApplicationGetIdleTaskMemory+0x10>)
 800744e:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8007450:	4b03      	ldr	r3, [pc, #12]	@ (8007460 <vApplicationGetIdleTaskMemory+0x14>)
 8007452:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8007454:	2380      	movs	r3, #128	@ 0x80
 8007456:	6013      	str	r3, [r2, #0]
}
 8007458:	4770      	bx	lr
 800745a:	bf00      	nop
 800745c:	20003100 	.word	0x20003100
 8007460:	20002f00 	.word	0x20002f00

08007464 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8007464:	4b03      	ldr	r3, [pc, #12]	@ (8007474 <vApplicationGetTimerTaskMemory+0x10>)
 8007466:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8007468:	4b03      	ldr	r3, [pc, #12]	@ (8007478 <vApplicationGetTimerTaskMemory+0x14>)
 800746a:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800746c:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8007470:	6013      	str	r3, [r2, #0]
}
 8007472:	4770      	bx	lr
 8007474:	20002ea0 	.word	0x20002ea0
 8007478:	20002aa0 	.word	0x20002aa0

0800747c <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800747c:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800747e:	4b10      	ldr	r3, [pc, #64]	@ (80074c0 <prvInsertBlockIntoFreeList+0x44>)
 8007480:	461a      	mov	r2, r3
 8007482:	681b      	ldr	r3, [r3, #0]
 8007484:	4283      	cmp	r3, r0
 8007486:	d3fb      	bcc.n	8007480 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8007488:	6854      	ldr	r4, [r2, #4]
 800748a:	1911      	adds	r1, r2, r4
 800748c:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800748e:	bf01      	itttt	eq
 8007490:	6841      	ldreq	r1, [r0, #4]
 8007492:	4610      	moveq	r0, r2
 8007494:	1909      	addeq	r1, r1, r4
 8007496:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8007498:	6844      	ldr	r4, [r0, #4]
 800749a:	1901      	adds	r1, r0, r4
 800749c:	428b      	cmp	r3, r1
 800749e:	d10c      	bne.n	80074ba <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 80074a0:	4908      	ldr	r1, [pc, #32]	@ (80074c4 <prvInsertBlockIntoFreeList+0x48>)
 80074a2:	6809      	ldr	r1, [r1, #0]
 80074a4:	428b      	cmp	r3, r1
 80074a6:	d003      	beq.n	80074b0 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80074a8:	6859      	ldr	r1, [r3, #4]
 80074aa:	4421      	add	r1, r4
 80074ac:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 80074ae:	6819      	ldr	r1, [r3, #0]
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 80074b0:	6001      	str	r1, [r0, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 80074b2:	4290      	cmp	r0, r2
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 80074b4:	bf18      	it	ne
 80074b6:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 80074b8:	bd10      	pop	{r4, pc}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80074ba:	4619      	mov	r1, r3
 80074bc:	e7f8      	b.n	80074b0 <prvInsertBlockIntoFreeList+0x34>
 80074be:	bf00      	nop
 80074c0:	2000317c 	.word	0x2000317c
 80074c4:	20003178 	.word	0x20003178

080074c8 <pvPortMalloc>:
{
 80074c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80074cc:	4604      	mov	r4, r0
	vTaskSuspendAll();
 80074ce:	f001 fa6d 	bl	80089ac <vTaskSuspendAll>
		if( pxEnd == NULL )
 80074d2:	4942      	ldr	r1, [pc, #264]	@ (80075dc <pvPortMalloc+0x114>)
 80074d4:	4d42      	ldr	r5, [pc, #264]	@ (80075e0 <pvPortMalloc+0x118>)
 80074d6:	680b      	ldr	r3, [r1, #0]
 80074d8:	bb0b      	cbnz	r3, 800751e <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 80074da:	4a42      	ldr	r2, [pc, #264]	@ (80075e4 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 80074dc:	0756      	lsls	r6, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 80074de:	bf1f      	itttt	ne
 80074e0:	1dd0      	addne	r0, r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80074e2:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 80074e6:	f502 3280 	addne.w	r2, r2, #65536	@ 0x10000
 80074ea:	1a13      	subne	r3, r2, r0
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 80074ec:	bf0c      	ite	eq
 80074ee:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80074f2:	4602      	movne	r2, r0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 80074f4:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80074f6:	4e3c      	ldr	r6, [pc, #240]	@ (80075e8 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 80074f8:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80074fa:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 80074fe:	2000      	movs	r0, #0
 8007500:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007502:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8007504:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8007508:	1a98      	subs	r0, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800750a:	e9c2 3000 	strd	r3, r0, [r2]
	pxEnd = ( void * ) uxAddress;
 800750e:	600b      	str	r3, [r1, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007510:	4b36      	ldr	r3, [pc, #216]	@ (80075ec <pvPortMalloc+0x124>)
 8007512:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007514:	4b36      	ldr	r3, [pc, #216]	@ (80075f0 <pvPortMalloc+0x128>)
 8007516:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8007518:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 800751c:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800751e:	682e      	ldr	r6, [r5, #0]
 8007520:	4226      	tst	r6, r4
 8007522:	d155      	bne.n	80075d0 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 8007524:	2c00      	cmp	r4, #0
 8007526:	d046      	beq.n	80075b6 <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8007528:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800752c:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800752e:	bf1c      	itt	ne
 8007530:	f023 0307 	bicne.w	r3, r3, #7
 8007534:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8007536:	2b00      	cmp	r3, #0
 8007538:	d04a      	beq.n	80075d0 <pvPortMalloc+0x108>
 800753a:	4f2d      	ldr	r7, [pc, #180]	@ (80075f0 <pvPortMalloc+0x128>)
 800753c:	683c      	ldr	r4, [r7, #0]
 800753e:	429c      	cmp	r4, r3
 8007540:	d346      	bcc.n	80075d0 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 8007542:	4a29      	ldr	r2, [pc, #164]	@ (80075e8 <pvPortMalloc+0x120>)
 8007544:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8007546:	6868      	ldr	r0, [r5, #4]
 8007548:	4298      	cmp	r0, r3
 800754a:	d204      	bcs.n	8007556 <pvPortMalloc+0x8e>
 800754c:	f8d5 c000 	ldr.w	ip, [r5]
 8007550:	f1bc 0f00 	cmp.w	ip, #0
 8007554:	d115      	bne.n	8007582 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8007556:	6809      	ldr	r1, [r1, #0]
 8007558:	42a9      	cmp	r1, r5
 800755a:	d039      	beq.n	80075d0 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800755c:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800755e:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007562:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8007564:	1ac2      	subs	r2, r0, r3
 8007566:	2a10      	cmp	r2, #16
 8007568:	d912      	bls.n	8007590 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800756a:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800756c:	0741      	lsls	r1, r0, #29
 800756e:	d00b      	beq.n	8007588 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8007570:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007574:	f383 8811 	msr	BASEPRI, r3
 8007578:	f3bf 8f6f 	isb	sy
 800757c:	f3bf 8f4f 	dsb	sy
 8007580:	e7fe      	b.n	8007580 <pvPortMalloc+0xb8>
 8007582:	462a      	mov	r2, r5
 8007584:	4665      	mov	r5, ip
 8007586:	e7de      	b.n	8007546 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8007588:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800758a:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800758c:	f7ff ff76 	bl	800747c <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007590:	686a      	ldr	r2, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007592:	4916      	ldr	r1, [pc, #88]	@ (80075ec <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007594:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007596:	4316      	orrs	r6, r2
					xNumberOfSuccessfulAllocations++;
 8007598:	4a16      	ldr	r2, [pc, #88]	@ (80075f4 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800759a:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800759c:	603c      	str	r4, [r7, #0]
					pxBlock->pxNextFreeBlock = NULL;
 800759e:	2300      	movs	r3, #0
 80075a0:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 80075a2:	6813      	ldr	r3, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80075a4:	606e      	str	r6, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80075a6:	4284      	cmp	r4, r0
					xNumberOfSuccessfulAllocations++;
 80075a8:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 80075ac:	bf38      	it	cc
 80075ae:	600c      	strcc	r4, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 80075b0:	6013      	str	r3, [r2, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80075b2:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 80075b6:	f001 fa9d 	bl	8008af4 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 80075ba:	0763      	lsls	r3, r4, #29
 80075bc:	d00a      	beq.n	80075d4 <pvPortMalloc+0x10c>
 80075be:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80075c2:	f383 8811 	msr	BASEPRI, r3
 80075c6:	f3bf 8f6f 	isb	sy
 80075ca:	f3bf 8f4f 	dsb	sy
 80075ce:	e7fe      	b.n	80075ce <pvPortMalloc+0x106>
void *pvReturn = NULL;
 80075d0:	2400      	movs	r4, #0
 80075d2:	e7f0      	b.n	80075b6 <pvPortMalloc+0xee>
}
 80075d4:	4620      	mov	r0, r4
 80075d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80075da:	bf00      	nop
 80075dc:	20003178 	.word	0x20003178
 80075e0:	20003164 	.word	0x20003164
 80075e4:	20003184 	.word	0x20003184
 80075e8:	2000317c 	.word	0x2000317c
 80075ec:	20003170 	.word	0x20003170
 80075f0:	20003174 	.word	0x20003174
 80075f4:	2000316c 	.word	0x2000316c

080075f8 <vPortFree>:
{
 80075f8:	b510      	push	{r4, lr}
	if( pv != NULL )
 80075fa:	4604      	mov	r4, r0
 80075fc:	b390      	cbz	r0, 8007664 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 80075fe:	4a1a      	ldr	r2, [pc, #104]	@ (8007668 <vPortFree+0x70>)
 8007600:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8007604:	6812      	ldr	r2, [r2, #0]
 8007606:	4213      	tst	r3, r2
 8007608:	d108      	bne.n	800761c <vPortFree+0x24>
 800760a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800760e:	f383 8811 	msr	BASEPRI, r3
 8007612:	f3bf 8f6f 	isb	sy
 8007616:	f3bf 8f4f 	dsb	sy
 800761a:	e7fe      	b.n	800761a <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800761c:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8007620:	b141      	cbz	r1, 8007634 <vPortFree+0x3c>
 8007622:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007626:	f383 8811 	msr	BASEPRI, r3
 800762a:	f3bf 8f6f 	isb	sy
 800762e:	f3bf 8f4f 	dsb	sy
 8007632:	e7fe      	b.n	8007632 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8007634:	ea23 0302 	bic.w	r3, r3, r2
 8007638:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800763c:	f001 f9b6 	bl	80089ac <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007640:	4a0a      	ldr	r2, [pc, #40]	@ (800766c <vPortFree+0x74>)
 8007642:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8007646:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007648:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800764c:	440b      	add	r3, r1
 800764e:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007650:	f7ff ff14 	bl	800747c <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8007654:	4a06      	ldr	r2, [pc, #24]	@ (8007670 <vPortFree+0x78>)
 8007656:	6813      	ldr	r3, [r2, #0]
}
 8007658:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 800765c:	3301      	adds	r3, #1
 800765e:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8007660:	f001 ba48 	b.w	8008af4 <xTaskResumeAll>
}
 8007664:	bd10      	pop	{r4, pc}
 8007666:	bf00      	nop
 8007668:	20003164 	.word	0x20003164
 800766c:	20003174 	.word	0x20003174
 8007670:	20003168 	.word	0x20003168

08007674 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007674:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8007678:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800767c:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007680:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007682:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8007684:	2300      	movs	r3, #0
 8007686:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8007688:	4770      	bx	lr

0800768a <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800768a:	2300      	movs	r3, #0
 800768c:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800768e:	4770      	bx	lr

08007690 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8007690:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8007692:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8007694:	689a      	ldr	r2, [r3, #8]
 8007696:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8007698:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800769a:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800769c:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800769e:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80076a0:	3301      	adds	r3, #1
 80076a2:	6003      	str	r3, [r0, #0]
}
 80076a4:	4770      	bx	lr

080076a6 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 80076a6:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 80076a8:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 80076aa:	1c63      	adds	r3, r4, #1
 80076ac:	d10a      	bne.n	80076c4 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 80076ae:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 80076b0:	685a      	ldr	r2, [r3, #4]
 80076b2:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 80076b4:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 80076b6:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 80076b8:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80076ba:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80076bc:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80076be:	3301      	adds	r3, #1
 80076c0:	6003      	str	r3, [r0, #0]
}
 80076c2:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 80076c4:	f100 0208 	add.w	r2, r0, #8
 80076c8:	4613      	mov	r3, r2
 80076ca:	6852      	ldr	r2, [r2, #4]
 80076cc:	6815      	ldr	r5, [r2, #0]
 80076ce:	42a5      	cmp	r5, r4
 80076d0:	d9fa      	bls.n	80076c8 <vListInsert+0x22>
 80076d2:	e7ed      	b.n	80076b0 <vListInsert+0xa>

080076d4 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80076d4:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 80076d8:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80076da:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 80076dc:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 80076de:	6859      	ldr	r1, [r3, #4]
 80076e0:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 80076e2:	bf08      	it	eq
 80076e4:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 80076e6:	2200      	movs	r2, #0
 80076e8:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 80076ea:	681a      	ldr	r2, [r3, #0]
 80076ec:	3a01      	subs	r2, #1
 80076ee:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 80076f0:	6818      	ldr	r0, [r3, #0]
}
 80076f2:	4770      	bx	lr

080076f4 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 80076f4:	4808      	ldr	r0, [pc, #32]	@ (8007718 <prvPortStartFirstTask+0x24>)
 80076f6:	6800      	ldr	r0, [r0, #0]
 80076f8:	6800      	ldr	r0, [r0, #0]
 80076fa:	f380 8808 	msr	MSP, r0
 80076fe:	f04f 0000 	mov.w	r0, #0
 8007702:	f380 8814 	msr	CONTROL, r0
 8007706:	b662      	cpsie	i
 8007708:	b661      	cpsie	f
 800770a:	f3bf 8f4f 	dsb	sy
 800770e:	f3bf 8f6f 	isb	sy
 8007712:	df00      	svc	0
 8007714:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8007716:	0000      	.short	0x0000
 8007718:	e000ed08 	.word	0xe000ed08

0800771c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800771c:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 800772c <vPortEnableVFP+0x10>
 8007720:	6801      	ldr	r1, [r0, #0]
 8007722:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8007726:	6001      	str	r1, [r0, #0]
 8007728:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800772a:	0000      	.short	0x0000
 800772c:	e000ed88 	.word	0xe000ed88

08007730 <prvTaskExitError>:
{
 8007730:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8007732:	2300      	movs	r3, #0
 8007734:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8007736:	4b0d      	ldr	r3, [pc, #52]	@ (800776c <prvTaskExitError+0x3c>)
 8007738:	681b      	ldr	r3, [r3, #0]
 800773a:	3301      	adds	r3, #1
 800773c:	d008      	beq.n	8007750 <prvTaskExitError+0x20>
 800773e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007742:	f383 8811 	msr	BASEPRI, r3
 8007746:	f3bf 8f6f 	isb	sy
 800774a:	f3bf 8f4f 	dsb	sy
 800774e:	e7fe      	b.n	800774e <prvTaskExitError+0x1e>
 8007750:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007754:	f383 8811 	msr	BASEPRI, r3
 8007758:	f3bf 8f6f 	isb	sy
 800775c:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8007760:	9b01      	ldr	r3, [sp, #4]
 8007762:	2b00      	cmp	r3, #0
 8007764:	d0fc      	beq.n	8007760 <prvTaskExitError+0x30>
}
 8007766:	b002      	add	sp, #8
 8007768:	4770      	bx	lr
 800776a:	bf00      	nop
 800776c:	20000088 	.word	0x20000088

08007770 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8007770:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8007774:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8007778:	4b07      	ldr	r3, [pc, #28]	@ (8007798 <pxPortInitialiseStack+0x28>)
 800777a:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800777e:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007782:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007786:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800778a:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800778e:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8007792:	3844      	subs	r0, #68	@ 0x44
 8007794:	4770      	bx	lr
 8007796:	bf00      	nop
 8007798:	08007731 	.word	0x08007731
 800779c:	00000000 	.word	0x00000000

080077a0 <SVC_Handler>:
	__asm volatile (
 80077a0:	4b07      	ldr	r3, [pc, #28]	@ (80077c0 <pxCurrentTCBConst2>)
 80077a2:	6819      	ldr	r1, [r3, #0]
 80077a4:	6808      	ldr	r0, [r1, #0]
 80077a6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80077aa:	f380 8809 	msr	PSP, r0
 80077ae:	f3bf 8f6f 	isb	sy
 80077b2:	f04f 0000 	mov.w	r0, #0
 80077b6:	f380 8811 	msr	BASEPRI, r0
 80077ba:	4770      	bx	lr
 80077bc:	f3af 8000 	nop.w

080077c0 <pxCurrentTCBConst2>:
 80077c0:	200136c4 	.word	0x200136c4

080077c4 <vPortEnterCritical>:
 80077c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80077c8:	f383 8811 	msr	BASEPRI, r3
 80077cc:	f3bf 8f6f 	isb	sy
 80077d0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 80077d4:	4a0a      	ldr	r2, [pc, #40]	@ (8007800 <vPortEnterCritical+0x3c>)
 80077d6:	6813      	ldr	r3, [r2, #0]
 80077d8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 80077da:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 80077dc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 80077de:	d10e      	bne.n	80077fe <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 80077e0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80077e4:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 80077e8:	b2db      	uxtb	r3, r3
 80077ea:	b143      	cbz	r3, 80077fe <vPortEnterCritical+0x3a>
 80077ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80077f0:	f383 8811 	msr	BASEPRI, r3
 80077f4:	f3bf 8f6f 	isb	sy
 80077f8:	f3bf 8f4f 	dsb	sy
 80077fc:	e7fe      	b.n	80077fc <vPortEnterCritical+0x38>
}
 80077fe:	4770      	bx	lr
 8007800:	20000088 	.word	0x20000088

08007804 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007804:	4a08      	ldr	r2, [pc, #32]	@ (8007828 <vPortExitCritical+0x24>)
 8007806:	6813      	ldr	r3, [r2, #0]
 8007808:	b943      	cbnz	r3, 800781c <vPortExitCritical+0x18>
 800780a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800780e:	f383 8811 	msr	BASEPRI, r3
 8007812:	f3bf 8f6f 	isb	sy
 8007816:	f3bf 8f4f 	dsb	sy
 800781a:	e7fe      	b.n	800781a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800781c:	3b01      	subs	r3, #1
 800781e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8007820:	b90b      	cbnz	r3, 8007826 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8007822:	f383 8811 	msr	BASEPRI, r3
}
 8007826:	4770      	bx	lr
 8007828:	20000088 	.word	0x20000088
 800782c:	00000000 	.word	0x00000000

08007830 <PendSV_Handler>:
	__asm volatile
 8007830:	f3ef 8009 	mrs	r0, PSP
 8007834:	f3bf 8f6f 	isb	sy
 8007838:	4b15      	ldr	r3, [pc, #84]	@ (8007890 <pxCurrentTCBConst>)
 800783a:	681a      	ldr	r2, [r3, #0]
 800783c:	f01e 0f10 	tst.w	lr, #16
 8007840:	bf08      	it	eq
 8007842:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8007846:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800784a:	6010      	str	r0, [r2, #0]
 800784c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8007850:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8007854:	f380 8811 	msr	BASEPRI, r0
 8007858:	f3bf 8f4f 	dsb	sy
 800785c:	f3bf 8f6f 	isb	sy
 8007860:	f001 f9e0 	bl	8008c24 <vTaskSwitchContext>
 8007864:	f04f 0000 	mov.w	r0, #0
 8007868:	f380 8811 	msr	BASEPRI, r0
 800786c:	bc09      	pop	{r0, r3}
 800786e:	6819      	ldr	r1, [r3, #0]
 8007870:	6808      	ldr	r0, [r1, #0]
 8007872:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007876:	f01e 0f10 	tst.w	lr, #16
 800787a:	bf08      	it	eq
 800787c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8007880:	f380 8809 	msr	PSP, r0
 8007884:	f3bf 8f6f 	isb	sy
 8007888:	4770      	bx	lr
 800788a:	bf00      	nop
 800788c:	f3af 8000 	nop.w

08007890 <pxCurrentTCBConst>:
 8007890:	200136c4 	.word	0x200136c4

08007894 <xPortSysTickHandler>:
{
 8007894:	b508      	push	{r3, lr}
	__asm volatile
 8007896:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800789a:	f383 8811 	msr	BASEPRI, r3
 800789e:	f3bf 8f6f 	isb	sy
 80078a2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 80078a6:	f001 f88f 	bl	80089c8 <xTaskIncrementTick>
 80078aa:	b128      	cbz	r0, 80078b8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 80078ac:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80078b0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80078b4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 80078b8:	2300      	movs	r3, #0
 80078ba:	f383 8811 	msr	BASEPRI, r3
}
 80078be:	bd08      	pop	{r3, pc}

080078c0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80078c0:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 80078c4:	2300      	movs	r3, #0
 80078c6:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80078c8:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80078ca:	4b05      	ldr	r3, [pc, #20]	@ (80078e0 <vPortSetupTimerInterrupt+0x20>)
 80078cc:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 80078d0:	681b      	ldr	r3, [r3, #0]
 80078d2:	fbb3 f3f1 	udiv	r3, r3, r1
 80078d6:	3b01      	subs	r3, #1
 80078d8:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 80078da:	2307      	movs	r3, #7
 80078dc:	6113      	str	r3, [r2, #16]
}
 80078de:	4770      	bx	lr
 80078e0:	2000007c 	.word	0x2000007c

080078e4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80078e4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 80078e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80078ea:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 80078ee:	4a38      	ldr	r2, [pc, #224]	@ (80079d0 <xPortStartScheduler+0xec>)
 80078f0:	4291      	cmp	r1, r2
 80078f2:	d108      	bne.n	8007906 <xPortStartScheduler+0x22>
	__asm volatile
 80078f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80078f8:	f383 8811 	msr	BASEPRI, r3
 80078fc:	f3bf 8f6f 	isb	sy
 8007900:	f3bf 8f4f 	dsb	sy
 8007904:	e7fe      	b.n	8007904 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007906:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 800790a:	4b32      	ldr	r3, [pc, #200]	@ (80079d4 <xPortStartScheduler+0xf0>)
 800790c:	429a      	cmp	r2, r3
 800790e:	d108      	bne.n	8007922 <xPortStartScheduler+0x3e>
 8007910:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007914:	f383 8811 	msr	BASEPRI, r3
 8007918:	f3bf 8f6f 	isb	sy
 800791c:	f3bf 8f4f 	dsb	sy
 8007920:	e7fe      	b.n	8007920 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8007922:	4b2d      	ldr	r3, [pc, #180]	@ (80079d8 <xPortStartScheduler+0xf4>)
 8007924:	781a      	ldrb	r2, [r3, #0]
 8007926:	b2d2      	uxtb	r2, r2
 8007928:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800792a:	22ff      	movs	r2, #255	@ 0xff
 800792c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800792e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007930:	4a2a      	ldr	r2, [pc, #168]	@ (80079dc <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007932:	b2db      	uxtb	r3, r3
 8007934:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007938:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800793c:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8007940:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8007942:	4a27      	ldr	r2, [pc, #156]	@ (80079e0 <xPortStartScheduler+0xfc>)
 8007944:	2307      	movs	r3, #7
 8007946:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007948:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 800794c:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800794e:	0609      	lsls	r1, r1, #24
 8007950:	d40a      	bmi.n	8007968 <xPortStartScheduler+0x84>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8007952:	2b03      	cmp	r3, #3
 8007954:	d011      	beq.n	800797a <xPortStartScheduler+0x96>
 8007956:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800795a:	f383 8811 	msr	BASEPRI, r3
 800795e:	f3bf 8f6f 	isb	sy
 8007962:	f3bf 8f4f 	dsb	sy
 8007966:	e7fe      	b.n	8007966 <xPortStartScheduler+0x82>
			ulMaxPRIGROUPValue--;
 8007968:	3b01      	subs	r3, #1
 800796a:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800796c:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007970:	005b      	lsls	r3, r3, #1
 8007972:	b2db      	uxtb	r3, r3
 8007974:	f88d 3003 	strb.w	r3, [sp, #3]
 8007978:	e7e6      	b.n	8007948 <xPortStartScheduler+0x64>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800797a:	f44f 7340 	mov.w	r3, #768	@ 0x300
 800797e:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007980:	9b01      	ldr	r3, [sp, #4]
 8007982:	4a15      	ldr	r2, [pc, #84]	@ (80079d8 <xPortStartScheduler+0xf4>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007984:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007988:	b2db      	uxtb	r3, r3
 800798a:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800798c:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8007990:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8007994:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007998:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800799c:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 80079a0:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 80079a4:	f7ff ff8c 	bl	80078c0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 80079a8:	4b0e      	ldr	r3, [pc, #56]	@ (80079e4 <xPortStartScheduler+0x100>)
 80079aa:	2500      	movs	r5, #0
 80079ac:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 80079ae:	f7ff feb5 	bl	800771c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 80079b2:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 80079b6:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 80079ba:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 80079be:	f7ff fe99 	bl	80076f4 <prvPortStartFirstTask>
	vTaskSwitchContext();
 80079c2:	f001 f92f 	bl	8008c24 <vTaskSwitchContext>
	prvTaskExitError();
 80079c6:	f7ff feb3 	bl	8007730 <prvTaskExitError>
}
 80079ca:	4628      	mov	r0, r5
 80079cc:	b003      	add	sp, #12
 80079ce:	bd30      	pop	{r4, r5, pc}
 80079d0:	410fc271 	.word	0x410fc271
 80079d4:	410fc270 	.word	0x410fc270
 80079d8:	e000e400 	.word	0xe000e400
 80079dc:	20013188 	.word	0x20013188
 80079e0:	20013184 	.word	0x20013184
 80079e4:	20000088 	.word	0x20000088

080079e8 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 80079e8:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 80079ec:	2b0f      	cmp	r3, #15
 80079ee:	d90e      	bls.n	8007a0e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 80079f0:	4a11      	ldr	r2, [pc, #68]	@ (8007a38 <vPortValidateInterruptPriority+0x50>)
 80079f2:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 80079f4:	4a11      	ldr	r2, [pc, #68]	@ (8007a3c <vPortValidateInterruptPriority+0x54>)
 80079f6:	7812      	ldrb	r2, [r2, #0]
 80079f8:	429a      	cmp	r2, r3
 80079fa:	d908      	bls.n	8007a0e <vPortValidateInterruptPriority+0x26>
 80079fc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a00:	f383 8811 	msr	BASEPRI, r3
 8007a04:	f3bf 8f6f 	isb	sy
 8007a08:	f3bf 8f4f 	dsb	sy
 8007a0c:	e7fe      	b.n	8007a0c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8007a0e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007a12:	4a0b      	ldr	r2, [pc, #44]	@ (8007a40 <vPortValidateInterruptPriority+0x58>)
 8007a14:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 8007a18:	6812      	ldr	r2, [r2, #0]
 8007a1a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8007a1e:	4293      	cmp	r3, r2
 8007a20:	d908      	bls.n	8007a34 <vPortValidateInterruptPriority+0x4c>
 8007a22:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a26:	f383 8811 	msr	BASEPRI, r3
 8007a2a:	f3bf 8f6f 	isb	sy
 8007a2e:	f3bf 8f4f 	dsb	sy
 8007a32:	e7fe      	b.n	8007a32 <vPortValidateInterruptPriority+0x4a>
	}
 8007a34:	4770      	bx	lr
 8007a36:	bf00      	nop
 8007a38:	e000e3f0 	.word	0xe000e3f0
 8007a3c:	20013188 	.word	0x20013188
 8007a40:	20013184 	.word	0x20013184

08007a44 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8007a44:	b510      	push	{r4, lr}
 8007a46:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007a48:	f7ff febc 	bl	80077c4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8007a4c:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007a4e:	f7ff fed9 	bl	8007804 <vPortExitCritical>

	return xReturn;
}
 8007a52:	fab4 f084 	clz	r0, r4
 8007a56:	0940      	lsrs	r0, r0, #5
 8007a58:	bd10      	pop	{r4, pc}

08007a5a <prvCopyDataToQueue>:
{
 8007a5a:	b570      	push	{r4, r5, r6, lr}
 8007a5c:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007a5e:	6c02      	ldr	r2, [r0, #64]	@ 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007a60:	6b85      	ldr	r5, [r0, #56]	@ 0x38
{
 8007a62:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007a64:	b942      	cbnz	r2, 8007a78 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007a66:	6806      	ldr	r6, [r0, #0]
 8007a68:	b99e      	cbnz	r6, 8007a92 <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007a6a:	6880      	ldr	r0, [r0, #8]
 8007a6c:	f001 fa28 	bl	8008ec0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8007a70:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007a72:	3501      	adds	r5, #1
 8007a74:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 8007a76:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007a78:	b96e      	cbnz	r6, 8007a96 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007a7a:	6840      	ldr	r0, [r0, #4]
 8007a7c:	f014 f9cd 	bl	801be1a <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007a80:	6863      	ldr	r3, [r4, #4]
 8007a82:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8007a84:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007a86:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007a88:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007a8a:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8007a8c:	bf24      	itt	cs
 8007a8e:	6823      	ldrcs	r3, [r4, #0]
 8007a90:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 8007a92:	2000      	movs	r0, #0
 8007a94:	e7ed      	b.n	8007a72 <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8007a96:	68c0      	ldr	r0, [r0, #12]
 8007a98:	f014 f9bf 	bl	801be1a <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007a9c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8007a9e:	68e3      	ldr	r3, [r4, #12]
 8007aa0:	4251      	negs	r1, r2
 8007aa2:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007aa4:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007aa6:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007aa8:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007aaa:	bf3e      	ittt	cc
 8007aac:	68a3      	ldrcc	r3, [r4, #8]
 8007aae:	185b      	addcc	r3, r3, r1
 8007ab0:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8007ab2:	2e02      	cmp	r6, #2
 8007ab4:	d1ed      	bne.n	8007a92 <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007ab6:	b10d      	cbz	r5, 8007abc <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8007ab8:	3d01      	subs	r5, #1
 8007aba:	e7ea      	b.n	8007a92 <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 8007abc:	4628      	mov	r0, r5
 8007abe:	e7d8      	b.n	8007a72 <prvCopyDataToQueue+0x18>

08007ac0 <prvCopyDataFromQueue>:
{
 8007ac0:	4603      	mov	r3, r0
 8007ac2:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007ac4:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 8007ac6:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007ac8:	b16a      	cbz	r2, 8007ae6 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007aca:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007acc:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007ace:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007ad0:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007ad2:	bf28      	it	cs
 8007ad4:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007ad6:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007ad8:	bf28      	it	cs
 8007ada:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007adc:	68d9      	ldr	r1, [r3, #12]
}
 8007ade:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007ae2:	f014 b99a 	b.w	801be1a <memcpy>
}
 8007ae6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007aea:	4770      	bx	lr

08007aec <prvUnlockQueue>:
{
 8007aec:	b570      	push	{r4, r5, r6, lr}
 8007aee:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8007af0:	f7ff fe68 	bl	80077c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8007af4:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007af8:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8007afc:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8007afe:	2d00      	cmp	r5, #0
 8007b00:	dc14      	bgt.n	8007b2c <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8007b02:	23ff      	movs	r3, #255	@ 0xff
 8007b04:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 8007b08:	f7ff fe7c 	bl	8007804 <vPortExitCritical>
	taskENTER_CRITICAL();
 8007b0c:	f7ff fe5a 	bl	80077c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8007b10:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007b14:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8007b18:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8007b1a:	2d00      	cmp	r5, #0
 8007b1c:	dc12      	bgt.n	8007b44 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8007b1e:	23ff      	movs	r3, #255	@ 0xff
 8007b20:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 8007b24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8007b28:	f7ff be6c 	b.w	8007804 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007b2c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007b2e:	2b00      	cmp	r3, #0
 8007b30:	d0e7      	beq.n	8007b02 <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007b32:	4630      	mov	r0, r6
 8007b34:	f001 f8e8 	bl	8008d08 <xTaskRemoveFromEventList>
 8007b38:	b108      	cbz	r0, 8007b3e <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8007b3a:	f001 f96d 	bl	8008e18 <vTaskMissedYield>
			--cTxLock;
 8007b3e:	3d01      	subs	r5, #1
 8007b40:	b26d      	sxtb	r5, r5
 8007b42:	e7dc      	b.n	8007afe <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007b44:	6923      	ldr	r3, [r4, #16]
 8007b46:	2b00      	cmp	r3, #0
 8007b48:	d0e9      	beq.n	8007b1e <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007b4a:	4630      	mov	r0, r6
 8007b4c:	f001 f8dc 	bl	8008d08 <xTaskRemoveFromEventList>
 8007b50:	b108      	cbz	r0, 8007b56 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8007b52:	f001 f961 	bl	8008e18 <vTaskMissedYield>
				--cRxLock;
 8007b56:	3d01      	subs	r5, #1
 8007b58:	b26d      	sxtb	r5, r5
 8007b5a:	e7de      	b.n	8007b1a <prvUnlockQueue+0x2e>

08007b5c <xQueueGenericReset>:
{
 8007b5c:	b538      	push	{r3, r4, r5, lr}
 8007b5e:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007b60:	4604      	mov	r4, r0
 8007b62:	b940      	cbnz	r0, 8007b76 <xQueueGenericReset+0x1a>
 8007b64:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007b68:	f383 8811 	msr	BASEPRI, r3
 8007b6c:	f3bf 8f6f 	isb	sy
 8007b70:	f3bf 8f4f 	dsb	sy
 8007b74:	e7fe      	b.n	8007b74 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8007b76:	f7ff fe25 	bl	80077c4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007b7a:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 8007b7e:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8007b80:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007b82:	434b      	muls	r3, r1
 8007b84:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007b86:	1a5b      	subs	r3, r3, r1
 8007b88:	441a      	add	r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007b8a:	60a0      	str	r0, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 8007b8c:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007b8e:	2000      	movs	r0, #0
 8007b90:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007b92:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 8007b94:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8007b98:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 8007b9c:	b9a5      	cbnz	r5, 8007bc8 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007b9e:	6923      	ldr	r3, [r4, #16]
 8007ba0:	b173      	cbz	r3, 8007bc0 <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007ba2:	f104 0010 	add.w	r0, r4, #16
 8007ba6:	f001 f8af 	bl	8008d08 <xTaskRemoveFromEventList>
 8007baa:	b148      	cbz	r0, 8007bc0 <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8007bac:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007bb0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007bb4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007bb8:	f3bf 8f4f 	dsb	sy
 8007bbc:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8007bc0:	f7ff fe20 	bl	8007804 <vPortExitCritical>
}
 8007bc4:	2001      	movs	r0, #1
 8007bc6:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8007bc8:	f104 0010 	add.w	r0, r4, #16
 8007bcc:	f7ff fd52 	bl	8007674 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8007bd0:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007bd4:	f7ff fd4e 	bl	8007674 <vListInitialise>
 8007bd8:	e7f2      	b.n	8007bc0 <xQueueGenericReset+0x64>

08007bda <xQueueGenericCreateStatic>:
	{
 8007bda:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007bdc:	460d      	mov	r5, r1
 8007bde:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007be0:	b940      	cbnz	r0, 8007bf4 <xQueueGenericCreateStatic+0x1a>
 8007be2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007be6:	f383 8811 	msr	BASEPRI, r3
 8007bea:	f3bf 8f6f 	isb	sy
 8007bee:	f3bf 8f4f 	dsb	sy
 8007bf2:	e7fe      	b.n	8007bf2 <xQueueGenericCreateStatic+0x18>
		configASSERT( pxStaticQueue != NULL );
 8007bf4:	b943      	cbnz	r3, 8007c08 <xQueueGenericCreateStatic+0x2e>
 8007bf6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007bfa:	f383 8811 	msr	BASEPRI, r3
 8007bfe:	f3bf 8f6f 	isb	sy
 8007c02:	f3bf 8f4f 	dsb	sy
 8007c06:	e7fe      	b.n	8007c06 <xQueueGenericCreateStatic+0x2c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8007c08:	b14a      	cbz	r2, 8007c1e <xQueueGenericCreateStatic+0x44>
 8007c0a:	b991      	cbnz	r1, 8007c32 <xQueueGenericCreateStatic+0x58>
 8007c0c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007c10:	f383 8811 	msr	BASEPRI, r3
 8007c14:	f3bf 8f6f 	isb	sy
 8007c18:	f3bf 8f4f 	dsb	sy
 8007c1c:	e7fe      	b.n	8007c1c <xQueueGenericCreateStatic+0x42>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8007c1e:	b141      	cbz	r1, 8007c32 <xQueueGenericCreateStatic+0x58>
 8007c20:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007c24:	f383 8811 	msr	BASEPRI, r3
 8007c28:	f3bf 8f6f 	isb	sy
 8007c2c:	f3bf 8f4f 	dsb	sy
 8007c30:	e7fe      	b.n	8007c30 <xQueueGenericCreateStatic+0x56>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8007c32:	2350      	movs	r3, #80	@ 0x50
 8007c34:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8007c36:	9b01      	ldr	r3, [sp, #4]
 8007c38:	2b50      	cmp	r3, #80	@ 0x50
 8007c3a:	d008      	beq.n	8007c4e <xQueueGenericCreateStatic+0x74>
 8007c3c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007c40:	f383 8811 	msr	BASEPRI, r3
 8007c44:	f3bf 8f6f 	isb	sy
 8007c48:	f3bf 8f4f 	dsb	sy
 8007c4c:	e7fe      	b.n	8007c4c <xQueueGenericCreateStatic+0x72>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007c4e:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8007c50:	2d00      	cmp	r5, #0
 8007c52:	bf08      	it	eq
 8007c54:	4622      	moveq	r2, r4
	pxNewQueue->uxItemSize = uxItemSize;
 8007c56:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007c5a:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
 8007c5e:	6022      	str	r2, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007c60:	4620      	mov	r0, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8007c62:	9b01      	ldr	r3, [sp, #4]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007c64:	f7ff ff7a 	bl	8007b5c <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007c68:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8007c6c:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 8007c70:	4620      	mov	r0, r4
 8007c72:	b003      	add	sp, #12
 8007c74:	bd30      	pop	{r4, r5, pc}

08007c76 <xQueueGenericCreate>:
	{
 8007c76:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007c78:	460d      	mov	r5, r1
 8007c7a:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007c7c:	4606      	mov	r6, r0
 8007c7e:	b940      	cbnz	r0, 8007c92 <xQueueGenericCreate+0x1c>
 8007c80:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007c84:	f383 8811 	msr	BASEPRI, r3
 8007c88:	f3bf 8f6f 	isb	sy
 8007c8c:	f3bf 8f4f 	dsb	sy
 8007c90:	e7fe      	b.n	8007c90 <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007c92:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8007c94:	3050      	adds	r0, #80	@ 0x50
 8007c96:	f7ff fc17 	bl	80074c8 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8007c9a:	4604      	mov	r4, r0
 8007c9c:	b170      	cbz	r0, 8007cbc <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8007c9e:	2300      	movs	r3, #0
 8007ca0:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007ca4:	b165      	cbz	r5, 8007cc0 <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007ca6:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8007caa:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 8007cae:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007cb0:	2101      	movs	r1, #1
 8007cb2:	4620      	mov	r0, r4
 8007cb4:	f7ff ff52 	bl	8007b5c <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007cb8:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 8007cbc:	4620      	mov	r0, r4
 8007cbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8007cc0:	4603      	mov	r3, r0
 8007cc2:	e7f2      	b.n	8007caa <xQueueGenericCreate+0x34>

08007cc4 <xQueueCreateCountingSemaphoreStatic>:
	{
 8007cc4:	b513      	push	{r0, r1, r4, lr}
 8007cc6:	4613      	mov	r3, r2
 8007cc8:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007cca:	b940      	cbnz	r0, 8007cde <xQueueCreateCountingSemaphoreStatic+0x1a>
 8007ccc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007cd0:	f383 8811 	msr	BASEPRI, r3
 8007cd4:	f3bf 8f6f 	isb	sy
 8007cd8:	f3bf 8f4f 	dsb	sy
 8007cdc:	e7fe      	b.n	8007cdc <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007cde:	4288      	cmp	r0, r1
 8007ce0:	d208      	bcs.n	8007cf4 <xQueueCreateCountingSemaphoreStatic+0x30>
 8007ce2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007ce6:	f383 8811 	msr	BASEPRI, r3
 8007cea:	f3bf 8f6f 	isb	sy
 8007cee:	f3bf 8f4f 	dsb	sy
 8007cf2:	e7fe      	b.n	8007cf2 <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007cf4:	2202      	movs	r2, #2
 8007cf6:	9200      	str	r2, [sp, #0]
 8007cf8:	2200      	movs	r2, #0
 8007cfa:	4611      	mov	r1, r2
 8007cfc:	f7ff ff6d 	bl	8007bda <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8007d00:	b100      	cbz	r0, 8007d04 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007d02:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8007d04:	b002      	add	sp, #8
 8007d06:	bd10      	pop	{r4, pc}

08007d08 <xQueueCreateCountingSemaphore>:
	{
 8007d08:	b510      	push	{r4, lr}
 8007d0a:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007d0c:	b940      	cbnz	r0, 8007d20 <xQueueCreateCountingSemaphore+0x18>
 8007d0e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d12:	f383 8811 	msr	BASEPRI, r3
 8007d16:	f3bf 8f6f 	isb	sy
 8007d1a:	f3bf 8f4f 	dsb	sy
 8007d1e:	e7fe      	b.n	8007d1e <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007d20:	4288      	cmp	r0, r1
 8007d22:	d208      	bcs.n	8007d36 <xQueueCreateCountingSemaphore+0x2e>
 8007d24:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d28:	f383 8811 	msr	BASEPRI, r3
 8007d2c:	f3bf 8f6f 	isb	sy
 8007d30:	f3bf 8f4f 	dsb	sy
 8007d34:	e7fe      	b.n	8007d34 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007d36:	2202      	movs	r2, #2
 8007d38:	2100      	movs	r1, #0
 8007d3a:	f7ff ff9c 	bl	8007c76 <xQueueGenericCreate>
		if( xHandle != NULL )
 8007d3e:	b100      	cbz	r0, 8007d42 <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007d40:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8007d42:	bd10      	pop	{r4, pc}

08007d44 <xQueueGenericSend>:
{
 8007d44:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8007d48:	460f      	mov	r7, r1
 8007d4a:	9201      	str	r2, [sp, #4]
 8007d4c:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 8007d4e:	4604      	mov	r4, r0
 8007d50:	b940      	cbnz	r0, 8007d64 <xQueueGenericSend+0x20>
 8007d52:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d56:	f383 8811 	msr	BASEPRI, r3
 8007d5a:	f3bf 8f6f 	isb	sy
 8007d5e:	f3bf 8f4f 	dsb	sy
 8007d62:	e7fe      	b.n	8007d62 <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007d64:	b951      	cbnz	r1, 8007d7c <xQueueGenericSend+0x38>
 8007d66:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8007d68:	b143      	cbz	r3, 8007d7c <xQueueGenericSend+0x38>
 8007d6a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d6e:	f383 8811 	msr	BASEPRI, r3
 8007d72:	f3bf 8f6f 	isb	sy
 8007d76:	f3bf 8f4f 	dsb	sy
 8007d7a:	e7fe      	b.n	8007d7a <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007d7c:	2e02      	cmp	r6, #2
 8007d7e:	d10b      	bne.n	8007d98 <xQueueGenericSend+0x54>
 8007d80:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007d82:	2b01      	cmp	r3, #1
 8007d84:	d008      	beq.n	8007d98 <xQueueGenericSend+0x54>
 8007d86:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d8a:	f383 8811 	msr	BASEPRI, r3
 8007d8e:	f3bf 8f6f 	isb	sy
 8007d92:	f3bf 8f4f 	dsb	sy
 8007d96:	e7fe      	b.n	8007d96 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007d98:	f001 f844 	bl	8008e24 <xTaskGetSchedulerState>
 8007d9c:	4605      	mov	r5, r0
 8007d9e:	b330      	cbz	r0, 8007dee <xQueueGenericSend+0xaa>
 8007da0:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8007da2:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8007da6:	f7ff fd0d 	bl	80077c4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007daa:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8007dac:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007dae:	429a      	cmp	r2, r3
 8007db0:	d301      	bcc.n	8007db6 <xQueueGenericSend+0x72>
 8007db2:	2e02      	cmp	r6, #2
 8007db4:	d127      	bne.n	8007e06 <xQueueGenericSend+0xc2>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007db6:	4632      	mov	r2, r6
 8007db8:	4639      	mov	r1, r7
 8007dba:	4620      	mov	r0, r4
 8007dbc:	f7ff fe4d 	bl	8007a5a <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007dc0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007dc2:	b11b      	cbz	r3, 8007dcc <xQueueGenericSend+0x88>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007dc4:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007dc8:	f000 ff9e 	bl	8008d08 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8007dcc:	b148      	cbz	r0, 8007de2 <xQueueGenericSend+0x9e>
						queueYIELD_IF_USING_PREEMPTION();
 8007dce:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007dd2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007dd6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007dda:	f3bf 8f4f 	dsb	sy
 8007dde:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007de2:	f7ff fd0f 	bl	8007804 <vPortExitCritical>
				return pdPASS;
 8007de6:	2001      	movs	r0, #1
}
 8007de8:	b004      	add	sp, #16
 8007dea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007dee:	9b01      	ldr	r3, [sp, #4]
 8007df0:	2b00      	cmp	r3, #0
 8007df2:	d0d6      	beq.n	8007da2 <xQueueGenericSend+0x5e>
 8007df4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007df8:	f383 8811 	msr	BASEPRI, r3
 8007dfc:	f3bf 8f6f 	isb	sy
 8007e00:	f3bf 8f4f 	dsb	sy
 8007e04:	e7fe      	b.n	8007e04 <xQueueGenericSend+0xc0>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007e06:	9b01      	ldr	r3, [sp, #4]
 8007e08:	b91b      	cbnz	r3, 8007e12 <xQueueGenericSend+0xce>
					taskEXIT_CRITICAL();
 8007e0a:	f7ff fcfb 	bl	8007804 <vPortExitCritical>
					return errQUEUE_FULL;
 8007e0e:	2000      	movs	r0, #0
 8007e10:	e7ea      	b.n	8007de8 <xQueueGenericSend+0xa4>
				else if( xEntryTimeSet == pdFALSE )
 8007e12:	b915      	cbnz	r5, 8007e1a <xQueueGenericSend+0xd6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007e14:	a802      	add	r0, sp, #8
 8007e16:	f000 ffb7 	bl	8008d88 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007e1a:	f7ff fcf3 	bl	8007804 <vPortExitCritical>
		vTaskSuspendAll();
 8007e1e:	f000 fdc5 	bl	80089ac <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007e22:	f7ff fccf 	bl	80077c4 <vPortEnterCritical>
 8007e26:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8007e2a:	2bff      	cmp	r3, #255	@ 0xff
 8007e2c:	bf08      	it	eq
 8007e2e:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 8007e32:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8007e36:	2bff      	cmp	r3, #255	@ 0xff
 8007e38:	bf08      	it	eq
 8007e3a:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 8007e3e:	f7ff fce1 	bl	8007804 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007e42:	a901      	add	r1, sp, #4
 8007e44:	a802      	add	r0, sp, #8
 8007e46:	f000 ffab 	bl	8008da0 <xTaskCheckForTimeOut>
 8007e4a:	bb38      	cbnz	r0, 8007e9c <xQueueGenericSend+0x158>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007e4c:	f7ff fcba 	bl	80077c4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8007e50:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8007e52:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007e54:	429a      	cmp	r2, r3
 8007e56:	d10e      	bne.n	8007e76 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007e58:	f7ff fcd4 	bl	8007804 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8007e5c:	9901      	ldr	r1, [sp, #4]
 8007e5e:	f104 0010 	add.w	r0, r4, #16
 8007e62:	f000 ff19 	bl	8008c98 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007e66:	4620      	mov	r0, r4
 8007e68:	f7ff fe40 	bl	8007aec <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007e6c:	f000 fe42 	bl	8008af4 <xTaskResumeAll>
 8007e70:	b148      	cbz	r0, 8007e86 <xQueueGenericSend+0x142>
 8007e72:	2501      	movs	r5, #1
 8007e74:	e797      	b.n	8007da6 <xQueueGenericSend+0x62>
	taskEXIT_CRITICAL();
 8007e76:	f7ff fcc5 	bl	8007804 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8007e7a:	4620      	mov	r0, r4
 8007e7c:	f7ff fe36 	bl	8007aec <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007e80:	f000 fe38 	bl	8008af4 <xTaskResumeAll>
 8007e84:	e7f5      	b.n	8007e72 <xQueueGenericSend+0x12e>
					portYIELD_WITHIN_API();
 8007e86:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007e8a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007e8e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007e92:	f3bf 8f4f 	dsb	sy
 8007e96:	f3bf 8f6f 	isb	sy
 8007e9a:	e7ea      	b.n	8007e72 <xQueueGenericSend+0x12e>
			prvUnlockQueue( pxQueue );
 8007e9c:	4620      	mov	r0, r4
 8007e9e:	f7ff fe25 	bl	8007aec <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007ea2:	f000 fe27 	bl	8008af4 <xTaskResumeAll>
			return errQUEUE_FULL;
 8007ea6:	e7b2      	b.n	8007e0e <xQueueGenericSend+0xca>

08007ea8 <xQueueGenericSendFromISR>:
{
 8007ea8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007eac:	4689      	mov	r9, r1
 8007eae:	4617      	mov	r7, r2
 8007eb0:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 8007eb2:	4604      	mov	r4, r0
 8007eb4:	b940      	cbnz	r0, 8007ec8 <xQueueGenericSendFromISR+0x20>
 8007eb6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007eba:	f383 8811 	msr	BASEPRI, r3
 8007ebe:	f3bf 8f6f 	isb	sy
 8007ec2:	f3bf 8f4f 	dsb	sy
 8007ec6:	e7fe      	b.n	8007ec6 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007ec8:	b951      	cbnz	r1, 8007ee0 <xQueueGenericSendFromISR+0x38>
 8007eca:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8007ecc:	b143      	cbz	r3, 8007ee0 <xQueueGenericSendFromISR+0x38>
 8007ece:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007ed2:	f383 8811 	msr	BASEPRI, r3
 8007ed6:	f3bf 8f6f 	isb	sy
 8007eda:	f3bf 8f4f 	dsb	sy
 8007ede:	e7fe      	b.n	8007ede <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007ee0:	2e02      	cmp	r6, #2
 8007ee2:	d10b      	bne.n	8007efc <xQueueGenericSendFromISR+0x54>
 8007ee4:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007ee6:	2b01      	cmp	r3, #1
 8007ee8:	d008      	beq.n	8007efc <xQueueGenericSendFromISR+0x54>
 8007eea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007eee:	f383 8811 	msr	BASEPRI, r3
 8007ef2:	f3bf 8f6f 	isb	sy
 8007ef6:	f3bf 8f4f 	dsb	sy
 8007efa:	e7fe      	b.n	8007efa <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007efc:	f7ff fd74 	bl	80079e8 <vPortValidateInterruptPriority>
	__asm volatile
 8007f00:	f3ef 8811 	mrs	r8, BASEPRI
 8007f04:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f08:	f383 8811 	msr	BASEPRI, r3
 8007f0c:	f3bf 8f6f 	isb	sy
 8007f10:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007f14:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8007f16:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007f18:	429a      	cmp	r2, r3
 8007f1a:	d301      	bcc.n	8007f20 <xQueueGenericSendFromISR+0x78>
 8007f1c:	2e02      	cmp	r6, #2
 8007f1e:	d11e      	bne.n	8007f5e <xQueueGenericSendFromISR+0xb6>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007f20:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007f24:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8007f26:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007f28:	4632      	mov	r2, r6
 8007f2a:	4649      	mov	r1, r9
 8007f2c:	4620      	mov	r0, r4
 8007f2e:	f7ff fd94 	bl	8007a5a <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8007f32:	1c6b      	adds	r3, r5, #1
 8007f34:	d10e      	bne.n	8007f54 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007f36:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007f38:	b13b      	cbz	r3, 8007f4a <xQueueGenericSendFromISR+0xa2>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007f3a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007f3e:	f000 fee3 	bl	8008d08 <xTaskRemoveFromEventList>
 8007f42:	b110      	cbz	r0, 8007f4a <xQueueGenericSendFromISR+0xa2>
							if( pxHigherPriorityTaskWoken != NULL )
 8007f44:	b10f      	cbz	r7, 8007f4a <xQueueGenericSendFromISR+0xa2>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007f46:	2301      	movs	r3, #1
 8007f48:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 8007f4a:	2001      	movs	r0, #1
	__asm volatile
 8007f4c:	f388 8811 	msr	BASEPRI, r8
}
 8007f50:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007f54:	3501      	adds	r5, #1
 8007f56:	b26d      	sxtb	r5, r5
 8007f58:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 8007f5c:	e7f5      	b.n	8007f4a <xQueueGenericSendFromISR+0xa2>
			xReturn = errQUEUE_FULL;
 8007f5e:	2000      	movs	r0, #0
 8007f60:	e7f4      	b.n	8007f4c <xQueueGenericSendFromISR+0xa4>

08007f62 <xQueueGiveFromISR>:
{
 8007f62:	b570      	push	{r4, r5, r6, lr}
 8007f64:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007f66:	4604      	mov	r4, r0
 8007f68:	b940      	cbnz	r0, 8007f7c <xQueueGiveFromISR+0x1a>
	__asm volatile
 8007f6a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f6e:	f383 8811 	msr	BASEPRI, r3
 8007f72:	f3bf 8f6f 	isb	sy
 8007f76:	f3bf 8f4f 	dsb	sy
 8007f7a:	e7fe      	b.n	8007f7a <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007f7c:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8007f7e:	b143      	cbz	r3, 8007f92 <xQueueGiveFromISR+0x30>
 8007f80:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f84:	f383 8811 	msr	BASEPRI, r3
 8007f88:	f3bf 8f6f 	isb	sy
 8007f8c:	f3bf 8f4f 	dsb	sy
 8007f90:	e7fe      	b.n	8007f90 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8007f92:	6803      	ldr	r3, [r0, #0]
 8007f94:	b953      	cbnz	r3, 8007fac <xQueueGiveFromISR+0x4a>
 8007f96:	6883      	ldr	r3, [r0, #8]
 8007f98:	b143      	cbz	r3, 8007fac <xQueueGiveFromISR+0x4a>
 8007f9a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f9e:	f383 8811 	msr	BASEPRI, r3
 8007fa2:	f3bf 8f6f 	isb	sy
 8007fa6:	f3bf 8f4f 	dsb	sy
 8007faa:	e7fe      	b.n	8007faa <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007fac:	f7ff fd1c 	bl	80079e8 <vPortValidateInterruptPriority>
	__asm volatile
 8007fb0:	f3ef 8611 	mrs	r6, BASEPRI
 8007fb4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007fb8:	f383 8811 	msr	BASEPRI, r3
 8007fbc:	f3bf 8f6f 	isb	sy
 8007fc0:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007fc4:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8007fc6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007fc8:	4293      	cmp	r3, r2
 8007fca:	d919      	bls.n	8008000 <xQueueGiveFromISR+0x9e>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007fcc:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007fd0:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8007fd2:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8007fd4:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007fd6:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 8007fd8:	d10d      	bne.n	8007ff6 <xQueueGiveFromISR+0x94>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007fda:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007fdc:	b13b      	cbz	r3, 8007fee <xQueueGiveFromISR+0x8c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007fde:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007fe2:	f000 fe91 	bl	8008d08 <xTaskRemoveFromEventList>
 8007fe6:	b110      	cbz	r0, 8007fee <xQueueGiveFromISR+0x8c>
							if( pxHigherPriorityTaskWoken != NULL )
 8007fe8:	b10d      	cbz	r5, 8007fee <xQueueGiveFromISR+0x8c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007fea:	2301      	movs	r3, #1
 8007fec:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 8007fee:	2001      	movs	r0, #1
	__asm volatile
 8007ff0:	f386 8811 	msr	BASEPRI, r6
}
 8007ff4:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007ff6:	3301      	adds	r3, #1
 8007ff8:	b25b      	sxtb	r3, r3
 8007ffa:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 8007ffe:	e7f6      	b.n	8007fee <xQueueGiveFromISR+0x8c>
			xReturn = errQUEUE_FULL;
 8008000:	2000      	movs	r0, #0
 8008002:	e7f5      	b.n	8007ff0 <xQueueGiveFromISR+0x8e>

08008004 <xQueueReceive>:
{
 8008004:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008008:	460e      	mov	r6, r1
 800800a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800800c:	4604      	mov	r4, r0
 800800e:	b940      	cbnz	r0, 8008022 <xQueueReceive+0x1e>
	__asm volatile
 8008010:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008014:	f383 8811 	msr	BASEPRI, r3
 8008018:	f3bf 8f6f 	isb	sy
 800801c:	f3bf 8f4f 	dsb	sy
 8008020:	e7fe      	b.n	8008020 <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008022:	b951      	cbnz	r1, 800803a <xQueueReceive+0x36>
 8008024:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008026:	b143      	cbz	r3, 800803a <xQueueReceive+0x36>
 8008028:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800802c:	f383 8811 	msr	BASEPRI, r3
 8008030:	f3bf 8f6f 	isb	sy
 8008034:	f3bf 8f4f 	dsb	sy
 8008038:	e7fe      	b.n	8008038 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800803a:	f000 fef3 	bl	8008e24 <xTaskGetSchedulerState>
 800803e:	4605      	mov	r5, r0
 8008040:	b318      	cbz	r0, 800808a <xQueueReceive+0x86>
 8008042:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8008044:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8008048:	f7ff fbbc 	bl	80077c4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800804c:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800804e:	b347      	cbz	r7, 80080a2 <xQueueReceive+0x9e>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008050:	4631      	mov	r1, r6
 8008052:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008054:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008056:	f7ff fd33 	bl	8007ac0 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800805a:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800805c:	6923      	ldr	r3, [r4, #16]
 800805e:	b173      	cbz	r3, 800807e <xQueueReceive+0x7a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008060:	f104 0010 	add.w	r0, r4, #16
 8008064:	f000 fe50 	bl	8008d08 <xTaskRemoveFromEventList>
 8008068:	b148      	cbz	r0, 800807e <xQueueReceive+0x7a>
						queueYIELD_IF_USING_PREEMPTION();
 800806a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800806e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008072:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008076:	f3bf 8f4f 	dsb	sy
 800807a:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800807e:	f7ff fbc1 	bl	8007804 <vPortExitCritical>
				return pdPASS;
 8008082:	2001      	movs	r0, #1
}
 8008084:	b004      	add	sp, #16
 8008086:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800808a:	9b01      	ldr	r3, [sp, #4]
 800808c:	2b00      	cmp	r3, #0
 800808e:	d0d9      	beq.n	8008044 <xQueueReceive+0x40>
 8008090:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008094:	f383 8811 	msr	BASEPRI, r3
 8008098:	f3bf 8f6f 	isb	sy
 800809c:	f3bf 8f4f 	dsb	sy
 80080a0:	e7fe      	b.n	80080a0 <xQueueReceive+0x9c>
				if( xTicksToWait == ( TickType_t ) 0 )
 80080a2:	9b01      	ldr	r3, [sp, #4]
 80080a4:	b91b      	cbnz	r3, 80080ae <xQueueReceive+0xaa>
					taskEXIT_CRITICAL();
 80080a6:	f7ff fbad 	bl	8007804 <vPortExitCritical>
					return errQUEUE_EMPTY;
 80080aa:	2000      	movs	r0, #0
 80080ac:	e7ea      	b.n	8008084 <xQueueReceive+0x80>
				else if( xEntryTimeSet == pdFALSE )
 80080ae:	b915      	cbnz	r5, 80080b6 <xQueueReceive+0xb2>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80080b0:	a802      	add	r0, sp, #8
 80080b2:	f000 fe69 	bl	8008d88 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80080b6:	f7ff fba5 	bl	8007804 <vPortExitCritical>
		vTaskSuspendAll();
 80080ba:	f000 fc77 	bl	80089ac <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80080be:	f7ff fb81 	bl	80077c4 <vPortEnterCritical>
 80080c2:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80080c6:	2bff      	cmp	r3, #255	@ 0xff
 80080c8:	bf08      	it	eq
 80080ca:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 80080ce:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80080d2:	2bff      	cmp	r3, #255	@ 0xff
 80080d4:	bf08      	it	eq
 80080d6:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 80080da:	f7ff fb93 	bl	8007804 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80080de:	a901      	add	r1, sp, #4
 80080e0:	a802      	add	r0, sp, #8
 80080e2:	f000 fe5d 	bl	8008da0 <xTaskCheckForTimeOut>
 80080e6:	bb00      	cbnz	r0, 800812a <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80080e8:	4620      	mov	r0, r4
 80080ea:	f7ff fcab 	bl	8007a44 <prvIsQueueEmpty>
 80080ee:	b1b0      	cbz	r0, 800811e <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80080f0:	9901      	ldr	r1, [sp, #4]
 80080f2:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80080f6:	f000 fdcf 	bl	8008c98 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80080fa:	4620      	mov	r0, r4
 80080fc:	f7ff fcf6 	bl	8007aec <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008100:	f000 fcf8 	bl	8008af4 <xTaskResumeAll>
 8008104:	b948      	cbnz	r0, 800811a <xQueueReceive+0x116>
					portYIELD_WITHIN_API();
 8008106:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800810a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800810e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008112:	f3bf 8f4f 	dsb	sy
 8008116:	f3bf 8f6f 	isb	sy
 800811a:	2501      	movs	r5, #1
 800811c:	e794      	b.n	8008048 <xQueueReceive+0x44>
				prvUnlockQueue( pxQueue );
 800811e:	4620      	mov	r0, r4
 8008120:	f7ff fce4 	bl	8007aec <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008124:	f000 fce6 	bl	8008af4 <xTaskResumeAll>
 8008128:	e7f7      	b.n	800811a <xQueueReceive+0x116>
			prvUnlockQueue( pxQueue );
 800812a:	4620      	mov	r0, r4
 800812c:	f7ff fcde 	bl	8007aec <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008130:	f000 fce0 	bl	8008af4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008134:	4620      	mov	r0, r4
 8008136:	f7ff fc85 	bl	8007a44 <prvIsQueueEmpty>
 800813a:	2800      	cmp	r0, #0
 800813c:	d0ed      	beq.n	800811a <xQueueReceive+0x116>
 800813e:	e7b4      	b.n	80080aa <xQueueReceive+0xa6>

08008140 <xQueueSemaphoreTake>:
{
 8008140:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008142:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8008144:	4604      	mov	r4, r0
{
 8008146:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008148:	b940      	cbnz	r0, 800815c <xQueueSemaphoreTake+0x1c>
 800814a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800814e:	f383 8811 	msr	BASEPRI, r3
 8008152:	f3bf 8f6f 	isb	sy
 8008156:	f3bf 8f4f 	dsb	sy
 800815a:	e7fe      	b.n	800815a <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800815c:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 800815e:	b145      	cbz	r5, 8008172 <xQueueSemaphoreTake+0x32>
 8008160:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008164:	f383 8811 	msr	BASEPRI, r3
 8008168:	f3bf 8f6f 	isb	sy
 800816c:	f3bf 8f4f 	dsb	sy
 8008170:	e7fe      	b.n	8008170 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008172:	f000 fe57 	bl	8008e24 <xTaskGetSchedulerState>
 8008176:	4606      	mov	r6, r0
 8008178:	b320      	cbz	r0, 80081c4 <xQueueSemaphoreTake+0x84>
 800817a:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 800817c:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 800817e:	f7ff fb21 	bl	80077c4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8008182:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8008184:	b353      	cbz	r3, 80081dc <xQueueSemaphoreTake+0x9c>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8008186:	3b01      	subs	r3, #1
 8008188:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800818a:	6823      	ldr	r3, [r4, #0]
 800818c:	b913      	cbnz	r3, 8008194 <xQueueSemaphoreTake+0x54>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800818e:	f000 ff27 	bl	8008fe0 <pvTaskIncrementMutexHeldCount>
 8008192:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008194:	6923      	ldr	r3, [r4, #16]
 8008196:	b173      	cbz	r3, 80081b6 <xQueueSemaphoreTake+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008198:	f104 0010 	add.w	r0, r4, #16
 800819c:	f000 fdb4 	bl	8008d08 <xTaskRemoveFromEventList>
 80081a0:	b148      	cbz	r0, 80081b6 <xQueueSemaphoreTake+0x76>
						queueYIELD_IF_USING_PREEMPTION();
 80081a2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80081a6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80081aa:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80081ae:	f3bf 8f4f 	dsb	sy
 80081b2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80081b6:	f7ff fb25 	bl	8007804 <vPortExitCritical>
				return pdPASS;
 80081ba:	2001      	movs	r0, #1
}
 80081bc:	b005      	add	sp, #20
 80081be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80081c0:	4635      	mov	r5, r6
 80081c2:	e7db      	b.n	800817c <xQueueSemaphoreTake+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80081c4:	9b01      	ldr	r3, [sp, #4]
 80081c6:	2b00      	cmp	r3, #0
 80081c8:	d0fa      	beq.n	80081c0 <xQueueSemaphoreTake+0x80>
 80081ca:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80081ce:	f383 8811 	msr	BASEPRI, r3
 80081d2:	f3bf 8f6f 	isb	sy
 80081d6:	f3bf 8f4f 	dsb	sy
 80081da:	e7fe      	b.n	80081da <xQueueSemaphoreTake+0x9a>
				if( xTicksToWait == ( TickType_t ) 0 )
 80081dc:	9b01      	ldr	r3, [sp, #4]
 80081de:	b953      	cbnz	r3, 80081f6 <xQueueSemaphoreTake+0xb6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 80081e0:	2d00      	cmp	r5, #0
 80081e2:	d066      	beq.n	80082b2 <xQueueSemaphoreTake+0x172>
 80081e4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80081e8:	f383 8811 	msr	BASEPRI, r3
 80081ec:	f3bf 8f6f 	isb	sy
 80081f0:	f3bf 8f4f 	dsb	sy
 80081f4:	e7fe      	b.n	80081f4 <xQueueSemaphoreTake+0xb4>
				else if( xEntryTimeSet == pdFALSE )
 80081f6:	b916      	cbnz	r6, 80081fe <xQueueSemaphoreTake+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80081f8:	a802      	add	r0, sp, #8
 80081fa:	f000 fdc5 	bl	8008d88 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80081fe:	f7ff fb01 	bl	8007804 <vPortExitCritical>
		vTaskSuspendAll();
 8008202:	f000 fbd3 	bl	80089ac <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008206:	f7ff fadd 	bl	80077c4 <vPortEnterCritical>
 800820a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800820e:	2bff      	cmp	r3, #255	@ 0xff
 8008210:	bf08      	it	eq
 8008212:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 8008216:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800821a:	2bff      	cmp	r3, #255	@ 0xff
 800821c:	bf08      	it	eq
 800821e:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 8008222:	f7ff faef 	bl	8007804 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008226:	a901      	add	r1, sp, #4
 8008228:	a802      	add	r0, sp, #8
 800822a:	f000 fdb9 	bl	8008da0 <xTaskCheckForTimeOut>
 800822e:	bb50      	cbnz	r0, 8008286 <xQueueSemaphoreTake+0x146>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008230:	4620      	mov	r0, r4
 8008232:	f7ff fc07 	bl	8007a44 <prvIsQueueEmpty>
 8008236:	b300      	cbz	r0, 800827a <xQueueSemaphoreTake+0x13a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008238:	6823      	ldr	r3, [r4, #0]
 800823a:	b93b      	cbnz	r3, 800824c <xQueueSemaphoreTake+0x10c>
						taskENTER_CRITICAL();
 800823c:	f7ff fac2 	bl	80077c4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008240:	68a0      	ldr	r0, [r4, #8]
 8008242:	f000 fdff 	bl	8008e44 <xTaskPriorityInherit>
 8008246:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8008248:	f7ff fadc 	bl	8007804 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800824c:	9901      	ldr	r1, [sp, #4]
 800824e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008252:	f000 fd21 	bl	8008c98 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008256:	4620      	mov	r0, r4
 8008258:	f7ff fc48 	bl	8007aec <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800825c:	f000 fc4a 	bl	8008af4 <xTaskResumeAll>
 8008260:	b948      	cbnz	r0, 8008276 <xQueueSemaphoreTake+0x136>
					portYIELD_WITHIN_API();
 8008262:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008266:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800826a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800826e:	f3bf 8f4f 	dsb	sy
 8008272:	f3bf 8f6f 	isb	sy
 8008276:	2601      	movs	r6, #1
 8008278:	e781      	b.n	800817e <xQueueSemaphoreTake+0x3e>
				prvUnlockQueue( pxQueue );
 800827a:	4620      	mov	r0, r4
 800827c:	f7ff fc36 	bl	8007aec <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008280:	f000 fc38 	bl	8008af4 <xTaskResumeAll>
 8008284:	e7f7      	b.n	8008276 <xQueueSemaphoreTake+0x136>
			prvUnlockQueue( pxQueue );
 8008286:	4620      	mov	r0, r4
 8008288:	f7ff fc30 	bl	8007aec <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800828c:	f000 fc32 	bl	8008af4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008290:	4620      	mov	r0, r4
 8008292:	f7ff fbd7 	bl	8007a44 <prvIsQueueEmpty>
 8008296:	2800      	cmp	r0, #0
 8008298:	d0ed      	beq.n	8008276 <xQueueSemaphoreTake+0x136>
					if( xInheritanceOccurred != pdFALSE )
 800829a:	b165      	cbz	r5, 80082b6 <xQueueSemaphoreTake+0x176>
						taskENTER_CRITICAL();
 800829c:	f7ff fa92 	bl	80077c4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 80082a0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80082a2:	b119      	cbz	r1, 80082ac <xQueueSemaphoreTake+0x16c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 80082a4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80082a6:	6819      	ldr	r1, [r3, #0]
 80082a8:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 80082ac:	68a0      	ldr	r0, [r4, #8]
 80082ae:	f000 fe49 	bl	8008f44 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 80082b2:	f7ff faa7 	bl	8007804 <vPortExitCritical>
					return errQUEUE_EMPTY;
 80082b6:	2000      	movs	r0, #0
 80082b8:	e780      	b.n	80081bc <xQueueSemaphoreTake+0x7c>

080082ba <xQueueReceiveFromISR>:
{
 80082ba:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80082be:	4689      	mov	r9, r1
 80082c0:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 80082c2:	4604      	mov	r4, r0
 80082c4:	b940      	cbnz	r0, 80082d8 <xQueueReceiveFromISR+0x1e>
 80082c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80082ca:	f383 8811 	msr	BASEPRI, r3
 80082ce:	f3bf 8f6f 	isb	sy
 80082d2:	f3bf 8f4f 	dsb	sy
 80082d6:	e7fe      	b.n	80082d6 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80082d8:	b951      	cbnz	r1, 80082f0 <xQueueReceiveFromISR+0x36>
 80082da:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80082dc:	b143      	cbz	r3, 80082f0 <xQueueReceiveFromISR+0x36>
 80082de:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80082e2:	f383 8811 	msr	BASEPRI, r3
 80082e6:	f3bf 8f6f 	isb	sy
 80082ea:	f3bf 8f4f 	dsb	sy
 80082ee:	e7fe      	b.n	80082ee <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80082f0:	f7ff fb7a 	bl	80079e8 <vPortValidateInterruptPriority>
	__asm volatile
 80082f4:	f3ef 8711 	mrs	r7, BASEPRI
 80082f8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80082fc:	f383 8811 	msr	BASEPRI, r3
 8008300:	f3bf 8f6f 	isb	sy
 8008304:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008308:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800830a:	b30d      	cbz	r5, 8008350 <xQueueReceiveFromISR+0x96>
			const int8_t cRxLock = pxQueue->cRxLock;
 800830c:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008310:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8008312:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008314:	4620      	mov	r0, r4
 8008316:	f7ff fbd3 	bl	8007ac0 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800831a:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800831c:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800831e:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 8008320:	d111      	bne.n	8008346 <xQueueReceiveFromISR+0x8c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008322:	6923      	ldr	r3, [r4, #16]
 8008324:	b153      	cbz	r3, 800833c <xQueueReceiveFromISR+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008326:	f104 0010 	add.w	r0, r4, #16
 800832a:	f000 fced 	bl	8008d08 <xTaskRemoveFromEventList>
 800832e:	b128      	cbz	r0, 800833c <xQueueReceiveFromISR+0x82>
						if( pxHigherPriorityTaskWoken != NULL )
 8008330:	f1b8 0f00 	cmp.w	r8, #0
 8008334:	d002      	beq.n	800833c <xQueueReceiveFromISR+0x82>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8008336:	2301      	movs	r3, #1
 8008338:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 800833c:	2001      	movs	r0, #1
	__asm volatile
 800833e:	f387 8811 	msr	BASEPRI, r7
}
 8008342:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8008346:	3601      	adds	r6, #1
 8008348:	b276      	sxtb	r6, r6
 800834a:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 800834e:	e7f5      	b.n	800833c <xQueueReceiveFromISR+0x82>
			xReturn = pdFAIL;
 8008350:	4628      	mov	r0, r5
 8008352:	e7f4      	b.n	800833e <xQueueReceiveFromISR+0x84>

08008354 <uxQueueMessagesWaiting>:
{
 8008354:	b510      	push	{r4, lr}
	configASSERT( xQueue );
 8008356:	4604      	mov	r4, r0
 8008358:	b940      	cbnz	r0, 800836c <uxQueueMessagesWaiting+0x18>
	__asm volatile
 800835a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800835e:	f383 8811 	msr	BASEPRI, r3
 8008362:	f3bf 8f6f 	isb	sy
 8008366:	f3bf 8f4f 	dsb	sy
 800836a:	e7fe      	b.n	800836a <uxQueueMessagesWaiting+0x16>
	taskENTER_CRITICAL();
 800836c:	f7ff fa2a 	bl	80077c4 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 8008370:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
	taskEXIT_CRITICAL();
 8008372:	f7ff fa47 	bl	8007804 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 8008376:	4620      	mov	r0, r4
 8008378:	bd10      	pop	{r4, pc}

0800837a <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800837a:	b940      	cbnz	r0, 800838e <uxQueueMessagesWaitingFromISR+0x14>
 800837c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008380:	f383 8811 	msr	BASEPRI, r3
 8008384:	f3bf 8f6f 	isb	sy
 8008388:	f3bf 8f4f 	dsb	sy
 800838c:	e7fe      	b.n	800838c <uxQueueMessagesWaitingFromISR+0x12>
	uxReturn = pxQueue->uxMessagesWaiting;
 800838e:	6b80      	ldr	r0, [r0, #56]	@ 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 8008390:	4770      	bx	lr
	...

08008394 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8008394:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008396:	4a07      	ldr	r2, [pc, #28]	@ (80083b4 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008398:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800839a:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800839e:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 80083a2:	b91d      	cbnz	r5, 80083ac <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80083a4:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80083a8:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 80083aa:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80083ac:	3301      	adds	r3, #1
 80083ae:	2b08      	cmp	r3, #8
 80083b0:	d1f3      	bne.n	800839a <vQueueAddToRegistry+0x6>
 80083b2:	e7fa      	b.n	80083aa <vQueueAddToRegistry+0x16>
 80083b4:	2001318c 	.word	0x2001318c

080083b8 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 80083b8:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80083ba:	4a09      	ldr	r2, [pc, #36]	@ (80083e0 <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80083bc:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80083be:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 80083c2:	4281      	cmp	r1, r0
 80083c4:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 80083c8:	d106      	bne.n	80083d8 <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 80083ca:	4a06      	ldr	r2, [pc, #24]	@ (80083e4 <vQueueUnregisterQueue+0x2c>)
 80083cc:	2100      	movs	r1, #0
 80083ce:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 80083d2:	4422      	add	r2, r4
 80083d4:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 80083d6:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80083d8:	3301      	adds	r3, #1
 80083da:	2b08      	cmp	r3, #8
 80083dc:	d1ef      	bne.n	80083be <vQueueUnregisterQueue+0x6>
 80083de:	e7fa      	b.n	80083d6 <vQueueUnregisterQueue+0x1e>
 80083e0:	20013190 	.word	0x20013190
 80083e4:	2001318c 	.word	0x2001318c

080083e8 <vQueueDelete>:
{
 80083e8:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 80083ea:	b940      	cbnz	r0, 80083fe <vQueueDelete+0x16>
 80083ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80083f0:	f383 8811 	msr	BASEPRI, r3
 80083f4:	f3bf 8f6f 	isb	sy
 80083f8:	f3bf 8f4f 	dsb	sy
 80083fc:	e7fe      	b.n	80083fc <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 80083fe:	f7ff ffdb 	bl	80083b8 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8008402:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 8008406:	b91b      	cbnz	r3, 8008410 <vQueueDelete+0x28>
}
 8008408:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800840c:	f7ff b8f4 	b.w	80075f8 <vPortFree>
}
 8008410:	bd10      	pop	{r4, pc}

08008412 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8008412:	b570      	push	{r4, r5, r6, lr}
 8008414:	4604      	mov	r4, r0
 8008416:	460d      	mov	r5, r1
 8008418:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800841a:	f7ff f9d3 	bl	80077c4 <vPortEnterCritical>
 800841e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008422:	2bff      	cmp	r3, #255	@ 0xff
 8008424:	bf04      	itt	eq
 8008426:	2300      	moveq	r3, #0
 8008428:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 800842c:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008430:	2bff      	cmp	r3, #255	@ 0xff
 8008432:	bf04      	itt	eq
 8008434:	2300      	moveq	r3, #0
 8008436:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 800843a:	f7ff f9e3 	bl	8007804 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800843e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8008440:	b92b      	cbnz	r3, 800844e <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8008442:	4632      	mov	r2, r6
 8008444:	4629      	mov	r1, r5
 8008446:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800844a:	f000 fc3f 	bl	8008ccc <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800844e:	4620      	mov	r0, r4
	}
 8008450:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8008454:	f7ff bb4a 	b.w	8007aec <prvUnlockQueue>

08008458 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8008458:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800845c:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800845e:	f7ff f9b1 	bl	80077c4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8008462:	4b30      	ldr	r3, [pc, #192]	@ (8008524 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8008464:	4e30      	ldr	r6, [pc, #192]	@ (8008528 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8008466:	681a      	ldr	r2, [r3, #0]
 8008468:	4f30      	ldr	r7, [pc, #192]	@ (800852c <prvAddNewTaskToReadyList+0xd4>)
 800846a:	3201      	adds	r2, #1
 800846c:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800846e:	6835      	ldr	r5, [r6, #0]
 8008470:	2d00      	cmp	r5, #0
 8008472:	d14b      	bne.n	800850c <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8008474:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8008476:	681b      	ldr	r3, [r3, #0]
 8008478:	2b01      	cmp	r3, #1
 800847a:	d11f      	bne.n	80084bc <prvAddNewTaskToReadyList+0x64>
 800847c:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800847e:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008480:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8008482:	f7ff f8f7 	bl	8007674 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008486:	2d38      	cmp	r5, #56	@ 0x38
 8008488:	f108 0814 	add.w	r8, r8, #20
 800848c:	d1f7      	bne.n	800847e <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800848e:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 8008554 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8008492:	4d27      	ldr	r5, [pc, #156]	@ (8008530 <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8008494:	4640      	mov	r0, r8
 8008496:	f7ff f8ed 	bl	8007674 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800849a:	4628      	mov	r0, r5
 800849c:	f7ff f8ea 	bl	8007674 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80084a0:	4824      	ldr	r0, [pc, #144]	@ (8008534 <prvAddNewTaskToReadyList+0xdc>)
 80084a2:	f7ff f8e7 	bl	8007674 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80084a6:	4824      	ldr	r0, [pc, #144]	@ (8008538 <prvAddNewTaskToReadyList+0xe0>)
 80084a8:	f7ff f8e4 	bl	8007674 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 80084ac:	4823      	ldr	r0, [pc, #140]	@ (800853c <prvAddNewTaskToReadyList+0xe4>)
 80084ae:	f7ff f8e1 	bl	8007674 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 80084b2:	4b23      	ldr	r3, [pc, #140]	@ (8008540 <prvAddNewTaskToReadyList+0xe8>)
 80084b4:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 80084b8:	4b22      	ldr	r3, [pc, #136]	@ (8008544 <prvAddNewTaskToReadyList+0xec>)
 80084ba:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 80084bc:	4a22      	ldr	r2, [pc, #136]	@ (8008548 <prvAddNewTaskToReadyList+0xf0>)
 80084be:	6813      	ldr	r3, [r2, #0]
 80084c0:	3301      	adds	r3, #1
 80084c2:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 80084c4:	4a21      	ldr	r2, [pc, #132]	@ (800854c <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 80084c6:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 80084c8:	6811      	ldr	r1, [r2, #0]
 80084ca:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80084cc:	2014      	movs	r0, #20
 80084ce:	428b      	cmp	r3, r1
 80084d0:	fb00 7003 	mla	r0, r0, r3, r7
 80084d4:	f104 0104 	add.w	r1, r4, #4
 80084d8:	bf88      	it	hi
 80084da:	6013      	strhi	r3, [r2, #0]
 80084dc:	f7ff f8d8 	bl	8007690 <vListInsertEnd>
	taskEXIT_CRITICAL();
 80084e0:	f7ff f990 	bl	8007804 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 80084e4:	4b1a      	ldr	r3, [pc, #104]	@ (8008550 <prvAddNewTaskToReadyList+0xf8>)
 80084e6:	681b      	ldr	r3, [r3, #0]
 80084e8:	b173      	cbz	r3, 8008508 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 80084ea:	6833      	ldr	r3, [r6, #0]
 80084ec:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80084ee:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80084f0:	429a      	cmp	r2, r3
 80084f2:	d209      	bcs.n	8008508 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 80084f4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80084f8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80084fc:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008500:	f3bf 8f4f 	dsb	sy
 8008504:	f3bf 8f6f 	isb	sy
}
 8008508:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800850c:	4b10      	ldr	r3, [pc, #64]	@ (8008550 <prvAddNewTaskToReadyList+0xf8>)
 800850e:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008510:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 8008512:	2a00      	cmp	r2, #0
 8008514:	d1d2      	bne.n	80084bc <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008516:	6832      	ldr	r2, [r6, #0]
 8008518:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800851a:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800851c:	bf98      	it	ls
 800851e:	6034      	strls	r4, [r6, #0]
 8008520:	e7cc      	b.n	80084bc <prvAddNewTaskToReadyList+0x64>
 8008522:	bf00      	nop
 8008524:	200131f0 	.word	0x200131f0
 8008528:	200136c4 	.word	0x200136c4
 800852c:	20013264 	.word	0x20013264
 8008530:	2001323c 	.word	0x2001323c
 8008534:	20013220 	.word	0x20013220
 8008538:	2001320c 	.word	0x2001320c
 800853c:	200131f4 	.word	0x200131f4
 8008540:	20013238 	.word	0x20013238
 8008544:	20013234 	.word	0x20013234
 8008548:	200131d4 	.word	0x200131d4
 800854c:	200131e8 	.word	0x200131e8
 8008550:	200131e4 	.word	0x200131e4
 8008554:	20013250 	.word	0x20013250

08008558 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8008558:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800855a:	4b15      	ldr	r3, [pc, #84]	@ (80085b0 <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800855c:	4d15      	ldr	r5, [pc, #84]	@ (80085b4 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800855e:	681c      	ldr	r4, [r3, #0]
{
 8008560:	4606      	mov	r6, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008562:	6828      	ldr	r0, [r5, #0]
 8008564:	3004      	adds	r0, #4
{
 8008566:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008568:	f7ff f8b4 	bl	80076d4 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800856c:	1c73      	adds	r3, r6, #1
 800856e:	d107      	bne.n	8008580 <prvAddCurrentTaskToDelayedList+0x28>
 8008570:	b137      	cbz	r7, 8008580 <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008572:	6829      	ldr	r1, [r5, #0]
 8008574:	4810      	ldr	r0, [pc, #64]	@ (80085b8 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8008576:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800857a:	3104      	adds	r1, #4
 800857c:	f7ff b888 	b.w	8007690 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8008580:	682b      	ldr	r3, [r5, #0]
 8008582:	19a4      	adds	r4, r4, r6
 8008584:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8008586:	d307      	bcc.n	8008598 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008588:	4b0c      	ldr	r3, [pc, #48]	@ (80085bc <prvAddCurrentTaskToDelayedList+0x64>)
 800858a:	6818      	ldr	r0, [r3, #0]
 800858c:	6829      	ldr	r1, [r5, #0]
}
 800858e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008592:	3104      	adds	r1, #4
 8008594:	f7ff b887 	b.w	80076a6 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008598:	4b09      	ldr	r3, [pc, #36]	@ (80085c0 <prvAddCurrentTaskToDelayedList+0x68>)
 800859a:	6818      	ldr	r0, [r3, #0]
 800859c:	6829      	ldr	r1, [r5, #0]
 800859e:	3104      	adds	r1, #4
 80085a0:	f7ff f881 	bl	80076a6 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80085a4:	4b07      	ldr	r3, [pc, #28]	@ (80085c4 <prvAddCurrentTaskToDelayedList+0x6c>)
 80085a6:	681a      	ldr	r2, [r3, #0]
 80085a8:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 80085aa:	bf88      	it	hi
 80085ac:	601c      	strhi	r4, [r3, #0]
}
 80085ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80085b0:	200131ec 	.word	0x200131ec
 80085b4:	200136c4 	.word	0x200136c4
 80085b8:	200131f4 	.word	0x200131f4
 80085bc:	20013234 	.word	0x20013234
 80085c0:	20013238 	.word	0x20013238
 80085c4:	200131d0 	.word	0x200131d0

080085c8 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80085c8:	4a06      	ldr	r2, [pc, #24]	@ (80085e4 <prvResetNextTaskUnblockTime+0x1c>)
 80085ca:	6813      	ldr	r3, [r2, #0]
 80085cc:	6819      	ldr	r1, [r3, #0]
 80085ce:	4b06      	ldr	r3, [pc, #24]	@ (80085e8 <prvResetNextTaskUnblockTime+0x20>)
 80085d0:	b919      	cbnz	r1, 80085da <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 80085d2:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80085d6:	601a      	str	r2, [r3, #0]
}
 80085d8:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80085da:	6812      	ldr	r2, [r2, #0]
 80085dc:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80085de:	68d2      	ldr	r2, [r2, #12]
 80085e0:	6852      	ldr	r2, [r2, #4]
 80085e2:	e7f8      	b.n	80085d6 <prvResetNextTaskUnblockTime+0xe>
 80085e4:	20013238 	.word	0x20013238
 80085e8:	200131d0 	.word	0x200131d0

080085ec <prvDeleteTCB>:
	{
 80085ec:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80085ee:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
	{
 80085f2:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80085f4:	b93b      	cbnz	r3, 8008606 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 80085f6:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 80085f8:	f7fe fffe 	bl	80075f8 <vPortFree>
				vPortFree( pxTCB );
 80085fc:	4620      	mov	r0, r4
	}
 80085fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8008602:	f7fe bff9 	b.w	80075f8 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8008606:	2b01      	cmp	r3, #1
 8008608:	d0f9      	beq.n	80085fe <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800860a:	2b02      	cmp	r3, #2
 800860c:	d008      	beq.n	8008620 <prvDeleteTCB+0x34>
 800860e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008612:	f383 8811 	msr	BASEPRI, r3
 8008616:	f3bf 8f6f 	isb	sy
 800861a:	f3bf 8f4f 	dsb	sy
 800861e:	e7fe      	b.n	800861e <prvDeleteTCB+0x32>
	}
 8008620:	bd10      	pop	{r4, pc}
	...

08008624 <prvIdleTask>:
{
 8008624:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008626:	4c13      	ldr	r4, [pc, #76]	@ (8008674 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008628:	4f13      	ldr	r7, [pc, #76]	@ (8008678 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 800862a:	4d14      	ldr	r5, [pc, #80]	@ (800867c <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800862c:	6823      	ldr	r3, [r4, #0]
 800862e:	b973      	cbnz	r3, 800864e <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8008630:	4b13      	ldr	r3, [pc, #76]	@ (8008680 <prvIdleTask+0x5c>)
 8008632:	681b      	ldr	r3, [r3, #0]
 8008634:	2b01      	cmp	r3, #1
 8008636:	d9f8      	bls.n	800862a <prvIdleTask+0x6>
				taskYIELD();
 8008638:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800863c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008640:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008644:	f3bf 8f4f 	dsb	sy
 8008648:	f3bf 8f6f 	isb	sy
 800864c:	e7ed      	b.n	800862a <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800864e:	f7ff f8b9 	bl	80077c4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008652:	68fb      	ldr	r3, [r7, #12]
 8008654:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008656:	1d30      	adds	r0, r6, #4
 8008658:	f7ff f83c 	bl	80076d4 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800865c:	682b      	ldr	r3, [r5, #0]
 800865e:	3b01      	subs	r3, #1
 8008660:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8008662:	6823      	ldr	r3, [r4, #0]
 8008664:	3b01      	subs	r3, #1
 8008666:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8008668:	f7ff f8cc 	bl	8007804 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800866c:	4630      	mov	r0, r6
 800866e:	f7ff ffbd 	bl	80085ec <prvDeleteTCB>
 8008672:	e7db      	b.n	800862c <prvIdleTask+0x8>
 8008674:	20013208 	.word	0x20013208
 8008678:	2001320c 	.word	0x2001320c
 800867c:	200131f0 	.word	0x200131f0
 8008680:	20013264 	.word	0x20013264

08008684 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008684:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008688:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800868c:	0096      	lsls	r6, r2, #2
 800868e:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008690:	4607      	mov	r7, r0
 8008692:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008694:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8008696:	21a5      	movs	r1, #165	@ 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008698:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800869a:	f013 faee 	bl	801bc7a <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800869e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80086a0:	3e04      	subs	r6, #4
 80086a2:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 80086a4:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 80086a8:	b3b5      	cbz	r5, 8008718 <prvInitialiseNewTask.constprop.0+0x94>
 80086aa:	1e6b      	subs	r3, r5, #1
 80086ac:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 80086b0:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80086b2:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80086b6:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 80086ba:	b109      	cbz	r1, 80086c0 <prvInitialiseNewTask.constprop.0+0x3c>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 80086bc:	42ab      	cmp	r3, r5
 80086be:	d1f8      	bne.n	80086b2 <prvInitialiseNewTask.constprop.0+0x2e>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 80086c0:	2300      	movs	r3, #0
 80086c2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 80086c6:	9d08      	ldr	r5, [sp, #32]
 80086c8:	2d37      	cmp	r5, #55	@ 0x37
 80086ca:	bf28      	it	cs
 80086cc:	2537      	movcs	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 80086ce:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 80086d2:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 80086d4:	64e5      	str	r5, [r4, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80086d6:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 80086d8:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80086dc:	f7fe ffd5 	bl	800768a <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80086e0:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 80086e4:	f104 0018 	add.w	r0, r4, #24
 80086e8:	f7fe ffcf 	bl	800768a <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 80086ec:	f8c4 a058 	str.w	sl, [r4, #88]	@ 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 80086f0:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80086f2:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 80086f4:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 80086f6:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 80086fa:	f884 a05c 	strb.w	sl, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80086fe:	4642      	mov	r2, r8
 8008700:	4639      	mov	r1, r7
 8008702:	4630      	mov	r0, r6
 8008704:	f7ff f834 	bl	8007770 <pxPortInitialiseStack>
 8008708:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800870a:	f1b9 0f00 	cmp.w	r9, #0
 800870e:	d001      	beq.n	8008714 <prvInitialiseNewTask.constprop.0+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8008710:	f8c9 4000 	str.w	r4, [r9]
}
 8008714:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8008718:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 800871c:	e7d3      	b.n	80086c6 <prvInitialiseNewTask.constprop.0+0x42>

0800871e <xTaskCreateStatic>:
	{
 800871e:	b570      	push	{r4, r5, r6, lr}
 8008720:	b086      	sub	sp, #24
 8008722:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 8008726:	b945      	cbnz	r5, 800873a <xTaskCreateStatic+0x1c>
 8008728:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800872c:	f383 8811 	msr	BASEPRI, r3
 8008730:	f3bf 8f6f 	isb	sy
 8008734:	f3bf 8f4f 	dsb	sy
 8008738:	e7fe      	b.n	8008738 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800873a:	b944      	cbnz	r4, 800874e <xTaskCreateStatic+0x30>
 800873c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008740:	f383 8811 	msr	BASEPRI, r3
 8008744:	f3bf 8f6f 	isb	sy
 8008748:	f3bf 8f4f 	dsb	sy
 800874c:	e7fe      	b.n	800874c <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800874e:	2660      	movs	r6, #96	@ 0x60
 8008750:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8008752:	9e05      	ldr	r6, [sp, #20]
 8008754:	2e60      	cmp	r6, #96	@ 0x60
 8008756:	d008      	beq.n	800876a <xTaskCreateStatic+0x4c>
 8008758:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800875c:	f383 8811 	msr	BASEPRI, r3
 8008760:	f3bf 8f6f 	isb	sy
 8008764:	f3bf 8f4f 	dsb	sy
 8008768:	e7fe      	b.n	8008768 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800876a:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800876c:	2502      	movs	r5, #2
 800876e:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008772:	ad04      	add	r5, sp, #16
 8008774:	9501      	str	r5, [sp, #4]
 8008776:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8008778:	9402      	str	r4, [sp, #8]
 800877a:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800877c:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800877e:	f7ff ff81 	bl	8008684 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008782:	4620      	mov	r0, r4
 8008784:	f7ff fe68 	bl	8008458 <prvAddNewTaskToReadyList>
	}
 8008788:	9804      	ldr	r0, [sp, #16]
 800878a:	b006      	add	sp, #24
 800878c:	bd70      	pop	{r4, r5, r6, pc}

0800878e <xTaskCreate>:
	{
 800878e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008792:	4607      	mov	r7, r0
 8008794:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008796:	0090      	lsls	r0, r2, #2
	{
 8008798:	4688      	mov	r8, r1
 800879a:	4616      	mov	r6, r2
 800879c:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800879e:	f7fe fe93 	bl	80074c8 <pvPortMalloc>
			if( pxStack != NULL )
 80087a2:	4605      	mov	r5, r0
 80087a4:	b920      	cbnz	r0, 80087b0 <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80087a6:	f04f 30ff 	mov.w	r0, #4294967295
	}
 80087aa:	b005      	add	sp, #20
 80087ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 80087b0:	2060      	movs	r0, #96	@ 0x60
 80087b2:	f7fe fe89 	bl	80074c8 <pvPortMalloc>
				if( pxNewTCB != NULL )
 80087b6:	4604      	mov	r4, r0
 80087b8:	b198      	cbz	r0, 80087e2 <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 80087ba:	2300      	movs	r3, #0
 80087bc:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80087c0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
					pxNewTCB->pxStack = pxStack;
 80087c2:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80087c4:	9301      	str	r3, [sp, #4]
 80087c6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80087c8:	9002      	str	r0, [sp, #8]
 80087ca:	9300      	str	r3, [sp, #0]
 80087cc:	4632      	mov	r2, r6
 80087ce:	464b      	mov	r3, r9
 80087d0:	4641      	mov	r1, r8
 80087d2:	4638      	mov	r0, r7
 80087d4:	f7ff ff56 	bl	8008684 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80087d8:	4620      	mov	r0, r4
 80087da:	f7ff fe3d 	bl	8008458 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 80087de:	2001      	movs	r0, #1
 80087e0:	e7e3      	b.n	80087aa <xTaskCreate+0x1c>
					vPortFree( pxStack );
 80087e2:	4628      	mov	r0, r5
 80087e4:	f7fe ff08 	bl	80075f8 <vPortFree>
		if( pxNewTCB != NULL )
 80087e8:	e7dd      	b.n	80087a6 <xTaskCreate+0x18>
	...

080087ec <vTaskDelete>:
	{
 80087ec:	b570      	push	{r4, r5, r6, lr}
 80087ee:	4604      	mov	r4, r0
 80087f0:	4d23      	ldr	r5, [pc, #140]	@ (8008880 <vTaskDelete+0x94>)
		taskENTER_CRITICAL();
 80087f2:	f7fe ffe7 	bl	80077c4 <vPortEnterCritical>
			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
 80087f6:	b904      	cbnz	r4, 80087fa <vTaskDelete+0xe>
 80087f8:	682c      	ldr	r4, [r5, #0]
			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80087fa:	1d26      	adds	r6, r4, #4
 80087fc:	4630      	mov	r0, r6
 80087fe:	f7fe ff69 	bl	80076d4 <uxListRemove>
			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8008802:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8008804:	b11b      	cbz	r3, 800880e <vTaskDelete+0x22>
				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008806:	f104 0018 	add.w	r0, r4, #24
 800880a:	f7fe ff63 	bl	80076d4 <uxListRemove>
			uxTaskNumber++;
 800880e:	4a1d      	ldr	r2, [pc, #116]	@ (8008884 <vTaskDelete+0x98>)
 8008810:	6813      	ldr	r3, [r2, #0]
 8008812:	3301      	adds	r3, #1
 8008814:	6013      	str	r3, [r2, #0]
			if( pxTCB == pxCurrentTCB )
 8008816:	682b      	ldr	r3, [r5, #0]
 8008818:	42a3      	cmp	r3, r4
 800881a:	d11b      	bne.n	8008854 <vTaskDelete+0x68>
				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
 800881c:	481a      	ldr	r0, [pc, #104]	@ (8008888 <vTaskDelete+0x9c>)
 800881e:	4631      	mov	r1, r6
 8008820:	f7fe ff36 	bl	8007690 <vListInsertEnd>
				++uxDeletedTasksWaitingCleanUp;
 8008824:	4a19      	ldr	r2, [pc, #100]	@ (800888c <vTaskDelete+0xa0>)
 8008826:	6813      	ldr	r3, [r2, #0]
 8008828:	3301      	adds	r3, #1
 800882a:	6013      	str	r3, [r2, #0]
		taskEXIT_CRITICAL();
 800882c:	f7fe ffea 	bl	8007804 <vPortExitCritical>
		if( xSchedulerRunning != pdFALSE )
 8008830:	4b17      	ldr	r3, [pc, #92]	@ (8008890 <vTaskDelete+0xa4>)
 8008832:	681b      	ldr	r3, [r3, #0]
 8008834:	b313      	cbz	r3, 800887c <vTaskDelete+0x90>
			if( pxTCB == pxCurrentTCB )
 8008836:	682b      	ldr	r3, [r5, #0]
 8008838:	42a3      	cmp	r3, r4
 800883a:	d11f      	bne.n	800887c <vTaskDelete+0x90>
				configASSERT( uxSchedulerSuspended == 0 );
 800883c:	4b15      	ldr	r3, [pc, #84]	@ (8008894 <vTaskDelete+0xa8>)
 800883e:	681b      	ldr	r3, [r3, #0]
 8008840:	b193      	cbz	r3, 8008868 <vTaskDelete+0x7c>
 8008842:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008846:	f383 8811 	msr	BASEPRI, r3
 800884a:	f3bf 8f6f 	isb	sy
 800884e:	f3bf 8f4f 	dsb	sy
 8008852:	e7fe      	b.n	8008852 <vTaskDelete+0x66>
				--uxCurrentNumberOfTasks;
 8008854:	4a10      	ldr	r2, [pc, #64]	@ (8008898 <vTaskDelete+0xac>)
 8008856:	6813      	ldr	r3, [r2, #0]
				prvDeleteTCB( pxTCB );
 8008858:	4620      	mov	r0, r4
				--uxCurrentNumberOfTasks;
 800885a:	3b01      	subs	r3, #1
 800885c:	6013      	str	r3, [r2, #0]
				prvDeleteTCB( pxTCB );
 800885e:	f7ff fec5 	bl	80085ec <prvDeleteTCB>
				prvResetNextTaskUnblockTime();
 8008862:	f7ff feb1 	bl	80085c8 <prvResetNextTaskUnblockTime>
 8008866:	e7e1      	b.n	800882c <vTaskDelete+0x40>
				portYIELD_WITHIN_API();
 8008868:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800886c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008870:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008874:	f3bf 8f4f 	dsb	sy
 8008878:	f3bf 8f6f 	isb	sy
	}
 800887c:	bd70      	pop	{r4, r5, r6, pc}
 800887e:	bf00      	nop
 8008880:	200136c4 	.word	0x200136c4
 8008884:	200131d4 	.word	0x200131d4
 8008888:	2001320c 	.word	0x2001320c
 800888c:	20013208 	.word	0x20013208
 8008890:	200131e4 	.word	0x200131e4
 8008894:	200131cc 	.word	0x200131cc
 8008898:	200131f0 	.word	0x200131f0

0800889c <eTaskGetState>:
	{
 800889c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( pxTCB );
 800889e:	4604      	mov	r4, r0
 80088a0:	b940      	cbnz	r0, 80088b4 <eTaskGetState+0x18>
 80088a2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80088a6:	f383 8811 	msr	BASEPRI, r3
 80088aa:	f3bf 8f6f 	isb	sy
 80088ae:	f3bf 8f4f 	dsb	sy
 80088b2:	e7fe      	b.n	80088b2 <eTaskGetState+0x16>
		if( pxTCB == pxCurrentTCB )
 80088b4:	4b15      	ldr	r3, [pc, #84]	@ (800890c <eTaskGetState+0x70>)
 80088b6:	681b      	ldr	r3, [r3, #0]
 80088b8:	4283      	cmp	r3, r0
 80088ba:	d020      	beq.n	80088fe <eTaskGetState+0x62>
			taskENTER_CRITICAL();
 80088bc:	f7fe ff82 	bl	80077c4 <vPortEnterCritical>
				pxDelayedList = pxDelayedTaskList;
 80088c0:	4b13      	ldr	r3, [pc, #76]	@ (8008910 <eTaskGetState+0x74>)
				pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
 80088c2:	6965      	ldr	r5, [r4, #20]
				pxDelayedList = pxDelayedTaskList;
 80088c4:	681f      	ldr	r7, [r3, #0]
				pxOverflowedDelayedList = pxOverflowDelayedTaskList;
 80088c6:	4b13      	ldr	r3, [pc, #76]	@ (8008914 <eTaskGetState+0x78>)
 80088c8:	681e      	ldr	r6, [r3, #0]
			taskEXIT_CRITICAL();
 80088ca:	f7fe ff9b 	bl	8007804 <vPortExitCritical>
			if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
 80088ce:	42bd      	cmp	r5, r7
 80088d0:	d017      	beq.n	8008902 <eTaskGetState+0x66>
 80088d2:	42b5      	cmp	r5, r6
 80088d4:	d015      	beq.n	8008902 <eTaskGetState+0x66>
				else if( pxStateList == &xSuspendedTaskList )
 80088d6:	4b10      	ldr	r3, [pc, #64]	@ (8008918 <eTaskGetState+0x7c>)
 80088d8:	429d      	cmp	r5, r3
 80088da:	d108      	bne.n	80088ee <eTaskGetState+0x52>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
 80088dc:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 80088de:	b983      	cbnz	r3, 8008902 <eTaskGetState+0x66>
							if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
 80088e0:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
				eReturn = eBlocked;
 80088e4:	2b01      	cmp	r3, #1
 80088e6:	bf14      	ite	ne
 80088e8:	2003      	movne	r0, #3
 80088ea:	2002      	moveq	r0, #2
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 80088ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
 80088ee:	4b0b      	ldr	r3, [pc, #44]	@ (800891c <eTaskGetState+0x80>)
 80088f0:	429d      	cmp	r5, r3
 80088f2:	d008      	beq.n	8008906 <eTaskGetState+0x6a>
					eReturn = eDeleted;
 80088f4:	2d00      	cmp	r5, #0
 80088f6:	bf14      	ite	ne
 80088f8:	2001      	movne	r0, #1
 80088fa:	2004      	moveq	r0, #4
 80088fc:	e7f6      	b.n	80088ec <eTaskGetState+0x50>
			eReturn = eRunning;
 80088fe:	2000      	movs	r0, #0
 8008900:	e7f4      	b.n	80088ec <eTaskGetState+0x50>
				eReturn = eBlocked;
 8008902:	2002      	movs	r0, #2
 8008904:	e7f2      	b.n	80088ec <eTaskGetState+0x50>
					eReturn = eDeleted;
 8008906:	2004      	movs	r0, #4
 8008908:	e7f0      	b.n	80088ec <eTaskGetState+0x50>
 800890a:	bf00      	nop
 800890c:	200136c4 	.word	0x200136c4
 8008910:	20013238 	.word	0x20013238
 8008914:	20013234 	.word	0x20013234
 8008918:	200131f4 	.word	0x200131f4
 800891c:	2001320c 	.word	0x2001320c

08008920 <vTaskStartScheduler>:
{
 8008920:	b510      	push	{r4, lr}
 8008922:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8008924:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008926:	aa07      	add	r2, sp, #28
 8008928:	a906      	add	r1, sp, #24
 800892a:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800892c:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008930:	f7fe fd8c 	bl	800744c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8008934:	9b05      	ldr	r3, [sp, #20]
 8008936:	9302      	str	r3, [sp, #8]
 8008938:	9b06      	ldr	r3, [sp, #24]
 800893a:	9a07      	ldr	r2, [sp, #28]
 800893c:	4916      	ldr	r1, [pc, #88]	@ (8008998 <vTaskStartScheduler+0x78>)
 800893e:	4817      	ldr	r0, [pc, #92]	@ (800899c <vTaskStartScheduler+0x7c>)
 8008940:	e9cd 4300 	strd	r4, r3, [sp]
 8008944:	4623      	mov	r3, r4
 8008946:	f7ff feea 	bl	800871e <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800894a:	b318      	cbz	r0, 8008994 <vTaskStartScheduler+0x74>
			xReturn = xTimerCreateTimerTask();
 800894c:	f000 fba6 	bl	800909c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8008950:	2801      	cmp	r0, #1
 8008952:	d114      	bne.n	800897e <vTaskStartScheduler+0x5e>
 8008954:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008958:	f383 8811 	msr	BASEPRI, r3
 800895c:	f3bf 8f6f 	isb	sy
 8008960:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8008964:	4b0e      	ldr	r3, [pc, #56]	@ (80089a0 <vTaskStartScheduler+0x80>)
 8008966:	f04f 32ff 	mov.w	r2, #4294967295
 800896a:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800896c:	4b0d      	ldr	r3, [pc, #52]	@ (80089a4 <vTaskStartScheduler+0x84>)
 800896e:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8008970:	4b0d      	ldr	r3, [pc, #52]	@ (80089a8 <vTaskStartScheduler+0x88>)
 8008972:	601c      	str	r4, [r3, #0]
}
 8008974:	b008      	add	sp, #32
 8008976:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800897a:	f7fe bfb3 	b.w	80078e4 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800897e:	3001      	adds	r0, #1
 8008980:	d108      	bne.n	8008994 <vTaskStartScheduler+0x74>
 8008982:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008986:	f383 8811 	msr	BASEPRI, r3
 800898a:	f3bf 8f6f 	isb	sy
 800898e:	f3bf 8f4f 	dsb	sy
 8008992:	e7fe      	b.n	8008992 <vTaskStartScheduler+0x72>
}
 8008994:	b008      	add	sp, #32
 8008996:	bd10      	pop	{r4, pc}
 8008998:	0801dad0 	.word	0x0801dad0
 800899c:	08008625 	.word	0x08008625
 80089a0:	200131d0 	.word	0x200131d0
 80089a4:	200131e4 	.word	0x200131e4
 80089a8:	200131ec 	.word	0x200131ec

080089ac <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 80089ac:	4a02      	ldr	r2, [pc, #8]	@ (80089b8 <vTaskSuspendAll+0xc>)
 80089ae:	6813      	ldr	r3, [r2, #0]
 80089b0:	3301      	adds	r3, #1
 80089b2:	6013      	str	r3, [r2, #0]
}
 80089b4:	4770      	bx	lr
 80089b6:	bf00      	nop
 80089b8:	200131cc 	.word	0x200131cc

080089bc <xTaskGetTickCount>:
		xTicks = xTickCount;
 80089bc:	4b01      	ldr	r3, [pc, #4]	@ (80089c4 <xTaskGetTickCount+0x8>)
 80089be:	6818      	ldr	r0, [r3, #0]
}
 80089c0:	4770      	bx	lr
 80089c2:	bf00      	nop
 80089c4:	200131ec 	.word	0x200131ec

080089c8 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80089c8:	4b3f      	ldr	r3, [pc, #252]	@ (8008ac8 <xTaskIncrementTick+0x100>)
 80089ca:	681b      	ldr	r3, [r3, #0]
{
 80089cc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80089d0:	2b00      	cmp	r3, #0
 80089d2:	d172      	bne.n	8008aba <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 80089d4:	4b3d      	ldr	r3, [pc, #244]	@ (8008acc <xTaskIncrementTick+0x104>)
 80089d6:	681c      	ldr	r4, [r3, #0]
 80089d8:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 80089da:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 80089dc:	b9bc      	cbnz	r4, 8008a0e <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 80089de:	4b3c      	ldr	r3, [pc, #240]	@ (8008ad0 <xTaskIncrementTick+0x108>)
 80089e0:	681a      	ldr	r2, [r3, #0]
 80089e2:	6812      	ldr	r2, [r2, #0]
 80089e4:	b142      	cbz	r2, 80089f8 <xTaskIncrementTick+0x30>
 80089e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089ea:	f383 8811 	msr	BASEPRI, r3
 80089ee:	f3bf 8f6f 	isb	sy
 80089f2:	f3bf 8f4f 	dsb	sy
 80089f6:	e7fe      	b.n	80089f6 <xTaskIncrementTick+0x2e>
 80089f8:	4a36      	ldr	r2, [pc, #216]	@ (8008ad4 <xTaskIncrementTick+0x10c>)
 80089fa:	6819      	ldr	r1, [r3, #0]
 80089fc:	6810      	ldr	r0, [r2, #0]
 80089fe:	6018      	str	r0, [r3, #0]
 8008a00:	6011      	str	r1, [r2, #0]
 8008a02:	4a35      	ldr	r2, [pc, #212]	@ (8008ad8 <xTaskIncrementTick+0x110>)
 8008a04:	6813      	ldr	r3, [r2, #0]
 8008a06:	3301      	adds	r3, #1
 8008a08:	6013      	str	r3, [r2, #0]
 8008a0a:	f7ff fddd 	bl	80085c8 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008a0e:	4d33      	ldr	r5, [pc, #204]	@ (8008adc <xTaskIncrementTick+0x114>)
 8008a10:	4e33      	ldr	r6, [pc, #204]	@ (8008ae0 <xTaskIncrementTick+0x118>)
 8008a12:	682b      	ldr	r3, [r5, #0]
 8008a14:	4f33      	ldr	r7, [pc, #204]	@ (8008ae4 <xTaskIncrementTick+0x11c>)
 8008a16:	429c      	cmp	r4, r3
BaseType_t xSwitchRequired = pdFALSE;
 8008a18:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008a1c:	d212      	bcs.n	8008a44 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8008a1e:	683a      	ldr	r2, [r7, #0]
 8008a20:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008a22:	2114      	movs	r1, #20
 8008a24:	434a      	muls	r2, r1
 8008a26:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 8008a28:	2a02      	cmp	r2, #2
			if( xYieldPending != pdFALSE )
 8008a2a:	4a2f      	ldr	r2, [pc, #188]	@ (8008ae8 <xTaskIncrementTick+0x120>)
 8008a2c:	6812      	ldr	r2, [r2, #0]
				xSwitchRequired = pdTRUE;
 8008a2e:	bf28      	it	cs
 8008a30:	f04f 0b01 	movcs.w	fp, #1
				xSwitchRequired = pdTRUE;
 8008a34:	2a00      	cmp	r2, #0
 8008a36:	bf18      	it	ne
 8008a38:	f04f 0b01 	movne.w	fp, #1
}
 8008a3c:	4658      	mov	r0, fp
 8008a3e:	b003      	add	sp, #12
 8008a40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008a44:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 8008ad0 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8008a48:	f8df a0a4 	ldr.w	sl, [pc, #164]	@ 8008af0 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008a4c:	f8d9 2000 	ldr.w	r2, [r9]
 8008a50:	6812      	ldr	r2, [r2, #0]
 8008a52:	b91a      	cbnz	r2, 8008a5c <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008a54:	f04f 32ff 	mov.w	r2, #4294967295
 8008a58:	602a      	str	r2, [r5, #0]
					break;
 8008a5a:	e7e0      	b.n	8008a1e <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008a5c:	f8d9 2000 	ldr.w	r2, [r9]
 8008a60:	68d2      	ldr	r2, [r2, #12]
 8008a62:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8008a66:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 8008a6a:	428c      	cmp	r4, r1
 8008a6c:	d201      	bcs.n	8008a72 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8008a6e:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008a70:	e7d5      	b.n	8008a1e <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008a72:	f108 0304 	add.w	r3, r8, #4
 8008a76:	4618      	mov	r0, r3
 8008a78:	9301      	str	r3, [sp, #4]
 8008a7a:	f7fe fe2b 	bl	80076d4 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8008a7e:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 8008a82:	b119      	cbz	r1, 8008a8c <xTaskIncrementTick+0xc4>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008a84:	f108 0018 	add.w	r0, r8, #24
 8008a88:	f7fe fe24 	bl	80076d4 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008a8c:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 8008a90:	f8da 1000 	ldr.w	r1, [sl]
 8008a94:	2314      	movs	r3, #20
 8008a96:	4288      	cmp	r0, r1
 8008a98:	bf88      	it	hi
 8008a9a:	f8ca 0000 	strhi.w	r0, [sl]
 8008a9e:	9901      	ldr	r1, [sp, #4]
 8008aa0:	fb03 6000 	mla	r0, r3, r0, r6
 8008aa4:	f7fe fdf4 	bl	8007690 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008aa8:	6838      	ldr	r0, [r7, #0]
 8008aaa:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8008aae:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 8008ab0:	4291      	cmp	r1, r2
 8008ab2:	bf28      	it	cs
 8008ab4:	f04f 0b01 	movcs.w	fp, #1
 8008ab8:	e7c8      	b.n	8008a4c <xTaskIncrementTick+0x84>
		++xPendedTicks;
 8008aba:	4a0c      	ldr	r2, [pc, #48]	@ (8008aec <xTaskIncrementTick+0x124>)
 8008abc:	6813      	ldr	r3, [r2, #0]
 8008abe:	3301      	adds	r3, #1
 8008ac0:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8008ac2:	f04f 0b00 	mov.w	fp, #0
 8008ac6:	e7b9      	b.n	8008a3c <xTaskIncrementTick+0x74>
 8008ac8:	200131cc 	.word	0x200131cc
 8008acc:	200131ec 	.word	0x200131ec
 8008ad0:	20013238 	.word	0x20013238
 8008ad4:	20013234 	.word	0x20013234
 8008ad8:	200131d8 	.word	0x200131d8
 8008adc:	200131d0 	.word	0x200131d0
 8008ae0:	20013264 	.word	0x20013264
 8008ae4:	200136c4 	.word	0x200136c4
 8008ae8:	200131dc 	.word	0x200131dc
 8008aec:	200131e0 	.word	0x200131e0
 8008af0:	200131e8 	.word	0x200131e8

08008af4 <xTaskResumeAll>:
{
 8008af4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 8008af8:	4c30      	ldr	r4, [pc, #192]	@ (8008bbc <xTaskResumeAll+0xc8>)
 8008afa:	6823      	ldr	r3, [r4, #0]
 8008afc:	b943      	cbnz	r3, 8008b10 <xTaskResumeAll+0x1c>
 8008afe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b02:	f383 8811 	msr	BASEPRI, r3
 8008b06:	f3bf 8f6f 	isb	sy
 8008b0a:	f3bf 8f4f 	dsb	sy
 8008b0e:	e7fe      	b.n	8008b0e <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 8008b10:	f7fe fe58 	bl	80077c4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8008b14:	6823      	ldr	r3, [r4, #0]
 8008b16:	3b01      	subs	r3, #1
 8008b18:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008b1a:	6824      	ldr	r4, [r4, #0]
 8008b1c:	b12c      	cbz	r4, 8008b2a <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 8008b1e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008b20:	f7fe fe70 	bl	8007804 <vPortExitCritical>
}
 8008b24:	4620      	mov	r0, r4
 8008b26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8008b2a:	4b25      	ldr	r3, [pc, #148]	@ (8008bc0 <xTaskResumeAll+0xcc>)
 8008b2c:	681b      	ldr	r3, [r3, #0]
 8008b2e:	2b00      	cmp	r3, #0
 8008b30:	d0f5      	beq.n	8008b1e <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008b32:	4d24      	ldr	r5, [pc, #144]	@ (8008bc4 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8008b34:	4e24      	ldr	r6, [pc, #144]	@ (8008bc8 <xTaskResumeAll+0xd4>)
 8008b36:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 8008bd8 <xTaskResumeAll+0xe4>
 8008b3a:	e01d      	b.n	8008b78 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008b3c:	68eb      	ldr	r3, [r5, #12]
 8008b3e:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008b40:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008b42:	f104 0018 	add.w	r0, r4, #24
 8008b46:	f7fe fdc5 	bl	80076d4 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008b4a:	4638      	mov	r0, r7
 8008b4c:	f7fe fdc2 	bl	80076d4 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008b50:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008b52:	6832      	ldr	r2, [r6, #0]
 8008b54:	2014      	movs	r0, #20
 8008b56:	4293      	cmp	r3, r2
 8008b58:	fb00 8003 	mla	r0, r0, r3, r8
 8008b5c:	4639      	mov	r1, r7
 8008b5e:	bf88      	it	hi
 8008b60:	6033      	strhi	r3, [r6, #0]
 8008b62:	f7fe fd95 	bl	8007690 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008b66:	4b19      	ldr	r3, [pc, #100]	@ (8008bcc <xTaskResumeAll+0xd8>)
 8008b68:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8008b6a:	681b      	ldr	r3, [r3, #0]
 8008b6c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008b6e:	429a      	cmp	r2, r3
 8008b70:	d302      	bcc.n	8008b78 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 8008b72:	4b17      	ldr	r3, [pc, #92]	@ (8008bd0 <xTaskResumeAll+0xdc>)
 8008b74:	2201      	movs	r2, #1
 8008b76:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008b78:	682b      	ldr	r3, [r5, #0]
 8008b7a:	2b00      	cmp	r3, #0
 8008b7c:	d1de      	bne.n	8008b3c <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 8008b7e:	b10c      	cbz	r4, 8008b84 <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 8008b80:	f7ff fd22 	bl	80085c8 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8008b84:	4d13      	ldr	r5, [pc, #76]	@ (8008bd4 <xTaskResumeAll+0xe0>)
 8008b86:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8008b88:	b144      	cbz	r4, 8008b9c <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 8008b8a:	4e11      	ldr	r6, [pc, #68]	@ (8008bd0 <xTaskResumeAll+0xdc>)
 8008b8c:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8008b8e:	f7ff ff1b 	bl	80089c8 <xTaskIncrementTick>
 8008b92:	b100      	cbz	r0, 8008b96 <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 8008b94:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8008b96:	3c01      	subs	r4, #1
 8008b98:	d1f9      	bne.n	8008b8e <xTaskResumeAll+0x9a>
						xPendedTicks = 0;
 8008b9a:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8008b9c:	4b0c      	ldr	r3, [pc, #48]	@ (8008bd0 <xTaskResumeAll+0xdc>)
 8008b9e:	681b      	ldr	r3, [r3, #0]
 8008ba0:	2b00      	cmp	r3, #0
 8008ba2:	d0bc      	beq.n	8008b1e <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 8008ba4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008ba8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008bac:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008bb0:	f3bf 8f4f 	dsb	sy
 8008bb4:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8008bb8:	2401      	movs	r4, #1
 8008bba:	e7b1      	b.n	8008b20 <xTaskResumeAll+0x2c>
 8008bbc:	200131cc 	.word	0x200131cc
 8008bc0:	200131f0 	.word	0x200131f0
 8008bc4:	20013220 	.word	0x20013220
 8008bc8:	200131e8 	.word	0x200131e8
 8008bcc:	200136c4 	.word	0x200136c4
 8008bd0:	200131dc 	.word	0x200131dc
 8008bd4:	200131e0 	.word	0x200131e0
 8008bd8:	20013264 	.word	0x20013264

08008bdc <vTaskDelay>:
	{
 8008bdc:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8008bde:	b950      	cbnz	r0, 8008bf6 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8008be0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008be4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008be8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008bec:	f3bf 8f4f 	dsb	sy
 8008bf0:	f3bf 8f6f 	isb	sy
	}
 8008bf4:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8008bf6:	4b0a      	ldr	r3, [pc, #40]	@ (8008c20 <vTaskDelay+0x44>)
 8008bf8:	6819      	ldr	r1, [r3, #0]
 8008bfa:	b141      	cbz	r1, 8008c0e <vTaskDelay+0x32>
 8008bfc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c00:	f383 8811 	msr	BASEPRI, r3
 8008c04:	f3bf 8f6f 	isb	sy
 8008c08:	f3bf 8f4f 	dsb	sy
 8008c0c:	e7fe      	b.n	8008c0c <vTaskDelay+0x30>
			vTaskSuspendAll();
 8008c0e:	f7ff fecd 	bl	80089ac <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8008c12:	f7ff fca1 	bl	8008558 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8008c16:	f7ff ff6d 	bl	8008af4 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8008c1a:	2800      	cmp	r0, #0
 8008c1c:	d0e0      	beq.n	8008be0 <vTaskDelay+0x4>
 8008c1e:	e7e9      	b.n	8008bf4 <vTaskDelay+0x18>
 8008c20:	200131cc 	.word	0x200131cc

08008c24 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008c24:	4b17      	ldr	r3, [pc, #92]	@ (8008c84 <vTaskSwitchContext+0x60>)
 8008c26:	681a      	ldr	r2, [r3, #0]
 8008c28:	4b17      	ldr	r3, [pc, #92]	@ (8008c88 <vTaskSwitchContext+0x64>)
{
 8008c2a:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008c2c:	b112      	cbz	r2, 8008c34 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8008c2e:	2201      	movs	r2, #1
 8008c30:	601a      	str	r2, [r3, #0]
}
 8008c32:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008c34:	4d15      	ldr	r5, [pc, #84]	@ (8008c8c <vTaskSwitchContext+0x68>)
		xYieldPending = pdFALSE;
 8008c36:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008c38:	682a      	ldr	r2, [r5, #0]
 8008c3a:	4915      	ldr	r1, [pc, #84]	@ (8008c90 <vTaskSwitchContext+0x6c>)
 8008c3c:	2614      	movs	r6, #20
 8008c3e:	fb06 f302 	mul.w	r3, r6, r2
 8008c42:	18c8      	adds	r0, r1, r3
 8008c44:	58cc      	ldr	r4, [r1, r3]
 8008c46:	b18c      	cbz	r4, 8008c6c <vTaskSwitchContext+0x48>
 8008c48:	6844      	ldr	r4, [r0, #4]
 8008c4a:	3308      	adds	r3, #8
 8008c4c:	6864      	ldr	r4, [r4, #4]
 8008c4e:	6044      	str	r4, [r0, #4]
 8008c50:	440b      	add	r3, r1
 8008c52:	429c      	cmp	r4, r3
 8008c54:	bf04      	itt	eq
 8008c56:	6863      	ldreq	r3, [r4, #4]
 8008c58:	6043      	streq	r3, [r0, #4]
 8008c5a:	2314      	movs	r3, #20
 8008c5c:	fb03 1102 	mla	r1, r3, r2, r1
 8008c60:	684b      	ldr	r3, [r1, #4]
 8008c62:	68d9      	ldr	r1, [r3, #12]
 8008c64:	4b0b      	ldr	r3, [pc, #44]	@ (8008c94 <vTaskSwitchContext+0x70>)
 8008c66:	6019      	str	r1, [r3, #0]
 8008c68:	602a      	str	r2, [r5, #0]
}
 8008c6a:	e7e2      	b.n	8008c32 <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008c6c:	b942      	cbnz	r2, 8008c80 <vTaskSwitchContext+0x5c>
 8008c6e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c72:	f383 8811 	msr	BASEPRI, r3
 8008c76:	f3bf 8f6f 	isb	sy
 8008c7a:	f3bf 8f4f 	dsb	sy
 8008c7e:	e7fe      	b.n	8008c7e <vTaskSwitchContext+0x5a>
 8008c80:	3a01      	subs	r2, #1
 8008c82:	e7dc      	b.n	8008c3e <vTaskSwitchContext+0x1a>
 8008c84:	200131cc 	.word	0x200131cc
 8008c88:	200131dc 	.word	0x200131dc
 8008c8c:	200131e8 	.word	0x200131e8
 8008c90:	20013264 	.word	0x20013264
 8008c94:	200136c4 	.word	0x200136c4

08008c98 <vTaskPlaceOnEventList>:
{
 8008c98:	b510      	push	{r4, lr}
 8008c9a:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8008c9c:	b940      	cbnz	r0, 8008cb0 <vTaskPlaceOnEventList+0x18>
 8008c9e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ca2:	f383 8811 	msr	BASEPRI, r3
 8008ca6:	f3bf 8f6f 	isb	sy
 8008caa:	f3bf 8f4f 	dsb	sy
 8008cae:	e7fe      	b.n	8008cae <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008cb0:	4b05      	ldr	r3, [pc, #20]	@ (8008cc8 <vTaskPlaceOnEventList+0x30>)
 8008cb2:	6819      	ldr	r1, [r3, #0]
 8008cb4:	3118      	adds	r1, #24
 8008cb6:	f7fe fcf6 	bl	80076a6 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008cba:	4620      	mov	r0, r4
 8008cbc:	2101      	movs	r1, #1
}
 8008cbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008cc2:	f7ff bc49 	b.w	8008558 <prvAddCurrentTaskToDelayedList>
 8008cc6:	bf00      	nop
 8008cc8:	200136c4 	.word	0x200136c4

08008ccc <vTaskPlaceOnEventListRestricted>:
	{
 8008ccc:	b538      	push	{r3, r4, r5, lr}
 8008cce:	460d      	mov	r5, r1
 8008cd0:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8008cd2:	b940      	cbnz	r0, 8008ce6 <vTaskPlaceOnEventListRestricted+0x1a>
 8008cd4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008cd8:	f383 8811 	msr	BASEPRI, r3
 8008cdc:	f3bf 8f6f 	isb	sy
 8008ce0:	f3bf 8f4f 	dsb	sy
 8008ce4:	e7fe      	b.n	8008ce4 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008ce6:	4b07      	ldr	r3, [pc, #28]	@ (8008d04 <vTaskPlaceOnEventListRestricted+0x38>)
 8008ce8:	6819      	ldr	r1, [r3, #0]
 8008cea:	3118      	adds	r1, #24
 8008cec:	f7fe fcd0 	bl	8007690 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8008cf0:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008cf2:	4621      	mov	r1, r4
 8008cf4:	bf0c      	ite	eq
 8008cf6:	4628      	moveq	r0, r5
 8008cf8:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8008cfc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008d00:	f7ff bc2a 	b.w	8008558 <prvAddCurrentTaskToDelayedList>
 8008d04:	200136c4 	.word	0x200136c4

08008d08 <xTaskRemoveFromEventList>:
{
 8008d08:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008d0a:	68c3      	ldr	r3, [r0, #12]
 8008d0c:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8008d0e:	b944      	cbnz	r4, 8008d22 <xTaskRemoveFromEventList+0x1a>
 8008d10:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d14:	f383 8811 	msr	BASEPRI, r3
 8008d18:	f3bf 8f6f 	isb	sy
 8008d1c:	f3bf 8f4f 	dsb	sy
 8008d20:	e7fe      	b.n	8008d20 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8008d22:	f104 0518 	add.w	r5, r4, #24
 8008d26:	4628      	mov	r0, r5
 8008d28:	f7fe fcd4 	bl	80076d4 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008d2c:	4b10      	ldr	r3, [pc, #64]	@ (8008d70 <xTaskRemoveFromEventList+0x68>)
 8008d2e:	681b      	ldr	r3, [r3, #0]
 8008d30:	b9db      	cbnz	r3, 8008d6a <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8008d32:	1d25      	adds	r5, r4, #4
 8008d34:	4628      	mov	r0, r5
 8008d36:	f7fe fccd 	bl	80076d4 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8008d3a:	4a0e      	ldr	r2, [pc, #56]	@ (8008d74 <xTaskRemoveFromEventList+0x6c>)
 8008d3c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008d3e:	6811      	ldr	r1, [r2, #0]
 8008d40:	428b      	cmp	r3, r1
 8008d42:	bf88      	it	hi
 8008d44:	6013      	strhi	r3, [r2, #0]
 8008d46:	4a0c      	ldr	r2, [pc, #48]	@ (8008d78 <xTaskRemoveFromEventList+0x70>)
 8008d48:	2014      	movs	r0, #20
 8008d4a:	4629      	mov	r1, r5
 8008d4c:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008d50:	f7fe fc9e 	bl	8007690 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008d54:	4b09      	ldr	r3, [pc, #36]	@ (8008d7c <xTaskRemoveFromEventList+0x74>)
 8008d56:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8008d58:	681b      	ldr	r3, [r3, #0]
 8008d5a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008d5c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8008d5e:	bf83      	ittte	hi
 8008d60:	4b07      	ldrhi	r3, [pc, #28]	@ (8008d80 <xTaskRemoveFromEventList+0x78>)
 8008d62:	2001      	movhi	r0, #1
 8008d64:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 8008d66:	2000      	movls	r0, #0
}
 8008d68:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008d6a:	4806      	ldr	r0, [pc, #24]	@ (8008d84 <xTaskRemoveFromEventList+0x7c>)
 8008d6c:	4629      	mov	r1, r5
 8008d6e:	e7ef      	b.n	8008d50 <xTaskRemoveFromEventList+0x48>
 8008d70:	200131cc 	.word	0x200131cc
 8008d74:	200131e8 	.word	0x200131e8
 8008d78:	20013264 	.word	0x20013264
 8008d7c:	200136c4 	.word	0x200136c4
 8008d80:	200131dc 	.word	0x200131dc
 8008d84:	20013220 	.word	0x20013220

08008d88 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8008d88:	4b03      	ldr	r3, [pc, #12]	@ (8008d98 <vTaskInternalSetTimeOutState+0x10>)
 8008d8a:	681b      	ldr	r3, [r3, #0]
 8008d8c:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8008d8e:	4b03      	ldr	r3, [pc, #12]	@ (8008d9c <vTaskInternalSetTimeOutState+0x14>)
 8008d90:	681b      	ldr	r3, [r3, #0]
 8008d92:	6043      	str	r3, [r0, #4]
}
 8008d94:	4770      	bx	lr
 8008d96:	bf00      	nop
 8008d98:	200131d8 	.word	0x200131d8
 8008d9c:	200131ec 	.word	0x200131ec

08008da0 <xTaskCheckForTimeOut>:
{
 8008da0:	b570      	push	{r4, r5, r6, lr}
 8008da2:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8008da4:	4605      	mov	r5, r0
 8008da6:	b940      	cbnz	r0, 8008dba <xTaskCheckForTimeOut+0x1a>
 8008da8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008dac:	f383 8811 	msr	BASEPRI, r3
 8008db0:	f3bf 8f6f 	isb	sy
 8008db4:	f3bf 8f4f 	dsb	sy
 8008db8:	e7fe      	b.n	8008db8 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8008dba:	b941      	cbnz	r1, 8008dce <xTaskCheckForTimeOut+0x2e>
 8008dbc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008dc0:	f383 8811 	msr	BASEPRI, r3
 8008dc4:	f3bf 8f6f 	isb	sy
 8008dc8:	f3bf 8f4f 	dsb	sy
 8008dcc:	e7fe      	b.n	8008dcc <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8008dce:	f7fe fcf9 	bl	80077c4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8008dd2:	4b0f      	ldr	r3, [pc, #60]	@ (8008e10 <xTaskCheckForTimeOut+0x70>)
 8008dd4:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8008dd6:	6823      	ldr	r3, [r4, #0]
 8008dd8:	1c5a      	adds	r2, r3, #1
 8008dda:	d010      	beq.n	8008dfe <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008ddc:	480d      	ldr	r0, [pc, #52]	@ (8008e14 <xTaskCheckForTimeOut+0x74>)
 8008dde:	682e      	ldr	r6, [r5, #0]
 8008de0:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008de2:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008de4:	4286      	cmp	r6, r0
 8008de6:	d001      	beq.n	8008dec <xTaskCheckForTimeOut+0x4c>
 8008de8:	428a      	cmp	r2, r1
 8008dea:	d90f      	bls.n	8008e0c <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008dec:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8008dee:	4283      	cmp	r3, r0
 8008df0:	d90a      	bls.n	8008e08 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8008df2:	1a5b      	subs	r3, r3, r1
 8008df4:	4413      	add	r3, r2
 8008df6:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8008df8:	4628      	mov	r0, r5
 8008dfa:	f7ff ffc5 	bl	8008d88 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8008dfe:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008e00:	f7fe fd00 	bl	8007804 <vPortExitCritical>
}
 8008e04:	4620      	mov	r0, r4
 8008e06:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8008e08:	2300      	movs	r3, #0
 8008e0a:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8008e0c:	2401      	movs	r4, #1
 8008e0e:	e7f7      	b.n	8008e00 <xTaskCheckForTimeOut+0x60>
 8008e10:	200131ec 	.word	0x200131ec
 8008e14:	200131d8 	.word	0x200131d8

08008e18 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8008e18:	4b01      	ldr	r3, [pc, #4]	@ (8008e20 <vTaskMissedYield+0x8>)
 8008e1a:	2201      	movs	r2, #1
 8008e1c:	601a      	str	r2, [r3, #0]
}
 8008e1e:	4770      	bx	lr
 8008e20:	200131dc 	.word	0x200131dc

08008e24 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8008e24:	4b05      	ldr	r3, [pc, #20]	@ (8008e3c <xTaskGetSchedulerState+0x18>)
 8008e26:	681b      	ldr	r3, [r3, #0]
 8008e28:	b133      	cbz	r3, 8008e38 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008e2a:	4b05      	ldr	r3, [pc, #20]	@ (8008e40 <xTaskGetSchedulerState+0x1c>)
 8008e2c:	6818      	ldr	r0, [r3, #0]
 8008e2e:	fab0 f080 	clz	r0, r0
 8008e32:	0940      	lsrs	r0, r0, #5
 8008e34:	0040      	lsls	r0, r0, #1
 8008e36:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8008e38:	2001      	movs	r0, #1
	}
 8008e3a:	4770      	bx	lr
 8008e3c:	200131e4 	.word	0x200131e4
 8008e40:	200131cc 	.word	0x200131cc

08008e44 <xTaskPriorityInherit>:
	{
 8008e44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 8008e46:	4604      	mov	r4, r0
 8008e48:	b338      	cbz	r0, 8008e9a <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8008e4a:	4d1a      	ldr	r5, [pc, #104]	@ (8008eb4 <xTaskPriorityInherit+0x70>)
 8008e4c:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8008e4e:	682a      	ldr	r2, [r5, #0]
 8008e50:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008e52:	4293      	cmp	r3, r2
 8008e54:	d226      	bcs.n	8008ea4 <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008e56:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008e58:	4e17      	ldr	r6, [pc, #92]	@ (8008eb8 <xTaskPriorityInherit+0x74>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008e5a:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008e5c:	bfa1      	itttt	ge
 8008e5e:	682a      	ldrge	r2, [r5, #0]
 8008e60:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 8008e62:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 8008e66:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008e68:	2214      	movs	r2, #20
 8008e6a:	fb02 6303 	mla	r3, r2, r3, r6
 8008e6e:	6942      	ldr	r2, [r0, #20]
 8008e70:	429a      	cmp	r2, r3
 8008e72:	d113      	bne.n	8008e9c <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008e74:	1d07      	adds	r7, r0, #4
 8008e76:	4638      	mov	r0, r7
 8008e78:	f7fe fc2c 	bl	80076d4 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008e7c:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008e7e:	4a0f      	ldr	r2, [pc, #60]	@ (8008ebc <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008e80:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008e82:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008e84:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008e86:	2014      	movs	r0, #20
 8008e88:	428b      	cmp	r3, r1
 8008e8a:	fb00 6003 	mla	r0, r0, r3, r6
 8008e8e:	4639      	mov	r1, r7
 8008e90:	bf88      	it	hi
 8008e92:	6013      	strhi	r3, [r2, #0]
 8008e94:	f7fe fbfc 	bl	8007690 <vListInsertEnd>
				xReturn = pdTRUE;
 8008e98:	2001      	movs	r0, #1
	}
 8008e9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008e9c:	682b      	ldr	r3, [r5, #0]
 8008e9e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008ea0:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8008ea2:	e7f9      	b.n	8008e98 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8008ea4:	682b      	ldr	r3, [r5, #0]
 8008ea6:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8008ea8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008eaa:	4298      	cmp	r0, r3
 8008eac:	bf2c      	ite	cs
 8008eae:	2000      	movcs	r0, #0
 8008eb0:	2001      	movcc	r0, #1
 8008eb2:	e7f2      	b.n	8008e9a <xTaskPriorityInherit+0x56>
 8008eb4:	200136c4 	.word	0x200136c4
 8008eb8:	20013264 	.word	0x20013264
 8008ebc:	200131e8 	.word	0x200131e8

08008ec0 <xTaskPriorityDisinherit>:
	{
 8008ec0:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8008ec2:	b908      	cbnz	r0, 8008ec8 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 8008ec4:	2000      	movs	r0, #0
	}
 8008ec6:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8008ec8:	4b1b      	ldr	r3, [pc, #108]	@ (8008f38 <xTaskPriorityDisinherit+0x78>)
 8008eca:	681c      	ldr	r4, [r3, #0]
 8008ecc:	4284      	cmp	r4, r0
 8008ece:	d008      	beq.n	8008ee2 <xTaskPriorityDisinherit+0x22>
 8008ed0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ed4:	f383 8811 	msr	BASEPRI, r3
 8008ed8:	f3bf 8f6f 	isb	sy
 8008edc:	f3bf 8f4f 	dsb	sy
 8008ee0:	e7fe      	b.n	8008ee0 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 8008ee2:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8008ee4:	b943      	cbnz	r3, 8008ef8 <xTaskPriorityDisinherit+0x38>
 8008ee6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008eea:	f383 8811 	msr	BASEPRI, r3
 8008eee:	f3bf 8f6f 	isb	sy
 8008ef2:	f3bf 8f4f 	dsb	sy
 8008ef6:	e7fe      	b.n	8008ef6 <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008ef8:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8008efa:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 8008efc:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008efe:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8008f00:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008f02:	d0df      	beq.n	8008ec4 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8008f04:	2b00      	cmp	r3, #0
 8008f06:	d1dd      	bne.n	8008ec4 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008f08:	1d25      	adds	r5, r4, #4
 8008f0a:	4628      	mov	r0, r5
 8008f0c:	f7fe fbe2 	bl	80076d4 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008f10:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8008f12:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008f14:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 8008f18:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8008f1a:	4a08      	ldr	r2, [pc, #32]	@ (8008f3c <xTaskPriorityDisinherit+0x7c>)
 8008f1c:	6811      	ldr	r1, [r2, #0]
 8008f1e:	428b      	cmp	r3, r1
 8008f20:	bf88      	it	hi
 8008f22:	6013      	strhi	r3, [r2, #0]
 8008f24:	4a06      	ldr	r2, [pc, #24]	@ (8008f40 <xTaskPriorityDisinherit+0x80>)
 8008f26:	2014      	movs	r0, #20
 8008f28:	fb00 2003 	mla	r0, r0, r3, r2
 8008f2c:	4629      	mov	r1, r5
 8008f2e:	f7fe fbaf 	bl	8007690 <vListInsertEnd>
					xReturn = pdTRUE;
 8008f32:	2001      	movs	r0, #1
		return xReturn;
 8008f34:	e7c7      	b.n	8008ec6 <xTaskPriorityDisinherit+0x6>
 8008f36:	bf00      	nop
 8008f38:	200136c4 	.word	0x200136c4
 8008f3c:	200131e8 	.word	0x200131e8
 8008f40:	20013264 	.word	0x20013264

08008f44 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8008f44:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8008f46:	4604      	mov	r4, r0
 8008f48:	2800      	cmp	r0, #0
 8008f4a:	d041      	beq.n	8008fd0 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 8008f4c:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 8008f4e:	b942      	cbnz	r2, 8008f62 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8008f50:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f54:	f383 8811 	msr	BASEPRI, r3
 8008f58:	f3bf 8f6f 	isb	sy
 8008f5c:	f3bf 8f4f 	dsb	sy
 8008f60:	e7fe      	b.n	8008f60 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8008f62:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8008f64:	4299      	cmp	r1, r3
 8008f66:	bf38      	it	cc
 8008f68:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8008f6a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8008f6c:	428b      	cmp	r3, r1
 8008f6e:	d02f      	beq.n	8008fd0 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8008f70:	2a01      	cmp	r2, #1
 8008f72:	d12d      	bne.n	8008fd0 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 8008f74:	4a17      	ldr	r2, [pc, #92]	@ (8008fd4 <vTaskPriorityDisinheritAfterTimeout+0x90>)
 8008f76:	6812      	ldr	r2, [r2, #0]
 8008f78:	4282      	cmp	r2, r0
 8008f7a:	d108      	bne.n	8008f8e <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8008f7c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f80:	f383 8811 	msr	BASEPRI, r3
 8008f84:	f3bf 8f6f 	isb	sy
 8008f88:	f3bf 8f4f 	dsb	sy
 8008f8c:	e7fe      	b.n	8008f8c <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008f8e:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008f90:	4d11      	ldr	r5, [pc, #68]	@ (8008fd8 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 8008f92:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008f94:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008f96:	f04f 0214 	mov.w	r2, #20
 8008f9a:	fb02 5303 	mla	r3, r2, r3, r5
 8008f9e:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008fa0:	bfa4      	itt	ge
 8008fa2:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 8008fa6:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008fa8:	429a      	cmp	r2, r3
 8008faa:	d111      	bne.n	8008fd0 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008fac:	1d06      	adds	r6, r0, #4
 8008fae:	4630      	mov	r0, r6
 8008fb0:	f7fe fb90 	bl	80076d4 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8008fb4:	4a09      	ldr	r2, [pc, #36]	@ (8008fdc <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8008fb6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008fb8:	6811      	ldr	r1, [r2, #0]
 8008fba:	2014      	movs	r0, #20
 8008fbc:	428b      	cmp	r3, r1
 8008fbe:	fb00 5003 	mla	r0, r0, r3, r5
 8008fc2:	4631      	mov	r1, r6
	}
 8008fc4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 8008fc8:	bf88      	it	hi
 8008fca:	6013      	strhi	r3, [r2, #0]
 8008fcc:	f7fe bb60 	b.w	8007690 <vListInsertEnd>
	}
 8008fd0:	bd70      	pop	{r4, r5, r6, pc}
 8008fd2:	bf00      	nop
 8008fd4:	200136c4 	.word	0x200136c4
 8008fd8:	20013264 	.word	0x20013264
 8008fdc:	200131e8 	.word	0x200131e8

08008fe0 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8008fe0:	4b04      	ldr	r3, [pc, #16]	@ (8008ff4 <pvTaskIncrementMutexHeldCount+0x14>)
 8008fe2:	681a      	ldr	r2, [r3, #0]
 8008fe4:	b11a      	cbz	r2, 8008fee <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8008fe6:	6819      	ldr	r1, [r3, #0]
 8008fe8:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 8008fea:	3201      	adds	r2, #1
 8008fec:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 8008fee:	6818      	ldr	r0, [r3, #0]
	}
 8008ff0:	4770      	bx	lr
 8008ff2:	bf00      	nop
 8008ff4:	200136c4 	.word	0x200136c4

08008ff8 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 8008ff8:	4291      	cmp	r1, r2
{
 8008ffa:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8008ffc:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008ffe:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8009000:	d80a      	bhi.n	8009018 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009002:	1ad2      	subs	r2, r2, r3
 8009004:	6983      	ldr	r3, [r0, #24]
 8009006:	429a      	cmp	r2, r3
 8009008:	d20d      	bcs.n	8009026 <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800900a:	4b08      	ldr	r3, [pc, #32]	@ (800902c <prvInsertTimerInActiveList+0x34>)
 800900c:	1d01      	adds	r1, r0, #4
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800900e:	6818      	ldr	r0, [r3, #0]
 8009010:	f7fe fb49 	bl	80076a6 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8009014:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 8009016:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8009018:	429a      	cmp	r2, r3
 800901a:	d201      	bcs.n	8009020 <prvInsertTimerInActiveList+0x28>
 800901c:	4299      	cmp	r1, r3
 800901e:	d202      	bcs.n	8009026 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009020:	4b03      	ldr	r3, [pc, #12]	@ (8009030 <prvInsertTimerInActiveList+0x38>)
 8009022:	1d01      	adds	r1, r0, #4
 8009024:	e7f3      	b.n	800900e <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8009026:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8009028:	e7f5      	b.n	8009016 <prvInsertTimerInActiveList+0x1e>
 800902a:	bf00      	nop
 800902c:	200137c4 	.word	0x200137c4
 8009030:	200137c8 	.word	0x200137c8

08009034 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8009034:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8009036:	4c11      	ldr	r4, [pc, #68]	@ (800907c <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8009038:	f7fe fbc4 	bl	80077c4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800903c:	6825      	ldr	r5, [r4, #0]
 800903e:	b9bd      	cbnz	r5, 8009070 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8009040:	4f0f      	ldr	r7, [pc, #60]	@ (8009080 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8009042:	4e10      	ldr	r6, [pc, #64]	@ (8009084 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8009044:	4638      	mov	r0, r7
 8009046:	f7fe fb15 	bl	8007674 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800904a:	4630      	mov	r0, r6
 800904c:	f7fe fb12 	bl	8007674 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8009050:	4b0d      	ldr	r3, [pc, #52]	@ (8009088 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009052:	4a0e      	ldr	r2, [pc, #56]	@ (800908c <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8009054:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8009056:	4b0e      	ldr	r3, [pc, #56]	@ (8009090 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009058:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800905a:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800905c:	200a      	movs	r0, #10
 800905e:	4b0d      	ldr	r3, [pc, #52]	@ (8009094 <prvCheckForValidListAndQueue+0x60>)
 8009060:	9500      	str	r5, [sp, #0]
 8009062:	f7fe fdba 	bl	8007bda <xQueueGenericCreateStatic>
 8009066:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8009068:	b110      	cbz	r0, 8009070 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800906a:	490b      	ldr	r1, [pc, #44]	@ (8009098 <prvCheckForValidListAndQueue+0x64>)
 800906c:	f7ff f992 	bl	8008394 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8009070:	b003      	add	sp, #12
 8009072:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8009076:	f7fe bbc5 	b.w	8007804 <vPortExitCritical>
 800907a:	bf00      	nop
 800907c:	200137c0 	.word	0x200137c0
 8009080:	200137e0 	.word	0x200137e0
 8009084:	200137cc 	.word	0x200137cc
 8009088:	200137c8 	.word	0x200137c8
 800908c:	20013718 	.word	0x20013718
 8009090:	200137c4 	.word	0x200137c4
 8009094:	200136c8 	.word	0x200136c8
 8009098:	0801dad5 	.word	0x0801dad5

0800909c <xTimerCreateTimerTask>:
{
 800909c:	b510      	push	{r4, lr}
 800909e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 80090a0:	f7ff ffc8 	bl	8009034 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 80090a4:	4b12      	ldr	r3, [pc, #72]	@ (80090f0 <xTimerCreateTimerTask+0x54>)
 80090a6:	681b      	ldr	r3, [r3, #0]
 80090a8:	b1b3      	cbz	r3, 80090d8 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 80090aa:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80090ac:	aa07      	add	r2, sp, #28
 80090ae:	a906      	add	r1, sp, #24
 80090b0:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80090b2:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80090b6:	f7fe f9d5 	bl	8007464 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 80090ba:	9b05      	ldr	r3, [sp, #20]
 80090bc:	9302      	str	r3, [sp, #8]
 80090be:	9b06      	ldr	r3, [sp, #24]
 80090c0:	9301      	str	r3, [sp, #4]
 80090c2:	2302      	movs	r3, #2
 80090c4:	9300      	str	r3, [sp, #0]
 80090c6:	9a07      	ldr	r2, [sp, #28]
 80090c8:	490a      	ldr	r1, [pc, #40]	@ (80090f4 <xTimerCreateTimerTask+0x58>)
 80090ca:	480b      	ldr	r0, [pc, #44]	@ (80090f8 <xTimerCreateTimerTask+0x5c>)
 80090cc:	4623      	mov	r3, r4
 80090ce:	f7ff fb26 	bl	800871e <xTaskCreateStatic>
 80090d2:	4b0a      	ldr	r3, [pc, #40]	@ (80090fc <xTimerCreateTimerTask+0x60>)
 80090d4:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 80090d6:	b940      	cbnz	r0, 80090ea <xTimerCreateTimerTask+0x4e>
 80090d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090dc:	f383 8811 	msr	BASEPRI, r3
 80090e0:	f3bf 8f6f 	isb	sy
 80090e4:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 80090e8:	e7fe      	b.n	80090e8 <xTimerCreateTimerTask+0x4c>
}
 80090ea:	2001      	movs	r0, #1
 80090ec:	b008      	add	sp, #32
 80090ee:	bd10      	pop	{r4, pc}
 80090f0:	200137c0 	.word	0x200137c0
 80090f4:	0801dada 	.word	0x0801dada
 80090f8:	080091fd 	.word	0x080091fd
 80090fc:	200137bc 	.word	0x200137bc

08009100 <xTimerGenericCommand>:
{
 8009100:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009102:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8009104:	4604      	mov	r4, r0
{
 8009106:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009108:	b940      	cbnz	r0, 800911c <xTimerGenericCommand+0x1c>
 800910a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800910e:	f383 8811 	msr	BASEPRI, r3
 8009112:	f3bf 8f6f 	isb	sy
 8009116:	f3bf 8f4f 	dsb	sy
 800911a:	e7fe      	b.n	800911a <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800911c:	4d0d      	ldr	r5, [pc, #52]	@ (8009154 <xTimerGenericCommand+0x54>)
 800911e:	6828      	ldr	r0, [r5, #0]
 8009120:	b180      	cbz	r0, 8009144 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009122:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8009124:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8009128:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800912a:	dc0d      	bgt.n	8009148 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800912c:	f7ff fe7a 	bl	8008e24 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009130:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009132:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009134:	bf08      	it	eq
 8009136:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009138:	6828      	ldr	r0, [r5, #0]
 800913a:	bf18      	it	ne
 800913c:	461a      	movne	r2, r3
 800913e:	4669      	mov	r1, sp
 8009140:	f7fe fe00 	bl	8007d44 <xQueueGenericSend>
}
 8009144:	b004      	add	sp, #16
 8009146:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8009148:	2300      	movs	r3, #0
 800914a:	4669      	mov	r1, sp
 800914c:	f7fe feac 	bl	8007ea8 <xQueueGenericSendFromISR>
 8009150:	e7f8      	b.n	8009144 <xTimerGenericCommand+0x44>
 8009152:	bf00      	nop
 8009154:	200137c0 	.word	0x200137c0

08009158 <prvSampleTimeNow>:
{
 8009158:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800915c:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 80091f8 <prvSampleTimeNow+0xa0>
{
 8009160:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8009162:	f7ff fc2b 	bl	80089bc <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8009166:	f8d8 3000 	ldr.w	r3, [r8]
 800916a:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800916c:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800916e:	d909      	bls.n	8009184 <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009170:	4f1f      	ldr	r7, [pc, #124]	@ (80091f0 <prvSampleTimeNow+0x98>)
 8009172:	683b      	ldr	r3, [r7, #0]
 8009174:	681a      	ldr	r2, [r3, #0]
 8009176:	b96a      	cbnz	r2, 8009194 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8009178:	4a1e      	ldr	r2, [pc, #120]	@ (80091f4 <prvSampleTimeNow+0x9c>)
 800917a:	6811      	ldr	r1, [r2, #0]
 800917c:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800917e:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8009180:	2301      	movs	r3, #1
 8009182:	e000      	b.n	8009186 <prvSampleTimeNow+0x2e>
 8009184:	2300      	movs	r3, #0
}
 8009186:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 8009188:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800918a:	f8c8 5000 	str.w	r5, [r8]
}
 800918e:	b002      	add	sp, #8
 8009190:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009194:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009196:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009198:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800919c:	f104 0a04 	add.w	sl, r4, #4
 80091a0:	4650      	mov	r0, sl
 80091a2:	f7fe fa97 	bl	80076d4 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80091a6:	6a23      	ldr	r3, [r4, #32]
 80091a8:	4620      	mov	r0, r4
 80091aa:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80091ac:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80091b0:	075b      	lsls	r3, r3, #29
 80091b2:	d5de      	bpl.n	8009172 <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 80091b4:	69a3      	ldr	r3, [r4, #24]
 80091b6:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 80091b8:	4599      	cmp	r9, r3
 80091ba:	d206      	bcs.n	80091ca <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80091bc:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 80091be:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80091c0:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80091c2:	4651      	mov	r1, sl
 80091c4:	f7fe fa6f 	bl	80076a6 <vListInsert>
 80091c8:	e7d3      	b.n	8009172 <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80091ca:	2300      	movs	r3, #0
 80091cc:	9300      	str	r3, [sp, #0]
 80091ce:	464a      	mov	r2, r9
 80091d0:	4619      	mov	r1, r3
 80091d2:	4620      	mov	r0, r4
 80091d4:	f7ff ff94 	bl	8009100 <xTimerGenericCommand>
				configASSERT( xResult );
 80091d8:	2800      	cmp	r0, #0
 80091da:	d1ca      	bne.n	8009172 <prvSampleTimeNow+0x1a>
 80091dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80091e0:	f383 8811 	msr	BASEPRI, r3
 80091e4:	f3bf 8f6f 	isb	sy
 80091e8:	f3bf 8f4f 	dsb	sy
 80091ec:	e7fe      	b.n	80091ec <prvSampleTimeNow+0x94>
 80091ee:	bf00      	nop
 80091f0:	200137c8 	.word	0x200137c8
 80091f4:	200137c4 	.word	0x200137c4
 80091f8:	200137b8 	.word	0x200137b8

080091fc <prvTimerTask>:
{
 80091fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009200:	4d6e      	ldr	r5, [pc, #440]	@ (80093bc <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009202:	4e6f      	ldr	r6, [pc, #444]	@ (80093c0 <prvTimerTask+0x1c4>)
{
 8009204:	b089      	sub	sp, #36	@ 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009206:	682b      	ldr	r3, [r5, #0]
 8009208:	f8d3 8000 	ldr.w	r8, [r3]
 800920c:	f1b8 0f00 	cmp.w	r8, #0
 8009210:	d035      	beq.n	800927e <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009212:	68db      	ldr	r3, [r3, #12]
 8009214:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009218:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800921a:	f7ff fbc7 	bl	80089ac <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800921e:	a804      	add	r0, sp, #16
 8009220:	f7ff ff9a 	bl	8009158 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8009224:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009226:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8009228:	2b00      	cmp	r3, #0
 800922a:	d169      	bne.n	8009300 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800922c:	2c00      	cmp	r4, #0
 800922e:	d14c      	bne.n	80092ca <prvTimerTask+0xce>
 8009230:	4540      	cmp	r0, r8
 8009232:	d350      	bcc.n	80092d6 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8009234:	f7ff fc5e 	bl	8008af4 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009238:	682b      	ldr	r3, [r5, #0]
 800923a:	68db      	ldr	r3, [r3, #12]
 800923c:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800923e:	1d38      	adds	r0, r7, #4
 8009240:	f7fe fa48 	bl	80076d4 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009244:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8009248:	0758      	lsls	r0, r3, #29
 800924a:	d51a      	bpl.n	8009282 <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800924c:	69b9      	ldr	r1, [r7, #24]
 800924e:	4643      	mov	r3, r8
 8009250:	464a      	mov	r2, r9
 8009252:	4441      	add	r1, r8
 8009254:	4638      	mov	r0, r7
 8009256:	f7ff fecf 	bl	8008ff8 <prvInsertTimerInActiveList>
 800925a:	b1b0      	cbz	r0, 800928a <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800925c:	9400      	str	r4, [sp, #0]
 800925e:	4623      	mov	r3, r4
 8009260:	4642      	mov	r2, r8
 8009262:	4621      	mov	r1, r4
 8009264:	4638      	mov	r0, r7
 8009266:	f7ff ff4b 	bl	8009100 <xTimerGenericCommand>
			configASSERT( xResult );
 800926a:	b970      	cbnz	r0, 800928a <prvTimerTask+0x8e>
 800926c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009270:	f383 8811 	msr	BASEPRI, r3
 8009274:	f3bf 8f6f 	isb	sy
 8009278:	f3bf 8f4f 	dsb	sy
 800927c:	e7fe      	b.n	800927c <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800927e:	2401      	movs	r4, #1
 8009280:	e7cb      	b.n	800921a <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009282:	f023 0301 	bic.w	r3, r3, #1
 8009286:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800928a:	6a3b      	ldr	r3, [r7, #32]
 800928c:	4638      	mov	r0, r7
 800928e:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8009290:	6830      	ldr	r0, [r6, #0]
 8009292:	2200      	movs	r2, #0
 8009294:	a904      	add	r1, sp, #16
 8009296:	f7fe feb5 	bl	8008004 <xQueueReceive>
 800929a:	2800      	cmp	r0, #0
 800929c:	d0b3      	beq.n	8009206 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800929e:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80092a0:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80092a2:	2b00      	cmp	r3, #0
 80092a4:	db2f      	blt.n	8009306 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 80092a6:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 80092a8:	6963      	ldr	r3, [r4, #20]
 80092aa:	2b00      	cmp	r3, #0
 80092ac:	d132      	bne.n	8009314 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80092ae:	a803      	add	r0, sp, #12
 80092b0:	f7ff ff52 	bl	8009158 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 80092b4:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80092b6:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 80092b8:	2b09      	cmp	r3, #9
 80092ba:	d8e9      	bhi.n	8009290 <prvTimerTask+0x94>
 80092bc:	e8df f003 	tbb	[pc, r3]
 80092c0:	572e2e2e 	.word	0x572e2e2e
 80092c4:	2e2e765e 	.word	0x2e2e765e
 80092c8:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80092ca:	4b3e      	ldr	r3, [pc, #248]	@ (80093c4 <prvTimerTask+0x1c8>)
 80092cc:	681b      	ldr	r3, [r3, #0]
 80092ce:	681c      	ldr	r4, [r3, #0]
 80092d0:	fab4 f484 	clz	r4, r4
 80092d4:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80092d6:	6830      	ldr	r0, [r6, #0]
 80092d8:	4622      	mov	r2, r4
 80092da:	eba8 0109 	sub.w	r1, r8, r9
 80092de:	f7ff f898 	bl	8008412 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 80092e2:	f7ff fc07 	bl	8008af4 <xTaskResumeAll>
 80092e6:	2800      	cmp	r0, #0
 80092e8:	d1d2      	bne.n	8009290 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 80092ea:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80092ee:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80092f2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80092f6:	f3bf 8f4f 	dsb	sy
 80092fa:	f3bf 8f6f 	isb	sy
 80092fe:	e7c7      	b.n	8009290 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 8009300:	f7ff fbf8 	bl	8008af4 <xTaskResumeAll>
}
 8009304:	e7c4      	b.n	8009290 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8009306:	9b05      	ldr	r3, [sp, #20]
 8009308:	9907      	ldr	r1, [sp, #28]
 800930a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800930c:	9b04      	ldr	r3, [sp, #16]
 800930e:	2b00      	cmp	r3, #0
 8009310:	dbbe      	blt.n	8009290 <prvTimerTask+0x94>
 8009312:	e7c8      	b.n	80092a6 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009314:	1d20      	adds	r0, r4, #4
 8009316:	f7fe f9dd 	bl	80076d4 <uxListRemove>
 800931a:	e7c8      	b.n	80092ae <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800931c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009320:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009322:	f043 0301 	orr.w	r3, r3, #1
 8009326:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800932a:	9b05      	ldr	r3, [sp, #20]
 800932c:	4620      	mov	r0, r4
 800932e:	4419      	add	r1, r3
 8009330:	f7ff fe62 	bl	8008ff8 <prvInsertTimerInActiveList>
 8009334:	2800      	cmp	r0, #0
 8009336:	d0ab      	beq.n	8009290 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009338:	6a23      	ldr	r3, [r4, #32]
 800933a:	4620      	mov	r0, r4
 800933c:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800933e:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8009342:	0759      	lsls	r1, r3, #29
 8009344:	d5a4      	bpl.n	8009290 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8009346:	69a2      	ldr	r2, [r4, #24]
 8009348:	9905      	ldr	r1, [sp, #20]
 800934a:	2300      	movs	r3, #0
 800934c:	440a      	add	r2, r1
 800934e:	9300      	str	r3, [sp, #0]
 8009350:	4619      	mov	r1, r3
 8009352:	4620      	mov	r0, r4
 8009354:	f7ff fed4 	bl	8009100 <xTimerGenericCommand>
							configASSERT( xResult );
 8009358:	2800      	cmp	r0, #0
 800935a:	d199      	bne.n	8009290 <prvTimerTask+0x94>
 800935c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009360:	f383 8811 	msr	BASEPRI, r3
 8009364:	f3bf 8f6f 	isb	sy
 8009368:	f3bf 8f4f 	dsb	sy
 800936c:	e7fe      	b.n	800936c <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800936e:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009372:	f023 0301 	bic.w	r3, r3, #1
 8009376:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800937a:	e789      	b.n	8009290 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800937c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8009380:	f043 0301 	orr.w	r3, r3, #1
 8009384:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8009388:	9905      	ldr	r1, [sp, #20]
 800938a:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800938c:	b941      	cbnz	r1, 80093a0 <prvTimerTask+0x1a4>
 800938e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009392:	f383 8811 	msr	BASEPRI, r3
 8009396:	f3bf 8f6f 	isb	sy
 800939a:	f3bf 8f4f 	dsb	sy
 800939e:	e7fe      	b.n	800939e <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80093a0:	4603      	mov	r3, r0
 80093a2:	4401      	add	r1, r0
 80093a4:	4620      	mov	r0, r4
 80093a6:	f7ff fe27 	bl	8008ff8 <prvInsertTimerInActiveList>
					break;
 80093aa:	e771      	b.n	8009290 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80093ac:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80093b0:	079a      	lsls	r2, r3, #30
 80093b2:	d4de      	bmi.n	8009372 <prvTimerTask+0x176>
							vPortFree( pxTimer );
 80093b4:	4620      	mov	r0, r4
 80093b6:	f7fe f91f 	bl	80075f8 <vPortFree>
 80093ba:	e769      	b.n	8009290 <prvTimerTask+0x94>
 80093bc:	200137c8 	.word	0x200137c8
 80093c0:	200137c0 	.word	0x200137c0
 80093c4:	200137c4 	.word	0x200137c4

080093c8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80093c8:	8880      	ldrh	r0, [r0, #4]
 80093ca:	4770      	bx	lr

080093cc <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80093cc:	b570      	push	{r4, r5, r6, lr}
 80093ce:	6803      	ldr	r3, [r0, #0]
 80093d0:	4605      	mov	r5, r0
 80093d2:	460c      	mov	r4, r1
 80093d4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80093d6:	2100      	movs	r1, #0
 80093d8:	4798      	blx	r3
 80093da:	682b      	ldr	r3, [r5, #0]
 80093dc:	4606      	mov	r6, r0
 80093de:	6a1b      	ldr	r3, [r3, #32]
 80093e0:	4628      	mov	r0, r5
 80093e2:	4798      	blx	r3
 80093e4:	1ba4      	subs	r4, r4, r6
 80093e6:	b2a4      	uxth	r4, r4
 80093e8:	fbb4 f0f0 	udiv	r0, r4, r0
 80093ec:	bd70      	pop	{r4, r5, r6, pc}

080093ee <_ZN8touchgfx17AbstractPartition5clearEv>:
 80093ee:	2300      	movs	r3, #0
 80093f0:	8083      	strh	r3, [r0, #4]
 80093f2:	4770      	bx	lr

080093f4 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 80093f4:	b510      	push	{r4, lr}
 80093f6:	6803      	ldr	r3, [r0, #0]
 80093f8:	8881      	ldrh	r1, [r0, #4]
 80093fa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80093fc:	4604      	mov	r4, r0
 80093fe:	4798      	blx	r3
 8009400:	88a3      	ldrh	r3, [r4, #4]
 8009402:	3301      	adds	r3, #1
 8009404:	80a3      	strh	r3, [r4, #4]
 8009406:	bd10      	pop	{r4, pc}

08009408 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8009408:	6803      	ldr	r3, [r0, #0]
 800940a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800940c:	4718      	bx	r3

0800940e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800940e:	4770      	bx	lr

08009410 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8009410:	4a02      	ldr	r2, [pc, #8]	@ (800941c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8009412:	6002      	str	r2, [r0, #0]
 8009414:	2200      	movs	r2, #0
 8009416:	8082      	strh	r2, [r0, #4]
 8009418:	4770      	bx	lr
 800941a:	bf00      	nop
 800941c:	0801daec 	.word	0x0801daec

08009420 <_ZN8touchgfx9Container13getFirstChildEv>:
 8009420:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8009422:	4770      	bx	lr

08009424 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8009424:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009426:	2000      	movs	r0, #0
 8009428:	b12b      	cbz	r3, 8009436 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800942a:	b920      	cbnz	r0, 8009436 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800942c:	1a5a      	subs	r2, r3, r1
 800942e:	4250      	negs	r0, r2
 8009430:	4150      	adcs	r0, r2
 8009432:	699b      	ldr	r3, [r3, #24]
 8009434:	e7f8      	b.n	8009428 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8009436:	4770      	bx	lr

08009438 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8009438:	2300      	movs	r3, #0
 800943a:	6148      	str	r0, [r1, #20]
 800943c:	618b      	str	r3, [r1, #24]
 800943e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009440:	b913      	cbnz	r3, 8009448 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 8009442:	6281      	str	r1, [r0, #40]	@ 0x28
 8009444:	4770      	bx	lr
 8009446:	4613      	mov	r3, r2
 8009448:	699a      	ldr	r2, [r3, #24]
 800944a:	2a00      	cmp	r2, #0
 800944c:	d1fb      	bne.n	8009446 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800944e:	6199      	str	r1, [r3, #24]
 8009450:	4770      	bx	lr

08009452 <_ZN8touchgfx9Container9removeAllEv>:
 8009452:	2200      	movs	r2, #0
 8009454:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009456:	b123      	cbz	r3, 8009462 <_ZN8touchgfx9Container9removeAllEv+0x10>
 8009458:	6999      	ldr	r1, [r3, #24]
 800945a:	6281      	str	r1, [r0, #40]	@ 0x28
 800945c:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8009460:	e7f8      	b.n	8009454 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8009462:	4770      	bx	lr

08009464 <_ZN8touchgfx9Container6unlinkEv>:
 8009464:	2300      	movs	r3, #0
 8009466:	6283      	str	r3, [r0, #40]	@ 0x28
 8009468:	4770      	bx	lr

0800946a <_ZNK8touchgfx9Container12getSolidRectEv>:
 800946a:	2200      	movs	r2, #0
 800946c:	8002      	strh	r2, [r0, #0]
 800946e:	8042      	strh	r2, [r0, #2]
 8009470:	8082      	strh	r2, [r0, #4]
 8009472:	80c2      	strh	r2, [r0, #6]
 8009474:	4770      	bx	lr

08009476 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8009476:	b570      	push	{r4, r5, r6, lr}
 8009478:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800947a:	460d      	mov	r5, r1
 800947c:	4616      	mov	r6, r2
 800947e:	b13c      	cbz	r4, 8009490 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8009480:	6823      	ldr	r3, [r4, #0]
 8009482:	4620      	mov	r0, r4
 8009484:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8009486:	4632      	mov	r2, r6
 8009488:	4629      	mov	r1, r5
 800948a:	4798      	blx	r3
 800948c:	69a4      	ldr	r4, [r4, #24]
 800948e:	e7f6      	b.n	800947e <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8009490:	bd70      	pop	{r4, r5, r6, pc}

08009492 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8009492:	b538      	push	{r3, r4, r5, lr}
 8009494:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8009496:	460d      	mov	r5, r1
 8009498:	b134      	cbz	r4, 80094a8 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800949a:	682b      	ldr	r3, [r5, #0]
 800949c:	4621      	mov	r1, r4
 800949e:	689b      	ldr	r3, [r3, #8]
 80094a0:	4628      	mov	r0, r5
 80094a2:	4798      	blx	r3
 80094a4:	69a4      	ldr	r4, [r4, #24]
 80094a6:	e7f7      	b.n	8009498 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 80094a8:	bd38      	pop	{r3, r4, r5, pc}

080094aa <_ZN8touchgfx9ContainerD1Ev>:
 80094aa:	4770      	bx	lr

080094ac <_ZN8touchgfx9ContainerD0Ev>:
 80094ac:	b510      	push	{r4, lr}
 80094ae:	212c      	movs	r1, #44	@ 0x2c
 80094b0:	4604      	mov	r4, r0
 80094b2:	f012 f9ad 	bl	801b810 <_ZdlPvj>
 80094b6:	4620      	mov	r0, r4
 80094b8:	bd10      	pop	{r4, pc}

080094ba <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 80094ba:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80094bc:	b19b      	cbz	r3, 80094e6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80094be:	428b      	cmp	r3, r1
 80094c0:	d109      	bne.n	80094d6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 80094c2:	699a      	ldr	r2, [r3, #24]
 80094c4:	2100      	movs	r1, #0
 80094c6:	6159      	str	r1, [r3, #20]
 80094c8:	6282      	str	r2, [r0, #40]	@ 0x28
 80094ca:	b902      	cbnz	r2, 80094ce <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 80094cc:	4770      	bx	lr
 80094ce:	6199      	str	r1, [r3, #24]
 80094d0:	4770      	bx	lr
 80094d2:	4613      	mov	r3, r2
 80094d4:	b13a      	cbz	r2, 80094e6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80094d6:	699a      	ldr	r2, [r3, #24]
 80094d8:	428a      	cmp	r2, r1
 80094da:	d1fa      	bne.n	80094d2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 80094dc:	698a      	ldr	r2, [r1, #24]
 80094de:	619a      	str	r2, [r3, #24]
 80094e0:	2300      	movs	r3, #0
 80094e2:	e9c1 3305 	strd	r3, r3, [r1, #20]
 80094e6:	4770      	bx	lr

080094e8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 80094e8:	b410      	push	{r4}
 80094ea:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80094ec:	4604      	mov	r4, r0
 80094ee:	b92b      	cbnz	r3, 80094fc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 80094f0:	6803      	ldr	r3, [r0, #0]
 80094f2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80094f6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80094f8:	4611      	mov	r1, r2
 80094fa:	4718      	bx	r3
 80094fc:	b941      	cbnz	r1, 8009510 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80094fe:	6193      	str	r3, [r2, #24]
 8009500:	6282      	str	r2, [r0, #40]	@ 0x28
 8009502:	6154      	str	r4, [r2, #20]
 8009504:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009508:	4770      	bx	lr
 800950a:	4603      	mov	r3, r0
 800950c:	2800      	cmp	r0, #0
 800950e:	d0f9      	beq.n	8009504 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8009510:	4299      	cmp	r1, r3
 8009512:	6998      	ldr	r0, [r3, #24]
 8009514:	d1f9      	bne.n	800950a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8009516:	6190      	str	r0, [r2, #24]
 8009518:	618a      	str	r2, [r1, #24]
 800951a:	e7f2      	b.n	8009502 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800951c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800951c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009520:	461f      	mov	r7, r3
 8009522:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 8009526:	460d      	mov	r5, r1
 8009528:	4616      	mov	r6, r2
 800952a:	b103      	cbz	r3, 800952e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800952c:	6038      	str	r0, [r7, #0]
 800952e:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8009530:	b314      	cbz	r4, 8009578 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8009532:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8009536:	b1eb      	cbz	r3, 8009574 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009538:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800953c:	428d      	cmp	r5, r1
 800953e:	db19      	blt.n	8009574 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009540:	8923      	ldrh	r3, [r4, #8]
 8009542:	b289      	uxth	r1, r1
 8009544:	440b      	add	r3, r1
 8009546:	b21b      	sxth	r3, r3
 8009548:	429d      	cmp	r5, r3
 800954a:	da13      	bge.n	8009574 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800954c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8009550:	4296      	cmp	r6, r2
 8009552:	db0f      	blt.n	8009574 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009554:	8963      	ldrh	r3, [r4, #10]
 8009556:	b292      	uxth	r2, r2
 8009558:	4413      	add	r3, r2
 800955a:	b21b      	sxth	r3, r3
 800955c:	429e      	cmp	r6, r3
 800955e:	da09      	bge.n	8009574 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009560:	6823      	ldr	r3, [r4, #0]
 8009562:	1ab2      	subs	r2, r6, r2
 8009564:	1a69      	subs	r1, r5, r1
 8009566:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800956a:	b212      	sxth	r2, r2
 800956c:	463b      	mov	r3, r7
 800956e:	b209      	sxth	r1, r1
 8009570:	4620      	mov	r0, r4
 8009572:	47c0      	blx	r8
 8009574:	69a4      	ldr	r4, [r4, #24]
 8009576:	e7db      	b.n	8009530 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8009578:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800957c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800957c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009580:	4c6e      	ldr	r4, [pc, #440]	@ (800973c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8009582:	b0a1      	sub	sp, #132	@ 0x84
 8009584:	6824      	ldr	r4, [r4, #0]
 8009586:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8009588:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800958c:	9303      	str	r3, [sp, #12]
 800958e:	2400      	movs	r4, #0
 8009590:	802c      	strh	r4, [r5, #0]
 8009592:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 8009594:	802c      	strh	r4, [r5, #0]
 8009596:	601c      	str	r4, [r3, #0]
 8009598:	4606      	mov	r6, r0
 800959a:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800959e:	f7ff ffbd 	bl	800951c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80095a2:	f1b9 0f03 	cmp.w	r9, #3
 80095a6:	f340 80c2 	ble.w	800972e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 80095aa:	4631      	mov	r1, r6
 80095ac:	a80c      	add	r0, sp, #48	@ 0x30
 80095ae:	f003 fe65 	bl	800d27c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80095b2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 80095b6:	9306      	str	r3, [sp, #24]
 80095b8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80095bc:	9307      	str	r3, [sp, #28]
 80095be:	9b03      	ldr	r3, [sp, #12]
 80095c0:	f8d3 a000 	ldr.w	sl, [r3]
 80095c4:	f1ba 0f00 	cmp.w	sl, #0
 80095c8:	f000 80b4 	beq.w	8009734 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 80095cc:	4651      	mov	r1, sl
 80095ce:	a810      	add	r0, sp, #64	@ 0x40
 80095d0:	f003 fe54 	bl	800d27c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80095d4:	9b01      	ldr	r3, [sp, #4]
 80095d6:	9a06      	ldr	r2, [sp, #24]
 80095d8:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 80095dc:	189d      	adds	r5, r3, r2
 80095de:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 80095e2:	9a07      	ldr	r2, [sp, #28]
 80095e4:	2002      	movs	r0, #2
 80095e6:	fb91 f1f0 	sdiv	r1, r1, r0
 80095ea:	4419      	add	r1, r3
 80095ec:	1a6d      	subs	r5, r5, r1
 80095ee:	9b02      	ldr	r3, [sp, #8]
 80095f0:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 80095f4:	4413      	add	r3, r2
 80095f6:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 80095fa:	fb92 f2f0 	sdiv	r2, r2, r0
 80095fe:	440a      	add	r2, r1
 8009600:	1a9b      	subs	r3, r3, r2
 8009602:	435b      	muls	r3, r3
 8009604:	fb05 3505 	mla	r5, r5, r5, r3
 8009608:	4f4d      	ldr	r7, [pc, #308]	@ (8009740 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800960a:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800960c:	ac10      	add	r4, sp, #64	@ 0x40
 800960e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009610:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009612:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009614:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009616:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009618:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800961c:	f1b9 0f0c 	cmp.w	r9, #12
 8009620:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8009624:	f04f 0303 	mov.w	r3, #3
 8009628:	bfc8      	it	gt
 800962a:	4698      	movgt	r8, r3
 800962c:	f8cd 9000 	str.w	r9, [sp]
 8009630:	f04f 0400 	mov.w	r4, #0
 8009634:	bfdc      	itt	le
 8009636:	f109 32ff 	addle.w	r2, r9, #4294967295
 800963a:	fb92 f8f3 	sdivle	r8, r2, r3
 800963e:	1c63      	adds	r3, r4, #1
 8009640:	aa10      	add	r2, sp, #64	@ 0x40
 8009642:	f004 0401 	and.w	r4, r4, #1
 8009646:	9308      	str	r3, [sp, #32]
 8009648:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800964c:	9b00      	ldr	r3, [sp, #0]
 800964e:	fb93 f3f8 	sdiv	r3, r3, r8
 8009652:	b29b      	uxth	r3, r3
 8009654:	3404      	adds	r4, #4
 8009656:	f04f 0b00 	mov.w	fp, #0
 800965a:	9304      	str	r3, [sp, #16]
 800965c:	9a04      	ldr	r2, [sp, #16]
 800965e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8009662:	fb13 f302 	smulbb	r3, r3, r2
 8009666:	9a01      	ldr	r2, [sp, #4]
 8009668:	b29b      	uxth	r3, r3
 800966a:	1899      	adds	r1, r3, r2
 800966c:	9305      	str	r3, [sp, #20]
 800966e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8009672:	b209      	sxth	r1, r1
 8009674:	4299      	cmp	r1, r3
 8009676:	db4d      	blt.n	8009714 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009678:	8932      	ldrh	r2, [r6, #8]
 800967a:	4413      	add	r3, r2
 800967c:	b21b      	sxth	r3, r3
 800967e:	4299      	cmp	r1, r3
 8009680:	da48      	bge.n	8009714 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009682:	9b04      	ldr	r3, [sp, #16]
 8009684:	6827      	ldr	r7, [r4, #0]
 8009686:	fb17 f703 	smulbb	r7, r7, r3
 800968a:	9b02      	ldr	r3, [sp, #8]
 800968c:	b2bf      	uxth	r7, r7
 800968e:	18fa      	adds	r2, r7, r3
 8009690:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8009694:	b212      	sxth	r2, r2
 8009696:	429a      	cmp	r2, r3
 8009698:	db3c      	blt.n	8009714 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800969a:	8970      	ldrh	r0, [r6, #10]
 800969c:	4403      	add	r3, r0
 800969e:	b21b      	sxth	r3, r3
 80096a0:	429a      	cmp	r2, r3
 80096a2:	da37      	bge.n	8009714 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80096a4:	2300      	movs	r3, #0
 80096a6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80096a8:	4630      	mov	r0, r6
 80096aa:	ab0b      	add	r3, sp, #44	@ 0x2c
 80096ac:	f7ff ff36 	bl	800951c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80096b0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80096b2:	b37a      	cbz	r2, 8009714 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80096b4:	4552      	cmp	r2, sl
 80096b6:	d02d      	beq.n	8009714 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80096b8:	4611      	mov	r1, r2
 80096ba:	a80e      	add	r0, sp, #56	@ 0x38
 80096bc:	9209      	str	r2, [sp, #36]	@ 0x24
 80096be:	f003 fddd 	bl	800d27c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80096c2:	9a06      	ldr	r2, [sp, #24]
 80096c4:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 80096c8:	9b01      	ldr	r3, [sp, #4]
 80096ca:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 80096ce:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 80096d2:	4413      	add	r3, r2
 80096d4:	f04f 0e02 	mov.w	lr, #2
 80096d8:	fb91 f1fe 	sdiv	r1, r1, lr
 80096dc:	4401      	add	r1, r0
 80096de:	1a58      	subs	r0, r3, r1
 80096e0:	9a07      	ldr	r2, [sp, #28]
 80096e2:	9b02      	ldr	r3, [sp, #8]
 80096e4:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 80096e8:	fb9c fcfe 	sdiv	ip, ip, lr
 80096ec:	4413      	add	r3, r2
 80096ee:	448c      	add	ip, r1
 80096f0:	eba3 030c 	sub.w	r3, r3, ip
 80096f4:	435b      	muls	r3, r3
 80096f6:	fb00 3300 	mla	r3, r0, r0, r3
 80096fa:	42ab      	cmp	r3, r5
 80096fc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80096fe:	d208      	bcs.n	8009712 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8009700:	9803      	ldr	r0, [sp, #12]
 8009702:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8009704:	6001      	str	r1, [r0, #0]
 8009706:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8009708:	9805      	ldr	r0, [sp, #20]
 800970a:	8008      	strh	r0, [r1, #0]
 800970c:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800970e:	461d      	mov	r5, r3
 8009710:	800f      	strh	r7, [r1, #0]
 8009712:	4692      	mov	sl, r2
 8009714:	f10b 0b01 	add.w	fp, fp, #1
 8009718:	f1bb 0f04 	cmp.w	fp, #4
 800971c:	f104 0408 	add.w	r4, r4, #8
 8009720:	d19c      	bne.n	800965c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8009722:	9b00      	ldr	r3, [sp, #0]
 8009724:	9c08      	ldr	r4, [sp, #32]
 8009726:	444b      	add	r3, r9
 8009728:	4544      	cmp	r4, r8
 800972a:	9300      	str	r3, [sp, #0]
 800972c:	d187      	bne.n	800963e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800972e:	b021      	add	sp, #132	@ 0x84
 8009730:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009734:	f04f 35ff 	mov.w	r5, #4294967295
 8009738:	e766      	b.n	8009608 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800973a:	bf00      	nop
 800973c:	20013800 	.word	0x20013800
 8009740:	0801c8c4 	.word	0x0801c8c4

08009744 <_ZN8touchgfx4RectaNERKS0_>:
 8009744:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009748:	f9b1 7000 	ldrsh.w	r7, [r1]
 800974c:	888c      	ldrh	r4, [r1, #4]
 800974e:	f9b0 9000 	ldrsh.w	r9, [r0]
 8009752:	443c      	add	r4, r7
 8009754:	b2a4      	uxth	r4, r4
 8009756:	fa0f f884 	sxth.w	r8, r4
 800975a:	45c1      	cmp	r9, r8
 800975c:	da2f      	bge.n	80097be <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800975e:	8882      	ldrh	r2, [r0, #4]
 8009760:	444a      	add	r2, r9
 8009762:	b292      	uxth	r2, r2
 8009764:	fa0f fe82 	sxth.w	lr, r2
 8009768:	4577      	cmp	r7, lr
 800976a:	da28      	bge.n	80097be <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800976c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8009770:	88cb      	ldrh	r3, [r1, #6]
 8009772:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8009776:	442b      	add	r3, r5
 8009778:	b21b      	sxth	r3, r3
 800977a:	429e      	cmp	r6, r3
 800977c:	da1f      	bge.n	80097be <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800977e:	88c3      	ldrh	r3, [r0, #6]
 8009780:	4433      	add	r3, r6
 8009782:	b29b      	uxth	r3, r3
 8009784:	fa0f fc83 	sxth.w	ip, r3
 8009788:	4565      	cmp	r5, ip
 800978a:	da18      	bge.n	80097be <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800978c:	454f      	cmp	r7, r9
 800978e:	bfb8      	it	lt
 8009790:	464f      	movlt	r7, r9
 8009792:	42b5      	cmp	r5, r6
 8009794:	bfb8      	it	lt
 8009796:	4635      	movlt	r5, r6
 8009798:	45f0      	cmp	r8, lr
 800979a:	bfd8      	it	le
 800979c:	4622      	movle	r2, r4
 800979e:	1bd2      	subs	r2, r2, r7
 80097a0:	8082      	strh	r2, [r0, #4]
 80097a2:	884a      	ldrh	r2, [r1, #2]
 80097a4:	88c9      	ldrh	r1, [r1, #6]
 80097a6:	8007      	strh	r7, [r0, #0]
 80097a8:	440a      	add	r2, r1
 80097aa:	b292      	uxth	r2, r2
 80097ac:	b211      	sxth	r1, r2
 80097ae:	458c      	cmp	ip, r1
 80097b0:	bfa8      	it	ge
 80097b2:	4613      	movge	r3, r2
 80097b4:	1b5b      	subs	r3, r3, r5
 80097b6:	80c3      	strh	r3, [r0, #6]
 80097b8:	8045      	strh	r5, [r0, #2]
 80097ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80097be:	2300      	movs	r3, #0
 80097c0:	8003      	strh	r3, [r0, #0]
 80097c2:	8043      	strh	r3, [r0, #2]
 80097c4:	8083      	strh	r3, [r0, #4]
 80097c6:	80c3      	strh	r3, [r0, #6]
 80097c8:	e7f7      	b.n	80097ba <_ZN8touchgfx4RectaNERKS0_+0x76>

080097ca <_ZNK8touchgfx4Rect7isEmptyEv>:
 80097ca:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80097ce:	2b00      	cmp	r3, #0
 80097d0:	dd06      	ble.n	80097e0 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 80097d2:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 80097d6:	2800      	cmp	r0, #0
 80097d8:	bfcc      	ite	gt
 80097da:	2000      	movgt	r0, #0
 80097dc:	2001      	movle	r0, #1
 80097de:	4770      	bx	lr
 80097e0:	2001      	movs	r0, #1
 80097e2:	4770      	bx	lr

080097e4 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 80097e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80097e8:	2300      	movs	r3, #0
 80097ea:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 80097ec:	8003      	strh	r3, [r0, #0]
 80097ee:	4604      	mov	r4, r0
 80097f0:	8043      	strh	r3, [r0, #2]
 80097f2:	8083      	strh	r3, [r0, #4]
 80097f4:	80c3      	strh	r3, [r0, #6]
 80097f6:	2d00      	cmp	r5, #0
 80097f8:	d040      	beq.n	800987c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 80097fa:	1d28      	adds	r0, r5, #4
 80097fc:	f7ff ffe5 	bl	80097ca <_ZNK8touchgfx4Rect7isEmptyEv>
 8009800:	b988      	cbnz	r0, 8009826 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009802:	4620      	mov	r0, r4
 8009804:	f7ff ffe1 	bl	80097ca <_ZNK8touchgfx4Rect7isEmptyEv>
 8009808:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800980c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8009810:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8009814:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8009818:	b138      	cbz	r0, 800982a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800981a:	8022      	strh	r2, [r4, #0]
 800981c:	8063      	strh	r3, [r4, #2]
 800981e:	f8a4 e004 	strh.w	lr, [r4, #4]
 8009822:	f8a4 c006 	strh.w	ip, [r4, #6]
 8009826:	69ad      	ldr	r5, [r5, #24]
 8009828:	e7e5      	b.n	80097f6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800982a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800982e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8009832:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8009836:	4290      	cmp	r0, r2
 8009838:	4607      	mov	r7, r0
 800983a:	bfa8      	it	ge
 800983c:	4617      	movge	r7, r2
 800983e:	4472      	add	r2, lr
 8009840:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8009844:	8027      	strh	r7, [r4, #0]
 8009846:	4299      	cmp	r1, r3
 8009848:	460e      	mov	r6, r1
 800984a:	4440      	add	r0, r8
 800984c:	bfa8      	it	ge
 800984e:	461e      	movge	r6, r3
 8009850:	4471      	add	r1, lr
 8009852:	4463      	add	r3, ip
 8009854:	b200      	sxth	r0, r0
 8009856:	b212      	sxth	r2, r2
 8009858:	b209      	sxth	r1, r1
 800985a:	b21b      	sxth	r3, r3
 800985c:	4290      	cmp	r0, r2
 800985e:	bfac      	ite	ge
 8009860:	ebc7 0200 	rsbge	r2, r7, r0
 8009864:	ebc7 0202 	rsblt	r2, r7, r2
 8009868:	4299      	cmp	r1, r3
 800986a:	bfac      	ite	ge
 800986c:	ebc6 0301 	rsbge	r3, r6, r1
 8009870:	ebc6 0303 	rsblt	r3, r6, r3
 8009874:	8066      	strh	r6, [r4, #2]
 8009876:	80a2      	strh	r2, [r4, #4]
 8009878:	80e3      	strh	r3, [r4, #6]
 800987a:	e7d4      	b.n	8009826 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800987c:	4620      	mov	r0, r4
 800987e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009882 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8009882:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009886:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800988a:	b383      	cbz	r3, 80098ee <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800988c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800988e:	b374      	cbz	r4, 80098ee <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009890:	f9b1 5000 	ldrsh.w	r5, [r1]
 8009894:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8009898:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800989c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 80098a0:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 80098a4:	b303      	cbz	r3, 80098e8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80098a6:	4668      	mov	r0, sp
 80098a8:	1d21      	adds	r1, r4, #4
 80098aa:	f8ad 5000 	strh.w	r5, [sp]
 80098ae:	f8ad 6002 	strh.w	r6, [sp, #2]
 80098b2:	f8ad 7004 	strh.w	r7, [sp, #4]
 80098b6:	f8ad 8006 	strh.w	r8, [sp, #6]
 80098ba:	f7ff ff43 	bl	8009744 <_ZN8touchgfx4RectaNERKS0_>
 80098be:	4668      	mov	r0, sp
 80098c0:	f7ff ff83 	bl	80097ca <_ZNK8touchgfx4Rect7isEmptyEv>
 80098c4:	b980      	cbnz	r0, 80098e8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80098c6:	f8bd 3000 	ldrh.w	r3, [sp]
 80098ca:	88a2      	ldrh	r2, [r4, #4]
 80098cc:	1a9b      	subs	r3, r3, r2
 80098ce:	f8ad 3000 	strh.w	r3, [sp]
 80098d2:	88e2      	ldrh	r2, [r4, #6]
 80098d4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80098d8:	1a9b      	subs	r3, r3, r2
 80098da:	f8ad 3002 	strh.w	r3, [sp, #2]
 80098de:	6823      	ldr	r3, [r4, #0]
 80098e0:	4669      	mov	r1, sp
 80098e2:	689b      	ldr	r3, [r3, #8]
 80098e4:	4620      	mov	r0, r4
 80098e6:	4798      	blx	r3
 80098e8:	69a4      	ldr	r4, [r4, #24]
 80098ea:	2c00      	cmp	r4, #0
 80098ec:	d1d8      	bne.n	80098a0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 80098ee:	b002      	add	sp, #8
 80098f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080098f4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 80098f4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80098f6:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 80098fa:	460d      	mov	r5, r1
 80098fc:	4616      	mov	r6, r2
 80098fe:	b323      	cbz	r3, 800994a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009900:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8009902:	b314      	cbz	r4, 800994a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009904:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8009908:	b1eb      	cbz	r3, 8009946 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800990a:	6828      	ldr	r0, [r5, #0]
 800990c:	6869      	ldr	r1, [r5, #4]
 800990e:	466b      	mov	r3, sp
 8009910:	c303      	stmia	r3!, {r0, r1}
 8009912:	4668      	mov	r0, sp
 8009914:	1d21      	adds	r1, r4, #4
 8009916:	f7ff ff15 	bl	8009744 <_ZN8touchgfx4RectaNERKS0_>
 800991a:	4668      	mov	r0, sp
 800991c:	f7ff ff55 	bl	80097ca <_ZNK8touchgfx4Rect7isEmptyEv>
 8009920:	b988      	cbnz	r0, 8009946 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009922:	f8bd 3000 	ldrh.w	r3, [sp]
 8009926:	88a2      	ldrh	r2, [r4, #4]
 8009928:	1a9b      	subs	r3, r3, r2
 800992a:	f8ad 3000 	strh.w	r3, [sp]
 800992e:	88e2      	ldrh	r2, [r4, #6]
 8009930:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009934:	1a9b      	subs	r3, r3, r2
 8009936:	f8ad 3002 	strh.w	r3, [sp, #2]
 800993a:	6823      	ldr	r3, [r4, #0]
 800993c:	4632      	mov	r2, r6
 800993e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8009940:	4669      	mov	r1, sp
 8009942:	4620      	mov	r0, r4
 8009944:	4798      	blx	r3
 8009946:	69a4      	ldr	r4, [r4, #24]
 8009948:	e7db      	b.n	8009902 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800994a:	b002      	add	sp, #8
 800994c:	bd70      	pop	{r4, r5, r6, pc}

0800994e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800994e:	b513      	push	{r0, r1, r4, lr}
 8009950:	6803      	ldr	r3, [r0, #0]
 8009952:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 8009956:	2300      	movs	r3, #0
 8009958:	e9cd 3300 	strd	r3, r3, [sp]
 800995c:	466b      	mov	r3, sp
 800995e:	47a0      	blx	r4
 8009960:	b002      	add	sp, #8
 8009962:	bd10      	pop	{r4, pc}

08009964 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8009964:	2301      	movs	r3, #1
 8009966:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800996a:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800996e:	4770      	bx	lr

08009970 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8009970:	2301      	movs	r3, #1
 8009972:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8009976:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800997a:	4770      	bx	lr

0800997c <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800997c:	6843      	ldr	r3, [r0, #4]
 800997e:	2201      	movs	r2, #1
 8009980:	725a      	strb	r2, [r3, #9]
 8009982:	6840      	ldr	r0, [r0, #4]
 8009984:	6803      	ldr	r3, [r0, #0]
 8009986:	691b      	ldr	r3, [r3, #16]
 8009988:	4718      	bx	r3

0800998a <_ZN8touchgfx3HAL8flushDMAEv>:
 800998a:	6840      	ldr	r0, [r0, #4]
 800998c:	6803      	ldr	r3, [r0, #0]
 800998e:	689b      	ldr	r3, [r3, #8]
 8009990:	4718      	bx	r3

08009992 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8009992:	b530      	push	{r4, r5, lr}
 8009994:	b08b      	sub	sp, #44	@ 0x2c
 8009996:	6804      	ldr	r4, [r0, #0]
 8009998:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800999c:	9509      	str	r5, [sp, #36]	@ 0x24
 800999e:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 80099a2:	9508      	str	r5, [sp, #32]
 80099a4:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 80099a8:	9507      	str	r5, [sp, #28]
 80099aa:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 80099ae:	9506      	str	r5, [sp, #24]
 80099b0:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 80099b4:	9505      	str	r5, [sp, #20]
 80099b6:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 80099ba:	9504      	str	r5, [sp, #16]
 80099bc:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 80099c0:	9503      	str	r5, [sp, #12]
 80099c2:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 80099c6:	9502      	str	r5, [sp, #8]
 80099c8:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 80099cc:	e9cd 3500 	strd	r3, r5, [sp]
 80099d0:	4613      	mov	r3, r2
 80099d2:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 80099d4:	2200      	movs	r2, #0
 80099d6:	47a0      	blx	r4
 80099d8:	b00b      	add	sp, #44	@ 0x2c
 80099da:	bd30      	pop	{r4, r5, pc}

080099dc <_ZN8touchgfx3HAL10beginFrameEv>:
 80099dc:	4b04      	ldr	r3, [pc, #16]	@ (80099f0 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 80099de:	781b      	ldrb	r3, [r3, #0]
 80099e0:	b123      	cbz	r3, 80099ec <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 80099e2:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 80099e6:	f080 0001 	eor.w	r0, r0, #1
 80099ea:	4770      	bx	lr
 80099ec:	2001      	movs	r0, #1
 80099ee:	4770      	bx	lr
 80099f0:	200137fe 	.word	0x200137fe

080099f4 <_ZN8touchgfx3HAL8endFrameEv>:
 80099f4:	b510      	push	{r4, lr}
 80099f6:	4604      	mov	r4, r0
 80099f8:	6840      	ldr	r0, [r0, #4]
 80099fa:	6803      	ldr	r3, [r0, #0]
 80099fc:	689b      	ldr	r3, [r3, #8]
 80099fe:	4798      	blx	r3
 8009a00:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 8009a04:	b113      	cbz	r3, 8009a0c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8009a06:	2301      	movs	r3, #1
 8009a08:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 8009a0c:	bd10      	pop	{r4, pc}

08009a0e <_ZN8touchgfx3HAL10initializeEv>:
 8009a0e:	b510      	push	{r4, lr}
 8009a10:	4604      	mov	r4, r0
 8009a12:	f7f7 f80f 	bl	8000a34 <_ZN8touchgfx10OSWrappers10initializeEv>
 8009a16:	f7f6 ff17 	bl	8000848 <_ZN8touchgfx4GPIO4initEv>
 8009a1a:	6860      	ldr	r0, [r4, #4]
 8009a1c:	6803      	ldr	r3, [r0, #0]
 8009a1e:	68db      	ldr	r3, [r3, #12]
 8009a20:	4798      	blx	r3
 8009a22:	68e0      	ldr	r0, [r4, #12]
 8009a24:	6803      	ldr	r3, [r0, #0]
 8009a26:	689b      	ldr	r3, [r3, #8]
 8009a28:	4798      	blx	r3
 8009a2a:	6823      	ldr	r3, [r4, #0]
 8009a2c:	4620      	mov	r0, r4
 8009a2e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8009a30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009a34:	4718      	bx	r3
	...

08009a38 <_ZN8touchgfx3HAL4tickEv>:
 8009a38:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009a3a:	6803      	ldr	r3, [r0, #0]
 8009a3c:	4d5b      	ldr	r5, [pc, #364]	@ (8009bac <_ZN8touchgfx3HAL4tickEv+0x174>)
 8009a3e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 8009a42:	4604      	mov	r4, r0
 8009a44:	4798      	blx	r3
 8009a46:	2800      	cmp	r0, #0
 8009a48:	f000 8095 	beq.w	8009b76 <_ZN8touchgfx3HAL4tickEv+0x13e>
 8009a4c:	2001      	movs	r0, #1
 8009a4e:	f7f6 fe79 	bl	8000744 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8009a52:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 8009a56:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8009a5a:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 8009a5e:	2600      	movs	r6, #0
 8009a60:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 8009a64:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 8009a68:	b133      	cbz	r3, 8009a78 <_ZN8touchgfx3HAL4tickEv+0x40>
 8009a6a:	6823      	ldr	r3, [r4, #0]
 8009a6c:	4620      	mov	r0, r4
 8009a6e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8009a72:	4798      	blx	r3
 8009a74:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 8009a78:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 8009a7c:	6862      	ldr	r2, [r4, #4]
 8009a7e:	f083 0301 	eor.w	r3, r3, #1
 8009a82:	7253      	strb	r3, [r2, #9]
 8009a84:	2601      	movs	r6, #1
 8009a86:	702e      	strb	r6, [r5, #0]
 8009a88:	f002 fbc6 	bl	800c218 <_ZN8touchgfx11Application11getInstanceEv>
 8009a8c:	6803      	ldr	r3, [r0, #0]
 8009a8e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8009a90:	4798      	blx	r3
 8009a92:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8009a96:	b90b      	cbnz	r3, 8009a9c <_ZN8touchgfx3HAL4tickEv+0x64>
 8009a98:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 8009a9c:	f002 fbbc 	bl	800c218 <_ZN8touchgfx11Application11getInstanceEv>
 8009aa0:	6803      	ldr	r3, [r0, #0]
 8009aa2:	695b      	ldr	r3, [r3, #20]
 8009aa4:	4798      	blx	r3
 8009aa6:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8009aa8:	6803      	ldr	r3, [r0, #0]
 8009aaa:	691b      	ldr	r3, [r3, #16]
 8009aac:	4798      	blx	r3
 8009aae:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8009ab2:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 8009ab6:	3b01      	subs	r3, #1
 8009ab8:	b2db      	uxtb	r3, r3
 8009aba:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8009abe:	b10a      	cbz	r2, 8009ac4 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8009ac0:	2b00      	cmp	r3, #0
 8009ac2:	d1eb      	bne.n	8009a9c <_ZN8touchgfx3HAL4tickEv+0x64>
 8009ac4:	4a3a      	ldr	r2, [pc, #232]	@ (8009bb0 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8009ac6:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 8009aca:	7813      	ldrb	r3, [r2, #0]
 8009acc:	3301      	adds	r3, #1
 8009ace:	b25b      	sxtb	r3, r3
 8009ad0:	4299      	cmp	r1, r3
 8009ad2:	7013      	strb	r3, [r2, #0]
 8009ad4:	dc10      	bgt.n	8009af8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8009ad6:	68e0      	ldr	r0, [r4, #12]
 8009ad8:	2300      	movs	r3, #0
 8009ada:	7013      	strb	r3, [r2, #0]
 8009adc:	6803      	ldr	r3, [r0, #0]
 8009ade:	aa03      	add	r2, sp, #12
 8009ae0:	68db      	ldr	r3, [r3, #12]
 8009ae2:	a902      	add	r1, sp, #8
 8009ae4:	4798      	blx	r3
 8009ae6:	6823      	ldr	r3, [r4, #0]
 8009ae8:	2800      	cmp	r0, #0
 8009aea:	d050      	beq.n	8009b8e <_ZN8touchgfx3HAL4tickEv+0x156>
 8009aec:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 8009af0:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8009af4:	4620      	mov	r0, r4
 8009af6:	4798      	blx	r3
 8009af8:	6960      	ldr	r0, [r4, #20]
 8009afa:	2300      	movs	r3, #0
 8009afc:	f88d 3007 	strb.w	r3, [sp, #7]
 8009b00:	b158      	cbz	r0, 8009b1a <_ZN8touchgfx3HAL4tickEv+0xe2>
 8009b02:	6803      	ldr	r3, [r0, #0]
 8009b04:	f10d 0107 	add.w	r1, sp, #7
 8009b08:	68db      	ldr	r3, [r3, #12]
 8009b0a:	4798      	blx	r3
 8009b0c:	b128      	cbz	r0, 8009b1a <_ZN8touchgfx3HAL4tickEv+0xe2>
 8009b0e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8009b10:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8009b14:	6803      	ldr	r3, [r0, #0]
 8009b16:	68db      	ldr	r3, [r3, #12]
 8009b18:	4798      	blx	r3
 8009b1a:	f104 001c 	add.w	r0, r4, #28
 8009b1e:	f011 fda3 	bl	801b668 <_ZN8touchgfx8Gestures4tickEv>
 8009b22:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 8009b26:	b30b      	cbz	r3, 8009b6c <_ZN8touchgfx3HAL4tickEv+0x134>
 8009b28:	6920      	ldr	r0, [r4, #16]
 8009b2a:	6803      	ldr	r3, [r0, #0]
 8009b2c:	691b      	ldr	r3, [r3, #16]
 8009b2e:	4798      	blx	r3
 8009b30:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8009b32:	4606      	mov	r6, r0
 8009b34:	b903      	cbnz	r3, 8009b38 <_ZN8touchgfx3HAL4tickEv+0x100>
 8009b36:	6760      	str	r0, [r4, #116]	@ 0x74
 8009b38:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8009b3a:	4a1e      	ldr	r2, [pc, #120]	@ (8009bb4 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8009b3c:	1af3      	subs	r3, r6, r3
 8009b3e:	4293      	cmp	r3, r2
 8009b40:	d914      	bls.n	8009b6c <_ZN8touchgfx3HAL4tickEv+0x134>
 8009b42:	6920      	ldr	r0, [r4, #16]
 8009b44:	6803      	ldr	r3, [r0, #0]
 8009b46:	699b      	ldr	r3, [r3, #24]
 8009b48:	4798      	blx	r3
 8009b4a:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8009b4c:	2264      	movs	r2, #100	@ 0x64
 8009b4e:	1af3      	subs	r3, r6, r3
 8009b50:	fbb3 f3f2 	udiv	r3, r3, r2
 8009b54:	fbb0 f0f3 	udiv	r0, r0, r3
 8009b58:	2800      	cmp	r0, #0
 8009b5a:	dc1d      	bgt.n	8009b98 <_ZN8touchgfx3HAL4tickEv+0x160>
 8009b5c:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 8009b60:	6920      	ldr	r0, [r4, #16]
 8009b62:	6803      	ldr	r3, [r0, #0]
 8009b64:	2100      	movs	r1, #0
 8009b66:	69db      	ldr	r3, [r3, #28]
 8009b68:	4798      	blx	r3
 8009b6a:	6766      	str	r6, [r4, #116]	@ 0x74
 8009b6c:	f002 fb54 	bl	800c218 <_ZN8touchgfx11Application11getInstanceEv>
 8009b70:	6803      	ldr	r3, [r0, #0]
 8009b72:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009b74:	4798      	blx	r3
 8009b76:	6823      	ldr	r3, [r4, #0]
 8009b78:	4620      	mov	r0, r4
 8009b7a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 8009b7e:	4798      	blx	r3
 8009b80:	2001      	movs	r0, #1
 8009b82:	f7f6 fe09 	bl	8000798 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8009b86:	2300      	movs	r3, #0
 8009b88:	702b      	strb	r3, [r5, #0]
 8009b8a:	b004      	add	sp, #16
 8009b8c:	bd70      	pop	{r4, r5, r6, pc}
 8009b8e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8009b92:	4620      	mov	r0, r4
 8009b94:	4798      	blx	r3
 8009b96:	e7af      	b.n	8009af8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8009b98:	2863      	cmp	r0, #99	@ 0x63
 8009b9a:	bfcb      	itete	gt
 8009b9c:	2300      	movgt	r3, #0
 8009b9e:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 8009ba2:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 8009ba6:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 8009baa:	e7d9      	b.n	8009b60 <_ZN8touchgfx3HAL4tickEv+0x128>
 8009bac:	20013804 	.word	0x20013804
 8009bb0:	20013805 	.word	0x20013805
 8009bb4:	05f5e100 	.word	0x05f5e100

08009bb8 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8009bb8:	b510      	push	{r4, lr}
 8009bba:	4604      	mov	r4, r0
 8009bbc:	f7f6 ff6a 	bl	8000a94 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8009bc0:	6863      	ldr	r3, [r4, #4]
 8009bc2:	2200      	movs	r2, #0
 8009bc4:	729a      	strb	r2, [r3, #10]
 8009bc6:	bd10      	pop	{r4, pc}

08009bc8 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8009bc8:	65c1      	str	r1, [r0, #92]	@ 0x5c
 8009bca:	301c      	adds	r0, #28
 8009bcc:	f011 bd4a 	b.w	801b664 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08009bd0 <_ZN8touchgfx3HAL5touchEll>:
 8009bd0:	b530      	push	{r4, r5, lr}
 8009bd2:	b087      	sub	sp, #28
 8009bd4:	4604      	mov	r4, r0
 8009bd6:	a804      	add	r0, sp, #16
 8009bd8:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8009bdc:	f002 f8e8 	bl	800bdb0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8009be0:	9b04      	ldr	r3, [sp, #16]
 8009be2:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009be6:	a906      	add	r1, sp, #24
 8009be8:	9b05      	ldr	r3, [sp, #20]
 8009bea:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8009bee:	a803      	add	r0, sp, #12
 8009bf0:	f002 f930 	bl	800be54 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8009bf4:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 8009bf8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009bfc:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8009c00:	f104 001c 	add.w	r0, r4, #28
 8009c04:	b189      	cbz	r1, 8009c2a <_ZN8touchgfx3HAL5touchEll+0x5a>
 8009c06:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 8009c0a:	9300      	str	r3, [sp, #0]
 8009c0c:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 8009c10:	4613      	mov	r3, r2
 8009c12:	462a      	mov	r2, r5
 8009c14:	f011 fd36 	bl	801b684 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8009c18:	b128      	cbz	r0, 8009c26 <_ZN8touchgfx3HAL5touchEll+0x56>
 8009c1a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8009c1e:	6623      	str	r3, [r4, #96]	@ 0x60
 8009c20:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8009c24:	6663      	str	r3, [r4, #100]	@ 0x64
 8009c26:	b007      	add	sp, #28
 8009c28:	bd30      	pop	{r4, r5, pc}
 8009c2a:	f011 fd6b 	bl	801b704 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009c2e:	2301      	movs	r3, #1
 8009c30:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 8009c34:	e7f1      	b.n	8009c1a <_ZN8touchgfx3HAL5touchEll+0x4a>

08009c36 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8009c36:	b510      	push	{r4, lr}
 8009c38:	2b00      	cmp	r3, #0
 8009c3a:	d046      	beq.n	8009cca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009c3c:	ea81 0002 	eor.w	r0, r1, r2
 8009c40:	07c4      	lsls	r4, r0, #31
 8009c42:	d508      	bpl.n	8009c56 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8009c44:	440b      	add	r3, r1
 8009c46:	3a01      	subs	r2, #1
 8009c48:	428b      	cmp	r3, r1
 8009c4a:	d93e      	bls.n	8009cca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009c4c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009c50:	f801 0b01 	strb.w	r0, [r1], #1
 8009c54:	e7f8      	b.n	8009c48 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8009c56:	07d0      	lsls	r0, r2, #31
 8009c58:	bf42      	ittt	mi
 8009c5a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8009c5e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8009c62:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8009c66:	2b01      	cmp	r3, #1
 8009c68:	d911      	bls.n	8009c8e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009c6a:	ea81 0402 	eor.w	r4, r1, r2
 8009c6e:	07a4      	lsls	r4, r4, #30
 8009c70:	4610      	mov	r0, r2
 8009c72:	d022      	beq.n	8009cba <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8009c74:	f023 0401 	bic.w	r4, r3, #1
 8009c78:	440c      	add	r4, r1
 8009c7a:	428c      	cmp	r4, r1
 8009c7c:	4602      	mov	r2, r0
 8009c7e:	d904      	bls.n	8009c8a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8009c80:	8812      	ldrh	r2, [r2, #0]
 8009c82:	f821 2b02 	strh.w	r2, [r1], #2
 8009c86:	3002      	adds	r0, #2
 8009c88:	e7f7      	b.n	8009c7a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8009c8a:	f003 0301 	and.w	r3, r3, #1
 8009c8e:	f023 0003 	bic.w	r0, r3, #3
 8009c92:	4408      	add	r0, r1
 8009c94:	4288      	cmp	r0, r1
 8009c96:	4614      	mov	r4, r2
 8009c98:	d904      	bls.n	8009ca4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8009c9a:	6824      	ldr	r4, [r4, #0]
 8009c9c:	f841 4b04 	str.w	r4, [r1], #4
 8009ca0:	3204      	adds	r2, #4
 8009ca2:	e7f7      	b.n	8009c94 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8009ca4:	f003 0303 	and.w	r3, r3, #3
 8009ca8:	440b      	add	r3, r1
 8009caa:	3a01      	subs	r2, #1
 8009cac:	428b      	cmp	r3, r1
 8009cae:	d90c      	bls.n	8009cca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009cb0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009cb4:	f801 0b01 	strb.w	r0, [r1], #1
 8009cb8:	e7f8      	b.n	8009cac <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8009cba:	0790      	lsls	r0, r2, #30
 8009cbc:	d0e7      	beq.n	8009c8e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009cbe:	f832 0b02 	ldrh.w	r0, [r2], #2
 8009cc2:	f821 0b02 	strh.w	r0, [r1], #2
 8009cc6:	3b02      	subs	r3, #2
 8009cc8:	e7e1      	b.n	8009c8e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009cca:	2001      	movs	r0, #1
 8009ccc:	bd10      	pop	{r4, pc}

08009cce <_ZN8touchgfx3HAL7noTouchEv>:
 8009cce:	b510      	push	{r4, lr}
 8009cd0:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 8009cd4:	4604      	mov	r4, r0
 8009cd6:	b153      	cbz	r3, 8009cee <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8009cd8:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 8009cdc:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 8009ce0:	2101      	movs	r1, #1
 8009ce2:	301c      	adds	r0, #28
 8009ce4:	f011 fd0e 	bl	801b704 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009ce8:	2300      	movs	r3, #0
 8009cea:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 8009cee:	bd10      	pop	{r4, pc}

08009cf0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8009cf0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009cf4:	b085      	sub	sp, #20
 8009cf6:	ad04      	add	r5, sp, #16
 8009cf8:	4604      	mov	r4, r0
 8009cfa:	2000      	movs	r0, #0
 8009cfc:	f845 0d04 	str.w	r0, [r5, #-4]!
 8009d00:	69a0      	ldr	r0, [r4, #24]
 8009d02:	6806      	ldr	r6, [r0, #0]
 8009d04:	9501      	str	r5, [sp, #4]
 8009d06:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 8009d0a:	9500      	str	r5, [sp, #0]
 8009d0c:	6835      	ldr	r5, [r6, #0]
 8009d0e:	4699      	mov	r9, r3
 8009d10:	460f      	mov	r7, r1
 8009d12:	4690      	mov	r8, r2
 8009d14:	47a8      	blx	r5
 8009d16:	4d10      	ldr	r5, [pc, #64]	@ (8009d58 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8009d18:	4606      	mov	r6, r0
 8009d1a:	f8a5 9000 	strh.w	r9, [r5]
 8009d1e:	f7f8 faa7 	bl	8002270 <_ZN8touchgfx3HAL3lcdEv>
 8009d22:	6803      	ldr	r3, [r0, #0]
 8009d24:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009d26:	4798      	blx	r3
 8009d28:	b128      	cbz	r0, 8009d36 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8009d2a:	2801      	cmp	r0, #1
 8009d2c:	d00b      	beq.n	8009d46 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8009d2e:	4630      	mov	r0, r6
 8009d30:	b005      	add	sp, #20
 8009d32:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009d36:	882b      	ldrh	r3, [r5, #0]
 8009d38:	fb08 7203 	mla	r2, r8, r3, r7
 8009d3c:	9b03      	ldr	r3, [sp, #12]
 8009d3e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8009d42:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8009d44:	e7f3      	b.n	8009d2e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8009d46:	882a      	ldrh	r2, [r5, #0]
 8009d48:	9b03      	ldr	r3, [sp, #12]
 8009d4a:	fb08 7202 	mla	r2, r8, r2, r7
 8009d4e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8009d52:	1a9a      	subs	r2, r3, r2
 8009d54:	63e2      	str	r2, [r4, #60]	@ 0x3c
 8009d56:	e7ea      	b.n	8009d2e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8009d58:	200137fa 	.word	0x200137fa

08009d5c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8009d5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009d5e:	b08b      	sub	sp, #44	@ 0x2c
 8009d60:	4617      	mov	r7, r2
 8009d62:	4604      	mov	r4, r0
 8009d64:	460e      	mov	r6, r1
 8009d66:	461d      	mov	r5, r3
 8009d68:	f7f8 fa82 	bl	8002270 <_ZN8touchgfx3HAL3lcdEv>
 8009d6c:	6803      	ldr	r3, [r0, #0]
 8009d6e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009d70:	4798      	blx	r3
 8009d72:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8009d76:	9007      	str	r0, [sp, #28]
 8009d78:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8009d7c:	4b0d      	ldr	r3, [pc, #52]	@ (8009db4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8009d7e:	6822      	ldr	r2, [r4, #0]
 8009d80:	881b      	ldrh	r3, [r3, #0]
 8009d82:	9306      	str	r3, [sp, #24]
 8009d84:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8009d88:	9305      	str	r3, [sp, #20]
 8009d8a:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 8009d8e:	9304      	str	r3, [sp, #16]
 8009d90:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8009d94:	9303      	str	r3, [sp, #12]
 8009d96:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8009d9a:	9302      	str	r3, [sp, #8]
 8009d9c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8009da0:	e9cd 5300 	strd	r5, r3, [sp]
 8009da4:	4631      	mov	r1, r6
 8009da6:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 8009da8:	463b      	mov	r3, r7
 8009daa:	2200      	movs	r2, #0
 8009dac:	4620      	mov	r0, r4
 8009dae:	47a8      	blx	r5
 8009db0:	b00b      	add	sp, #44	@ 0x2c
 8009db2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009db4:	200137fa 	.word	0x200137fa

08009db8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8009db8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009dbc:	4698      	mov	r8, r3
 8009dbe:	6803      	ldr	r3, [r0, #0]
 8009dc0:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 8009dc2:	4b15      	ldr	r3, [pc, #84]	@ (8009e18 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8009dc4:	b08b      	sub	sp, #44	@ 0x2c
 8009dc6:	4617      	mov	r7, r2
 8009dc8:	f8b3 9000 	ldrh.w	r9, [r3]
 8009dcc:	460e      	mov	r6, r1
 8009dce:	4604      	mov	r4, r0
 8009dd0:	f7f8 fa4e 	bl	8002270 <_ZN8touchgfx3HAL3lcdEv>
 8009dd4:	6803      	ldr	r3, [r0, #0]
 8009dd6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009dd8:	4798      	blx	r3
 8009dda:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 8009dde:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8009de2:	2302      	movs	r3, #2
 8009de4:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8009de8:	2301      	movs	r3, #1
 8009dea:	9305      	str	r3, [sp, #20]
 8009dec:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8009df0:	9304      	str	r3, [sp, #16]
 8009df2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 8009df6:	9303      	str	r3, [sp, #12]
 8009df8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8009dfc:	9302      	str	r3, [sp, #8]
 8009dfe:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8009e02:	2200      	movs	r2, #0
 8009e04:	e9cd 8300 	strd	r8, r3, [sp]
 8009e08:	4631      	mov	r1, r6
 8009e0a:	463b      	mov	r3, r7
 8009e0c:	4620      	mov	r0, r4
 8009e0e:	47a8      	blx	r5
 8009e10:	b00b      	add	sp, #44	@ 0x2c
 8009e12:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009e16:	bf00      	nop
 8009e18:	200137fa 	.word	0x200137fa

08009e1c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8009e1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009e20:	4698      	mov	r8, r3
 8009e22:	6803      	ldr	r3, [r0, #0]
 8009e24:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 8009e26:	4b11      	ldr	r3, [pc, #68]	@ (8009e6c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8009e28:	b087      	sub	sp, #28
 8009e2a:	f8b3 9000 	ldrh.w	r9, [r3]
 8009e2e:	460e      	mov	r6, r1
 8009e30:	4617      	mov	r7, r2
 8009e32:	4604      	mov	r4, r0
 8009e34:	f7f8 fa1c 	bl	8002270 <_ZN8touchgfx3HAL3lcdEv>
 8009e38:	6803      	ldr	r3, [r0, #0]
 8009e3a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009e3c:	4798      	blx	r3
 8009e3e:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 8009e42:	f8cd 900c 	str.w	r9, [sp, #12]
 8009e46:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8009e4a:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 8009e4e:	9302      	str	r3, [sp, #8]
 8009e50:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8009e54:	9301      	str	r3, [sp, #4]
 8009e56:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8009e5a:	9300      	str	r3, [sp, #0]
 8009e5c:	463a      	mov	r2, r7
 8009e5e:	4643      	mov	r3, r8
 8009e60:	4631      	mov	r1, r6
 8009e62:	4620      	mov	r0, r4
 8009e64:	47a8      	blx	r5
 8009e66:	b007      	add	sp, #28
 8009e68:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009e6c:	200137fa 	.word	0x200137fa

08009e70 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8009e70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009e74:	4604      	mov	r4, r0
 8009e76:	b08f      	sub	sp, #60	@ 0x3c
 8009e78:	4610      	mov	r0, r2
 8009e7a:	460d      	mov	r5, r1
 8009e7c:	4691      	mov	r9, r2
 8009e7e:	461e      	mov	r6, r3
 8009e80:	f003 ffb2 	bl	800dde8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009e84:	2800      	cmp	r0, #0
 8009e86:	f000 809d 	beq.w	8009fc4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8009e8a:	6823      	ldr	r3, [r4, #0]
 8009e8c:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800a028 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8009e90:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009e92:	f8df a198 	ldr.w	sl, [pc, #408]	@ 800a02c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8009e96:	4f61      	ldr	r7, [pc, #388]	@ (800a01c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009e98:	4620      	mov	r0, r4
 8009e9a:	4798      	blx	r3
 8009e9c:	6823      	ldr	r3, [r4, #0]
 8009e9e:	4620      	mov	r0, r4
 8009ea0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009ea2:	4798      	blx	r3
 8009ea4:	f8bb 3000 	ldrh.w	r3, [fp]
 8009ea8:	9301      	str	r3, [sp, #4]
 8009eaa:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 8009eae:	f8ba 3000 	ldrh.w	r3, [sl]
 8009eb2:	9302      	str	r3, [sp, #8]
 8009eb4:	883b      	ldrh	r3, [r7, #0]
 8009eb6:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8009eba:	9303      	str	r3, [sp, #12]
 8009ebc:	4b58      	ldr	r3, [pc, #352]	@ (800a020 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8009ebe:	9305      	str	r3, [sp, #20]
 8009ec0:	881a      	ldrh	r2, [r3, #0]
 8009ec2:	9204      	str	r2, [sp, #16]
 8009ec4:	4640      	mov	r0, r8
 8009ec6:	f004 f823 	bl	800df10 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009eca:	8038      	strh	r0, [r7, #0]
 8009ecc:	4640      	mov	r0, r8
 8009ece:	f004 f853 	bl	800df78 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009ed2:	9b05      	ldr	r3, [sp, #20]
 8009ed4:	b280      	uxth	r0, r0
 8009ed6:	8018      	strh	r0, [r3, #0]
 8009ed8:	4b52      	ldr	r3, [pc, #328]	@ (800a024 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8009eda:	781b      	ldrb	r3, [r3, #0]
 8009edc:	2b00      	cmp	r3, #0
 8009ede:	d174      	bne.n	8009fca <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8009ee0:	883b      	ldrh	r3, [r7, #0]
 8009ee2:	f8ab 3000 	strh.w	r3, [fp]
 8009ee6:	f8aa 0000 	strh.w	r0, [sl]
 8009eea:	4648      	mov	r0, r9
 8009eec:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 8009ef0:	f003 ff7a 	bl	800dde8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009ef4:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 8009ef8:	2200      	movs	r2, #0
 8009efa:	4611      	mov	r1, r2
 8009efc:	4628      	mov	r0, r5
 8009efe:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8009f02:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8009f06:	f7f8 fc0c 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
 8009f0a:	2301      	movs	r3, #1
 8009f0c:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 8009f10:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 8009f14:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8009f18:	2b00      	cmp	r3, #0
 8009f1a:	dd5c      	ble.n	8009fd6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8009f1c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8009f20:	2b00      	cmp	r3, #0
 8009f22:	dd58      	ble.n	8009fd6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8009f24:	462a      	mov	r2, r5
 8009f26:	ab0a      	add	r3, sp, #40	@ 0x28
 8009f28:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8009f2c:	6851      	ldr	r1, [r2, #4]
 8009f2e:	c303      	stmia	r3!, {r0, r1}
 8009f30:	4631      	mov	r1, r6
 8009f32:	a80a      	add	r0, sp, #40	@ 0x28
 8009f34:	f7ff fc06 	bl	8009744 <_ZN8touchgfx4RectaNERKS0_>
 8009f38:	4b38      	ldr	r3, [pc, #224]	@ (800a01c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009f3a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8009f3e:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8009f42:	2100      	movs	r1, #0
 8009f44:	aa0a      	add	r2, sp, #40	@ 0x28
 8009f46:	4b36      	ldr	r3, [pc, #216]	@ (800a020 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8009f48:	910c      	str	r1, [sp, #48]	@ 0x30
 8009f4a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8009f4e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8009f52:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8009f56:	ab08      	add	r3, sp, #32
 8009f58:	e883 0003 	stmia.w	r3, {r0, r1}
 8009f5c:	4618      	mov	r0, r3
 8009f5e:	a90c      	add	r1, sp, #48	@ 0x30
 8009f60:	f7ff fbf0 	bl	8009744 <_ZN8touchgfx4RectaNERKS0_>
 8009f64:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8009f66:	2b00      	cmp	r3, #0
 8009f68:	d13c      	bne.n	8009fe4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8009f6a:	2000      	movs	r0, #0
 8009f6c:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 8009f70:	2600      	movs	r6, #0
 8009f72:	682a      	ldr	r2, [r5, #0]
 8009f74:	696b      	ldr	r3, [r5, #20]
 8009f76:	616e      	str	r6, [r5, #20]
 8009f78:	9305      	str	r3, [sp, #20]
 8009f7a:	6892      	ldr	r2, [r2, #8]
 8009f7c:	a908      	add	r1, sp, #32
 8009f7e:	4628      	mov	r0, r5
 8009f80:	4790      	blx	r2
 8009f82:	9b05      	ldr	r3, [sp, #20]
 8009f84:	616b      	str	r3, [r5, #20]
 8009f86:	4652      	mov	r2, sl
 8009f88:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 8009f8c:	4649      	mov	r1, r9
 8009f8e:	4628      	mov	r0, r5
 8009f90:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 8009f94:	f7f8 fbc5 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
 8009f98:	4b23      	ldr	r3, [pc, #140]	@ (800a028 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8009f9a:	9a01      	ldr	r2, [sp, #4]
 8009f9c:	801a      	strh	r2, [r3, #0]
 8009f9e:	4b23      	ldr	r3, [pc, #140]	@ (800a02c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8009fa0:	9a02      	ldr	r2, [sp, #8]
 8009fa2:	801a      	strh	r2, [r3, #0]
 8009fa4:	4b1d      	ldr	r3, [pc, #116]	@ (800a01c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009fa6:	9a03      	ldr	r2, [sp, #12]
 8009fa8:	801a      	strh	r2, [r3, #0]
 8009faa:	4b1d      	ldr	r3, [pc, #116]	@ (800a020 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8009fac:	9a04      	ldr	r2, [sp, #16]
 8009fae:	801a      	strh	r2, [r3, #0]
 8009fb0:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 8009fb4:	6823      	ldr	r3, [r4, #0]
 8009fb6:	4620      	mov	r0, r4
 8009fb8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009fba:	4798      	blx	r3
 8009fbc:	6823      	ldr	r3, [r4, #0]
 8009fbe:	4620      	mov	r0, r4
 8009fc0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009fc2:	4798      	blx	r3
 8009fc4:	b00f      	add	sp, #60	@ 0x3c
 8009fc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009fca:	883b      	ldrh	r3, [r7, #0]
 8009fcc:	f8ab 0000 	strh.w	r0, [fp]
 8009fd0:	f8aa 3000 	strh.w	r3, [sl]
 8009fd4:	e789      	b.n	8009eea <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8009fd6:	462a      	mov	r2, r5
 8009fd8:	ab0a      	add	r3, sp, #40	@ 0x28
 8009fda:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8009fde:	6851      	ldr	r1, [r2, #4]
 8009fe0:	c303      	stmia	r3!, {r0, r1}
 8009fe2:	e7a9      	b.n	8009f38 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8009fe4:	a807      	add	r0, sp, #28
 8009fe6:	f004 f909 	bl	800e1fc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009fea:	4606      	mov	r6, r0
 8009fec:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8009fee:	6803      	ldr	r3, [r0, #0]
 8009ff0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009ff2:	4798      	blx	r3
 8009ff4:	4286      	cmp	r6, r0
 8009ff6:	d1b8      	bne.n	8009f6a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8009ff8:	f7f8 f93a 	bl	8002270 <_ZN8touchgfx3HAL3lcdEv>
 8009ffc:	6803      	ldr	r3, [r0, #0]
 8009ffe:	4606      	mov	r6, r0
 800a000:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a002:	9305      	str	r3, [sp, #20]
 800a004:	a807      	add	r0, sp, #28
 800a006:	f004 f8f9 	bl	800e1fc <_ZNK8touchgfx6Bitmap9getFormatEv>
 800a00a:	9b05      	ldr	r3, [sp, #20]
 800a00c:	4601      	mov	r1, r0
 800a00e:	4630      	mov	r0, r6
 800a010:	4798      	blx	r3
 800a012:	f080 0001 	eor.w	r0, r0, #1
 800a016:	b2c0      	uxtb	r0, r0
 800a018:	e7a8      	b.n	8009f6c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800a01a:	bf00      	nop
 800a01c:	200137f4 	.word	0x200137f4
 800a020:	200137f6 	.word	0x200137f6
 800a024:	200137f8 	.word	0x200137f8
 800a028:	200137fa 	.word	0x200137fa
 800a02c:	200137fc 	.word	0x200137fc

0800a030 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800a030:	b510      	push	{r4, lr}
 800a032:	4b07      	ldr	r3, [pc, #28]	@ (800a050 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800a034:	781b      	ldrb	r3, [r3, #0]
 800a036:	4604      	mov	r4, r0
 800a038:	b13b      	cbz	r3, 800a04a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800a03a:	6803      	ldr	r3, [r0, #0]
 800a03c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a03e:	4798      	blx	r3
 800a040:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800a042:	4283      	cmp	r3, r0
 800a044:	d101      	bne.n	800a04a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800a046:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800a048:	bd10      	pop	{r4, pc}
 800a04a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800a04c:	e7fc      	b.n	800a048 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800a04e:	bf00      	nop
 800a050:	200137fe 	.word	0x200137fe

0800a054 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800a054:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a058:	b08a      	sub	sp, #40	@ 0x28
 800a05a:	461d      	mov	r5, r3
 800a05c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800a060:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a064:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800a068:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a06c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800a070:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a074:	2400      	movs	r4, #0
 800a076:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a07a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800a07e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a082:	4690      	mov	r8, r2
 800a084:	4607      	mov	r7, r0
 800a086:	9404      	str	r4, [sp, #16]
 800a088:	f88d 4020 	strb.w	r4, [sp, #32]
 800a08c:	f7ff ffd0 	bl	800a030 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a090:	fb06 8505 	mla	r5, r6, r5, r8
 800a094:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800a098:	6878      	ldr	r0, [r7, #4]
 800a09a:	9505      	str	r5, [sp, #20]
 800a09c:	f8ad 601e 	strh.w	r6, [sp, #30]
 800a0a0:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800a0a4:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800a0a8:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800a0ac:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800a0b0:	6803      	ldr	r3, [r0, #0]
 800a0b2:	a901      	add	r1, sp, #4
 800a0b4:	685b      	ldr	r3, [r3, #4]
 800a0b6:	4798      	blx	r3
 800a0b8:	b00a      	add	sp, #40	@ 0x28
 800a0ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a0be <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800a0be:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a0c2:	b08b      	sub	sp, #44	@ 0x2c
 800a0c4:	2400      	movs	r4, #0
 800a0c6:	461d      	mov	r5, r3
 800a0c8:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800a0cc:	4688      	mov	r8, r1
 800a0ce:	4691      	mov	r9, r2
 800a0d0:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800a0d4:	9404      	str	r4, [sp, #16]
 800a0d6:	4607      	mov	r7, r0
 800a0d8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800a0dc:	f7ff ffa8 	bl	800a030 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a0e0:	fb06 9505 	mla	r5, r6, r5, r9
 800a0e4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a0e8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a0ec:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800a0f0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800a0f4:	6878      	ldr	r0, [r7, #4]
 800a0f6:	9505      	str	r5, [sp, #20]
 800a0f8:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a0fc:	f8ad 401c 	strh.w	r4, [sp, #28]
 800a100:	f8ad 601e 	strh.w	r6, [sp, #30]
 800a104:	f8cd 8010 	str.w	r8, [sp, #16]
 800a108:	f8ad 4020 	strh.w	r4, [sp, #32]
 800a10c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800a110:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800a114:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800a118:	6803      	ldr	r3, [r0, #0]
 800a11a:	a901      	add	r1, sp, #4
 800a11c:	685b      	ldr	r3, [r3, #4]
 800a11e:	4798      	blx	r3
 800a120:	b00b      	add	sp, #44	@ 0x2c
 800a122:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800a128 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800a128:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a12c:	b08a      	sub	sp, #40	@ 0x28
 800a12e:	4698      	mov	r8, r3
 800a130:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800a134:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800a138:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800a13c:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800a140:	2300      	movs	r3, #0
 800a142:	2d0b      	cmp	r5, #11
 800a144:	4606      	mov	r6, r0
 800a146:	9304      	str	r3, [sp, #16]
 800a148:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800a14c:	d138      	bne.n	800a1c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800a14e:	2380      	movs	r3, #128	@ 0x80
 800a150:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a154:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800a158:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a15c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a160:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a164:	f88d 0020 	strb.w	r0, [sp, #32]
 800a168:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800a16c:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a170:	4630      	mov	r0, r6
 800a172:	9203      	str	r2, [sp, #12]
 800a174:	f7ff ff5c 	bl	800a030 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a178:	2c0b      	cmp	r4, #11
 800a17a:	bf98      	it	ls
 800a17c:	4b1b      	ldrls	r3, [pc, #108]	@ (800a1ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800a17e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800a182:	bf98      	it	ls
 800a184:	5d19      	ldrbls	r1, [r3, r4]
 800a186:	f8ad 701e 	strh.w	r7, [sp, #30]
 800a18a:	bf88      	it	hi
 800a18c:	2100      	movhi	r1, #0
 800a18e:	fb02 8307 	mla	r3, r2, r7, r8
 800a192:	10c9      	asrs	r1, r1, #3
 800a194:	fb01 0003 	mla	r0, r1, r3, r0
 800a198:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800a19c:	9005      	str	r0, [sp, #20]
 800a19e:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800a1a2:	6870      	ldr	r0, [r6, #4]
 800a1a4:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800a1a8:	2300      	movs	r3, #0
 800a1aa:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800a1ae:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800a1b2:	6803      	ldr	r3, [r0, #0]
 800a1b4:	a901      	add	r1, sp, #4
 800a1b6:	685b      	ldr	r3, [r3, #4]
 800a1b8:	4798      	blx	r3
 800a1ba:	b00a      	add	sp, #40	@ 0x28
 800a1bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a1c0:	2d02      	cmp	r5, #2
 800a1c2:	d109      	bne.n	800a1d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800a1c4:	28ff      	cmp	r0, #255	@ 0xff
 800a1c6:	d105      	bne.n	800a1d4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800a1c8:	f1bc 0f00 	cmp.w	ip, #0
 800a1cc:	bf14      	ite	ne
 800a1ce:	2340      	movne	r3, #64	@ 0x40
 800a1d0:	2320      	moveq	r3, #32
 800a1d2:	e7bd      	b.n	800a150 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a1d4:	2340      	movs	r3, #64	@ 0x40
 800a1d6:	e7bb      	b.n	800a150 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a1d8:	28ff      	cmp	r0, #255	@ 0xff
 800a1da:	d105      	bne.n	800a1e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800a1dc:	f1bc 0f00 	cmp.w	ip, #0
 800a1e0:	bf14      	ite	ne
 800a1e2:	2304      	movne	r3, #4
 800a1e4:	2301      	moveq	r3, #1
 800a1e6:	e7b3      	b.n	800a150 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a1e8:	2304      	movs	r3, #4
 800a1ea:	e7b1      	b.n	800a150 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a1ec:	0801dba8 	.word	0x0801dba8

0800a1f0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800a1f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a1f4:	b08b      	sub	sp, #44	@ 0x2c
 800a1f6:	461d      	mov	r5, r3
 800a1f8:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800a1fc:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800a200:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800a204:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800a208:	bf14      	ite	ne
 800a20a:	2308      	movne	r3, #8
 800a20c:	2302      	moveq	r3, #2
 800a20e:	2400      	movs	r4, #0
 800a210:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800a214:	4688      	mov	r8, r1
 800a216:	4693      	mov	fp, r2
 800a218:	9404      	str	r4, [sp, #16]
 800a21a:	4607      	mov	r7, r0
 800a21c:	f7ff ff08 	bl	800a030 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a220:	2e0b      	cmp	r6, #11
 800a222:	bf98      	it	ls
 800a224:	4b15      	ldrls	r3, [pc, #84]	@ (800a27c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800a226:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800a22a:	bf98      	it	ls
 800a22c:	5d9c      	ldrbls	r4, [r3, r6]
 800a22e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800a232:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a236:	fb05 b50a 	mla	r5, r5, sl, fp
 800a23a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800a23e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a242:	10e4      	asrs	r4, r4, #3
 800a244:	fb04 0405 	mla	r4, r4, r5, r0
 800a248:	2300      	movs	r3, #0
 800a24a:	6878      	ldr	r0, [r7, #4]
 800a24c:	9405      	str	r4, [sp, #20]
 800a24e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a252:	f8ad a01e 	strh.w	sl, [sp, #30]
 800a256:	f8cd 8010 	str.w	r8, [sp, #16]
 800a25a:	f88d 9020 	strb.w	r9, [sp, #32]
 800a25e:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800a262:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800a266:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800a26a:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800a26e:	6803      	ldr	r3, [r0, #0]
 800a270:	a901      	add	r1, sp, #4
 800a272:	685b      	ldr	r3, [r3, #4]
 800a274:	4798      	blx	r3
 800a276:	b00b      	add	sp, #44	@ 0x2c
 800a278:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a27c:	0801dba8 	.word	0x0801dba8

0800a280 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800a280:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a284:	461e      	mov	r6, r3
 800a286:	4b0a      	ldr	r3, [pc, #40]	@ (800a2b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800a288:	460f      	mov	r7, r1
 800a28a:	881d      	ldrh	r5, [r3, #0]
 800a28c:	4690      	mov	r8, r2
 800a28e:	f7f7 ffef 	bl	8002270 <_ZN8touchgfx3HAL3lcdEv>
 800a292:	6803      	ldr	r3, [r0, #0]
 800a294:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a296:	4798      	blx	r3
 800a298:	280b      	cmp	r0, #11
 800a29a:	bf9a      	itte	ls
 800a29c:	4b05      	ldrls	r3, [pc, #20]	@ (800a2b4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800a29e:	5c1c      	ldrbls	r4, [r3, r0]
 800a2a0:	2400      	movhi	r4, #0
 800a2a2:	fb08 7005 	mla	r0, r8, r5, r7
 800a2a6:	10e4      	asrs	r4, r4, #3
 800a2a8:	fb04 6000 	mla	r0, r4, r0, r6
 800a2ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a2b0:	200137fa 	.word	0x200137fa
 800a2b4:	0801dba8 	.word	0x0801dba8

0800a2b8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800a2b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a2ba:	b08b      	sub	sp, #44	@ 0x2c
 800a2bc:	461f      	mov	r7, r3
 800a2be:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800a2c2:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a2c6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800a2ca:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a2ce:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800a2d2:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a2d6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a2da:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a2de:	2500      	movs	r5, #0
 800a2e0:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800a2e4:	f88d 3020 	strb.w	r3, [sp, #32]
 800a2e8:	4604      	mov	r4, r0
 800a2ea:	4616      	mov	r6, r2
 800a2ec:	9504      	str	r5, [sp, #16]
 800a2ee:	f7ff fe9f 	bl	800a030 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a2f2:	463a      	mov	r2, r7
 800a2f4:	4631      	mov	r1, r6
 800a2f6:	4603      	mov	r3, r0
 800a2f8:	4620      	mov	r0, r4
 800a2fa:	f7ff ffc1 	bl	800a280 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a2fe:	4b0e      	ldr	r3, [pc, #56]	@ (800a338 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800a300:	9005      	str	r0, [sp, #20]
 800a302:	881b      	ldrh	r3, [r3, #0]
 800a304:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a308:	f7f7 ffb2 	bl	8002270 <_ZN8touchgfx3HAL3lcdEv>
 800a30c:	6803      	ldr	r3, [r0, #0]
 800a30e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a310:	4798      	blx	r3
 800a312:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800a314:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800a318:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800a31c:	9304      	str	r3, [sp, #16]
 800a31e:	6860      	ldr	r0, [r4, #4]
 800a320:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800a324:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800a328:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800a32c:	6803      	ldr	r3, [r0, #0]
 800a32e:	a901      	add	r1, sp, #4
 800a330:	685b      	ldr	r3, [r3, #4]
 800a332:	4798      	blx	r3
 800a334:	b00b      	add	sp, #44	@ 0x2c
 800a336:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a338:	200137fa 	.word	0x200137fa

0800a33c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800a33c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a33e:	b08d      	sub	sp, #52	@ 0x34
 800a340:	466b      	mov	r3, sp
 800a342:	e883 0006 	stmia.w	r3, {r1, r2}
 800a346:	2300      	movs	r3, #0
 800a348:	9306      	str	r3, [sp, #24]
 800a34a:	6803      	ldr	r3, [r0, #0]
 800a34c:	f8bd 6000 	ldrh.w	r6, [sp]
 800a350:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a352:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800a356:	2501      	movs	r5, #1
 800a358:	9503      	str	r5, [sp, #12]
 800a35a:	4604      	mov	r4, r0
 800a35c:	4798      	blx	r3
 800a35e:	463a      	mov	r2, r7
 800a360:	4631      	mov	r1, r6
 800a362:	4603      	mov	r3, r0
 800a364:	4620      	mov	r0, r4
 800a366:	f7ff ff8b 	bl	800a280 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a36a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800a36c:	9307      	str	r3, [sp, #28]
 800a36e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a372:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a376:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a37a:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800a37e:	4b0f      	ldr	r3, [pc, #60]	@ (800a3bc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800a380:	9004      	str	r0, [sp, #16]
 800a382:	881b      	ldrh	r3, [r3, #0]
 800a384:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800a388:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800a38c:	f7f7 ff70 	bl	8002270 <_ZN8touchgfx3HAL3lcdEv>
 800a390:	6803      	ldr	r3, [r0, #0]
 800a392:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a394:	4798      	blx	r3
 800a396:	23ff      	movs	r3, #255	@ 0xff
 800a398:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800a39c:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800a3a0:	6860      	ldr	r0, [r4, #4]
 800a3a2:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800a3a6:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800a3aa:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800a3ae:	6803      	ldr	r3, [r0, #0]
 800a3b0:	a903      	add	r1, sp, #12
 800a3b2:	685b      	ldr	r3, [r3, #4]
 800a3b4:	4798      	blx	r3
 800a3b6:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800a3b8:	b00d      	add	sp, #52	@ 0x34
 800a3ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a3bc:	200137fa 	.word	0x200137fa

0800a3c0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800a3c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a3c4:	b08c      	sub	sp, #48	@ 0x30
 800a3c6:	461e      	mov	r6, r3
 800a3c8:	466d      	mov	r5, sp
 800a3ca:	2300      	movs	r3, #0
 800a3cc:	e885 0006 	stmia.w	r5, {r1, r2}
 800a3d0:	9306      	str	r3, [sp, #24]
 800a3d2:	6803      	ldr	r3, [r0, #0]
 800a3d4:	f8bd 7000 	ldrh.w	r7, [sp]
 800a3d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a3da:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800a3de:	2501      	movs	r5, #1
 800a3e0:	9503      	str	r5, [sp, #12]
 800a3e2:	4604      	mov	r4, r0
 800a3e4:	4798      	blx	r3
 800a3e6:	4642      	mov	r2, r8
 800a3e8:	4639      	mov	r1, r7
 800a3ea:	4603      	mov	r3, r0
 800a3ec:	4620      	mov	r0, r4
 800a3ee:	f7ff ff47 	bl	800a280 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a3f2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a3f6:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a3fa:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a3fe:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800a402:	4b11      	ldr	r3, [pc, #68]	@ (800a448 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800a404:	9004      	str	r0, [sp, #16]
 800a406:	881b      	ldrh	r3, [r3, #0]
 800a408:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800a40c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800a40e:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800a412:	9607      	str	r6, [sp, #28]
 800a414:	f7f7 ff2c 	bl	8002270 <_ZN8touchgfx3HAL3lcdEv>
 800a418:	6803      	ldr	r3, [r0, #0]
 800a41a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a41c:	4798      	blx	r3
 800a41e:	23ff      	movs	r3, #255	@ 0xff
 800a420:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800a424:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800a428:	6860      	ldr	r0, [r4, #4]
 800a42a:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800a42e:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800a432:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800a436:	6803      	ldr	r3, [r0, #0]
 800a438:	a903      	add	r1, sp, #12
 800a43a:	685b      	ldr	r3, [r3, #4]
 800a43c:	4798      	blx	r3
 800a43e:	4630      	mov	r0, r6
 800a440:	b00c      	add	sp, #48	@ 0x30
 800a442:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a446:	bf00      	nop
 800a448:	200137fa 	.word	0x200137fa

0800a44c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800a44c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a44e:	b085      	sub	sp, #20
 800a450:	ac02      	add	r4, sp, #8
 800a452:	e884 0006 	stmia.w	r4, {r1, r2}
 800a456:	4605      	mov	r5, r0
 800a458:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800a45c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800a460:	f7ff fde6 	bl	800a030 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a464:	463a      	mov	r2, r7
 800a466:	4603      	mov	r3, r0
 800a468:	4631      	mov	r1, r6
 800a46a:	4628      	mov	r0, r5
 800a46c:	f7ff ff08 	bl	800a280 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a470:	4a05      	ldr	r2, [pc, #20]	@ (800a488 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800a472:	682b      	ldr	r3, [r5, #0]
 800a474:	8812      	ldrh	r2, [r2, #0]
 800a476:	9200      	str	r2, [sp, #0]
 800a478:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 800a47a:	e894 0006 	ldmia.w	r4, {r1, r2}
 800a47e:	4603      	mov	r3, r0
 800a480:	4628      	mov	r0, r5
 800a482:	47b0      	blx	r6
 800a484:	b005      	add	sp, #20
 800a486:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a488:	200137fa 	.word	0x200137fa

0800a48c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800a48c:	b570      	push	{r4, r5, r6, lr}
 800a48e:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800a492:	4604      	mov	r4, r0
 800a494:	b19b      	cbz	r3, 800a4be <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800a496:	2002      	movs	r0, #2
 800a498:	f7f6 f9a8 	bl	80007ec <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800a49c:	2300      	movs	r3, #0
 800a49e:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800a4a2:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800a4a6:	6823      	ldr	r3, [r4, #0]
 800a4a8:	4620      	mov	r0, r4
 800a4aa:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 800a4ae:	f7ff fdbf 	bl	800a030 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a4b2:	462b      	mov	r3, r5
 800a4b4:	4601      	mov	r1, r0
 800a4b6:	4620      	mov	r0, r4
 800a4b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a4bc:	4718      	bx	r3
 800a4be:	bd70      	pop	{r4, r5, r6, pc}

0800a4c0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800a4c0:	b538      	push	{r3, r4, r5, lr}
 800a4c2:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800a4c6:	428b      	cmp	r3, r1
 800a4c8:	4604      	mov	r4, r0
 800a4ca:	460d      	mov	r5, r1
 800a4cc:	d006      	beq.n	800a4dc <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800a4ce:	6803      	ldr	r3, [r0, #0]
 800a4d0:	b929      	cbnz	r1, 800a4de <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800a4d2:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 800a4d6:	4798      	blx	r3
 800a4d8:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800a4dc:	bd38      	pop	{r3, r4, r5, pc}
 800a4de:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800a4e2:	e7f8      	b.n	800a4d6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800a4e4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800a4e4:	b510      	push	{r4, lr}
 800a4e6:	4b0d      	ldr	r3, [pc, #52]	@ (800a51c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800a4e8:	781b      	ldrb	r3, [r3, #0]
 800a4ea:	4604      	mov	r4, r0
 800a4ec:	b95b      	cbnz	r3, 800a506 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a4ee:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800a4f2:	2b02      	cmp	r3, #2
 800a4f4:	d007      	beq.n	800a506 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a4f6:	6840      	ldr	r0, [r0, #4]
 800a4f8:	f000 f912 	bl	800a720 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800a4fc:	b118      	cbz	r0, 800a506 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a4fe:	6862      	ldr	r2, [r4, #4]
 800a500:	7a53      	ldrb	r3, [r2, #9]
 800a502:	2b00      	cmp	r3, #0
 800a504:	d0fc      	beq.n	800a500 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800a506:	f7f6 fabd 	bl	8000a84 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a50a:	4620      	mov	r0, r4
 800a50c:	2100      	movs	r1, #0
 800a50e:	f7ff ffd7 	bl	800a4c0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a512:	4620      	mov	r0, r4
 800a514:	f7ff fd8c 	bl	800a030 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a518:	bd10      	pop	{r4, pc}
 800a51a:	bf00      	nop
 800a51c:	200137fe 	.word	0x200137fe

0800a520 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800a520:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800a524:	1a13      	subs	r3, r2, r0
 800a526:	4258      	negs	r0, r3
 800a528:	4158      	adcs	r0, r3
 800a52a:	4770      	bx	lr

0800a52c <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800a52c:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800a530:	1a9b      	subs	r3, r3, r2
 800a532:	2b00      	cmp	r3, #0
 800a534:	bfdc      	itt	le
 800a536:	6882      	ldrle	r2, [r0, #8]
 800a538:	189b      	addle	r3, r3, r2
 800a53a:	2b01      	cmp	r3, #1
 800a53c:	bfcc      	ite	gt
 800a53e:	2000      	movgt	r0, #0
 800a540:	2001      	movle	r0, #1
 800a542:	4770      	bx	lr

0800a544 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800a544:	6902      	ldr	r2, [r0, #16]
 800a546:	6843      	ldr	r3, [r0, #4]
 800a548:	2024      	movs	r0, #36	@ 0x24
 800a54a:	fb00 3002 	mla	r0, r0, r2, r3
 800a54e:	4770      	bx	lr

0800a550 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800a550:	6803      	ldr	r3, [r0, #0]
 800a552:	691b      	ldr	r3, [r3, #16]
 800a554:	4718      	bx	r3

0800a556 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800a556:	b570      	push	{r4, r5, r6, lr}
 800a558:	2301      	movs	r3, #1
 800a55a:	7203      	strb	r3, [r0, #8]
 800a55c:	4604      	mov	r4, r0
 800a55e:	6840      	ldr	r0, [r0, #4]
 800a560:	6803      	ldr	r3, [r0, #0]
 800a562:	699b      	ldr	r3, [r3, #24]
 800a564:	4798      	blx	r3
 800a566:	6803      	ldr	r3, [r0, #0]
 800a568:	2b40      	cmp	r3, #64	@ 0x40
 800a56a:	4605      	mov	r5, r0
 800a56c:	d00c      	beq.n	800a588 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a56e:	d810      	bhi.n	800a592 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800a570:	2b04      	cmp	r3, #4
 800a572:	d01d      	beq.n	800a5b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800a574:	d804      	bhi.n	800a580 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800a576:	2b01      	cmp	r3, #1
 800a578:	d006      	beq.n	800a588 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a57a:	2b02      	cmp	r3, #2
 800a57c:	d02c      	beq.n	800a5d8 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800a57e:	bd70      	pop	{r4, r5, r6, pc}
 800a580:	2b08      	cmp	r3, #8
 800a582:	d01d      	beq.n	800a5c0 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800a584:	2b20      	cmp	r3, #32
 800a586:	d1fa      	bne.n	800a57e <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800a588:	6823      	ldr	r3, [r4, #0]
 800a58a:	4620      	mov	r0, r4
 800a58c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800a58e:	4798      	blx	r3
 800a590:	e013      	b.n	800a5ba <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800a592:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800a596:	d0f7      	beq.n	800a588 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a598:	d804      	bhi.n	800a5a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800a59a:	2b80      	cmp	r3, #128	@ 0x80
 800a59c:	d0f4      	beq.n	800a588 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a59e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800a5a2:	e7f0      	b.n	800a586 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800a5a4:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800a5a8:	d0ee      	beq.n	800a588 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a5aa:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800a5ae:	e7e5      	b.n	800a57c <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800a5b0:	6823      	ldr	r3, [r4, #0]
 800a5b2:	7f01      	ldrb	r1, [r0, #28]
 800a5b4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a5b6:	4620      	mov	r0, r4
 800a5b8:	4798      	blx	r3
 800a5ba:	6823      	ldr	r3, [r4, #0]
 800a5bc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a5be:	e006      	b.n	800a5ce <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800a5c0:	6823      	ldr	r3, [r4, #0]
 800a5c2:	7f01      	ldrb	r1, [r0, #28]
 800a5c4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a5c6:	4620      	mov	r0, r4
 800a5c8:	4798      	blx	r3
 800a5ca:	6823      	ldr	r3, [r4, #0]
 800a5cc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a5ce:	4629      	mov	r1, r5
 800a5d0:	4620      	mov	r0, r4
 800a5d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a5d6:	4718      	bx	r3
 800a5d8:	6823      	ldr	r3, [r4, #0]
 800a5da:	4620      	mov	r0, r4
 800a5dc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800a5de:	4798      	blx	r3
 800a5e0:	e7f3      	b.n	800a5ca <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800a5e2 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800a5e2:	4770      	bx	lr

0800a5e4 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800a5e4:	4770      	bx	lr

0800a5e6 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800a5e6:	4770      	bx	lr

0800a5e8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800a5e8:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800a5ec:	1ad2      	subs	r2, r2, r3
 800a5ee:	2a00      	cmp	r2, #0
 800a5f0:	b510      	push	{r4, lr}
 800a5f2:	bfdc      	itt	le
 800a5f4:	6884      	ldrle	r4, [r0, #8]
 800a5f6:	1912      	addle	r2, r2, r4
 800a5f8:	2a01      	cmp	r2, #1
 800a5fa:	dd16      	ble.n	800a62a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800a5fc:	6842      	ldr	r2, [r0, #4]
 800a5fe:	2424      	movs	r4, #36	@ 0x24
 800a600:	fb04 2303 	mla	r3, r4, r3, r2
 800a604:	f101 0220 	add.w	r2, r1, #32
 800a608:	f851 4b04 	ldr.w	r4, [r1], #4
 800a60c:	f843 4b04 	str.w	r4, [r3], #4
 800a610:	4291      	cmp	r1, r2
 800a612:	d1f9      	bne.n	800a608 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800a614:	780a      	ldrb	r2, [r1, #0]
 800a616:	701a      	strb	r2, [r3, #0]
 800a618:	68c3      	ldr	r3, [r0, #12]
 800a61a:	6882      	ldr	r2, [r0, #8]
 800a61c:	f3bf 8f5b 	dmb	ish
 800a620:	3301      	adds	r3, #1
 800a622:	429a      	cmp	r2, r3
 800a624:	bfd8      	it	le
 800a626:	1a9b      	suble	r3, r3, r2
 800a628:	60c3      	str	r3, [r0, #12]
 800a62a:	bd10      	pop	{r4, pc}

0800a62c <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800a62c:	6903      	ldr	r3, [r0, #16]
 800a62e:	6882      	ldr	r2, [r0, #8]
 800a630:	f3bf 8f5b 	dmb	ish
 800a634:	3301      	adds	r3, #1
 800a636:	429a      	cmp	r2, r3
 800a638:	bfd8      	it	le
 800a63a:	1a9b      	suble	r3, r3, r2
 800a63c:	6103      	str	r3, [r0, #16]
 800a63e:	4770      	bx	lr

0800a640 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800a640:	b570      	push	{r4, r5, r6, lr}
 800a642:	4604      	mov	r4, r0
 800a644:	460e      	mov	r6, r1
 800a646:	6860      	ldr	r0, [r4, #4]
 800a648:	6803      	ldr	r3, [r0, #0]
 800a64a:	685b      	ldr	r3, [r3, #4]
 800a64c:	4798      	blx	r3
 800a64e:	2800      	cmp	r0, #0
 800a650:	d1f9      	bne.n	800a646 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800a652:	4d0d      	ldr	r5, [pc, #52]	@ (800a688 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800a654:	6828      	ldr	r0, [r5, #0]
 800a656:	6803      	ldr	r3, [r0, #0]
 800a658:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800a65a:	4798      	blx	r3
 800a65c:	f7f6 fa20 	bl	8000aa0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800a660:	6828      	ldr	r0, [r5, #0]
 800a662:	2101      	movs	r1, #1
 800a664:	f7ff ff2c 	bl	800a4c0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a668:	6860      	ldr	r0, [r4, #4]
 800a66a:	6803      	ldr	r3, [r0, #0]
 800a66c:	4631      	mov	r1, r6
 800a66e:	689b      	ldr	r3, [r3, #8]
 800a670:	4798      	blx	r3
 800a672:	6823      	ldr	r3, [r4, #0]
 800a674:	4620      	mov	r0, r4
 800a676:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a678:	4798      	blx	r3
 800a67a:	6828      	ldr	r0, [r5, #0]
 800a67c:	6803      	ldr	r3, [r0, #0]
 800a67e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a682:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800a684:	4718      	bx	r3
 800a686:	bf00      	nop
 800a688:	20013800 	.word	0x20013800

0800a68c <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800a68c:	b508      	push	{r3, lr}
 800a68e:	f7f6 f9f9 	bl	8000a84 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a692:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a696:	f7f6 b9fd 	b.w	8000a94 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a69a <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800a69a:	b510      	push	{r4, lr}
 800a69c:	2114      	movs	r1, #20
 800a69e:	4604      	mov	r4, r0
 800a6a0:	f011 f8b6 	bl	801b810 <_ZdlPvj>
 800a6a4:	4620      	mov	r0, r4
 800a6a6:	bd10      	pop	{r4, pc}

0800a6a8 <_ZN8touchgfx13DMA_Interface5startEv>:
 800a6a8:	b510      	push	{r4, lr}
 800a6aa:	4604      	mov	r4, r0
 800a6ac:	6840      	ldr	r0, [r0, #4]
 800a6ae:	6803      	ldr	r3, [r0, #0]
 800a6b0:	681b      	ldr	r3, [r3, #0]
 800a6b2:	4798      	blx	r3
 800a6b4:	b948      	cbnz	r0, 800a6ca <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a6b6:	7a63      	ldrb	r3, [r4, #9]
 800a6b8:	b13b      	cbz	r3, 800a6ca <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a6ba:	7a23      	ldrb	r3, [r4, #8]
 800a6bc:	b92b      	cbnz	r3, 800a6ca <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a6be:	6823      	ldr	r3, [r4, #0]
 800a6c0:	4620      	mov	r0, r4
 800a6c2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a6c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a6c8:	4718      	bx	r3
 800a6ca:	bd10      	pop	{r4, pc}

0800a6cc <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800a6cc:	b570      	push	{r4, r5, r6, lr}
 800a6ce:	4604      	mov	r4, r0
 800a6d0:	6840      	ldr	r0, [r0, #4]
 800a6d2:	6803      	ldr	r3, [r0, #0]
 800a6d4:	681b      	ldr	r3, [r3, #0]
 800a6d6:	4798      	blx	r3
 800a6d8:	4605      	mov	r5, r0
 800a6da:	b930      	cbnz	r0, 800a6ea <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a6dc:	7a23      	ldrb	r3, [r4, #8]
 800a6de:	b123      	cbz	r3, 800a6ea <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a6e0:	6860      	ldr	r0, [r4, #4]
 800a6e2:	6803      	ldr	r3, [r0, #0]
 800a6e4:	695b      	ldr	r3, [r3, #20]
 800a6e6:	4798      	blx	r3
 800a6e8:	7225      	strb	r5, [r4, #8]
 800a6ea:	6860      	ldr	r0, [r4, #4]
 800a6ec:	6803      	ldr	r3, [r0, #0]
 800a6ee:	681b      	ldr	r3, [r3, #0]
 800a6f0:	4798      	blx	r3
 800a6f2:	b928      	cbnz	r0, 800a700 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800a6f4:	6823      	ldr	r3, [r4, #0]
 800a6f6:	4620      	mov	r0, r4
 800a6f8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a6fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a6fe:	4718      	bx	r3
 800a700:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a704:	f7f6 b9d4 	b.w	8000ab0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800a708 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800a708:	b510      	push	{r4, lr}
 800a70a:	4c04      	ldr	r4, [pc, #16]	@ (800a71c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800a70c:	6082      	str	r2, [r0, #8]
 800a70e:	2200      	movs	r2, #0
 800a710:	e9c0 4100 	strd	r4, r1, [r0]
 800a714:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800a718:	bd10      	pop	{r4, pc}
 800a71a:	bf00      	nop
 800a71c:	0801dbbc 	.word	0x0801dbbc

0800a720 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800a720:	6840      	ldr	r0, [r0, #4]
 800a722:	6803      	ldr	r3, [r0, #0]
 800a724:	681b      	ldr	r3, [r3, #0]
 800a726:	4718      	bx	r3

0800a728 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
 800a728:	b508      	push	{r3, lr}
 800a72a:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
 800a72e:	b10b      	cbz	r3, 800a734 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
 800a730:	f7f7 ffd2 	bl	80026d8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800a734:	bd08      	pop	{r3, pc}

0800a736 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
 800a736:	6803      	ldr	r3, [r0, #0]
 800a738:	f64f 71fe 	movw	r1, #65534	@ 0xfffe
 800a73c:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800a73e:	4718      	bx	r3

0800a740 <_ZN8touchgfx14SnapshotWidgetD1Ev>:
 800a740:	4770      	bx	lr

0800a742 <_ZN8touchgfx14SnapshotWidgetD0Ev>:
 800a742:	b510      	push	{r4, lr}
 800a744:	212c      	movs	r1, #44	@ 0x2c
 800a746:	4604      	mov	r4, r0
 800a748:	f011 f862 	bl	801b810 <_ZdlPvj>
 800a74c:	4620      	mov	r0, r4
 800a74e:	bd10      	pop	{r4, pc}

0800a750 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
 800a750:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800a754:	2bff      	cmp	r3, #255	@ 0xff
 800a756:	b510      	push	{r4, lr}
 800a758:	d104      	bne.n	800a764 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
 800a75a:	8cca      	ldrh	r2, [r1, #38]	@ 0x26
 800a75c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800a760:	429a      	cmp	r2, r3
 800a762:	d105      	bne.n	800a770 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
 800a764:	2300      	movs	r3, #0
 800a766:	8003      	strh	r3, [r0, #0]
 800a768:	8043      	strh	r3, [r0, #2]
 800a76a:	8083      	strh	r3, [r0, #4]
 800a76c:	80c3      	strh	r3, [r0, #6]
 800a76e:	bd10      	pop	{r4, pc}
 800a770:	2300      	movs	r3, #0
 800a772:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800a776:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 800a77a:	8003      	strh	r3, [r0, #0]
 800a77c:	8043      	strh	r3, [r0, #2]
 800a77e:	8084      	strh	r4, [r0, #4]
 800a780:	80c2      	strh	r2, [r0, #6]
 800a782:	e7f4      	b.n	800a76e <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

0800a784 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
 800a784:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a788:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
 800a78c:	b087      	sub	sp, #28
 800a78e:	4604      	mov	r4, r0
 800a790:	4689      	mov	r9, r1
 800a792:	b363      	cbz	r3, 800a7ee <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 800a794:	8cc2      	ldrh	r2, [r0, #38]	@ 0x26
 800a796:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800a79a:	429a      	cmp	r2, r3
 800a79c:	d027      	beq.n	800a7ee <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 800a79e:	ad06      	add	r5, sp, #24
 800a7a0:	2700      	movs	r7, #0
 800a7a2:	f825 2d0c 	strh.w	r2, [r5, #-12]!
 800a7a6:	4628      	mov	r0, r5
 800a7a8:	f003 fbb2 	bl	800df10 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a7ac:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800a7b0:	f8ad 3016 	strh.w	r3, [sp, #22]
 800a7b4:	6823      	ldr	r3, [r4, #0]
 800a7b6:	f8ad 0014 	strh.w	r0, [sp, #20]
 800a7ba:	a904      	add	r1, sp, #16
 800a7bc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a7be:	9704      	str	r7, [sp, #16]
 800a7c0:	4620      	mov	r0, r4
 800a7c2:	4798      	blx	r3
 800a7c4:	f7f7 fd54 	bl	8002270 <_ZN8touchgfx3HAL3lcdEv>
 800a7c8:	6803      	ldr	r3, [r0, #0]
 800a7ca:	4606      	mov	r6, r0
 800a7cc:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800a7d0:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
 800a7d2:	f8ad 300c 	strh.w	r3, [sp, #12]
 800a7d6:	4628      	mov	r0, r5
 800a7d8:	f003 fc8c 	bl	800e0f4 <_ZNK8touchgfx6Bitmap7getDataEv>
 800a7dc:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a7e0:	9300      	str	r3, [sp, #0]
 800a7e2:	4601      	mov	r1, r0
 800a7e4:	9701      	str	r7, [sp, #4]
 800a7e6:	464b      	mov	r3, r9
 800a7e8:	aa04      	add	r2, sp, #16
 800a7ea:	4630      	mov	r0, r6
 800a7ec:	47c0      	blx	r8
 800a7ee:	b007      	add	sp, #28
 800a7f0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800a7f4 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
 800a7f4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a7f6:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800a7fa:	f8ad 3006 	strh.w	r3, [sp, #6]
 800a7fe:	6803      	ldr	r3, [r0, #0]
 800a800:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800a804:	f8ad 2004 	strh.w	r2, [sp, #4]
 800a808:	460d      	mov	r5, r1
 800a80a:	2100      	movs	r1, #0
 800a80c:	4604      	mov	r4, r0
 800a80e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a810:	9100      	str	r1, [sp, #0]
 800a812:	4669      	mov	r1, sp
 800a814:	4798      	blx	r3
 800a816:	4621      	mov	r1, r4
 800a818:	a802      	add	r0, sp, #8
 800a81a:	f002 fd2f 	bl	800d27c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a81e:	f7f7 fd27 	bl	8002270 <_ZN8touchgfx3HAL3lcdEv>
 800a822:	6803      	ldr	r3, [r0, #0]
 800a824:	aa02      	add	r2, sp, #8
 800a826:	695e      	ldr	r6, [r3, #20]
 800a828:	4669      	mov	r1, sp
 800a82a:	462b      	mov	r3, r5
 800a82c:	47b0      	blx	r6
 800a82e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800a832:	2800      	cmp	r0, #0
 800a834:	bf08      	it	eq
 800a836:	461d      	moveq	r5, r3
 800a838:	84e5      	strh	r5, [r4, #38]	@ 0x26
 800a83a:	b004      	add	sp, #16
 800a83c:	bd70      	pop	{r4, r5, r6, pc}
	...

0800a840 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
 800a840:	2200      	movs	r2, #0
 800a842:	8082      	strh	r2, [r0, #4]
 800a844:	80c2      	strh	r2, [r0, #6]
 800a846:	8102      	strh	r2, [r0, #8]
 800a848:	8142      	strh	r2, [r0, #10]
 800a84a:	8182      	strh	r2, [r0, #12]
 800a84c:	81c2      	strh	r2, [r0, #14]
 800a84e:	8202      	strh	r2, [r0, #16]
 800a850:	8242      	strh	r2, [r0, #18]
 800a852:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800a856:	61c2      	str	r2, [r0, #28]
 800a858:	8402      	strh	r2, [r0, #32]
 800a85a:	8442      	strh	r2, [r0, #34]	@ 0x22
 800a85c:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 800a860:	2201      	movs	r2, #1
 800a862:	f880 2025 	strb.w	r2, [r0, #37]	@ 0x25
 800a866:	4a04      	ldr	r2, [pc, #16]	@ (800a878 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
 800a868:	6002      	str	r2, [r0, #0]
 800a86a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800a86e:	84c2      	strh	r2, [r0, #38]	@ 0x26
 800a870:	f880 2028 	strb.w	r2, [r0, #40]	@ 0x28
 800a874:	4770      	bx	lr
 800a876:	bf00      	nop
 800a878:	0801dbe0 	.word	0x0801dbe0

0800a87c <_ZN8touchgfx13AnimatedImage12setBitmapEndERKNS_6BitmapE>:
 800a87c:	880b      	ldrh	r3, [r1, #0]
 800a87e:	8643      	strh	r3, [r0, #50]	@ 0x32
 800a880:	4770      	bx	lr

0800a882 <_ZN8touchgfx13AnimatedImageD1Ev>:
 800a882:	4770      	bx	lr

0800a884 <_ZN8touchgfx13AnimatedImage9setBitmapERKNS_6BitmapE>:
 800a884:	880b      	ldrh	r3, [r1, #0]
 800a886:	8603      	strh	r3, [r0, #48]	@ 0x30
 800a888:	f000 bbfd 	b.w	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>

0800a88c <_ZN8touchgfx13AnimatedImage13stopAnimationEv>:
 800a88c:	b513      	push	{r0, r1, r4, lr}
 800a88e:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 800a892:	4604      	mov	r4, r0
 800a894:	b143      	cbz	r3, 800a8a8 <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x1c>
 800a896:	f001 fcbf 	bl	800c218 <_ZN8touchgfx11Application11getInstanceEv>
 800a89a:	4621      	mov	r1, r4
 800a89c:	3004      	adds	r0, #4
 800a89e:	f001 fce0 	bl	800c262 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800a8a2:	2300      	movs	r3, #0
 800a8a4:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
 800a8a8:	f894 3036 	ldrb.w	r3, [r4, #54]	@ 0x36
 800a8ac:	b163      	cbz	r3, 800a8c8 <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x3c>
 800a8ae:	8e63      	ldrh	r3, [r4, #50]	@ 0x32
 800a8b0:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a8b4:	a901      	add	r1, sp, #4
 800a8b6:	4620      	mov	r0, r4
 800a8b8:	f000 fbe5 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a8bc:	6823      	ldr	r3, [r4, #0]
 800a8be:	4620      	mov	r0, r4
 800a8c0:	695b      	ldr	r3, [r3, #20]
 800a8c2:	4798      	blx	r3
 800a8c4:	b002      	add	sp, #8
 800a8c6:	bd10      	pop	{r4, pc}
 800a8c8:	8e23      	ldrh	r3, [r4, #48]	@ 0x30
 800a8ca:	e7f1      	b.n	800a8b0 <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x24>

0800a8cc <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>:
 800a8cc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a8ce:	8e05      	ldrh	r5, [r0, #48]	@ 0x30
 800a8d0:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 800a8d4:	42bd      	cmp	r5, r7
 800a8d6:	4604      	mov	r4, r0
 800a8d8:	d01a      	beq.n	800a910 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x44>
 800a8da:	8e46      	ldrh	r6, [r0, #50]	@ 0x32
 800a8dc:	42be      	cmp	r6, r7
 800a8de:	d017      	beq.n	800a910 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x44>
 800a8e0:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
 800a8e4:	f880 3037 	strb.w	r3, [r0, #55]	@ 0x37
 800a8e8:	b1a1      	cbz	r1, 800a914 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x48>
 800a8ea:	b142      	cbz	r2, 800a8fe <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x32>
 800a8ec:	a902      	add	r1, sp, #8
 800a8ee:	f821 6d04 	strh.w	r6, [r1, #-4]!
 800a8f2:	f000 fbc8 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a8f6:	6823      	ldr	r3, [r4, #0]
 800a8f8:	4620      	mov	r0, r4
 800a8fa:	695b      	ldr	r3, [r3, #20]
 800a8fc:	4798      	blx	r3
 800a8fe:	f001 fc8b 	bl	800c218 <_ZN8touchgfx11Application11getInstanceEv>
 800a902:	4621      	mov	r1, r4
 800a904:	3004      	adds	r0, #4
 800a906:	f001 fd55 	bl	800c3b4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800a90a:	2301      	movs	r3, #1
 800a90c:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
 800a910:	b003      	add	sp, #12
 800a912:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a914:	2a00      	cmp	r2, #0
 800a916:	d0f2      	beq.n	800a8fe <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x32>
 800a918:	a902      	add	r1, sp, #8
 800a91a:	f821 5d04 	strh.w	r5, [r1, #-4]!
 800a91e:	e7e8      	b.n	800a8f2 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x26>

0800a920 <_ZN8touchgfx13AnimatedImageD0Ev>:
 800a920:	b510      	push	{r4, lr}
 800a922:	213c      	movs	r1, #60	@ 0x3c
 800a924:	4604      	mov	r4, r0
 800a926:	f010 ff73 	bl	801b810 <_ZdlPvj>
 800a92a:	4620      	mov	r0, r4
 800a92c:	bd10      	pop	{r4, pc}

0800a92e <_ZN8touchgfx13AnimatedImage14pauseAnimationEv>:
 800a92e:	b510      	push	{r4, lr}
 800a930:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 800a934:	4604      	mov	r4, r0
 800a936:	b14b      	cbz	r3, 800a94c <_ZN8touchgfx13AnimatedImage14pauseAnimationEv+0x1e>
 800a938:	f001 fc6e 	bl	800c218 <_ZN8touchgfx11Application11getInstanceEv>
 800a93c:	4621      	mov	r1, r4
 800a93e:	3004      	adds	r0, #4
 800a940:	f001 fc8f 	bl	800c262 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800a944:	2300      	movs	r3, #0
 800a946:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
 800a94a:	bd10      	pop	{r4, pc}
 800a94c:	f001 fc64 	bl	800c218 <_ZN8touchgfx11Application11getInstanceEv>
 800a950:	4621      	mov	r1, r4
 800a952:	3004      	adds	r0, #4
 800a954:	f001 fd2e 	bl	800c3b4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800a958:	2301      	movs	r3, #1
 800a95a:	e7f4      	b.n	800a946 <_ZN8touchgfx13AnimatedImage14pauseAnimationEv+0x18>

0800a95c <_ZN8touchgfx13AnimatedImage15handleTickEventEv>:
 800a95c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a95e:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 800a962:	4604      	mov	r4, r0
 800a964:	2b00      	cmp	r3, #0
 800a966:	d042      	beq.n	800a9ee <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
 800a968:	f890 3035 	ldrb.w	r3, [r0, #53]	@ 0x35
 800a96c:	f890 2034 	ldrb.w	r2, [r0, #52]	@ 0x34
 800a970:	3301      	adds	r3, #1
 800a972:	b2db      	uxtb	r3, r3
 800a974:	429a      	cmp	r2, r3
 800a976:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
 800a97a:	d138      	bne.n	800a9ee <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
 800a97c:	2300      	movs	r3, #0
 800a97e:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
 800a982:	8e41      	ldrh	r1, [r0, #50]	@ 0x32
 800a984:	8cc3      	ldrh	r3, [r0, #38]	@ 0x26
 800a986:	f890 2036 	ldrb.w	r2, [r0, #54]	@ 0x36
 800a98a:	4299      	cmp	r1, r3
 800a98c:	d100      	bne.n	800a990 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x34>
 800a98e:	b122      	cbz	r2, 800a99a <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x3e>
 800a990:	8e21      	ldrh	r1, [r4, #48]	@ 0x30
 800a992:	4299      	cmp	r1, r3
 800a994:	d12f      	bne.n	800a9f6 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x9a>
 800a996:	2a00      	cmp	r2, #0
 800a998:	d034      	beq.n	800aa04 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xa8>
 800a99a:	f894 5037 	ldrb.w	r5, [r4, #55]	@ 0x37
 800a99e:	b93d      	cbnz	r5, 800a9b0 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x54>
 800a9a0:	f001 fc3a 	bl	800c218 <_ZN8touchgfx11Application11getInstanceEv>
 800a9a4:	4621      	mov	r1, r4
 800a9a6:	3004      	adds	r0, #4
 800a9a8:	f001 fc5b 	bl	800c262 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800a9ac:	f884 5038 	strb.w	r5, [r4, #56]	@ 0x38
 800a9b0:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800a9b2:	b140      	cbz	r0, 800a9c6 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x6a>
 800a9b4:	6803      	ldr	r3, [r0, #0]
 800a9b6:	68db      	ldr	r3, [r3, #12]
 800a9b8:	4798      	blx	r3
 800a9ba:	b120      	cbz	r0, 800a9c6 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x6a>
 800a9bc:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800a9be:	6803      	ldr	r3, [r0, #0]
 800a9c0:	4621      	mov	r1, r4
 800a9c2:	689b      	ldr	r3, [r3, #8]
 800a9c4:	4798      	blx	r3
 800a9c6:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800a9ca:	b183      	cbz	r3, 800a9ee <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
 800a9cc:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 800a9d0:	b16b      	cbz	r3, 800a9ee <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
 800a9d2:	f894 3036 	ldrb.w	r3, [r4, #54]	@ 0x36
 800a9d6:	b163      	cbz	r3, 800a9f2 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x96>
 800a9d8:	8e63      	ldrh	r3, [r4, #50]	@ 0x32
 800a9da:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a9de:	a901      	add	r1, sp, #4
 800a9e0:	4620      	mov	r0, r4
 800a9e2:	f000 fb50 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a9e6:	6823      	ldr	r3, [r4, #0]
 800a9e8:	4620      	mov	r0, r4
 800a9ea:	695b      	ldr	r3, [r3, #20]
 800a9ec:	4798      	blx	r3
 800a9ee:	b003      	add	sp, #12
 800a9f0:	bd30      	pop	{r4, r5, pc}
 800a9f2:	8e23      	ldrh	r3, [r4, #48]	@ 0x30
 800a9f4:	e7f1      	b.n	800a9da <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x7e>
 800a9f6:	b12a      	cbz	r2, 800aa04 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xa8>
 800a9f8:	3b01      	subs	r3, #1
 800a9fa:	a902      	add	r1, sp, #8
 800a9fc:	b29b      	uxth	r3, r3
 800a9fe:	f821 3d04 	strh.w	r3, [r1, #-4]!
 800aa02:	e7ed      	b.n	800a9e0 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x84>
 800aa04:	3301      	adds	r3, #1
 800aa06:	e7f8      	b.n	800a9fa <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x9e>

0800aa08 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800aa08:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 800aa0c:	b12a      	cbz	r2, 800aa1a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800aa0e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800aa12:	b112      	cbz	r2, 800aa1a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800aa14:	6803      	ldr	r3, [r0, #0]
 800aa16:	695b      	ldr	r3, [r3, #20]
 800aa18:	4718      	bx	r3
 800aa1a:	4770      	bx	lr

0800aa1c <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>:
 800aa1c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800aa1e:	ac02      	add	r4, sp, #8
 800aa20:	6803      	ldr	r3, [r0, #0]
 800aa22:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800aa24:	f824 1d04 	strh.w	r1, [r4, #-4]!
 800aa28:	4605      	mov	r5, r0
 800aa2a:	4621      	mov	r1, r4
 800aa2c:	4616      	mov	r6, r2
 800aa2e:	4798      	blx	r3
 800aa30:	682b      	ldr	r3, [r5, #0]
 800aa32:	4621      	mov	r1, r4
 800aa34:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800aa36:	f8ad 6004 	strh.w	r6, [sp, #4]
 800aa3a:	4628      	mov	r0, r5
 800aa3c:	4798      	blx	r3
 800aa3e:	b002      	add	sp, #8
 800aa40:	bd70      	pop	{r4, r5, r6, pc}

0800aa42 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>:
 800aa42:	2300      	movs	r3, #0
 800aa44:	f880 1034 	strb.w	r1, [r0, #52]	@ 0x34
 800aa48:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
 800aa4c:	4770      	bx	lr

0800aa4e <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
 800aa4e:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 800aa52:	4770      	bx	lr

0800aa54 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
 800aa54:	f890 0029 	ldrb.w	r0, [r0, #41]	@ 0x29
 800aa58:	4770      	bx	lr

0800aa5a <_ZN8touchgfx13ScalableImageD1Ev>:
 800aa5a:	4770      	bx	lr

0800aa5c <_ZN8touchgfx13ScalableImageD0Ev>:
 800aa5c:	b510      	push	{r4, lr}
 800aa5e:	212c      	movs	r1, #44	@ 0x2c
 800aa60:	4604      	mov	r4, r0
 800aa62:	f010 fed5 	bl	801b810 <_ZdlPvj>
 800aa66:	4620      	mov	r0, r4
 800aa68:	bd10      	pop	{r4, pc}

0800aa6a <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
 800aa6a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aa6c:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800aa70:	2bff      	cmp	r3, #255	@ 0xff
 800aa72:	b085      	sub	sp, #20
 800aa74:	4604      	mov	r4, r0
 800aa76:	460d      	mov	r5, r1
 800aa78:	d128      	bne.n	800aacc <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 800aa7a:	f101 0626 	add.w	r6, r1, #38	@ 0x26
 800aa7e:	4631      	mov	r1, r6
 800aa80:	4668      	mov	r0, sp
 800aa82:	f003 faad 	bl	800dfe0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800aa86:	4630      	mov	r0, r6
 800aa88:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
 800aa8c:	f003 fa40 	bl	800df10 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800aa90:	4287      	cmp	r7, r0
 800aa92:	d11b      	bne.n	800aacc <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 800aa94:	4630      	mov	r0, r6
 800aa96:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
 800aa9a:	f003 fa6d 	bl	800df78 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800aa9e:	4287      	cmp	r7, r0
 800aaa0:	d114      	bne.n	800aacc <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 800aaa2:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 800aaa6:	f8ad 300e 	strh.w	r3, [sp, #14]
 800aaaa:	2100      	movs	r1, #0
 800aaac:	466b      	mov	r3, sp
 800aaae:	9102      	str	r1, [sp, #8]
 800aab0:	cb03      	ldmia	r3!, {r0, r1}
 800aab2:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800aab6:	6020      	str	r0, [r4, #0]
 800aab8:	6061      	str	r1, [r4, #4]
 800aaba:	4620      	mov	r0, r4
 800aabc:	4619      	mov	r1, r3
 800aabe:	f8ad 200c 	strh.w	r2, [sp, #12]
 800aac2:	f7fe fe3f 	bl	8009744 <_ZN8touchgfx4RectaNERKS0_>
 800aac6:	4620      	mov	r0, r4
 800aac8:	b005      	add	sp, #20
 800aaca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aacc:	2300      	movs	r3, #0
 800aace:	8023      	strh	r3, [r4, #0]
 800aad0:	8063      	strh	r3, [r4, #2]
 800aad2:	80a3      	strh	r3, [r4, #4]
 800aad4:	80e3      	strh	r3, [r4, #6]
 800aad6:	e7f6      	b.n	800aac6 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

0800aad8 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
 800aad8:	b538      	push	{r3, r4, r5, lr}
 800aada:	2300      	movs	r3, #0
 800aadc:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800aae0:	8083      	strh	r3, [r0, #4]
 800aae2:	80c3      	strh	r3, [r0, #6]
 800aae4:	8103      	strh	r3, [r0, #8]
 800aae6:	8143      	strh	r3, [r0, #10]
 800aae8:	8183      	strh	r3, [r0, #12]
 800aaea:	81c3      	strh	r3, [r0, #14]
 800aaec:	8203      	strh	r3, [r0, #16]
 800aaee:	8243      	strh	r3, [r0, #18]
 800aaf0:	61c3      	str	r3, [r0, #28]
 800aaf2:	8403      	strh	r3, [r0, #32]
 800aaf4:	8443      	strh	r3, [r0, #34]	@ 0x22
 800aaf6:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
 800aafa:	2501      	movs	r5, #1
 800aafc:	4b08      	ldr	r3, [pc, #32]	@ (800ab20 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
 800aafe:	f880 5025 	strb.w	r5, [r0, #37]	@ 0x25
 800ab02:	6003      	str	r3, [r0, #0]
 800ab04:	880b      	ldrh	r3, [r1, #0]
 800ab06:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800ab08:	23ff      	movs	r3, #255	@ 0xff
 800ab0a:	4604      	mov	r4, r0
 800ab0c:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 800ab10:	f000 fab9 	bl	800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800ab14:	4b03      	ldr	r3, [pc, #12]	@ (800ab24 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
 800ab16:	6023      	str	r3, [r4, #0]
 800ab18:	f884 5029 	strb.w	r5, [r4, #41]	@ 0x29
 800ab1c:	4620      	mov	r0, r4
 800ab1e:	bd38      	pop	{r3, r4, r5, pc}
 800ab20:	0801de1c 	.word	0x0801de1c
 800ab24:	0801dccc 	.word	0x0801dccc

0800ab28 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
 800ab28:	4603      	mov	r3, r0
 800ab2a:	3026      	adds	r0, #38	@ 0x26
 800ab2c:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 800ab30:	b90b      	cbnz	r3, 800ab36 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
 800ab32:	f002 bbb5 	b.w	800d2a0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 800ab36:	f002 bbc3 	b.w	800d2c0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

0800ab3c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 800ab3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ab40:	4604      	mov	r4, r0
 800ab42:	b0b3      	sub	sp, #204	@ 0xcc
 800ab44:	469b      	mov	fp, r3
 800ab46:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800ab4a:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 800ab4e:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 800ab52:	ab11      	add	r3, sp, #68	@ 0x44
 800ab54:	2500      	movs	r5, #0
 800ab56:	f8ad 0048 	strh.w	r0, [sp, #72]	@ 0x48
 800ab5a:	4618      	mov	r0, r3
 800ab5c:	9206      	str	r2, [sp, #24]
 800ab5e:	9511      	str	r5, [sp, #68]	@ 0x44
 800ab60:	9307      	str	r3, [sp, #28]
 800ab62:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	@ 0xf0
 800ab66:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	@ 0xf8
 800ab6a:	f7fe fdeb 	bl	8009744 <_ZN8touchgfx4RectaNERKS0_>
 800ab6e:	9b07      	ldr	r3, [sp, #28]
 800ab70:	e893 0003 	ldmia.w	r3, {r0, r1}
 800ab74:	ad13      	add	r5, sp, #76	@ 0x4c
 800ab76:	e885 0003 	stmia.w	r5, {r0, r1}
 800ab7a:	6821      	ldr	r1, [r4, #0]
 800ab7c:	4620      	mov	r0, r4
 800ab7e:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 800ab80:	4629      	mov	r1, r5
 800ab82:	47b0      	blx	r6
 800ab84:	4621      	mov	r1, r4
 800ab86:	a815      	add	r0, sp, #84	@ 0x54
 800ab88:	f002 fb78 	bl	800d27c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ab8c:	a815      	add	r0, sp, #84	@ 0x54
 800ab8e:	f001 f98f 	bl	800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800ab92:	9b07      	ldr	r3, [sp, #28]
 800ab94:	1d26      	adds	r6, r4, #4
 800ab96:	4618      	mov	r0, r3
 800ab98:	4631      	mov	r1, r6
 800ab9a:	f001 f9cd 	bl	800bf38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800ab9e:	4628      	mov	r0, r5
 800aba0:	f104 0526 	add.w	r5, r4, #38	@ 0x26
 800aba4:	f001 f984 	bl	800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800aba8:	4628      	mov	r0, r5
 800abaa:	f003 faa3 	bl	800e0f4 <_ZNK8touchgfx6Bitmap7getDataEv>
 800abae:	9007      	str	r0, [sp, #28]
 800abb0:	2800      	cmp	r0, #0
 800abb2:	f000 80ce 	beq.w	800ad52 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
 800abb6:	f8db 200c 	ldr.w	r2, [fp, #12]
 800abba:	920c      	str	r2, [sp, #48]	@ 0x30
 800abbc:	f8da 2000 	ldr.w	r2, [sl]
 800abc0:	f8db 1000 	ldr.w	r1, [fp]
 800abc4:	920d      	str	r2, [sp, #52]	@ 0x34
 800abc6:	f8da 2004 	ldr.w	r2, [sl, #4]
 800abca:	9109      	str	r1, [sp, #36]	@ 0x24
 800abcc:	920e      	str	r2, [sp, #56]	@ 0x38
 800abce:	f8db 1004 	ldr.w	r1, [fp, #4]
 800abd2:	f8da 2008 	ldr.w	r2, [sl, #8]
 800abd6:	910a      	str	r1, [sp, #40]	@ 0x28
 800abd8:	920f      	str	r2, [sp, #60]	@ 0x3c
 800abda:	f8db 1008 	ldr.w	r1, [fp, #8]
 800abde:	f8da 200c 	ldr.w	r2, [sl, #12]
 800abe2:	910b      	str	r1, [sp, #44]	@ 0x2c
 800abe4:	9210      	str	r2, [sp, #64]	@ 0x40
 800abe6:	a90d      	add	r1, sp, #52	@ 0x34
 800abe8:	4632      	mov	r2, r6
 800abea:	a809      	add	r0, sp, #36	@ 0x24
 800abec:	f001 f988 	bl	800bf00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800abf0:	4632      	mov	r2, r6
 800abf2:	a90e      	add	r1, sp, #56	@ 0x38
 800abf4:	a80a      	add	r0, sp, #40	@ 0x28
 800abf6:	f001 f983 	bl	800bf00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800abfa:	4632      	mov	r2, r6
 800abfc:	a90f      	add	r1, sp, #60	@ 0x3c
 800abfe:	a80b      	add	r0, sp, #44	@ 0x2c
 800ac00:	f001 f97e 	bl	800bf00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800ac04:	4632      	mov	r2, r6
 800ac06:	a910      	add	r1, sp, #64	@ 0x40
 800ac08:	a80c      	add	r0, sp, #48	@ 0x30
 800ac0a:	f001 f979 	bl	800bf00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800ac0e:	eddd 7a0d 	vldr	s15, [sp, #52]	@ 0x34
 800ac12:	ed97 3a00 	vldr	s6, [r7]
 800ac16:	edd7 4a01 	vldr	s9, [r7, #4]
 800ac1a:	ed99 2a00 	vldr	s4, [r9]
 800ac1e:	edd8 2a00 	vldr	s5, [r8]
 800ac22:	edd9 3a01 	vldr	s7, [r9, #4]
 800ac26:	ed98 4a01 	vldr	s8, [r8, #4]
 800ac2a:	ed99 5a02 	vldr	s10, [r9, #8]
 800ac2e:	edd8 5a02 	vldr	s11, [r8, #8]
 800ac32:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 800ac36:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 800ac3a:	ed8d 2a20 	vstr	s4, [sp, #128]	@ 0x80
 800ac3e:	eef0 6a67 	vmov.f32	s13, s15
 800ac42:	eddd 7a0a 	vldr	s15, [sp, #40]	@ 0x28
 800ac46:	edcd 2a21 	vstr	s5, [sp, #132]	@ 0x84
 800ac4a:	eeb0 7a67 	vmov.f32	s14, s15
 800ac4e:	eddd 7a0e 	vldr	s15, [sp, #56]	@ 0x38
 800ac52:	ed8d 3a22 	vstr	s6, [sp, #136]	@ 0x88
 800ac56:	eeb0 6a67 	vmov.f32	s12, s15
 800ac5a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800ac5e:	eddd 7a0b 	vldr	s15, [sp, #44]	@ 0x2c
 800ac62:	edcd 3a25 	vstr	s7, [sp, #148]	@ 0x94
 800ac66:	ee16 6a10 	vmov	r6, s12
 800ac6a:	eeb0 6a67 	vmov.f32	s12, s15
 800ac6e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800ac72:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
 800ac76:	ed8d 4a26 	vstr	s8, [sp, #152]	@ 0x98
 800ac7a:	ee16 0a10 	vmov	r0, s12
 800ac7e:	eeb0 6a67 	vmov.f32	s12, s15
 800ac82:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800ac86:	eddd 7a0c 	vldr	s15, [sp, #48]	@ 0x30
 800ac8a:	edcd 4a27 	vstr	s9, [sp, #156]	@ 0x9c
 800ac8e:	ee16 1a10 	vmov	r1, s12
 800ac92:	eeb0 6a67 	vmov.f32	s12, s15
 800ac96:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800ac9a:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 800ac9e:	ee16 2a10 	vmov	r2, s12
 800aca2:	ed9d 6a09 	vldr	s12, [sp, #36]	@ 0x24
 800aca6:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
 800acaa:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 800acae:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800acb2:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800acb6:	e9cd 0128 	strd	r0, r1, [sp, #160]	@ 0xa0
 800acba:	ed8d 6a1e 	vstr	s12, [sp, #120]	@ 0x78
 800acbe:	ed8d 7a23 	vstr	s14, [sp, #140]	@ 0x8c
 800acc2:	f8d7 a008 	ldr.w	sl, [r7, #8]
 800acc6:	9624      	str	r6, [sp, #144]	@ 0x90
 800acc8:	68ff      	ldr	r7, [r7, #12]
 800acca:	ed8d 5a2a 	vstr	s10, [sp, #168]	@ 0xa8
 800acce:	922d      	str	r2, [sp, #180]	@ 0xb4
 800acd0:	4a21      	ldr	r2, [pc, #132]	@ (800ad58 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
 800acd2:	9b06      	ldr	r3, [sp, #24]
 800acd4:	8812      	ldrh	r2, [r2, #0]
 800acd6:	9317      	str	r3, [sp, #92]	@ 0x5c
 800acd8:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 800acdc:	9b07      	ldr	r3, [sp, #28]
 800acde:	9218      	str	r2, [sp, #96]	@ 0x60
 800ace0:	4628      	mov	r0, r5
 800ace2:	9319      	str	r3, [sp, #100]	@ 0x64
 800ace4:	edcd 5a2b 	vstr	s11, [sp, #172]	@ 0xac
 800ace8:	edcd 7a2e 	vstr	s15, [sp, #184]	@ 0xb8
 800acec:	f8cd e0bc 	str.w	lr, [sp, #188]	@ 0xbc
 800acf0:	f8cd c0c0 	str.w	ip, [sp, #192]	@ 0xc0
 800acf4:	f8cd a0b0 	str.w	sl, [sp, #176]	@ 0xb0
 800acf8:	9731      	str	r7, [sp, #196]	@ 0xc4
 800acfa:	f003 fa2b 	bl	800e154 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 800acfe:	901a      	str	r0, [sp, #104]	@ 0x68
 800ad00:	4628      	mov	r0, r5
 800ad02:	f003 f905 	bl	800df10 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ad06:	901b      	str	r0, [sp, #108]	@ 0x6c
 800ad08:	4628      	mov	r0, r5
 800ad0a:	f003 f935 	bl	800df78 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ad0e:	901c      	str	r0, [sp, #112]	@ 0x70
 800ad10:	4628      	mov	r0, r5
 800ad12:	f003 f8fd 	bl	800df10 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ad16:	4b11      	ldr	r3, [pc, #68]	@ (800ad5c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
 800ad18:	901d      	str	r0, [sp, #116]	@ 0x74
 800ad1a:	681b      	ldr	r3, [r3, #0]
 800ad1c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800ad20:	b10a      	cbz	r2, 800ad26 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
 800ad22:	6cdd      	ldr	r5, [r3, #76]	@ 0x4c
 800ad24:	b905      	cbnz	r5, 800ad28 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
 800ad26:	689d      	ldr	r5, [r3, #8]
 800ad28:	682b      	ldr	r3, [r5, #0]
 800ad2a:	4620      	mov	r0, r4
 800ad2c:	6c1e      	ldr	r6, [r3, #64]	@ 0x40
 800ad2e:	f7ff fefb 	bl	800ab28 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
 800ad32:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800ad36:	9304      	str	r3, [sp, #16]
 800ad38:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800ad3c:	e9cd 0302 	strd	r0, r3, [sp, #8]
 800ad40:	ab13      	add	r3, sp, #76	@ 0x4c
 800ad42:	9301      	str	r3, [sp, #4]
 800ad44:	ab15      	add	r3, sp, #84	@ 0x54
 800ad46:	9300      	str	r3, [sp, #0]
 800ad48:	aa1e      	add	r2, sp, #120	@ 0x78
 800ad4a:	ab19      	add	r3, sp, #100	@ 0x64
 800ad4c:	a917      	add	r1, sp, #92	@ 0x5c
 800ad4e:	4628      	mov	r0, r5
 800ad50:	47b0      	blx	r6
 800ad52:	b033      	add	sp, #204	@ 0xcc
 800ad54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ad58:	200137fa 	.word	0x200137fa
 800ad5c:	20013800 	.word	0x20013800

0800ad60 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
 800ad60:	b570      	push	{r4, r5, r6, lr}
 800ad62:	ed2d 8b04 	vpush	{d8-d9}
 800ad66:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
 800ad6a:	b098      	sub	sp, #96	@ 0x60
 800ad6c:	4604      	mov	r4, r0
 800ad6e:	460e      	mov	r6, r1
 800ad70:	2b00      	cmp	r3, #0
 800ad72:	d065      	beq.n	800ae40 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
 800ad74:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800ad78:	ed9f 8a38 	vldr	s16, [pc, #224]	@ 800ae5c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
 800ad7c:	ee09 3a10 	vmov	s18, r3
 800ad80:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800ad84:	f100 0526 	add.w	r5, r0, #38	@ 0x26
 800ad88:	ee08 3a90 	vmov	s17, r3
 800ad8c:	4628      	mov	r0, r5
 800ad8e:	4b34      	ldr	r3, [pc, #208]	@ (800ae60 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
 800ad90:	930c      	str	r3, [sp, #48]	@ 0x30
 800ad92:	930d      	str	r3, [sp, #52]	@ 0x34
 800ad94:	930e      	str	r3, [sp, #56]	@ 0x38
 800ad96:	930f      	str	r3, [sp, #60]	@ 0x3c
 800ad98:	f003 f8ba 	bl	800df10 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ad9c:	ee07 0a90 	vmov	s15, r0
 800ada0:	4628      	mov	r0, r5
 800ada2:	eef8 9ae7 	vcvt.f32.s32	s19, s15
 800ada6:	f003 f8e7 	bl	800df78 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800adaa:	4b2e      	ldr	r3, [pc, #184]	@ (800ae64 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
 800adac:	781b      	ldrb	r3, [r3, #0]
 800adae:	ee07 0a90 	vmov	s15, r0
 800adb2:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 800adb6:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 800adba:	2b01      	cmp	r3, #1
 800adbc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800adc0:	ee39 9a08 	vadd.f32	s18, s18, s16
 800adc4:	ee78 8a88 	vadd.f32	s17, s17, s16
 800adc8:	eef0 7a48 	vmov.f32	s15, s16
 800adcc:	d13c      	bne.n	800ae48 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
 800adce:	eef0 6a69 	vmov.f32	s13, s19
 800add2:	eeb0 6a47 	vmov.f32	s12, s14
 800add6:	eef0 5a47 	vmov.f32	s11, s14
 800adda:	ee19 3a90 	vmov	r3, s19
 800adde:	eeb0 7a48 	vmov.f32	s14, s16
 800ade2:	eef0 9a48 	vmov.f32	s19, s16
 800ade6:	9314      	str	r3, [sp, #80]	@ 0x50
 800ade8:	ab14      	add	r3, sp, #80	@ 0x50
 800adea:	9303      	str	r3, [sp, #12]
 800adec:	ab10      	add	r3, sp, #64	@ 0x40
 800adee:	9302      	str	r3, [sp, #8]
 800adf0:	ab0c      	add	r3, sp, #48	@ 0x30
 800adf2:	9301      	str	r3, [sp, #4]
 800adf4:	ab08      	add	r3, sp, #32
 800adf6:	9300      	str	r3, [sp, #0]
 800adf8:	2200      	movs	r2, #0
 800adfa:	ab04      	add	r3, sp, #16
 800adfc:	4631      	mov	r1, r6
 800adfe:	4620      	mov	r0, r4
 800ae00:	edcd 7a04 	vstr	s15, [sp, #16]
 800ae04:	ed8d 9a05 	vstr	s18, [sp, #20]
 800ae08:	ed8d 9a06 	vstr	s18, [sp, #24]
 800ae0c:	edcd 7a07 	vstr	s15, [sp, #28]
 800ae10:	edcd 7a08 	vstr	s15, [sp, #32]
 800ae14:	edcd 7a09 	vstr	s15, [sp, #36]	@ 0x24
 800ae18:	edcd 8a0a 	vstr	s17, [sp, #40]	@ 0x28
 800ae1c:	edcd 8a0b 	vstr	s17, [sp, #44]	@ 0x2c
 800ae20:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 800ae24:	edcd 9a11 	vstr	s19, [sp, #68]	@ 0x44
 800ae28:	edcd 5a12 	vstr	s11, [sp, #72]	@ 0x48
 800ae2c:	ed8d 6a13 	vstr	s12, [sp, #76]	@ 0x4c
 800ae30:	edcd 7a15 	vstr	s15, [sp, #84]	@ 0x54
 800ae34:	ed8d 7a16 	vstr	s14, [sp, #88]	@ 0x58
 800ae38:	edcd 6a17 	vstr	s13, [sp, #92]	@ 0x5c
 800ae3c:	f7ff fe7e 	bl	800ab3c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 800ae40:	b018      	add	sp, #96	@ 0x60
 800ae42:	ecbd 8b04 	vpop	{d8-d9}
 800ae46:	bd70      	pop	{r4, r5, r6, pc}
 800ae48:	eef0 6a47 	vmov.f32	s13, s14
 800ae4c:	eef0 5a69 	vmov.f32	s11, s19
 800ae50:	eeb0 6a48 	vmov.f32	s12, s16
 800ae54:	ee18 3a10 	vmov	r3, s16
 800ae58:	e7c5      	b.n	800ade6 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
 800ae5a:	bf00      	nop
 800ae5c:	00000000 	.word	0x00000000
 800ae60:	42c80000 	.word	0x42c80000
 800ae64:	200137f8 	.word	0x200137f8

0800ae68 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800ae68:	2300      	movs	r3, #0
 800ae6a:	8083      	strh	r3, [r0, #4]
 800ae6c:	80c3      	strh	r3, [r0, #6]
 800ae6e:	8003      	strh	r3, [r0, #0]
 800ae70:	8043      	strh	r3, [r0, #2]
 800ae72:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800ae76:	2bff      	cmp	r3, #255	@ 0xff
 800ae78:	bf01      	itttt	eq
 800ae7a:	890b      	ldrheq	r3, [r1, #8]
 800ae7c:	8083      	strheq	r3, [r0, #4]
 800ae7e:	894b      	ldrheq	r3, [r1, #10]
 800ae80:	80c3      	strheq	r3, [r0, #6]
 800ae82:	4770      	bx	lr

0800ae84 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800ae84:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ae86:	4604      	mov	r4, r0
 800ae88:	6808      	ldr	r0, [r1, #0]
 800ae8a:	6849      	ldr	r1, [r1, #4]
 800ae8c:	466b      	mov	r3, sp
 800ae8e:	c303      	stmia	r3!, {r0, r1}
 800ae90:	6823      	ldr	r3, [r4, #0]
 800ae92:	4669      	mov	r1, sp
 800ae94:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ae96:	4620      	mov	r0, r4
 800ae98:	4798      	blx	r3
 800ae9a:	4b08      	ldr	r3, [pc, #32]	@ (800aebc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800ae9c:	681b      	ldr	r3, [r3, #0]
 800ae9e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800aea2:	b10a      	cbz	r2, 800aea8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800aea4:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800aea6:	b900      	cbnz	r0, 800aeaa <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800aea8:	6898      	ldr	r0, [r3, #8]
 800aeaa:	6803      	ldr	r3, [r0, #0]
 800aeac:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800aeae:	6a1d      	ldr	r5, [r3, #32]
 800aeb0:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800aeb4:	4669      	mov	r1, sp
 800aeb6:	47a8      	blx	r5
 800aeb8:	b003      	add	sp, #12
 800aeba:	bd30      	pop	{r4, r5, pc}
 800aebc:	20013800 	.word	0x20013800

0800aec0 <_ZN8touchgfx3BoxD1Ev>:
 800aec0:	4770      	bx	lr

0800aec2 <_ZN8touchgfx3BoxD0Ev>:
 800aec2:	b510      	push	{r4, lr}
 800aec4:	212c      	movs	r1, #44	@ 0x2c
 800aec6:	4604      	mov	r4, r0
 800aec8:	f010 fca2 	bl	801b810 <_ZdlPvj>
 800aecc:	4620      	mov	r0, r4
 800aece:	bd10      	pop	{r4, pc}

0800aed0 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800aed0:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800aed4:	b12a      	cbz	r2, 800aee2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800aed6:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800aeda:	b112      	cbz	r2, 800aee2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800aedc:	6803      	ldr	r3, [r0, #0]
 800aede:	695b      	ldr	r3, [r3, #20]
 800aee0:	4718      	bx	r3
 800aee2:	4770      	bx	lr

0800aee4 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800aee4:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 800aee8:	4770      	bx	lr

0800aeea <_ZN8touchgfx6ButtonD1Ev>:
 800aeea:	4770      	bx	lr

0800aeec <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800aeec:	b570      	push	{r4, r5, r6, lr}
 800aeee:	880b      	ldrh	r3, [r1, #0]
 800aef0:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 800aef2:	4605      	mov	r5, r0
 800aef4:	8813      	ldrh	r3, [r2, #0]
 800aef6:	f825 3f30 	strh.w	r3, [r5, #48]!
 800aefa:	4604      	mov	r4, r0
 800aefc:	4628      	mov	r0, r5
 800aefe:	f003 f807 	bl	800df10 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800af02:	4606      	mov	r6, r0
 800af04:	4628      	mov	r0, r5
 800af06:	f003 f837 	bl	800df78 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800af0a:	6823      	ldr	r3, [r4, #0]
 800af0c:	4605      	mov	r5, r0
 800af0e:	4631      	mov	r1, r6
 800af10:	4620      	mov	r0, r4
 800af12:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800af14:	4798      	blx	r3
 800af16:	6823      	ldr	r3, [r4, #0]
 800af18:	4629      	mov	r1, r5
 800af1a:	4620      	mov	r0, r4
 800af1c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800af1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800af22:	4718      	bx	r3

0800af24 <_ZN8touchgfx6ButtonD0Ev>:
 800af24:	b510      	push	{r4, lr}
 800af26:	2134      	movs	r1, #52	@ 0x34
 800af28:	4604      	mov	r4, r0
 800af2a:	f010 fc71 	bl	801b810 <_ZdlPvj>
 800af2e:	4620      	mov	r0, r4
 800af30:	bd10      	pop	{r4, pc}

0800af32 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800af32:	b510      	push	{r4, lr}
 800af34:	4604      	mov	r4, r0
 800af36:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800af38:	b150      	cbz	r0, 800af50 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800af3a:	6803      	ldr	r3, [r0, #0]
 800af3c:	68db      	ldr	r3, [r3, #12]
 800af3e:	4798      	blx	r3
 800af40:	b130      	cbz	r0, 800af50 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800af42:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800af44:	6803      	ldr	r3, [r0, #0]
 800af46:	4621      	mov	r1, r4
 800af48:	689b      	ldr	r3, [r3, #8]
 800af4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800af4e:	4718      	bx	r3
 800af50:	bd10      	pop	{r4, pc}

0800af52 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800af52:	b510      	push	{r4, lr}
 800af54:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 800af58:	2bff      	cmp	r3, #255	@ 0xff
 800af5a:	4604      	mov	r4, r0
 800af5c:	d006      	beq.n	800af6c <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800af5e:	2300      	movs	r3, #0
 800af60:	8003      	strh	r3, [r0, #0]
 800af62:	8043      	strh	r3, [r0, #2]
 800af64:	8083      	strh	r3, [r0, #4]
 800af66:	80c3      	strh	r3, [r0, #6]
 800af68:	4620      	mov	r0, r4
 800af6a:	bd10      	pop	{r4, pc}
 800af6c:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 800af70:	b11b      	cbz	r3, 800af7a <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800af72:	3130      	adds	r1, #48	@ 0x30
 800af74:	f003 f834 	bl	800dfe0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800af78:	e7f6      	b.n	800af68 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800af7a:	312e      	adds	r1, #46	@ 0x2e
 800af7c:	e7fa      	b.n	800af74 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800af80 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800af80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800af84:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800af88:	b08a      	sub	sp, #40	@ 0x28
 800af8a:	4604      	mov	r4, r0
 800af8c:	4688      	mov	r8, r1
 800af8e:	2b00      	cmp	r3, #0
 800af90:	d066      	beq.n	800b060 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800af92:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 800af94:	f8ad 3014 	strh.w	r3, [sp, #20]
 800af98:	a805      	add	r0, sp, #20
 800af9a:	f002 ffb9 	bl	800df10 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800af9e:	4607      	mov	r7, r0
 800afa0:	a805      	add	r0, sp, #20
 800afa2:	f002 ffe9 	bl	800df78 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800afa6:	f9b8 6000 	ldrsh.w	r6, [r8]
 800afaa:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800afae:	4432      	add	r2, r6
 800afb0:	b292      	uxth	r2, r2
 800afb2:	2300      	movs	r3, #0
 800afb4:	fa0f fc82 	sxth.w	ip, r2
 800afb8:	459c      	cmp	ip, r3
 800afba:	9306      	str	r3, [sp, #24]
 800afbc:	dd52      	ble.n	800b064 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800afbe:	42b7      	cmp	r7, r6
 800afc0:	dd50      	ble.n	800b064 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800afc2:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800afc6:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800afca:	442b      	add	r3, r5
 800afcc:	b29b      	uxth	r3, r3
 800afce:	b219      	sxth	r1, r3
 800afd0:	2900      	cmp	r1, #0
 800afd2:	dd47      	ble.n	800b064 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800afd4:	42a8      	cmp	r0, r5
 800afd6:	dd45      	ble.n	800b064 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800afd8:	4567      	cmp	r7, ip
 800afda:	bfb8      	it	lt
 800afdc:	b2ba      	uxthlt	r2, r7
 800afde:	4288      	cmp	r0, r1
 800afe0:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800afe4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800afe8:	bfb8      	it	lt
 800afea:	b283      	uxthlt	r3, r0
 800afec:	1b92      	subs	r2, r2, r6
 800afee:	1b5b      	subs	r3, r3, r5
 800aff0:	f8ad 201c 	strh.w	r2, [sp, #28]
 800aff4:	f8ad 301e 	strh.w	r3, [sp, #30]
 800aff8:	f8ad 6018 	strh.w	r6, [sp, #24]
 800affc:	f8ad 501a 	strh.w	r5, [sp, #26]
 800b000:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800b004:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800b008:	429a      	cmp	r2, r3
 800b00a:	d026      	beq.n	800b05a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800b00c:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800b010:	2b00      	cmp	r3, #0
 800b012:	dd22      	ble.n	800b05a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800b014:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800b018:	2b00      	cmp	r3, #0
 800b01a:	dd1e      	ble.n	800b05a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800b01c:	2300      	movs	r3, #0
 800b01e:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800b022:	6823      	ldr	r3, [r4, #0]
 800b024:	a908      	add	r1, sp, #32
 800b026:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b028:	4620      	mov	r0, r4
 800b02a:	4798      	blx	r3
 800b02c:	4b0f      	ldr	r3, [pc, #60]	@ (800b06c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800b02e:	681b      	ldr	r3, [r3, #0]
 800b030:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800b034:	b10a      	cbz	r2, 800b03a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800b036:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800b038:	b900      	cbnz	r0, 800b03c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800b03a:	6898      	ldr	r0, [r3, #8]
 800b03c:	6801      	ldr	r1, [r0, #0]
 800b03e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 800b042:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800b046:	2501      	movs	r5, #1
 800b048:	9502      	str	r5, [sp, #8]
 800b04a:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 800b04e:	9401      	str	r4, [sp, #4]
 800b050:	ac06      	add	r4, sp, #24
 800b052:	9400      	str	r4, [sp, #0]
 800b054:	688c      	ldr	r4, [r1, #8]
 800b056:	a905      	add	r1, sp, #20
 800b058:	47a0      	blx	r4
 800b05a:	b00a      	add	sp, #40	@ 0x28
 800b05c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b060:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 800b062:	e797      	b.n	800af94 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800b064:	2300      	movs	r3, #0
 800b066:	9307      	str	r3, [sp, #28]
 800b068:	e7ca      	b.n	800b000 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800b06a:	bf00      	nop
 800b06c:	20013800 	.word	0x20013800

0800b070 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800b070:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 800b074:	b12a      	cbz	r2, 800b082 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800b076:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800b07a:	b112      	cbz	r2, 800b082 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800b07c:	6803      	ldr	r3, [r0, #0]
 800b07e:	695b      	ldr	r3, [r3, #20]
 800b080:	4718      	bx	r3
 800b082:	4770      	bx	lr

0800b084 <_ZN8touchgfx5ImageD1Ev>:
 800b084:	4770      	bx	lr

0800b086 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800b086:	b570      	push	{r4, r5, r6, lr}
 800b088:	880b      	ldrh	r3, [r1, #0]
 800b08a:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800b08c:	4604      	mov	r4, r0
 800b08e:	4608      	mov	r0, r1
 800b090:	460d      	mov	r5, r1
 800b092:	f002 ff3d 	bl	800df10 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b096:	4606      	mov	r6, r0
 800b098:	4628      	mov	r0, r5
 800b09a:	f002 ff6d 	bl	800df78 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b09e:	6823      	ldr	r3, [r4, #0]
 800b0a0:	4605      	mov	r5, r0
 800b0a2:	4631      	mov	r1, r6
 800b0a4:	4620      	mov	r0, r4
 800b0a6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b0a8:	4798      	blx	r3
 800b0aa:	6823      	ldr	r3, [r4, #0]
 800b0ac:	4629      	mov	r1, r5
 800b0ae:	4620      	mov	r0, r4
 800b0b0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b0b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b0b6:	4718      	bx	r3

0800b0b8 <_ZN8touchgfx5ImageD0Ev>:
 800b0b8:	b510      	push	{r4, lr}
 800b0ba:	212c      	movs	r1, #44	@ 0x2c
 800b0bc:	4604      	mov	r4, r0
 800b0be:	f010 fba7 	bl	801b810 <_ZdlPvj>
 800b0c2:	4620      	mov	r0, r4
 800b0c4:	bd10      	pop	{r4, pc}

0800b0c6 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800b0c6:	b510      	push	{r4, lr}
 800b0c8:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800b0cc:	2bff      	cmp	r3, #255	@ 0xff
 800b0ce:	4604      	mov	r4, r0
 800b0d0:	d006      	beq.n	800b0e0 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800b0d2:	2300      	movs	r3, #0
 800b0d4:	8003      	strh	r3, [r0, #0]
 800b0d6:	8043      	strh	r3, [r0, #2]
 800b0d8:	8083      	strh	r3, [r0, #4]
 800b0da:	80c3      	strh	r3, [r0, #6]
 800b0dc:	4620      	mov	r0, r4
 800b0de:	bd10      	pop	{r4, pc}
 800b0e0:	3126      	adds	r1, #38	@ 0x26
 800b0e2:	f002 ff7d 	bl	800dfe0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800b0e6:	e7f9      	b.n	800b0dc <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800b0e8 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800b0e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b0ec:	4604      	mov	r4, r0
 800b0ee:	b088      	sub	sp, #32
 800b0f0:	f854 3b26 	ldr.w	r3, [r4], #38
 800b0f4:	2500      	movs	r5, #0
 800b0f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b0f8:	460f      	mov	r7, r1
 800b0fa:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800b0fe:	a904      	add	r1, sp, #16
 800b100:	4606      	mov	r6, r0
 800b102:	4798      	blx	r3
 800b104:	4620      	mov	r0, r4
 800b106:	f002 ff03 	bl	800df10 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b10a:	4680      	mov	r8, r0
 800b10c:	4620      	mov	r0, r4
 800b10e:	f002 ff33 	bl	800df78 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b112:	9506      	str	r5, [sp, #24]
 800b114:	ad06      	add	r5, sp, #24
 800b116:	f8ad 001e 	strh.w	r0, [sp, #30]
 800b11a:	4639      	mov	r1, r7
 800b11c:	4628      	mov	r0, r5
 800b11e:	f8ad 801c 	strh.w	r8, [sp, #28]
 800b122:	f7fe fb0f 	bl	8009744 <_ZN8touchgfx4RectaNERKS0_>
 800b126:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800b12a:	2b00      	cmp	r3, #0
 800b12c:	dd19      	ble.n	800b162 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800b12e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800b132:	2b00      	cmp	r3, #0
 800b134:	dd15      	ble.n	800b162 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800b136:	4b0c      	ldr	r3, [pc, #48]	@ (800b168 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800b138:	681b      	ldr	r3, [r3, #0]
 800b13a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800b13e:	b10a      	cbz	r2, 800b144 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800b140:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800b142:	b900      	cbnz	r0, 800b146 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800b144:	6898      	ldr	r0, [r3, #8]
 800b146:	6801      	ldr	r1, [r0, #0]
 800b148:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800b14c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800b150:	2701      	movs	r7, #1
 800b152:	9702      	str	r7, [sp, #8]
 800b154:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 800b158:	e9cd 5600 	strd	r5, r6, [sp]
 800b15c:	688d      	ldr	r5, [r1, #8]
 800b15e:	4621      	mov	r1, r4
 800b160:	47a8      	blx	r5
 800b162:	b008      	add	sp, #32
 800b164:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b168:	20013800 	.word	0x20013800

0800b16c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800b16c:	b510      	push	{r4, lr}
 800b16e:	6803      	ldr	r3, [r0, #0]
 800b170:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b172:	460c      	mov	r4, r1
 800b174:	4798      	blx	r3
 800b176:	1b03      	subs	r3, r0, r4
 800b178:	4258      	negs	r0, r3
 800b17a:	4158      	adcs	r0, r3
 800b17c:	bd10      	pop	{r4, pc}
	...

0800b180 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800b180:	4b01      	ldr	r3, [pc, #4]	@ (800b188 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800b182:	6019      	str	r1, [r3, #0]
 800b184:	4770      	bx	lr
 800b186:	bf00      	nop
 800b188:	20013808 	.word	0x20013808

0800b18c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800b18c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b190:	4696      	mov	lr, r2
 800b192:	4605      	mov	r5, r0
 800b194:	4614      	mov	r4, r2
 800b196:	460e      	mov	r6, r1
 800b198:	461f      	mov	r7, r3
 800b19a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b19e:	b097      	sub	sp, #92	@ 0x5c
 800b1a0:	f10d 0c1c 	add.w	ip, sp, #28
 800b1a4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b1a8:	f8de 3000 	ldr.w	r3, [lr]
 800b1ac:	f8cc 3000 	str.w	r3, [ip]
 800b1b0:	f104 0e14 	add.w	lr, r4, #20
 800b1b4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b1b8:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800b1bc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b1c0:	f8de 3000 	ldr.w	r3, [lr]
 800b1c4:	f8cc 3000 	str.w	r3, [ip]
 800b1c8:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800b1cc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b1d0:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800b1d4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b1d8:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800b1dc:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800b1e0:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800b1e4:	f8de 3000 	ldr.w	r3, [lr]
 800b1e8:	f8cc 3000 	str.w	r3, [ip]
 800b1ec:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800b1ee:	682b      	ldr	r3, [r5, #0]
 800b1f0:	9201      	str	r2, [sp, #4]
 800b1f2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800b1f6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800b1f8:	9200      	str	r2, [sp, #0]
 800b1fa:	f8cd 8008 	str.w	r8, [sp, #8]
 800b1fe:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800b202:	aa07      	add	r2, sp, #28
 800b204:	463b      	mov	r3, r7
 800b206:	4631      	mov	r1, r6
 800b208:	4628      	mov	r0, r5
 800b20a:	47d8      	blx	fp
 800b20c:	46a6      	mov	lr, r4
 800b20e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b212:	f10d 0c1c 	add.w	ip, sp, #28
 800b216:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b21a:	f8de 3000 	ldr.w	r3, [lr]
 800b21e:	f8cc 3000 	str.w	r3, [ip]
 800b222:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800b226:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b22a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800b22e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b232:	343c      	adds	r4, #60	@ 0x3c
 800b234:	f8de 3000 	ldr.w	r3, [lr]
 800b238:	f8cc 3000 	str.w	r3, [ip]
 800b23c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b23e:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800b242:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b246:	6823      	ldr	r3, [r4, #0]
 800b248:	f8cc 3000 	str.w	r3, [ip]
 800b24c:	682b      	ldr	r3, [r5, #0]
 800b24e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800b252:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800b254:	9201      	str	r2, [sp, #4]
 800b256:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800b258:	9200      	str	r2, [sp, #0]
 800b25a:	f8cd 8008 	str.w	r8, [sp, #8]
 800b25e:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800b260:	aa07      	add	r2, sp, #28
 800b262:	463b      	mov	r3, r7
 800b264:	4631      	mov	r1, r6
 800b266:	4628      	mov	r0, r5
 800b268:	47a0      	blx	r4
 800b26a:	b017      	add	sp, #92	@ 0x5c
 800b26c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b270 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800b270:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b274:	b08d      	sub	sp, #52	@ 0x34
 800b276:	4688      	mov	r8, r1
 800b278:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800b27a:	f8d3 c000 	ldr.w	ip, [r3]
 800b27e:	680f      	ldr	r7, [r1, #0]
 800b280:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800b284:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800b288:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800b28c:	edd3 6a07 	vldr	s13, [r3, #28]
 800b290:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800b292:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800b296:	f9b1 9000 	ldrsh.w	r9, [r1]
 800b29a:	f9ba 1000 	ldrsh.w	r1, [sl]
 800b29e:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800b2a2:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800b2a6:	eba7 070c 	sub.w	r7, r7, ip
 800b2aa:	42bc      	cmp	r4, r7
 800b2ac:	bfa8      	it	ge
 800b2ae:	463c      	movge	r4, r7
 800b2b0:	ee07 4a90 	vmov	s15, r4
 800b2b4:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800b2b8:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800b2bc:	ee25 4a04 	vmul.f32	s8, s10, s8
 800b2c0:	ee65 4a24 	vmul.f32	s9, s10, s9
 800b2c4:	ee25 5a27 	vmul.f32	s10, s10, s15
 800b2c8:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800b2cc:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800b2d0:	eb09 0e0c 	add.w	lr, r9, ip
 800b2d4:	4571      	cmp	r1, lr
 800b2d6:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800b2da:	ee32 1a05 	vadd.f32	s2, s4, s10
 800b2de:	ee36 0a84 	vadd.f32	s0, s13, s8
 800b2e2:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b2e6:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b2ea:	f340 808d 	ble.w	800b408 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800b2ee:	eba1 060e 	sub.w	r6, r1, lr
 800b2f2:	fb96 f5f4 	sdiv	r5, r6, r4
 800b2f6:	ee07 5a10 	vmov	s14, r5
 800b2fa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b2fe:	2d00      	cmp	r5, #0
 800b300:	fb04 6615 	mls	r6, r4, r5, r6
 800b304:	eea7 0a04 	vfma.f32	s0, s14, s8
 800b308:	eee7 0a24 	vfma.f32	s1, s14, s9
 800b30c:	eea7 1a05 	vfma.f32	s2, s14, s10
 800b310:	dd13      	ble.n	800b33a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800b312:	ee70 6a44 	vsub.f32	s13, s0, s8
 800b316:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800b31a:	eef5 6a40 	vcmp.f32	s13, #0.0
 800b31e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b322:	bf18      	it	ne
 800b324:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800b328:	ee31 2a45 	vsub.f32	s4, s2, s10
 800b32c:	bf08      	it	eq
 800b32e:	eeb0 7a67 	vmoveq.f32	s14, s15
 800b332:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b336:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b33a:	fb05 f204 	mul.w	r2, r5, r4
 800b33e:	1abf      	subs	r7, r7, r2
 800b340:	4494      	add	ip, r2
 800b342:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800b346:	4411      	add	r1, r2
 800b348:	eb09 020c 	add.w	r2, r9, ip
 800b34c:	443a      	add	r2, r7
 800b34e:	b209      	sxth	r1, r1
 800b350:	428a      	cmp	r2, r1
 800b352:	bfc4      	itt	gt
 800b354:	eba1 0209 	subgt.w	r2, r1, r9
 800b358:	eba2 070c 	subgt.w	r7, r2, ip
 800b35c:	2f00      	cmp	r7, #0
 800b35e:	dd50      	ble.n	800b402 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800b360:	fb97 f1f4 	sdiv	r1, r7, r4
 800b364:	fb04 7211 	mls	r2, r4, r1, r7
 800b368:	b90a      	cbnz	r2, 800b36e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800b36a:	3901      	subs	r1, #1
 800b36c:	4622      	mov	r2, r4
 800b36e:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800b372:	6840      	ldr	r0, [r0, #4]
 800b374:	900b      	str	r0, [sp, #44]	@ 0x2c
 800b376:	f8d0 a000 	ldr.w	sl, [r0]
 800b37a:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800b37c:	9008      	str	r0, [sp, #32]
 800b37e:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800b382:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800b384:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800b388:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800b38c:	695b      	ldr	r3, [r3, #20]
 800b38e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800b390:	445b      	add	r3, fp
 800b392:	eef0 6a42 	vmov.f32	s13, s4
 800b396:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800b39a:	ee21 3a23 	vmul.f32	s6, s2, s7
 800b39e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800b3a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800b3a6:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b3aa:	9307      	str	r3, [sp, #28]
 800b3ac:	ee17 7a90 	vmov	r7, s15
 800b3b0:	ee73 7a42 	vsub.f32	s15, s6, s4
 800b3b4:	eeb0 7a61 	vmov.f32	s14, s3
 800b3b8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b3bc:	ee16 3a90 	vmov	r3, s13
 800b3c0:	fb97 f7f4 	sdiv	r7, r7, r4
 800b3c4:	ee17 ca90 	vmov	ip, s15
 800b3c8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800b3cc:	fb9c fcf4 	sdiv	ip, ip, r4
 800b3d0:	fb0c 3306 	mla	r3, ip, r6, r3
 800b3d4:	9302      	str	r3, [sp, #8]
 800b3d6:	ee17 3a10 	vmov	r3, s14
 800b3da:	44b6      	add	lr, r6
 800b3dc:	fb04 e505 	mla	r5, r4, r5, lr
 800b3e0:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800b3e4:	fb07 3706 	mla	r7, r7, r6, r3
 800b3e8:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800b3ec:	e9cd 4700 	strd	r4, r7, [sp]
 800b3f0:	2900      	cmp	r1, #0
 800b3f2:	bfcc      	ite	gt
 800b3f4:	46a1      	movgt	r9, r4
 800b3f6:	4691      	movle	r9, r2
 800b3f8:	eba9 0306 	sub.w	r3, r9, r6
 800b3fc:	f8da 4008 	ldr.w	r4, [sl, #8]
 800b400:	47a0      	blx	r4
 800b402:	b00d      	add	sp, #52	@ 0x34
 800b404:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b408:	2500      	movs	r5, #0
 800b40a:	462e      	mov	r6, r5
 800b40c:	e799      	b.n	800b342 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800b410 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800b410:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b414:	b0db      	sub	sp, #364	@ 0x16c
 800b416:	461d      	mov	r5, r3
 800b418:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800b41c:	930a      	str	r3, [sp, #40]	@ 0x28
 800b41e:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800b422:	930b      	str	r3, [sp, #44]	@ 0x2c
 800b424:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800b428:	9310      	str	r3, [sp, #64]	@ 0x40
 800b42a:	6803      	ldr	r3, [r0, #0]
 800b42c:	910f      	str	r1, [sp, #60]	@ 0x3c
 800b42e:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800b430:	9009      	str	r0, [sp, #36]	@ 0x24
 800b432:	4614      	mov	r4, r2
 800b434:	4629      	mov	r1, r5
 800b436:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800b43a:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800b43e:	47b8      	blx	r7
 800b440:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b442:	6058      	str	r0, [r3, #4]
 800b444:	2800      	cmp	r0, #0
 800b446:	f000 83a1 	beq.w	800bb8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b44a:	682b      	ldr	r3, [r5, #0]
 800b44c:	9314      	str	r3, [sp, #80]	@ 0x50
 800b44e:	686b      	ldr	r3, [r5, #4]
 800b450:	9315      	str	r3, [sp, #84]	@ 0x54
 800b452:	4bc4      	ldr	r3, [pc, #784]	@ (800b764 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800b454:	ed94 7a02 	vldr	s14, [r4, #8]
 800b458:	7819      	ldrb	r1, [r3, #0]
 800b45a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800b45e:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800b462:	2900      	cmp	r1, #0
 800b464:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b468:	bf16      	itet	ne
 800b46a:	4619      	movne	r1, r3
 800b46c:	4611      	moveq	r1, r2
 800b46e:	4613      	movne	r3, r2
 800b470:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b474:	9116      	str	r1, [sp, #88]	@ 0x58
 800b476:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800b47a:	f240 8387 	bls.w	800bb8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b47e:	ed94 7a07 	vldr	s14, [r4, #28]
 800b482:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b486:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b48a:	f240 837f 	bls.w	800bb8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b48e:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800b492:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b496:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b49a:	f240 8377 	bls.w	800bb8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b49e:	6822      	ldr	r2, [r4, #0]
 800b4a0:	4bb1      	ldr	r3, [pc, #708]	@ (800b768 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800b4a2:	429a      	cmp	r2, r3
 800b4a4:	f2c0 8372 	blt.w	800bb8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b4a8:	49b0      	ldr	r1, [pc, #704]	@ (800b76c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800b4aa:	6963      	ldr	r3, [r4, #20]
 800b4ac:	428a      	cmp	r2, r1
 800b4ae:	f300 836d 	bgt.w	800bb8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b4b2:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800b4b6:	48ae      	ldr	r0, [pc, #696]	@ (800b770 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800b4b8:	33ff      	adds	r3, #255	@ 0xff
 800b4ba:	4283      	cmp	r3, r0
 800b4bc:	f200 8366 	bhi.w	800bb8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b4c0:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800b4c2:	4dac      	ldr	r5, [pc, #688]	@ (800b774 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800b4c4:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800b4c8:	33ff      	adds	r3, #255	@ 0xff
 800b4ca:	42ab      	cmp	r3, r5
 800b4cc:	f200 835e 	bhi.w	800bb8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b4d0:	6862      	ldr	r2, [r4, #4]
 800b4d2:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800b4d6:	33ff      	adds	r3, #255	@ 0xff
 800b4d8:	4283      	cmp	r3, r0
 800b4da:	f200 8357 	bhi.w	800bb8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b4de:	69a1      	ldr	r1, [r4, #24]
 800b4e0:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800b4e4:	33ff      	adds	r3, #255	@ 0xff
 800b4e6:	4283      	cmp	r3, r0
 800b4e8:	f200 8350 	bhi.w	800bb8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b4ec:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800b4ee:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800b4f2:	30ff      	adds	r0, #255	@ 0xff
 800b4f4:	42a8      	cmp	r0, r5
 800b4f6:	f200 8349 	bhi.w	800bb8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b4fa:	428a      	cmp	r2, r1
 800b4fc:	f280 8110 	bge.w	800b720 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800b500:	429a      	cmp	r2, r3
 800b502:	f300 8119 	bgt.w	800b738 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800b506:	4299      	cmp	r1, r3
 800b508:	f280 811d 	bge.w	800b746 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800b50c:	2502      	movs	r5, #2
 800b50e:	2701      	movs	r7, #1
 800b510:	46a9      	mov	r9, r5
 800b512:	46b8      	mov	r8, r7
 800b514:	f04f 0a00 	mov.w	sl, #0
 800b518:	4621      	mov	r1, r4
 800b51a:	a849      	add	r0, sp, #292	@ 0x124
 800b51c:	f002 fa30 	bl	800d980 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800b520:	4622      	mov	r2, r4
 800b522:	4653      	mov	r3, sl
 800b524:	a949      	add	r1, sp, #292	@ 0x124
 800b526:	f8cd 9000 	str.w	r9, [sp]
 800b52a:	a819      	add	r0, sp, #100	@ 0x64
 800b52c:	f002 fb58 	bl	800dbe0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b530:	4622      	mov	r2, r4
 800b532:	4653      	mov	r3, sl
 800b534:	a949      	add	r1, sp, #292	@ 0x124
 800b536:	f8cd 8000 	str.w	r8, [sp]
 800b53a:	a829      	add	r0, sp, #164	@ 0xa4
 800b53c:	f002 fb50 	bl	800dbe0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b540:	4643      	mov	r3, r8
 800b542:	4622      	mov	r2, r4
 800b544:	a949      	add	r1, sp, #292	@ 0x124
 800b546:	f8cd 9000 	str.w	r9, [sp]
 800b54a:	a839      	add	r0, sp, #228	@ 0xe4
 800b54c:	f002 fb48 	bl	800dbe0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b550:	42af      	cmp	r7, r5
 800b552:	bfb5      	itete	lt
 800b554:	2300      	movlt	r3, #0
 800b556:	2301      	movge	r3, #1
 800b558:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800b55a:	930e      	strge	r3, [sp, #56]	@ 0x38
 800b55c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800b55e:	e893 0003 	ldmia.w	r3, {r0, r1}
 800b562:	af12      	add	r7, sp, #72	@ 0x48
 800b564:	bfb9      	ittee	lt
 800b566:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800b568:	ac19      	addlt	r4, sp, #100	@ 0x64
 800b56a:	ad19      	addge	r5, sp, #100	@ 0x64
 800b56c:	ac29      	addge	r4, sp, #164	@ 0xa4
 800b56e:	e887 0003 	stmia.w	r7, {r0, r1}
 800b572:	b928      	cbnz	r0, 800b580 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800b574:	4b80      	ldr	r3, [pc, #512]	@ (800b778 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800b576:	6818      	ldr	r0, [r3, #0]
 800b578:	6803      	ldr	r3, [r0, #0]
 800b57a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b57c:	4798      	blx	r3
 800b57e:	6038      	str	r0, [r7, #0]
 800b580:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800b582:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800b586:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800b58a:	930c      	str	r3, [sp, #48]	@ 0x30
 800b58c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800b58e:	6963      	ldr	r3, [r4, #20]
 800b590:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800b592:	440b      	add	r3, r1
 800b594:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800b598:	4408      	add	r0, r1
 800b59a:	b200      	sxth	r0, r0
 800b59c:	4283      	cmp	r3, r0
 800b59e:	900d      	str	r0, [sp, #52]	@ 0x34
 800b5a0:	f280 80dd 	bge.w	800b75e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800b5a4:	428b      	cmp	r3, r1
 800b5a6:	da08      	bge.n	800b5ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b5a8:	2a00      	cmp	r2, #0
 800b5aa:	dd06      	ble.n	800b5ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b5ac:	1acb      	subs	r3, r1, r3
 800b5ae:	429a      	cmp	r2, r3
 800b5b0:	f2c0 80e4 	blt.w	800b77c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800b5b4:	2b00      	cmp	r3, #0
 800b5b6:	f300 80e2 	bgt.w	800b77e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800b5ba:	6967      	ldr	r7, [r4, #20]
 800b5bc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800b5be:	443b      	add	r3, r7
 800b5c0:	461f      	mov	r7, r3
 800b5c2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800b5c4:	1bdf      	subs	r7, r3, r7
 800b5c6:	4297      	cmp	r7, r2
 800b5c8:	bfa8      	it	ge
 800b5ca:	4617      	movge	r7, r2
 800b5cc:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800b5d0:	2f00      	cmp	r7, #0
 800b5d2:	f340 8166 	ble.w	800b8a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800b5d6:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800b5d8:	6829      	ldr	r1, [r5, #0]
 800b5da:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b5de:	f9bb 3000 	ldrsh.w	r3, [fp]
 800b5e2:	6820      	ldr	r0, [r4, #0]
 800b5e4:	4411      	add	r1, r2
 800b5e6:	4299      	cmp	r1, r3
 800b5e8:	dd1a      	ble.n	800b620 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800b5ea:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800b5ee:	440b      	add	r3, r1
 800b5f0:	4402      	add	r2, r0
 800b5f2:	b21b      	sxth	r3, r3
 800b5f4:	429a      	cmp	r2, r3
 800b5f6:	dc13      	bgt.n	800b620 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800b5f8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b5fa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800b5fc:	681b      	ldr	r3, [r3, #0]
 800b5fe:	9206      	str	r2, [sp, #24]
 800b600:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800b602:	9205      	str	r2, [sp, #20]
 800b604:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800b606:	9500      	str	r5, [sp, #0]
 800b608:	e9cd b203 	strd	fp, r2, [sp, #12]
 800b60c:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800b60e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800b610:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800b614:	a912      	add	r1, sp, #72	@ 0x48
 800b616:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800b61a:	aa49      	add	r2, sp, #292	@ 0x124
 800b61c:	4623      	mov	r3, r4
 800b61e:	47c8      	blx	r9
 800b620:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b624:	441a      	add	r2, r3
 800b626:	6963      	ldr	r3, [r4, #20]
 800b628:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800b62c:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800b630:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800b634:	68a1      	ldr	r1, [r4, #8]
 800b636:	ed94 6a08 	vldr	s12, [r4, #32]
 800b63a:	6022      	str	r2, [r4, #0]
 800b63c:	3301      	adds	r3, #1
 800b63e:	6163      	str	r3, [r4, #20]
 800b640:	69a3      	ldr	r3, [r4, #24]
 800b642:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b646:	3b01      	subs	r3, #1
 800b648:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800b64c:	61a3      	str	r3, [r4, #24]
 800b64e:	6923      	ldr	r3, [r4, #16]
 800b650:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800b654:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b658:	edd4 6a07 	vldr	s13, [r4, #28]
 800b65c:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800b660:	440b      	add	r3, r1
 800b662:	68e1      	ldr	r1, [r4, #12]
 800b664:	6123      	str	r3, [r4, #16]
 800b666:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b66a:	428b      	cmp	r3, r1
 800b66c:	edc4 6a07 	vstr	s13, [r4, #28]
 800b670:	db15      	blt.n	800b69e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800b672:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800b676:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b67a:	3201      	adds	r2, #1
 800b67c:	edc4 6a07 	vstr	s13, [r4, #28]
 800b680:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800b684:	6022      	str	r2, [r4, #0]
 800b686:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b68a:	1a5b      	subs	r3, r3, r1
 800b68c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800b690:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800b694:	6123      	str	r3, [r4, #16]
 800b696:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b69a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800b69e:	e9d5 2300 	ldrd	r2, r3, [r5]
 800b6a2:	441a      	add	r2, r3
 800b6a4:	696b      	ldr	r3, [r5, #20]
 800b6a6:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800b6aa:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800b6ae:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800b6b2:	68a9      	ldr	r1, [r5, #8]
 800b6b4:	ed95 6a08 	vldr	s12, [r5, #32]
 800b6b8:	602a      	str	r2, [r5, #0]
 800b6ba:	3301      	adds	r3, #1
 800b6bc:	616b      	str	r3, [r5, #20]
 800b6be:	69ab      	ldr	r3, [r5, #24]
 800b6c0:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b6c4:	3b01      	subs	r3, #1
 800b6c6:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800b6ca:	61ab      	str	r3, [r5, #24]
 800b6cc:	692b      	ldr	r3, [r5, #16]
 800b6ce:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800b6d2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b6d6:	edd5 6a07 	vldr	s13, [r5, #28]
 800b6da:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800b6de:	440b      	add	r3, r1
 800b6e0:	68e9      	ldr	r1, [r5, #12]
 800b6e2:	612b      	str	r3, [r5, #16]
 800b6e4:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b6e8:	428b      	cmp	r3, r1
 800b6ea:	edc5 6a07 	vstr	s13, [r5, #28]
 800b6ee:	db15      	blt.n	800b71c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800b6f0:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800b6f4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b6f8:	3201      	adds	r2, #1
 800b6fa:	edc5 6a07 	vstr	s13, [r5, #28]
 800b6fe:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800b702:	602a      	str	r2, [r5, #0]
 800b704:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b708:	1a5b      	subs	r3, r3, r1
 800b70a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800b70e:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800b712:	612b      	str	r3, [r5, #16]
 800b714:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b718:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800b71c:	3f01      	subs	r7, #1
 800b71e:	e757      	b.n	800b5d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800b720:	4299      	cmp	r1, r3
 800b722:	dc13      	bgt.n	800b74c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800b724:	429a      	cmp	r2, r3
 800b726:	da14      	bge.n	800b752 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800b728:	2502      	movs	r5, #2
 800b72a:	2703      	movs	r7, #3
 800b72c:	46a9      	mov	r9, r5
 800b72e:	f04f 0800 	mov.w	r8, #0
 800b732:	f04f 0a01 	mov.w	sl, #1
 800b736:	e6ef      	b.n	800b518 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800b738:	2501      	movs	r5, #1
 800b73a:	2700      	movs	r7, #0
 800b73c:	46a9      	mov	r9, r5
 800b73e:	46b8      	mov	r8, r7
 800b740:	f04f 0a02 	mov.w	sl, #2
 800b744:	e6e8      	b.n	800b518 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800b746:	2501      	movs	r5, #1
 800b748:	2702      	movs	r7, #2
 800b74a:	e6e1      	b.n	800b510 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800b74c:	2500      	movs	r5, #0
 800b74e:	2701      	movs	r7, #1
 800b750:	e7f4      	b.n	800b73c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800b752:	2702      	movs	r7, #2
 800b754:	2503      	movs	r5, #3
 800b756:	f04f 0900 	mov.w	r9, #0
 800b75a:	46b8      	mov	r8, r7
 800b75c:	e7e9      	b.n	800b732 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800b75e:	4613      	mov	r3, r2
 800b760:	e728      	b.n	800b5b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800b762:	bf00      	nop
 800b764:	200137f8 	.word	0x200137f8
 800b768:	fffd8f01 	.word	0xfffd8f01
 800b76c:	00027100 	.word	0x00027100
 800b770:	0004e1ff 	.word	0x0004e1ff
 800b774:	0004e1fe 	.word	0x0004e1fe
 800b778:	20013800 	.word	0x20013800
 800b77c:	4613      	mov	r3, r2
 800b77e:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800b780:	9111      	str	r1, [sp, #68]	@ 0x44
 800b782:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800b786:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800b78a:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800b78c:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800b790:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800b794:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800b798:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800b79c:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800b7a0:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800b7a4:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800b7a8:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800b7ac:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800b7b0:	469e      	mov	lr, r3
 800b7b2:	469c      	mov	ip, r3
 800b7b4:	f04f 0900 	mov.w	r9, #0
 800b7b8:	f1bc 0f00 	cmp.w	ip, #0
 800b7bc:	d147      	bne.n	800b84e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800b7be:	eb03 0c07 	add.w	ip, r3, r7
 800b7c2:	1ad7      	subs	r7, r2, r3
 800b7c4:	f1b9 0f00 	cmp.w	r9, #0
 800b7c8:	d009      	beq.n	800b7de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800b7ca:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800b7ce:	9029      	str	r0, [sp, #164]	@ 0xa4
 800b7d0:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800b7d4:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800b7d8:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800b7dc:	912d      	str	r1, [sp, #180]	@ 0xb4
 800b7de:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800b7e0:	9111      	str	r1, [sp, #68]	@ 0x44
 800b7e2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800b7e6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800b7ea:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800b7ee:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800b7f2:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800b7f6:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800b7fa:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800b7fe:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800b802:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800b806:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800b80a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800b80e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800b812:	f04f 0800 	mov.w	r8, #0
 800b816:	f1be 0f00 	cmp.w	lr, #0
 800b81a:	d031      	beq.n	800b880 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800b81c:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800b81e:	4431      	add	r1, r6
 800b820:	4549      	cmp	r1, r9
 800b822:	4450      	add	r0, sl
 800b824:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800b828:	ee37 7a04 	vadd.f32	s14, s14, s8
 800b82c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800b830:	db08      	blt.n	800b844 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800b832:	ee77 7a85 	vadd.f32	s15, s15, s10
 800b836:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800b83a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800b83e:	3001      	adds	r0, #1
 800b840:	eba1 0109 	sub.w	r1, r1, r9
 800b844:	f10e 3eff 	add.w	lr, lr, #4294967295
 800b848:	f04f 0801 	mov.w	r8, #1
 800b84c:	e7e3      	b.n	800b816 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800b84e:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800b850:	4431      	add	r1, r6
 800b852:	4541      	cmp	r1, r8
 800b854:	4450      	add	r0, sl
 800b856:	ee37 7a24 	vadd.f32	s14, s14, s9
 800b85a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800b85e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800b862:	db08      	blt.n	800b876 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800b864:	ee76 6a85 	vadd.f32	s13, s13, s10
 800b868:	ee37 7a25 	vadd.f32	s14, s14, s11
 800b86c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800b870:	3001      	adds	r0, #1
 800b872:	eba1 0108 	sub.w	r1, r1, r8
 800b876:	f10c 3cff 	add.w	ip, ip, #4294967295
 800b87a:	f04f 0901 	mov.w	r9, #1
 800b87e:	e79b      	b.n	800b7b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800b880:	449c      	add	ip, r3
 800b882:	1aff      	subs	r7, r7, r3
 800b884:	f1b8 0f00 	cmp.w	r8, #0
 800b888:	d009      	beq.n	800b89e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800b88a:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800b88e:	9019      	str	r0, [sp, #100]	@ 0x64
 800b890:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800b894:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800b898:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800b89c:	911d      	str	r1, [sp, #116]	@ 0x74
 800b89e:	1ad2      	subs	r2, r2, r3
 800b8a0:	e68b      	b.n	800b5ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b8a2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800b8a4:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800b8a6:	2b00      	cmp	r3, #0
 800b8a8:	f000 80d1 	beq.w	800ba4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800b8ac:	ad19      	add	r5, sp, #100	@ 0x64
 800b8ae:	ac39      	add	r4, sp, #228	@ 0xe4
 800b8b0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800b8b2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800b8b6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800b8ba:	930c      	str	r3, [sp, #48]	@ 0x30
 800b8bc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800b8be:	6963      	ldr	r3, [r4, #20]
 800b8c0:	440b      	add	r3, r1
 800b8c2:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800b8c6:	4408      	add	r0, r1
 800b8c8:	b200      	sxth	r0, r0
 800b8ca:	4283      	cmp	r3, r0
 800b8cc:	900d      	str	r0, [sp, #52]	@ 0x34
 800b8ce:	f280 80c1 	bge.w	800ba54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800b8d2:	428b      	cmp	r3, r1
 800b8d4:	da08      	bge.n	800b8e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800b8d6:	2a00      	cmp	r2, #0
 800b8d8:	dd06      	ble.n	800b8e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800b8da:	1acb      	subs	r3, r1, r3
 800b8dc:	429a      	cmp	r2, r3
 800b8de:	f2c0 80bb 	blt.w	800ba58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800b8e2:	2b00      	cmp	r3, #0
 800b8e4:	f300 80b9 	bgt.w	800ba5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800b8e8:	6967      	ldr	r7, [r4, #20]
 800b8ea:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800b8ec:	443b      	add	r3, r7
 800b8ee:	461f      	mov	r7, r3
 800b8f0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800b8f2:	1bdf      	subs	r7, r3, r7
 800b8f4:	4297      	cmp	r7, r2
 800b8f6:	bfa8      	it	ge
 800b8f8:	4617      	movge	r7, r2
 800b8fa:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800b8fe:	2f00      	cmp	r7, #0
 800b900:	f340 813c 	ble.w	800bb7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800b904:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800b906:	6829      	ldr	r1, [r5, #0]
 800b908:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b90c:	f9bb 3000 	ldrsh.w	r3, [fp]
 800b910:	6820      	ldr	r0, [r4, #0]
 800b912:	4411      	add	r1, r2
 800b914:	4299      	cmp	r1, r3
 800b916:	dd1a      	ble.n	800b94e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800b918:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800b91c:	440b      	add	r3, r1
 800b91e:	4402      	add	r2, r0
 800b920:	b21b      	sxth	r3, r3
 800b922:	429a      	cmp	r2, r3
 800b924:	dc13      	bgt.n	800b94e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800b926:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b928:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800b92a:	681b      	ldr	r3, [r3, #0]
 800b92c:	9206      	str	r2, [sp, #24]
 800b92e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800b930:	9205      	str	r2, [sp, #20]
 800b932:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800b934:	9500      	str	r5, [sp, #0]
 800b936:	e9cd b203 	strd	fp, r2, [sp, #12]
 800b93a:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800b93c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800b93e:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800b942:	a912      	add	r1, sp, #72	@ 0x48
 800b944:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800b948:	aa49      	add	r2, sp, #292	@ 0x124
 800b94a:	4623      	mov	r3, r4
 800b94c:	47c8      	blx	r9
 800b94e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b952:	441a      	add	r2, r3
 800b954:	6963      	ldr	r3, [r4, #20]
 800b956:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800b95a:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800b95e:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800b962:	68a1      	ldr	r1, [r4, #8]
 800b964:	ed94 6a08 	vldr	s12, [r4, #32]
 800b968:	6022      	str	r2, [r4, #0]
 800b96a:	3301      	adds	r3, #1
 800b96c:	6163      	str	r3, [r4, #20]
 800b96e:	69a3      	ldr	r3, [r4, #24]
 800b970:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b974:	3b01      	subs	r3, #1
 800b976:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800b97a:	61a3      	str	r3, [r4, #24]
 800b97c:	6923      	ldr	r3, [r4, #16]
 800b97e:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800b982:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b986:	edd4 6a07 	vldr	s13, [r4, #28]
 800b98a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800b98e:	440b      	add	r3, r1
 800b990:	68e1      	ldr	r1, [r4, #12]
 800b992:	6123      	str	r3, [r4, #16]
 800b994:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b998:	428b      	cmp	r3, r1
 800b99a:	edc4 6a07 	vstr	s13, [r4, #28]
 800b99e:	db15      	blt.n	800b9cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800b9a0:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800b9a4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b9a8:	3201      	adds	r2, #1
 800b9aa:	edc4 6a07 	vstr	s13, [r4, #28]
 800b9ae:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800b9b2:	6022      	str	r2, [r4, #0]
 800b9b4:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b9b8:	1a5b      	subs	r3, r3, r1
 800b9ba:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800b9be:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800b9c2:	6123      	str	r3, [r4, #16]
 800b9c4:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b9c8:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800b9cc:	e9d5 2300 	ldrd	r2, r3, [r5]
 800b9d0:	441a      	add	r2, r3
 800b9d2:	696b      	ldr	r3, [r5, #20]
 800b9d4:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800b9d8:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800b9dc:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800b9e0:	68a9      	ldr	r1, [r5, #8]
 800b9e2:	ed95 6a08 	vldr	s12, [r5, #32]
 800b9e6:	602a      	str	r2, [r5, #0]
 800b9e8:	3301      	adds	r3, #1
 800b9ea:	616b      	str	r3, [r5, #20]
 800b9ec:	69ab      	ldr	r3, [r5, #24]
 800b9ee:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b9f2:	3b01      	subs	r3, #1
 800b9f4:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800b9f8:	61ab      	str	r3, [r5, #24]
 800b9fa:	692b      	ldr	r3, [r5, #16]
 800b9fc:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800ba00:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ba04:	edd5 6a07 	vldr	s13, [r5, #28]
 800ba08:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800ba0c:	440b      	add	r3, r1
 800ba0e:	68e9      	ldr	r1, [r5, #12]
 800ba10:	612b      	str	r3, [r5, #16]
 800ba12:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ba16:	428b      	cmp	r3, r1
 800ba18:	edc5 6a07 	vstr	s13, [r5, #28]
 800ba1c:	db15      	blt.n	800ba4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800ba1e:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800ba22:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ba26:	3201      	adds	r2, #1
 800ba28:	edc5 6a07 	vstr	s13, [r5, #28]
 800ba2c:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800ba30:	602a      	str	r2, [r5, #0]
 800ba32:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ba36:	1a5b      	subs	r3, r3, r1
 800ba38:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800ba3c:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800ba40:	612b      	str	r3, [r5, #16]
 800ba42:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ba46:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800ba4a:	3f01      	subs	r7, #1
 800ba4c:	e757      	b.n	800b8fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800ba4e:	ad39      	add	r5, sp, #228	@ 0xe4
 800ba50:	ac19      	add	r4, sp, #100	@ 0x64
 800ba52:	e72d      	b.n	800b8b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800ba54:	4613      	mov	r3, r2
 800ba56:	e744      	b.n	800b8e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800ba58:	4613      	mov	r3, r2
 800ba5a:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800ba5e:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800ba60:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800ba64:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800ba68:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800ba6c:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800ba70:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800ba74:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800ba78:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800ba7c:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800ba7e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800ba82:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800ba86:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800ba8a:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800ba8e:	960e      	str	r6, [sp, #56]	@ 0x38
 800ba90:	469e      	mov	lr, r3
 800ba92:	461f      	mov	r7, r3
 800ba94:	f04f 0900 	mov.w	r9, #0
 800ba98:	2f00      	cmp	r7, #0
 800ba9a:	d146      	bne.n	800bb2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800ba9c:	449c      	add	ip, r3
 800ba9e:	1ad7      	subs	r7, r2, r3
 800baa0:	f1b9 0f00 	cmp.w	r9, #0
 800baa4:	d009      	beq.n	800baba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800baa6:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800baaa:	9039      	str	r0, [sp, #228]	@ 0xe4
 800baac:	913d      	str	r1, [sp, #244]	@ 0xf4
 800baae:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800bab2:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800bab6:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800baba:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800babc:	910e      	str	r1, [sp, #56]	@ 0x38
 800babe:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800bac2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800bac6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800baca:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800bace:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800bad2:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800bad6:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800bada:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800bade:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800bae2:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800bae6:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800baea:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800baee:	f04f 0800 	mov.w	r8, #0
 800baf2:	f1be 0f00 	cmp.w	lr, #0
 800baf6:	d030      	beq.n	800bb5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800baf8:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800bafa:	4431      	add	r1, r6
 800bafc:	4549      	cmp	r1, r9
 800bafe:	4450      	add	r0, sl
 800bb00:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800bb04:	ee37 7a04 	vadd.f32	s14, s14, s8
 800bb08:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800bb0c:	db08      	blt.n	800bb20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800bb0e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800bb12:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800bb16:	ee37 7a06 	vadd.f32	s14, s14, s12
 800bb1a:	3001      	adds	r0, #1
 800bb1c:	eba1 0109 	sub.w	r1, r1, r9
 800bb20:	f10e 3eff 	add.w	lr, lr, #4294967295
 800bb24:	f04f 0801 	mov.w	r8, #1
 800bb28:	e7e3      	b.n	800baf2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800bb2a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800bb2c:	4431      	add	r1, r6
 800bb2e:	4541      	cmp	r1, r8
 800bb30:	4450      	add	r0, sl
 800bb32:	ee37 7a24 	vadd.f32	s14, s14, s9
 800bb36:	ee77 7a84 	vadd.f32	s15, s15, s8
 800bb3a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800bb3e:	db08      	blt.n	800bb52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800bb40:	ee76 6a85 	vadd.f32	s13, s13, s10
 800bb44:	ee37 7a25 	vadd.f32	s14, s14, s11
 800bb48:	ee77 7a86 	vadd.f32	s15, s15, s12
 800bb4c:	3001      	adds	r0, #1
 800bb4e:	eba1 0108 	sub.w	r1, r1, r8
 800bb52:	3f01      	subs	r7, #1
 800bb54:	f04f 0901 	mov.w	r9, #1
 800bb58:	e79e      	b.n	800ba98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800bb5a:	449c      	add	ip, r3
 800bb5c:	1aff      	subs	r7, r7, r3
 800bb5e:	f1b8 0f00 	cmp.w	r8, #0
 800bb62:	d009      	beq.n	800bb78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800bb64:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800bb68:	9019      	str	r0, [sp, #100]	@ 0x64
 800bb6a:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800bb6e:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800bb72:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800bb76:	911d      	str	r1, [sp, #116]	@ 0x74
 800bb78:	1ad2      	subs	r2, r2, r3
 800bb7a:	e6b5      	b.n	800b8e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800bb7c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800bb7e:	681b      	ldr	r3, [r3, #0]
 800bb80:	b923      	cbnz	r3, 800bb8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800bb82:	4b04      	ldr	r3, [pc, #16]	@ (800bb94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800bb84:	6818      	ldr	r0, [r3, #0]
 800bb86:	6803      	ldr	r3, [r0, #0]
 800bb88:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bb8a:	4798      	blx	r3
 800bb8c:	b05b      	add	sp, #364	@ 0x16c
 800bb8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bb92:	bf00      	nop
 800bb94:	20013800 	.word	0x20013800

0800bb98 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800bb98:	2b03      	cmp	r3, #3
 800bb9a:	d818      	bhi.n	800bbce <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800bb9c:	e8df f003 	tbb	[pc, r3]
 800bba0:	130d0602 	.word	0x130d0602
 800bba4:	f9b0 2000 	ldrsh.w	r2, [r0]
 800bba8:	1850      	adds	r0, r2, r1
 800bbaa:	4770      	bx	lr
 800bbac:	8803      	ldrh	r3, [r0, #0]
 800bbae:	8880      	ldrh	r0, [r0, #4]
 800bbb0:	4418      	add	r0, r3
 800bbb2:	b200      	sxth	r0, r0
 800bbb4:	1a80      	subs	r0, r0, r2
 800bbb6:	3801      	subs	r0, #1
 800bbb8:	4770      	bx	lr
 800bbba:	8803      	ldrh	r3, [r0, #0]
 800bbbc:	8880      	ldrh	r0, [r0, #4]
 800bbbe:	4418      	add	r0, r3
 800bbc0:	b200      	sxth	r0, r0
 800bbc2:	1a40      	subs	r0, r0, r1
 800bbc4:	e7f7      	b.n	800bbb6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800bbc6:	f9b0 0000 	ldrsh.w	r0, [r0]
 800bbca:	4410      	add	r0, r2
 800bbcc:	4770      	bx	lr
 800bbce:	2000      	movs	r0, #0
 800bbd0:	4770      	bx	lr

0800bbd2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800bbd2:	2b03      	cmp	r3, #3
 800bbd4:	d817      	bhi.n	800bc06 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800bbd6:	e8df f003 	tbb	[pc, r3]
 800bbda:	0602      	.short	0x0602
 800bbdc:	1009      	.short	0x1009
 800bbde:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800bbe2:	1850      	adds	r0, r2, r1
 800bbe4:	4770      	bx	lr
 800bbe6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800bbea:	e7fa      	b.n	800bbe2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800bbec:	8843      	ldrh	r3, [r0, #2]
 800bbee:	88c0      	ldrh	r0, [r0, #6]
 800bbf0:	4418      	add	r0, r3
 800bbf2:	b200      	sxth	r0, r0
 800bbf4:	1a80      	subs	r0, r0, r2
 800bbf6:	3801      	subs	r0, #1
 800bbf8:	4770      	bx	lr
 800bbfa:	8843      	ldrh	r3, [r0, #2]
 800bbfc:	88c0      	ldrh	r0, [r0, #6]
 800bbfe:	4418      	add	r0, r3
 800bc00:	b200      	sxth	r0, r0
 800bc02:	1a40      	subs	r0, r0, r1
 800bc04:	e7f7      	b.n	800bbf6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800bc06:	2000      	movs	r0, #0
 800bc08:	4770      	bx	lr
	...

0800bc0c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800bc0c:	4b01      	ldr	r3, [pc, #4]	@ (800bc14 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800bc0e:	2200      	movs	r2, #0
 800bc10:	601a      	str	r2, [r3, #0]
 800bc12:	4770      	bx	lr
 800bc14:	20013808 	.word	0x20013808

0800bc18 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800bc18:	4603      	mov	r3, r0
 800bc1a:	b1c8      	cbz	r0, 800bc50 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800bc1c:	0c02      	lsrs	r2, r0, #16
 800bc1e:	0412      	lsls	r2, r2, #16
 800bc20:	b9a2      	cbnz	r2, 800bc4c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800bc22:	0403      	lsls	r3, r0, #16
 800bc24:	2010      	movs	r0, #16
 800bc26:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800bc2a:	bf04      	itt	eq
 800bc2c:	021b      	lsleq	r3, r3, #8
 800bc2e:	3008      	addeq	r0, #8
 800bc30:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800bc34:	bf04      	itt	eq
 800bc36:	011b      	lsleq	r3, r3, #4
 800bc38:	3004      	addeq	r0, #4
 800bc3a:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800bc3e:	bf04      	itt	eq
 800bc40:	009b      	lsleq	r3, r3, #2
 800bc42:	3002      	addeq	r0, #2
 800bc44:	2b00      	cmp	r3, #0
 800bc46:	db04      	blt.n	800bc52 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800bc48:	3001      	adds	r0, #1
 800bc4a:	4770      	bx	lr
 800bc4c:	2000      	movs	r0, #0
 800bc4e:	e7ea      	b.n	800bc26 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800bc50:	2020      	movs	r0, #32
 800bc52:	4770      	bx	lr

0800bc54 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800bc54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bc58:	b087      	sub	sp, #28
 800bc5a:	460d      	mov	r5, r1
 800bc5c:	4616      	mov	r6, r2
 800bc5e:	4698      	mov	r8, r3
 800bc60:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800bc64:	4601      	mov	r1, r0
 800bc66:	b120      	cbz	r0, 800bc72 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800bc68:	b11a      	cbz	r2, 800bc72 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800bc6a:	2d1f      	cmp	r5, #31
 800bc6c:	d801      	bhi.n	800bc72 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800bc6e:	2b1f      	cmp	r3, #31
 800bc70:	d904      	bls.n	800bc7c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800bc72:	2000      	movs	r0, #0
 800bc74:	6038      	str	r0, [r7, #0]
 800bc76:	b007      	add	sp, #28
 800bc78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bc7c:	b97d      	cbnz	r5, 800bc9e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800bc7e:	b143      	cbz	r3, 800bc92 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800bc80:	4602      	mov	r2, r0
 800bc82:	e9cd 4700 	strd	r4, r7, [sp]
 800bc86:	462b      	mov	r3, r5
 800bc88:	4641      	mov	r1, r8
 800bc8a:	4630      	mov	r0, r6
 800bc8c:	f7ff ffe2 	bl	800bc54 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800bc90:	e7f1      	b.n	800bc76 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800bc92:	f04f 33ff 	mov.w	r3, #4294967295
 800bc96:	603b      	str	r3, [r7, #0]
 800bc98:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800bc9c:	e7eb      	b.n	800bc76 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800bc9e:	fa32 fa05 	lsrs.w	sl, r2, r5
 800bca2:	d106      	bne.n	800bcb2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800bca4:	4346      	muls	r6, r0
 800bca6:	fbb6 f0f4 	udiv	r0, r6, r4
 800bcaa:	fb04 6610 	mls	r6, r4, r0, r6
 800bcae:	603e      	str	r6, [r7, #0]
 800bcb0:	e7e1      	b.n	800bc76 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800bcb2:	2201      	movs	r2, #1
 800bcb4:	40aa      	lsls	r2, r5
 800bcb6:	3a01      	subs	r2, #1
 800bcb8:	4016      	ands	r6, r2
 800bcba:	fa00 fb05 	lsl.w	fp, r0, r5
 800bcbe:	4630      	mov	r0, r6
 800bcc0:	fbbb f9f4 	udiv	r9, fp, r4
 800bcc4:	fb0a f309 	mul.w	r3, sl, r9
 800bcc8:	9303      	str	r3, [sp, #12]
 800bcca:	f7ff ffa5 	bl	800bc18 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800bcce:	462b      	mov	r3, r5
 800bcd0:	460a      	mov	r2, r1
 800bcd2:	e9cd 4700 	strd	r4, r7, [sp]
 800bcd6:	4601      	mov	r1, r0
 800bcd8:	4630      	mov	r0, r6
 800bcda:	f7ff ffbb 	bl	800bc54 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800bcde:	fb04 b919 	mls	r9, r4, r9, fp
 800bce2:	4606      	mov	r6, r0
 800bce4:	4648      	mov	r0, r9
 800bce6:	eb05 0108 	add.w	r1, r5, r8
 800bcea:	f7ff ff95 	bl	800bc18 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800bcee:	ab05      	add	r3, sp, #20
 800bcf0:	e9cd 4300 	strd	r4, r3, [sp]
 800bcf4:	464a      	mov	r2, r9
 800bcf6:	4603      	mov	r3, r0
 800bcf8:	4650      	mov	r0, sl
 800bcfa:	f7ff ffab 	bl	800bc54 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800bcfe:	6839      	ldr	r1, [r7, #0]
 800bd00:	9a05      	ldr	r2, [sp, #20]
 800bd02:	9b03      	ldr	r3, [sp, #12]
 800bd04:	4411      	add	r1, r2
 800bd06:	fbb1 f2f4 	udiv	r2, r1, r4
 800bd0a:	18d3      	adds	r3, r2, r3
 800bd0c:	441e      	add	r6, r3
 800bd0e:	fb04 1412 	mls	r4, r4, r2, r1
 800bd12:	4430      	add	r0, r6
 800bd14:	603c      	str	r4, [r7, #0]
 800bd16:	e7ae      	b.n	800bc76 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800bd18 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800bd18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bd1c:	b085      	sub	sp, #20
 800bd1e:	f1b0 0900 	subs.w	r9, r0, #0
 800bd22:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800bd24:	461d      	mov	r5, r3
 800bd26:	bfbf      	itttt	lt
 800bd28:	6823      	ldrlt	r3, [r4, #0]
 800bd2a:	425b      	neglt	r3, r3
 800bd2c:	f1c9 0900 	rsblt	r9, r9, #0
 800bd30:	6023      	strlt	r3, [r4, #0]
 800bd32:	bfb4      	ite	lt
 800bd34:	f04f 36ff 	movlt.w	r6, #4294967295
 800bd38:	2601      	movge	r6, #1
 800bd3a:	2a00      	cmp	r2, #0
 800bd3c:	4617      	mov	r7, r2
 800bd3e:	da04      	bge.n	800bd4a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800bd40:	6823      	ldr	r3, [r4, #0]
 800bd42:	425b      	negs	r3, r3
 800bd44:	4257      	negs	r7, r2
 800bd46:	4276      	negs	r6, r6
 800bd48:	6023      	str	r3, [r4, #0]
 800bd4a:	2d00      	cmp	r5, #0
 800bd4c:	4638      	mov	r0, r7
 800bd4e:	bfba      	itte	lt
 800bd50:	426d      	neglt	r5, r5
 800bd52:	f04f 38ff 	movlt.w	r8, #4294967295
 800bd56:	f04f 0801 	movge.w	r8, #1
 800bd5a:	f7ff ff5d 	bl	800bc18 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800bd5e:	ab03      	add	r3, sp, #12
 800bd60:	e9cd 5300 	strd	r5, r3, [sp]
 800bd64:	463a      	mov	r2, r7
 800bd66:	4603      	mov	r3, r0
 800bd68:	4648      	mov	r0, r9
 800bd6a:	f7ff ff73 	bl	800bc54 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800bd6e:	6823      	ldr	r3, [r4, #0]
 800bd70:	9a03      	ldr	r2, [sp, #12]
 800bd72:	4546      	cmp	r6, r8
 800bd74:	441a      	add	r2, r3
 800bd76:	fb92 f3f5 	sdiv	r3, r2, r5
 800bd7a:	4418      	add	r0, r3
 800bd7c:	bf18      	it	ne
 800bd7e:	4240      	negne	r0, r0
 800bd80:	fb05 2313 	mls	r3, r5, r3, r2
 800bd84:	1c72      	adds	r2, r6, #1
 800bd86:	6023      	str	r3, [r4, #0]
 800bd88:	d105      	bne.n	800bd96 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800bd8a:	2b00      	cmp	r3, #0
 800bd8c:	f1c3 0200 	rsb	r2, r3, #0
 800bd90:	db0b      	blt.n	800bdaa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800bd92:	6022      	str	r2, [r4, #0]
 800bd94:	e006      	b.n	800bda4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800bd96:	2e01      	cmp	r6, #1
 800bd98:	d104      	bne.n	800bda4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800bd9a:	2b00      	cmp	r3, #0
 800bd9c:	da02      	bge.n	800bda4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800bd9e:	442b      	add	r3, r5
 800bda0:	3801      	subs	r0, #1
 800bda2:	6023      	str	r3, [r4, #0]
 800bda4:	b005      	add	sp, #20
 800bda6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bdaa:	3801      	subs	r0, #1
 800bdac:	1b52      	subs	r2, r2, r5
 800bdae:	e7f0      	b.n	800bd92 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800bdb0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800bdb0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800bdb4:	4c1c      	ldr	r4, [pc, #112]	@ (800be28 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800bdb6:	6807      	ldr	r7, [r0, #0]
 800bdb8:	69a3      	ldr	r3, [r4, #24]
 800bdba:	4605      	mov	r5, r0
 800bdbc:	b92b      	cbnz	r3, 800bdca <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800bdbe:	6840      	ldr	r0, [r0, #4]
 800bdc0:	e9c5 7000 	strd	r7, r0, [r5]
 800bdc4:	b004      	add	sp, #16
 800bdc6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bdca:	68a2      	ldr	r2, [r4, #8]
 800bdcc:	6820      	ldr	r0, [r4, #0]
 800bdce:	ae04      	add	r6, sp, #16
 800bdd0:	f04f 0802 	mov.w	r8, #2
 800bdd4:	fb93 f1f8 	sdiv	r1, r3, r8
 800bdd8:	440a      	add	r2, r1
 800bdda:	f846 2d04 	str.w	r2, [r6, #-4]!
 800bdde:	69e1      	ldr	r1, [r4, #28]
 800bde0:	9600      	str	r6, [sp, #0]
 800bde2:	463a      	mov	r2, r7
 800bde4:	f7ff ff98 	bl	800bd18 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800bde8:	69a3      	ldr	r3, [r4, #24]
 800bdea:	686a      	ldr	r2, [r5, #4]
 800bdec:	6a21      	ldr	r1, [r4, #32]
 800bdee:	9600      	str	r6, [sp, #0]
 800bdf0:	4607      	mov	r7, r0
 800bdf2:	6860      	ldr	r0, [r4, #4]
 800bdf4:	f7ff ff90 	bl	800bd18 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800bdf8:	6962      	ldr	r2, [r4, #20]
 800bdfa:	69a3      	ldr	r3, [r4, #24]
 800bdfc:	fb93 f8f8 	sdiv	r8, r3, r8
 800be00:	4442      	add	r2, r8
 800be02:	9203      	str	r2, [sp, #12]
 800be04:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800be06:	682a      	ldr	r2, [r5, #0]
 800be08:	9600      	str	r6, [sp, #0]
 800be0a:	4407      	add	r7, r0
 800be0c:	68e0      	ldr	r0, [r4, #12]
 800be0e:	f7ff ff83 	bl	800bd18 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800be12:	9600      	str	r6, [sp, #0]
 800be14:	4680      	mov	r8, r0
 800be16:	69a3      	ldr	r3, [r4, #24]
 800be18:	686a      	ldr	r2, [r5, #4]
 800be1a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800be1c:	6920      	ldr	r0, [r4, #16]
 800be1e:	f7ff ff7b 	bl	800bd18 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800be22:	4440      	add	r0, r8
 800be24:	e7cc      	b.n	800bdc0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800be26:	bf00      	nop
 800be28:	2001380c 	.word	0x2001380c

0800be2c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800be2c:	4b07      	ldr	r3, [pc, #28]	@ (800be4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800be2e:	781b      	ldrb	r3, [r3, #0]
 800be30:	2b01      	cmp	r3, #1
 800be32:	d109      	bne.n	800be48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800be34:	f9b1 3000 	ldrsh.w	r3, [r1]
 800be38:	f9b0 2000 	ldrsh.w	r2, [r0]
 800be3c:	8003      	strh	r3, [r0, #0]
 800be3e:	4b04      	ldr	r3, [pc, #16]	@ (800be50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800be40:	881b      	ldrh	r3, [r3, #0]
 800be42:	3b01      	subs	r3, #1
 800be44:	1a9b      	subs	r3, r3, r2
 800be46:	800b      	strh	r3, [r1, #0]
 800be48:	4770      	bx	lr
 800be4a:	bf00      	nop
 800be4c:	200137f8 	.word	0x200137f8
 800be50:	200137f4 	.word	0x200137f4

0800be54 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800be54:	b510      	push	{r4, lr}
 800be56:	4b07      	ldr	r3, [pc, #28]	@ (800be74 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800be58:	781b      	ldrb	r3, [r3, #0]
 800be5a:	2b01      	cmp	r3, #1
 800be5c:	d108      	bne.n	800be70 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800be5e:	4b06      	ldr	r3, [pc, #24]	@ (800be78 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800be60:	880c      	ldrh	r4, [r1, #0]
 800be62:	881b      	ldrh	r3, [r3, #0]
 800be64:	f9b0 2000 	ldrsh.w	r2, [r0]
 800be68:	3b01      	subs	r3, #1
 800be6a:	1b1b      	subs	r3, r3, r4
 800be6c:	8003      	strh	r3, [r0, #0]
 800be6e:	800a      	strh	r2, [r1, #0]
 800be70:	bd10      	pop	{r4, pc}
 800be72:	bf00      	nop
 800be74:	200137f8 	.word	0x200137f8
 800be78:	200137f4 	.word	0x200137f4

0800be7c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800be7c:	b510      	push	{r4, lr}
 800be7e:	4b0a      	ldr	r3, [pc, #40]	@ (800bea8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800be80:	781b      	ldrb	r3, [r3, #0]
 800be82:	2b01      	cmp	r3, #1
 800be84:	d10e      	bne.n	800bea4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800be86:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800be8a:	8843      	ldrh	r3, [r0, #2]
 800be8c:	f9b0 4000 	ldrsh.w	r4, [r0]
 800be90:	8044      	strh	r4, [r0, #2]
 800be92:	18ca      	adds	r2, r1, r3
 800be94:	4b05      	ldr	r3, [pc, #20]	@ (800beac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800be96:	881b      	ldrh	r3, [r3, #0]
 800be98:	1a9b      	subs	r3, r3, r2
 800be9a:	8003      	strh	r3, [r0, #0]
 800be9c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800bea0:	80c3      	strh	r3, [r0, #6]
 800bea2:	8081      	strh	r1, [r0, #4]
 800bea4:	bd10      	pop	{r4, pc}
 800bea6:	bf00      	nop
 800bea8:	200137f8 	.word	0x200137f8
 800beac:	200137f4 	.word	0x200137f4

0800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800beb0:	4b08      	ldr	r3, [pc, #32]	@ (800bed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800beb2:	781b      	ldrb	r3, [r3, #0]
 800beb4:	2b01      	cmp	r3, #1
 800beb6:	d10c      	bne.n	800bed2 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800beb8:	8803      	ldrh	r3, [r0, #0]
 800beba:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800bebe:	8842      	ldrh	r2, [r0, #2]
 800bec0:	8002      	strh	r2, [r0, #0]
 800bec2:	185a      	adds	r2, r3, r1
 800bec4:	4b04      	ldr	r3, [pc, #16]	@ (800bed8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800bec6:	881b      	ldrh	r3, [r3, #0]
 800bec8:	1a9b      	subs	r3, r3, r2
 800beca:	8043      	strh	r3, [r0, #2]
 800becc:	88c3      	ldrh	r3, [r0, #6]
 800bece:	8083      	strh	r3, [r0, #4]
 800bed0:	80c1      	strh	r1, [r0, #6]
 800bed2:	4770      	bx	lr
 800bed4:	200137f8 	.word	0x200137f8
 800bed8:	200137f4 	.word	0x200137f4

0800bedc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800bedc:	b510      	push	{r4, lr}
 800bede:	4b07      	ldr	r3, [pc, #28]	@ (800befc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800bee0:	781b      	ldrb	r3, [r3, #0]
 800bee2:	2b01      	cmp	r3, #1
 800bee4:	d108      	bne.n	800bef8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800bee6:	f9b1 3000 	ldrsh.w	r3, [r1]
 800beea:	f9b0 4000 	ldrsh.w	r4, [r0]
 800beee:	8003      	strh	r3, [r0, #0]
 800bef0:	8893      	ldrh	r3, [r2, #4]
 800bef2:	3b01      	subs	r3, #1
 800bef4:	1b1b      	subs	r3, r3, r4
 800bef6:	800b      	strh	r3, [r1, #0]
 800bef8:	bd10      	pop	{r4, pc}
 800befa:	bf00      	nop
 800befc:	200137f8 	.word	0x200137f8

0800bf00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 800bf00:	4b0b      	ldr	r3, [pc, #44]	@ (800bf30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 800bf02:	781b      	ldrb	r3, [r3, #0]
 800bf04:	2b01      	cmp	r3, #1
 800bf06:	d111      	bne.n	800bf2c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 800bf08:	680b      	ldr	r3, [r1, #0]
 800bf0a:	ed90 7a00 	vldr	s14, [r0]
 800bf0e:	6003      	str	r3, [r0, #0]
 800bf10:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 800bf14:	eddf 6a07 	vldr	s13, [pc, #28]	@ 800bf34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 800bf18:	ee07 3a90 	vmov	s15, r3
 800bf1c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bf20:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800bf24:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800bf28:	edc1 7a00 	vstr	s15, [r1]
 800bf2c:	4770      	bx	lr
 800bf2e:	bf00      	nop
 800bf30:	200137f8 	.word	0x200137f8
 800bf34:	38d1b717 	.word	0x38d1b717

0800bf38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800bf38:	b510      	push	{r4, lr}
 800bf3a:	4b0a      	ldr	r3, [pc, #40]	@ (800bf64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800bf3c:	781b      	ldrb	r3, [r3, #0]
 800bf3e:	2b01      	cmp	r3, #1
 800bf40:	460a      	mov	r2, r1
 800bf42:	d10d      	bne.n	800bf60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800bf44:	8881      	ldrh	r1, [r0, #4]
 800bf46:	8803      	ldrh	r3, [r0, #0]
 800bf48:	440b      	add	r3, r1
 800bf4a:	4601      	mov	r1, r0
 800bf4c:	3b01      	subs	r3, #1
 800bf4e:	f821 3b02 	strh.w	r3, [r1], #2
 800bf52:	f7ff ffc3 	bl	800bedc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800bf56:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800bf5a:	88c2      	ldrh	r2, [r0, #6]
 800bf5c:	8082      	strh	r2, [r0, #4]
 800bf5e:	80c3      	strh	r3, [r0, #6]
 800bf60:	bd10      	pop	{r4, pc}
 800bf62:	bf00      	nop
 800bf64:	200137f8 	.word	0x200137f8

0800bf68 <_ZN8touchgfx11Application13requestRedrawEv>:
 800bf68:	4b06      	ldr	r3, [pc, #24]	@ (800bf84 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800bf6a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800bf6e:	4b06      	ldr	r3, [pc, #24]	@ (800bf88 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800bf70:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800bf74:	f9b3 3000 	ldrsh.w	r3, [r3]
 800bf78:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800bf7c:	2100      	movs	r1, #0
 800bf7e:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800bf82:	4770      	bx	lr
 800bf84:	200137f4 	.word	0x200137f4
 800bf88:	200137f6 	.word	0x200137f6

0800bf8c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800bf8c:	4b03      	ldr	r3, [pc, #12]	@ (800bf9c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800bf8e:	6818      	ldr	r0, [r3, #0]
 800bf90:	b110      	cbz	r0, 800bf98 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800bf92:	6803      	ldr	r3, [r0, #0]
 800bf94:	699b      	ldr	r3, [r3, #24]
 800bf96:	4718      	bx	r3
 800bf98:	4770      	bx	lr
 800bf9a:	bf00      	nop
 800bf9c:	2001383c 	.word	0x2001383c

0800bfa0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800bfa0:	4770      	bx	lr
	...

0800bfa4 <_ZN8touchgfx11Application4drawEv>:
 800bfa4:	b507      	push	{r0, r1, r2, lr}
 800bfa6:	4b09      	ldr	r3, [pc, #36]	@ (800bfcc <_ZN8touchgfx11Application4drawEv+0x28>)
 800bfa8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800bfac:	4b08      	ldr	r3, [pc, #32]	@ (800bfd0 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800bfae:	f8ad 2004 	strh.w	r2, [sp, #4]
 800bfb2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800bfb6:	f8ad 3006 	strh.w	r3, [sp, #6]
 800bfba:	6803      	ldr	r3, [r0, #0]
 800bfbc:	2100      	movs	r1, #0
 800bfbe:	9100      	str	r1, [sp, #0]
 800bfc0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800bfc2:	4669      	mov	r1, sp
 800bfc4:	4798      	blx	r3
 800bfc6:	b003      	add	sp, #12
 800bfc8:	f85d fb04 	ldr.w	pc, [sp], #4
 800bfcc:	200137f4 	.word	0x200137f4
 800bfd0:	200137f6 	.word	0x200137f6

0800bfd4 <_ZN8touchgfx11Application10invalidateEv>:
 800bfd4:	4b09      	ldr	r3, [pc, #36]	@ (800bffc <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800bfd6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800bfda:	4b09      	ldr	r3, [pc, #36]	@ (800c000 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800bfdc:	b082      	sub	sp, #8
 800bfde:	f9b3 3000 	ldrsh.w	r3, [r3]
 800bfe2:	f8ad 2004 	strh.w	r2, [sp, #4]
 800bfe6:	2100      	movs	r1, #0
 800bfe8:	f8ad 3006 	strh.w	r3, [sp, #6]
 800bfec:	9100      	str	r1, [sp, #0]
 800bfee:	6803      	ldr	r3, [r0, #0]
 800bff0:	aa02      	add	r2, sp, #8
 800bff2:	e912 0006 	ldmdb	r2, {r1, r2}
 800bff6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800bff8:	b002      	add	sp, #8
 800bffa:	4718      	bx	r3
 800bffc:	200137f4 	.word	0x200137f4
 800c000:	200137f6 	.word	0x200137f6

0800c004 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800c004:	4b03      	ldr	r3, [pc, #12]	@ (800c014 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800c006:	6818      	ldr	r0, [r3, #0]
 800c008:	b110      	cbz	r0, 800c010 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800c00a:	6803      	ldr	r3, [r0, #0]
 800c00c:	69db      	ldr	r3, [r3, #28]
 800c00e:	4718      	bx	r3
 800c010:	4770      	bx	lr
 800c012:	bf00      	nop
 800c014:	2001383c 	.word	0x2001383c

0800c018 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800c018:	4b03      	ldr	r3, [pc, #12]	@ (800c028 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800c01a:	6818      	ldr	r0, [r3, #0]
 800c01c:	b110      	cbz	r0, 800c024 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800c01e:	6803      	ldr	r3, [r0, #0]
 800c020:	6a1b      	ldr	r3, [r3, #32]
 800c022:	4718      	bx	r3
 800c024:	4770      	bx	lr
 800c026:	bf00      	nop
 800c028:	2001383c 	.word	0x2001383c

0800c02c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800c02c:	2300      	movs	r3, #0
 800c02e:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800c032:	4770      	bx	lr

0800c034 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800c034:	4b03      	ldr	r3, [pc, #12]	@ (800c044 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800c036:	6818      	ldr	r0, [r3, #0]
 800c038:	b110      	cbz	r0, 800c040 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800c03a:	6803      	ldr	r3, [r0, #0]
 800c03c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800c03e:	4718      	bx	r3
 800c040:	4770      	bx	lr
 800c042:	bf00      	nop
 800c044:	2001383c 	.word	0x2001383c

0800c048 <_ZN8touchgfx11ApplicationD1Ev>:
 800c048:	4770      	bx	lr

0800c04a <_ZN8touchgfx11ApplicationD0Ev>:
 800c04a:	b510      	push	{r4, lr}
 800c04c:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800c050:	4604      	mov	r4, r0
 800c052:	f00f fbdd 	bl	801b810 <_ZdlPvj>
 800c056:	4620      	mov	r0, r4
 800c058:	bd10      	pop	{r4, pc}

0800c05a <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800c05a:	b510      	push	{r4, lr}
 800c05c:	f9b1 4000 	ldrsh.w	r4, [r1]
 800c060:	888a      	ldrh	r2, [r1, #4]
 800c062:	f9b0 3000 	ldrsh.w	r3, [r0]
 800c066:	4422      	add	r2, r4
 800c068:	b212      	sxth	r2, r2
 800c06a:	4293      	cmp	r3, r2
 800c06c:	da15      	bge.n	800c09a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800c06e:	8882      	ldrh	r2, [r0, #4]
 800c070:	4413      	add	r3, r2
 800c072:	b21b      	sxth	r3, r3
 800c074:	429c      	cmp	r4, r3
 800c076:	da10      	bge.n	800c09a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800c078:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800c07c:	88c9      	ldrh	r1, [r1, #6]
 800c07e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800c082:	4419      	add	r1, r3
 800c084:	b209      	sxth	r1, r1
 800c086:	428a      	cmp	r2, r1
 800c088:	da07      	bge.n	800c09a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800c08a:	88c0      	ldrh	r0, [r0, #6]
 800c08c:	4410      	add	r0, r2
 800c08e:	b200      	sxth	r0, r0
 800c090:	4283      	cmp	r3, r0
 800c092:	bfac      	ite	ge
 800c094:	2000      	movge	r0, #0
 800c096:	2001      	movlt	r0, #1
 800c098:	bd10      	pop	{r4, pc}
 800c09a:	2000      	movs	r0, #0
 800c09c:	e7fc      	b.n	800c098 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800c09e <_ZN8touchgfx4Rect10restrictToEss>:
 800c09e:	f9b0 3000 	ldrsh.w	r3, [r0]
 800c0a2:	2b00      	cmp	r3, #0
 800c0a4:	b510      	push	{r4, lr}
 800c0a6:	da04      	bge.n	800c0b2 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800c0a8:	8884      	ldrh	r4, [r0, #4]
 800c0aa:	4423      	add	r3, r4
 800c0ac:	8083      	strh	r3, [r0, #4]
 800c0ae:	2300      	movs	r3, #0
 800c0b0:	8003      	strh	r3, [r0, #0]
 800c0b2:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c0b6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c0ba:	1b09      	subs	r1, r1, r4
 800c0bc:	428b      	cmp	r3, r1
 800c0be:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800c0c2:	bfc8      	it	gt
 800c0c4:	8081      	strhgt	r1, [r0, #4]
 800c0c6:	2b00      	cmp	r3, #0
 800c0c8:	da04      	bge.n	800c0d4 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800c0ca:	88c1      	ldrh	r1, [r0, #6]
 800c0cc:	440b      	add	r3, r1
 800c0ce:	80c3      	strh	r3, [r0, #6]
 800c0d0:	2300      	movs	r3, #0
 800c0d2:	8043      	strh	r3, [r0, #2]
 800c0d4:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800c0d8:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800c0dc:	1a52      	subs	r2, r2, r1
 800c0de:	4293      	cmp	r3, r2
 800c0e0:	bfc8      	it	gt
 800c0e2:	80c2      	strhgt	r2, [r0, #6]
 800c0e4:	bd10      	pop	{r4, pc}
	...

0800c0e8 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800c0e8:	b510      	push	{r4, lr}
 800c0ea:	4b10      	ldr	r3, [pc, #64]	@ (800c12c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800c0ec:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c0f0:	4b0f      	ldr	r3, [pc, #60]	@ (800c130 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800c0f2:	460c      	mov	r4, r1
 800c0f4:	4620      	mov	r0, r4
 800c0f6:	f9b3 1000 	ldrsh.w	r1, [r3]
 800c0fa:	f7ff ffd0 	bl	800c09e <_ZN8touchgfx4Rect10restrictToEss>
 800c0fe:	4b0d      	ldr	r3, [pc, #52]	@ (800c134 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800c100:	6818      	ldr	r0, [r3, #0]
 800c102:	b190      	cbz	r0, 800c12a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800c104:	6803      	ldr	r3, [r0, #0]
 800c106:	4621      	mov	r1, r4
 800c108:	689b      	ldr	r3, [r3, #8]
 800c10a:	4798      	blx	r3
 800c10c:	4b0a      	ldr	r3, [pc, #40]	@ (800c138 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800c10e:	6818      	ldr	r0, [r3, #0]
 800c110:	b118      	cbz	r0, 800c11a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800c112:	6803      	ldr	r3, [r0, #0]
 800c114:	4621      	mov	r1, r4
 800c116:	689b      	ldr	r3, [r3, #8]
 800c118:	4798      	blx	r3
 800c11a:	4b08      	ldr	r3, [pc, #32]	@ (800c13c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800c11c:	6818      	ldr	r0, [r3, #0]
 800c11e:	6803      	ldr	r3, [r0, #0]
 800c120:	4621      	mov	r1, r4
 800c122:	69db      	ldr	r3, [r3, #28]
 800c124:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c128:	4718      	bx	r3
 800c12a:	bd10      	pop	{r4, pc}
 800c12c:	200137f6 	.word	0x200137f6
 800c130:	200137f4 	.word	0x200137f4
 800c134:	2001383c 	.word	0x2001383c
 800c138:	20013838 	.word	0x20013838
 800c13c:	20013800 	.word	0x20013800

0800c140 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800c140:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c142:	4606      	mov	r6, r0
 800c144:	4608      	mov	r0, r1
 800c146:	460f      	mov	r7, r1
 800c148:	f7fd fb3f 	bl	80097ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800c14c:	b9e8      	cbnz	r0, 800c18a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800c14e:	f9b7 5000 	ldrsh.w	r5, [r7]
 800c152:	f9b6 4000 	ldrsh.w	r4, [r6]
 800c156:	42a5      	cmp	r5, r4
 800c158:	db17      	blt.n	800c18a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800c15a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800c15e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800c162:	429a      	cmp	r2, r3
 800c164:	db11      	blt.n	800c18a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800c166:	88b9      	ldrh	r1, [r7, #4]
 800c168:	440d      	add	r5, r1
 800c16a:	88b1      	ldrh	r1, [r6, #4]
 800c16c:	440c      	add	r4, r1
 800c16e:	b22d      	sxth	r5, r5
 800c170:	b224      	sxth	r4, r4
 800c172:	42a5      	cmp	r5, r4
 800c174:	dc09      	bgt.n	800c18a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800c176:	88f8      	ldrh	r0, [r7, #6]
 800c178:	4410      	add	r0, r2
 800c17a:	88f2      	ldrh	r2, [r6, #6]
 800c17c:	4413      	add	r3, r2
 800c17e:	b200      	sxth	r0, r0
 800c180:	b21b      	sxth	r3, r3
 800c182:	4298      	cmp	r0, r3
 800c184:	bfcc      	ite	gt
 800c186:	2000      	movgt	r0, #0
 800c188:	2001      	movle	r0, #1
 800c18a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c18c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800c18c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c18e:	4604      	mov	r4, r0
 800c190:	4608      	mov	r0, r1
 800c192:	460d      	mov	r5, r1
 800c194:	f7fd fb19 	bl	80097ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800c198:	b978      	cbnz	r0, 800c1ba <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800c19a:	4620      	mov	r0, r4
 800c19c:	f7fd fb15 	bl	80097ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800c1a0:	f9b5 6000 	ldrsh.w	r6, [r5]
 800c1a4:	b150      	cbz	r0, 800c1bc <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800c1a6:	8026      	strh	r6, [r4, #0]
 800c1a8:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800c1ac:	8063      	strh	r3, [r4, #2]
 800c1ae:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800c1b2:	80a3      	strh	r3, [r4, #4]
 800c1b4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c1b8:	80e3      	strh	r3, [r4, #6]
 800c1ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c1bc:	f9b4 1000 	ldrsh.w	r1, [r4]
 800c1c0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c1c4:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800c1c8:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800c1cc:	88ed      	ldrh	r5, [r5, #6]
 800c1ce:	42b1      	cmp	r1, r6
 800c1d0:	460f      	mov	r7, r1
 800c1d2:	bfa8      	it	ge
 800c1d4:	4637      	movge	r7, r6
 800c1d6:	4293      	cmp	r3, r2
 800c1d8:	4618      	mov	r0, r3
 800c1da:	4466      	add	r6, ip
 800c1dc:	bfa8      	it	ge
 800c1de:	4610      	movge	r0, r2
 800c1e0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800c1e4:	8027      	strh	r7, [r4, #0]
 800c1e6:	442a      	add	r2, r5
 800c1e8:	88e5      	ldrh	r5, [r4, #6]
 800c1ea:	8060      	strh	r0, [r4, #2]
 800c1ec:	4461      	add	r1, ip
 800c1ee:	442b      	add	r3, r5
 800c1f0:	b236      	sxth	r6, r6
 800c1f2:	b209      	sxth	r1, r1
 800c1f4:	b212      	sxth	r2, r2
 800c1f6:	b21b      	sxth	r3, r3
 800c1f8:	428e      	cmp	r6, r1
 800c1fa:	bfac      	ite	ge
 800c1fc:	ebc7 0106 	rsbge	r1, r7, r6
 800c200:	ebc7 0101 	rsblt	r1, r7, r1
 800c204:	429a      	cmp	r2, r3
 800c206:	bfac      	ite	ge
 800c208:	ebc0 0202 	rsbge	r2, r0, r2
 800c20c:	ebc0 0203 	rsblt	r2, r0, r3
 800c210:	80a1      	strh	r1, [r4, #4]
 800c212:	80e2      	strh	r2, [r4, #6]
 800c214:	e7d1      	b.n	800c1ba <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800c218 <_ZN8touchgfx11Application11getInstanceEv>:
 800c218:	4b01      	ldr	r3, [pc, #4]	@ (800c220 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800c21a:	6818      	ldr	r0, [r3, #0]
 800c21c:	4770      	bx	lr
 800c21e:	bf00      	nop
 800c220:	2001384c 	.word	0x2001384c

0800c224 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800c224:	b510      	push	{r4, lr}
 800c226:	2300      	movs	r3, #0
 800c228:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800c22c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800c230:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800c234:	4604      	mov	r4, r0
 800c236:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800c23a:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800c23e:	429a      	cmp	r2, r3
 800c240:	d90e      	bls.n	800c260 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800c242:	18e2      	adds	r2, r4, r3
 800c244:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800c248:	b122      	cbz	r2, 800c254 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800c24a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800c24e:	6803      	ldr	r3, [r0, #0]
 800c250:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800c252:	4798      	blx	r3
 800c254:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800c258:	3301      	adds	r3, #1
 800c25a:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800c25e:	e7ea      	b.n	800c236 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800c260:	bd10      	pop	{r4, pc}

0800c262 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 800c262:	b530      	push	{r4, r5, lr}
 800c264:	f8b0 5080 	ldrh.w	r5, [r0, #128]	@ 0x80
 800c268:	2200      	movs	r2, #0
 800c26a:	b293      	uxth	r3, r2
 800c26c:	429d      	cmp	r5, r3
 800c26e:	d90e      	bls.n	800c28e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 800c270:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 800c274:	428b      	cmp	r3, r1
 800c276:	d10b      	bne.n	800c290 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 800c278:	1884      	adds	r4, r0, r2
 800c27a:	f894 3084 	ldrb.w	r3, [r4, #132]	@ 0x84
 800c27e:	b13b      	cbz	r3, 800c290 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 800c280:	3b01      	subs	r3, #1
 800c282:	b2db      	uxtb	r3, r3
 800c284:	f884 3084 	strb.w	r3, [r4, #132]	@ 0x84
 800c288:	b90b      	cbnz	r3, 800c28e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 800c28a:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 800c28e:	bd30      	pop	{r4, r5, pc}
 800c290:	3201      	adds	r2, #1
 800c292:	e7ea      	b.n	800c26a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

0800c294 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800c294:	2300      	movs	r3, #0
 800c296:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800c29a:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800c29e:	30a4      	adds	r0, #164	@ 0xa4
 800c2a0:	f802 3b01 	strb.w	r3, [r2], #1
 800c2a4:	4282      	cmp	r2, r0
 800c2a6:	d1fb      	bne.n	800c2a0 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800c2a8:	4770      	bx	lr
	...

0800c2ac <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800c2ac:	b570      	push	{r4, r5, r6, lr}
 800c2ae:	4c0b      	ldr	r4, [pc, #44]	@ (800c2dc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800c2b0:	4605      	mov	r5, r0
 800c2b2:	6820      	ldr	r0, [r4, #0]
 800c2b4:	460e      	mov	r6, r1
 800c2b6:	b110      	cbz	r0, 800c2be <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800c2b8:	6803      	ldr	r3, [r0, #0]
 800c2ba:	695b      	ldr	r3, [r3, #20]
 800c2bc:	4798      	blx	r3
 800c2be:	1d28      	adds	r0, r5, #4
 800c2c0:	f7ff ffe8 	bl	800c294 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800c2c4:	6026      	str	r6, [r4, #0]
 800c2c6:	6833      	ldr	r3, [r6, #0]
 800c2c8:	4630      	mov	r0, r6
 800c2ca:	68db      	ldr	r3, [r3, #12]
 800c2cc:	4798      	blx	r3
 800c2ce:	682b      	ldr	r3, [r5, #0]
 800c2d0:	4628      	mov	r0, r5
 800c2d2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800c2d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c2d8:	4718      	bx	r3
 800c2da:	bf00      	nop
 800c2dc:	2001383c 	.word	0x2001383c

0800c2e0 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800c2e0:	2300      	movs	r3, #0
 800c2e2:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800c2e6:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800c2ea:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c2ec:	461a      	mov	r2, r3
 800c2ee:	461c      	mov	r4, r3
 800c2f0:	461d      	mov	r5, r3
 800c2f2:	459c      	cmp	ip, r3
 800c2f4:	dd1a      	ble.n	800c32c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800c2f6:	18c6      	adds	r6, r0, r3
 800c2f8:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800c2fc:	b16e      	cbz	r6, 800c31a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800c2fe:	429a      	cmp	r2, r3
 800c300:	d008      	beq.n	800c314 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800c302:	fa1f fe82 	uxth.w	lr, r2
 800c306:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800c30a:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800c30e:	1887      	adds	r7, r0, r2
 800c310:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 800c314:	3201      	adds	r2, #1
 800c316:	3301      	adds	r3, #1
 800c318:	e7eb      	b.n	800c2f2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800c31a:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 800c31e:	4299      	cmp	r1, r3
 800c320:	bfa8      	it	ge
 800c322:	3501      	addge	r5, #1
 800c324:	429e      	cmp	r6, r3
 800c326:	bfc8      	it	gt
 800c328:	3401      	addgt	r4, #1
 800c32a:	e7f4      	b.n	800c316 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800c32c:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 800c330:	1b49      	subs	r1, r1, r5
 800c332:	1b1b      	subs	r3, r3, r4
 800c334:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 800c338:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800c33c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800c340:	4293      	cmp	r3, r2
 800c342:	dd03      	ble.n	800c34c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800c344:	3b01      	subs	r3, #1
 800c346:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800c34a:	e7f7      	b.n	800c33c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800c34c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800c350 <_ZN8touchgfx11Application15handleTickEventEv>:
 800c350:	b570      	push	{r4, r5, r6, lr}
 800c352:	4d16      	ldr	r5, [pc, #88]	@ (800c3ac <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800c354:	4604      	mov	r4, r0
 800c356:	6828      	ldr	r0, [r5, #0]
 800c358:	b140      	cbz	r0, 800c36c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800c35a:	7a03      	ldrb	r3, [r0, #8]
 800c35c:	b933      	cbnz	r3, 800c36c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800c35e:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800c362:	6803      	ldr	r3, [r0, #0]
 800c364:	689b      	ldr	r3, [r3, #8]
 800c366:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c36a:	4718      	bx	r3
 800c36c:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 800c370:	4e0f      	ldr	r6, [pc, #60]	@ (800c3b0 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800c372:	b973      	cbnz	r3, 800c392 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800c374:	b168      	cbz	r0, 800c392 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800c376:	7a03      	ldrb	r3, [r0, #8]
 800c378:	b15b      	cbz	r3, 800c392 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800c37a:	6830      	ldr	r0, [r6, #0]
 800c37c:	b110      	cbz	r0, 800c384 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800c37e:	6803      	ldr	r3, [r0, #0]
 800c380:	691b      	ldr	r3, [r3, #16]
 800c382:	4798      	blx	r3
 800c384:	6828      	ldr	r0, [r5, #0]
 800c386:	6803      	ldr	r3, [r0, #0]
 800c388:	68db      	ldr	r3, [r3, #12]
 800c38a:	4798      	blx	r3
 800c38c:	2301      	movs	r3, #1
 800c38e:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800c392:	3404      	adds	r4, #4
 800c394:	4620      	mov	r0, r4
 800c396:	f7ff ff45 	bl	800c224 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800c39a:	4620      	mov	r0, r4
 800c39c:	f7ff ffa0 	bl	800c2e0 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800c3a0:	6830      	ldr	r0, [r6, #0]
 800c3a2:	b110      	cbz	r0, 800c3aa <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800c3a4:	6803      	ldr	r3, [r0, #0]
 800c3a6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c3a8:	e7dd      	b.n	800c366 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800c3aa:	bd70      	pop	{r4, r5, r6, pc}
 800c3ac:	20013840 	.word	0x20013840
 800c3b0:	2001383c 	.word	0x2001383c

0800c3b4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 800c3b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c3b6:	2300      	movs	r3, #0
 800c3b8:	4604      	mov	r4, r0
 800c3ba:	460d      	mov	r5, r1
 800c3bc:	f8b0 1080 	ldrh.w	r1, [r0, #128]	@ 0x80
 800c3c0:	4618      	mov	r0, r3
 800c3c2:	b29a      	uxth	r2, r3
 800c3c4:	4291      	cmp	r1, r2
 800c3c6:	d911      	bls.n	800c3ec <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 800c3c8:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 800c3cc:	18e6      	adds	r6, r4, r3
 800c3ce:	42af      	cmp	r7, r5
 800c3d0:	f896 2084 	ldrb.w	r2, [r6, #132]	@ 0x84
 800c3d4:	d105      	bne.n	800c3e2 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 800c3d6:	2aff      	cmp	r2, #255	@ 0xff
 800c3d8:	d002      	beq.n	800c3e0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 800c3da:	3201      	adds	r2, #1
 800c3dc:	f886 2084 	strb.w	r2, [r6, #132]	@ 0x84
 800c3e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c3e2:	2a00      	cmp	r2, #0
 800c3e4:	bf08      	it	eq
 800c3e6:	2001      	moveq	r0, #1
 800c3e8:	3301      	adds	r3, #1
 800c3ea:	e7ea      	b.n	800c3c2 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 800c3ec:	b120      	cbz	r0, 800c3f8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 800c3ee:	2920      	cmp	r1, #32
 800c3f0:	d102      	bne.n	800c3f8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 800c3f2:	4620      	mov	r0, r4
 800c3f4:	f7ff ff74 	bl	800c2e0 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800c3f8:	f8b4 3080 	ldrh.w	r3, [r4, #128]	@ 0x80
 800c3fc:	2b1f      	cmp	r3, #31
 800c3fe:	d8ef      	bhi.n	800c3e0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 800c400:	18e2      	adds	r2, r4, r3
 800c402:	2101      	movs	r1, #1
 800c404:	f882 1084 	strb.w	r1, [r2, #132]	@ 0x84
 800c408:	185a      	adds	r2, r3, r1
 800c40a:	f8a4 2080 	strh.w	r2, [r4, #128]	@ 0x80
 800c40e:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 800c412:	e7e5      	b.n	800c3e0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

0800c414 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800c414:	4603      	mov	r3, r0
 800c416:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800c41a:	2200      	movs	r2, #0
 800c41c:	801a      	strh	r2, [r3, #0]
 800c41e:	805a      	strh	r2, [r3, #2]
 800c420:	809a      	strh	r2, [r3, #4]
 800c422:	80da      	strh	r2, [r3, #6]
 800c424:	3308      	adds	r3, #8
 800c426:	428b      	cmp	r3, r1
 800c428:	d1f8      	bne.n	800c41c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800c42a:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800c42e:	4770      	bx	lr

0800c430 <_ZN8touchgfx11ApplicationC1Ev>:
 800c430:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c432:	4606      	mov	r6, r0
 800c434:	4b1c      	ldr	r3, [pc, #112]	@ (800c4a8 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800c436:	f846 3b04 	str.w	r3, [r6], #4
 800c43a:	4604      	mov	r4, r0
 800c43c:	2500      	movs	r5, #0
 800c43e:	22a8      	movs	r2, #168	@ 0xa8
 800c440:	2100      	movs	r1, #0
 800c442:	4630      	mov	r0, r6
 800c444:	f00f fc19 	bl	801bc7a <memset>
 800c448:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 800c44c:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800c450:	f7ff ffe0 	bl	800c414 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800c454:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800c458:	f7ff ffdc 	bl	800c414 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800c45c:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 800c460:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 800c464:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 800c468:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 800c46c:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 800c470:	490e      	ldr	r1, [pc, #56]	@ (800c4ac <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800c472:	480f      	ldr	r0, [pc, #60]	@ (800c4b0 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800c474:	4f0f      	ldr	r7, [pc, #60]	@ (800c4b4 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800c476:	f00f f883 	bl	801b580 <CRC_Lock>
 800c47a:	4b0f      	ldr	r3, [pc, #60]	@ (800c4b8 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800c47c:	b158      	cbz	r0, 800c496 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800c47e:	801d      	strh	r5, [r3, #0]
 800c480:	4a0e      	ldr	r2, [pc, #56]	@ (800c4bc <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800c482:	2300      	movs	r3, #0
 800c484:	6013      	str	r3, [r2, #0]
 800c486:	4a0e      	ldr	r2, [pc, #56]	@ (800c4c0 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800c488:	603b      	str	r3, [r7, #0]
 800c48a:	4630      	mov	r0, r6
 800c48c:	6013      	str	r3, [r2, #0]
 800c48e:	f7ff ff01 	bl	800c294 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800c492:	4620      	mov	r0, r4
 800c494:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c496:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800c49a:	2002      	movs	r0, #2
 800c49c:	801a      	strh	r2, [r3, #0]
 800c49e:	6038      	str	r0, [r7, #0]
 800c4a0:	f001 f8c0 	bl	800d624 <_ZN8touchgfx6Screen4drawEv>
 800c4a4:	e7ec      	b.n	800c480 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800c4a6:	bf00      	nop
 800c4a8:	0801de88 	.word	0x0801de88
 800c4ac:	b5e8b5cd 	.word	0xb5e8b5cd
 800c4b0:	f407a5c2 	.word	0xf407a5c2
 800c4b4:	2001383c 	.word	0x2001383c
 800c4b8:	2000008c 	.word	0x2000008c
 800c4bc:	2001384c 	.word	0x2001384c
 800c4c0:	20013840 	.word	0x20013840

0800c4c4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800c4c4:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 800c4c8:	3b01      	subs	r3, #1
 800c4ca:	b29b      	uxth	r3, r3
 800c4cc:	428b      	cmp	r3, r1
 800c4ce:	b510      	push	{r4, lr}
 800c4d0:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800c4d4:	d908      	bls.n	800c4e8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800c4d6:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800c4da:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800c4de:	681a      	ldr	r2, [r3, #0]
 800c4e0:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800c4e4:	685a      	ldr	r2, [r3, #4]
 800c4e6:	6062      	str	r2, [r4, #4]
 800c4e8:	bd10      	pop	{r4, pc}
	...

0800c4ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800c4ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c4f0:	4b8f      	ldr	r3, [pc, #572]	@ (800c730 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 800c4f2:	b08f      	sub	sp, #60	@ 0x3c
 800c4f4:	ac0a      	add	r4, sp, #40	@ 0x28
 800c4f6:	e884 0006 	stmia.w	r4, {r1, r2}
 800c4fa:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c4fe:	4b8d      	ldr	r3, [pc, #564]	@ (800c734 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 800c500:	4683      	mov	fp, r0
 800c502:	f9b3 1000 	ldrsh.w	r1, [r3]
 800c506:	4620      	mov	r0, r4
 800c508:	f7ff fdc9 	bl	800c09e <_ZN8touchgfx4Rect10restrictToEss>
 800c50c:	4620      	mov	r0, r4
 800c50e:	f7fd f95c 	bl	80097ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800c512:	2800      	cmp	r0, #0
 800c514:	d16a      	bne.n	800c5ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800c516:	9403      	str	r4, [sp, #12]
 800c518:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800c51c:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800c520:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800c524:	35a4      	adds	r5, #164	@ 0xa4
 800c526:	9301      	str	r3, [sp, #4]
 800c528:	b15c      	cbz	r4, 800c542 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800c52a:	4629      	mov	r1, r5
 800c52c:	9803      	ldr	r0, [sp, #12]
 800c52e:	f7ff fe07 	bl	800c140 <_ZNK8touchgfx4Rect8includesERKS0_>
 800c532:	3c01      	subs	r4, #1
 800c534:	b118      	cbz	r0, 800c53e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 800c536:	b2a1      	uxth	r1, r4
 800c538:	9801      	ldr	r0, [sp, #4]
 800c53a:	f7ff ffc3 	bl	800c4c4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c53e:	3d08      	subs	r5, #8
 800c540:	e7f2      	b.n	800c528 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 800c542:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 800c546:	f8cd a010 	str.w	sl, [sp, #16]
 800c54a:	f10a 33ff 	add.w	r3, sl, #4294967295
 800c54e:	9302      	str	r3, [sp, #8]
 800c550:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800c554:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800c558:	9306      	str	r3, [sp, #24]
 800c55a:	445c      	add	r4, fp
 800c55c:	2500      	movs	r5, #0
 800c55e:	4626      	mov	r6, r4
 800c560:	f8cd a014 	str.w	sl, [sp, #20]
 800c564:	462f      	mov	r7, r5
 800c566:	9b05      	ldr	r3, [sp, #20]
 800c568:	2b00      	cmp	r3, #0
 800c56a:	d073      	beq.n	800c654 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800c56c:	9903      	ldr	r1, [sp, #12]
 800c56e:	4630      	mov	r0, r6
 800c570:	f7ff fd73 	bl	800c05a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800c574:	b350      	cbz	r0, 800c5cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800c576:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 800c57a:	f9b6 c000 	ldrsh.w	ip, [r6]
 800c57e:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 800c582:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800c586:	45e6      	cmp	lr, ip
 800c588:	db33      	blt.n	800c5f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800c58a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800c58e:	88b3      	ldrh	r3, [r6, #4]
 800c590:	4472      	add	r2, lr
 800c592:	4463      	add	r3, ip
 800c594:	b212      	sxth	r2, r2
 800c596:	b21b      	sxth	r3, r3
 800c598:	429a      	cmp	r2, r3
 800c59a:	dc2a      	bgt.n	800c5f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800c59c:	88f3      	ldrh	r3, [r6, #6]
 800c59e:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800c5a2:	fa1f f289 	uxth.w	r2, r9
 800c5a6:	4413      	add	r3, r2
 800c5a8:	b29b      	uxth	r3, r3
 800c5aa:	45c8      	cmp	r8, r9
 800c5ac:	fa1f fc88 	uxth.w	ip, r8
 800c5b0:	fa0f fe83 	sxth.w	lr, r3
 800c5b4:	db0f      	blt.n	800c5d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800c5b6:	eba3 030c 	sub.w	r3, r3, ip
 800c5ba:	1ac9      	subs	r1, r1, r3
 800c5bc:	b209      	sxth	r1, r1
 800c5be:	2900      	cmp	r1, #0
 800c5c0:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800c5c4:	dd12      	ble.n	800c5ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800c5c6:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 800c5ca:	4605      	mov	r5, r0
 800c5cc:	9b05      	ldr	r3, [sp, #20]
 800c5ce:	3b01      	subs	r3, #1
 800c5d0:	9305      	str	r3, [sp, #20]
 800c5d2:	3e08      	subs	r6, #8
 800c5d4:	e7c7      	b.n	800c566 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800c5d6:	4461      	add	r1, ip
 800c5d8:	b209      	sxth	r1, r1
 800c5da:	4571      	cmp	r1, lr
 800c5dc:	dc38      	bgt.n	800c650 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800c5de:	eba2 020c 	sub.w	r2, r2, ip
 800c5e2:	b212      	sxth	r2, r2
 800c5e4:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 800c5e8:	2a00      	cmp	r2, #0
 800c5ea:	dcee      	bgt.n	800c5ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800c5ec:	b00f      	add	sp, #60	@ 0x3c
 800c5ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c5f2:	45c8      	cmp	r8, r9
 800c5f4:	db2c      	blt.n	800c650 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800c5f6:	88f3      	ldrh	r3, [r6, #6]
 800c5f8:	4499      	add	r9, r3
 800c5fa:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 800c5fe:	4498      	add	r8, r3
 800c600:	fa0f f989 	sxth.w	r9, r9
 800c604:	fa0f f888 	sxth.w	r8, r8
 800c608:	45c1      	cmp	r9, r8
 800c60a:	db21      	blt.n	800c650 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800c60c:	88b3      	ldrh	r3, [r6, #4]
 800c60e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 800c612:	fa1f f28c 	uxth.w	r2, ip
 800c616:	4413      	add	r3, r2
 800c618:	b29b      	uxth	r3, r3
 800c61a:	45e6      	cmp	lr, ip
 800c61c:	fa1f f88e 	uxth.w	r8, lr
 800c620:	fa0f f983 	sxth.w	r9, r3
 800c624:	db0a      	blt.n	800c63c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 800c626:	eba3 0308 	sub.w	r3, r3, r8
 800c62a:	1ac9      	subs	r1, r1, r3
 800c62c:	b209      	sxth	r1, r1
 800c62e:	2900      	cmp	r1, #0
 800c630:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 800c634:	ddda      	ble.n	800c5ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800c636:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800c63a:	e7c6      	b.n	800c5ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800c63c:	4441      	add	r1, r8
 800c63e:	b209      	sxth	r1, r1
 800c640:	4549      	cmp	r1, r9
 800c642:	dc05      	bgt.n	800c650 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800c644:	eba2 0208 	sub.w	r2, r2, r8
 800c648:	b212      	sxth	r2, r2
 800c64a:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800c64e:	e7cb      	b.n	800c5e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800c650:	4607      	mov	r7, r0
 800c652:	e7bb      	b.n	800c5cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800c654:	2d00      	cmp	r5, #0
 800c656:	d181      	bne.n	800c55c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 800c658:	2f00      	cmp	r7, #0
 800c65a:	f000 81dd 	beq.w	800ca18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800c65e:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 800c662:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 800c666:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 800c66a:	b2b3      	uxth	r3, r6
 800c66c:	9305      	str	r3, [sp, #20]
 800c66e:	9a05      	ldr	r2, [sp, #20]
 800c670:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800c674:	4413      	add	r3, r2
 800c676:	b2ba      	uxth	r2, r7
 800c678:	4492      	add	sl, r2
 800c67a:	b29b      	uxth	r3, r3
 800c67c:	fa1f fa8a 	uxth.w	sl, sl
 800c680:	fa0f f883 	sxth.w	r8, r3
 800c684:	fa0f f98a 	sxth.w	r9, sl
 800c688:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800c68c:	9b04      	ldr	r3, [sp, #16]
 800c68e:	2b00      	cmp	r3, #0
 800c690:	d052      	beq.n	800c738 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800c692:	9903      	ldr	r1, [sp, #12]
 800c694:	4620      	mov	r0, r4
 800c696:	f7ff fce0 	bl	800c05a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800c69a:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800c69e:	b1c0      	cbz	r0, 800c6d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800c6a0:	f9b4 e000 	ldrsh.w	lr, [r4]
 800c6a4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800c6a8:	4576      	cmp	r6, lr
 800c6aa:	dc22      	bgt.n	800c6f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800c6ac:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800c6b0:	44f4      	add	ip, lr
 800c6b2:	fa0f fc8c 	sxth.w	ip, ip
 800c6b6:	45e0      	cmp	r8, ip
 800c6b8:	db1b      	blt.n	800c6f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800c6ba:	428f      	cmp	r7, r1
 800c6bc:	fa1f fc81 	uxth.w	ip, r1
 800c6c0:	88e1      	ldrh	r1, [r4, #6]
 800c6c2:	dc0d      	bgt.n	800c6e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800c6c4:	ebaa 0c0c 	sub.w	ip, sl, ip
 800c6c8:	eba1 010c 	sub.w	r1, r1, ip
 800c6cc:	f8a4 9002 	strh.w	r9, [r4, #2]
 800c6d0:	80e1      	strh	r1, [r4, #6]
 800c6d2:	4628      	mov	r0, r5
 800c6d4:	9904      	ldr	r1, [sp, #16]
 800c6d6:	3901      	subs	r1, #1
 800c6d8:	9104      	str	r1, [sp, #16]
 800c6da:	3c08      	subs	r4, #8
 800c6dc:	4605      	mov	r5, r0
 800c6de:	e7d3      	b.n	800c688 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 800c6e0:	4461      	add	r1, ip
 800c6e2:	b209      	sxth	r1, r1
 800c6e4:	4549      	cmp	r1, r9
 800c6e6:	dcf5      	bgt.n	800c6d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800c6e8:	eba2 0c0c 	sub.w	ip, r2, ip
 800c6ec:	f8a4 c006 	strh.w	ip, [r4, #6]
 800c6f0:	e7ef      	b.n	800c6d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800c6f2:	428f      	cmp	r7, r1
 800c6f4:	dcee      	bgt.n	800c6d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800c6f6:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800c6fa:	4461      	add	r1, ip
 800c6fc:	b209      	sxth	r1, r1
 800c6fe:	4589      	cmp	r9, r1
 800c700:	dbe8      	blt.n	800c6d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800c702:	4576      	cmp	r6, lr
 800c704:	fa1f fc8e 	uxth.w	ip, lr
 800c708:	88a1      	ldrh	r1, [r4, #4]
 800c70a:	dc07      	bgt.n	800c71c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 800c70c:	eba3 0c0c 	sub.w	ip, r3, ip
 800c710:	eba1 010c 	sub.w	r1, r1, ip
 800c714:	f8a4 8000 	strh.w	r8, [r4]
 800c718:	80a1      	strh	r1, [r4, #4]
 800c71a:	e7da      	b.n	800c6d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800c71c:	4461      	add	r1, ip
 800c71e:	b209      	sxth	r1, r1
 800c720:	4588      	cmp	r8, r1
 800c722:	dbd7      	blt.n	800c6d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800c724:	9905      	ldr	r1, [sp, #20]
 800c726:	eba1 0c0c 	sub.w	ip, r1, ip
 800c72a:	f8a4 c004 	strh.w	ip, [r4, #4]
 800c72e:	e7d0      	b.n	800c6d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800c730:	200137f6 	.word	0x200137f6
 800c734:	200137f4 	.word	0x200137f4
 800c738:	2d00      	cmp	r5, #0
 800c73a:	f000 816d 	beq.w	800ca18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800c73e:	9b06      	ldr	r3, [sp, #24]
 800c740:	445b      	add	r3, fp
 800c742:	461c      	mov	r4, r3
 800c744:	9b02      	ldr	r3, [sp, #8]
 800c746:	3301      	adds	r3, #1
 800c748:	f000 8166 	beq.w	800ca18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800c74c:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 800c750:	4629      	mov	r1, r5
 800c752:	9803      	ldr	r0, [sp, #12]
 800c754:	f7ff fcf4 	bl	800c140 <_ZNK8touchgfx4Rect8includesERKS0_>
 800c758:	b120      	cbz	r0, 800c764 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 800c75a:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800c75e:	9801      	ldr	r0, [sp, #4]
 800c760:	f7ff feb0 	bl	800c4c4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c764:	9903      	ldr	r1, [sp, #12]
 800c766:	4628      	mov	r0, r5
 800c768:	f7ff fc77 	bl	800c05a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800c76c:	2800      	cmp	r0, #0
 800c76e:	f000 809c 	beq.w	800c8aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800c772:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 800c776:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800c77a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800c77e:	9309      	str	r3, [sp, #36]	@ 0x24
 800c780:	fa1f f189 	uxth.w	r1, r9
 800c784:	eb01 0c03 	add.w	ip, r1, r3
 800c788:	fa1f fa8c 	uxth.w	sl, ip
 800c78c:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 800c790:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 800c794:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 800c798:	b283      	uxth	r3, r0
 800c79a:	eb03 050c 	add.w	r5, r3, ip
 800c79e:	b2ad      	uxth	r5, r5
 800c7a0:	9505      	str	r5, [sp, #20]
 800c7a2:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800c7a6:	9504      	str	r5, [sp, #16]
 800c7a8:	4548      	cmp	r0, r9
 800c7aa:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 800c7ae:	f340 8099 	ble.w	800c8e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 800c7b2:	1a5b      	subs	r3, r3, r1
 800c7b4:	b29b      	uxth	r3, r3
 800c7b6:	4596      	cmp	lr, r2
 800c7b8:	fa0f f08a 	sxth.w	r0, sl
 800c7bc:	b21e      	sxth	r6, r3
 800c7be:	dd2e      	ble.n	800c81e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 800c7c0:	9f02      	ldr	r7, [sp, #8]
 800c7c2:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 800c7c6:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800c7ca:	9f04      	ldr	r7, [sp, #16]
 800c7cc:	1a3f      	subs	r7, r7, r0
 800c7ce:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 800c7d2:	fa1f fe8e 	uxth.w	lr, lr
 800c7d6:	b292      	uxth	r2, r2
 800c7d8:	ebae 0102 	sub.w	r1, lr, r2
 800c7dc:	44a6      	add	lr, r4
 800c7de:	4402      	add	r2, r0
 800c7e0:	b289      	uxth	r1, r1
 800c7e2:	fa0f fe8e 	sxth.w	lr, lr
 800c7e6:	b212      	sxth	r2, r2
 800c7e8:	b20d      	sxth	r5, r1
 800c7ea:	ebae 0202 	sub.w	r2, lr, r2
 800c7ee:	436f      	muls	r7, r5
 800c7f0:	4372      	muls	r2, r6
 800c7f2:	4297      	cmp	r7, r2
 800c7f4:	db09      	blt.n	800c80a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 800c7f6:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 800c7fa:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 800c7fe:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800c802:	449c      	add	ip, r3
 800c804:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800c808:	e686      	b.n	800c518 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800c80a:	4421      	add	r1, r4
 800c80c:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 800c810:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 800c814:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800c818:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800c81c:	e67c      	b.n	800c518 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800c81e:	9f04      	ldr	r7, [sp, #16]
 800c820:	42b8      	cmp	r0, r7
 800c822:	da27      	bge.n	800c874 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800c824:	9902      	ldr	r1, [sp, #8]
 800c826:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 800c82a:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800c82e:	eb05 010e 	add.w	r1, r5, lr
 800c832:	fa1f f881 	uxth.w	r8, r1
 800c836:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 800c83a:	4411      	add	r1, r2
 800c83c:	eba1 0108 	sub.w	r1, r1, r8
 800c840:	b289      	uxth	r1, r1
 800c842:	fa0f f988 	sxth.w	r9, r8
 800c846:	eba2 020e 	sub.w	r2, r2, lr
 800c84a:	fa0f f881 	sxth.w	r8, r1
 800c84e:	1a3f      	subs	r7, r7, r0
 800c850:	4372      	muls	r2, r6
 800c852:	fb08 f707 	mul.w	r7, r8, r7
 800c856:	42ba      	cmp	r2, r7
 800c858:	dc06      	bgt.n	800c868 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 800c85a:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 800c85e:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 800c862:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 800c866:	e7ca      	b.n	800c7fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 800c868:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 800c86c:	4429      	add	r1, r5
 800c86e:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800c872:	e651      	b.n	800c518 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800c874:	9805      	ldr	r0, [sp, #20]
 800c876:	ebaa 0000 	sub.w	r0, sl, r0
 800c87a:	b280      	uxth	r0, r0
 800c87c:	2d06      	cmp	r5, #6
 800c87e:	fa0f fe80 	sxth.w	lr, r0
 800c882:	d817      	bhi.n	800c8b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 800c884:	9b04      	ldr	r3, [sp, #16]
 800c886:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800c88a:	1c6b      	adds	r3, r5, #1
 800c88c:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 800c890:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 800c894:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800c898:	9b01      	ldr	r3, [sp, #4]
 800c89a:	9801      	ldr	r0, [sp, #4]
 800c89c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800c8a0:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800c8a4:	805a      	strh	r2, [r3, #2]
 800c8a6:	809e      	strh	r6, [r3, #4]
 800c8a8:	80d9      	strh	r1, [r3, #6]
 800c8aa:	9b02      	ldr	r3, [sp, #8]
 800c8ac:	3b01      	subs	r3, #1
 800c8ae:	9302      	str	r3, [sp, #8]
 800c8b0:	3c08      	subs	r4, #8
 800c8b2:	e747      	b.n	800c744 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 800c8b4:	9a02      	ldr	r2, [sp, #8]
 800c8b6:	45b6      	cmp	lr, r6
 800c8b8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800c8bc:	db0d      	blt.n	800c8da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800c8be:	449c      	add	ip, r3
 800c8c0:	fa1f fc8c 	uxth.w	ip, ip
 800c8c4:	445a      	add	r2, fp
 800c8c6:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800c8ca:	448c      	add	ip, r1
 800c8cc:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800c8d0:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 800c8d4:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 800c8d8:	e61e      	b.n	800c518 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800c8da:	445a      	add	r2, fp
 800c8dc:	4484      	add	ip, r0
 800c8de:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 800c8e2:	e78f      	b.n	800c804 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800c8e4:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 800c8e8:	fa1f f18e 	uxth.w	r1, lr
 800c8ec:	eb01 0806 	add.w	r8, r1, r6
 800c8f0:	b293      	uxth	r3, r2
 800c8f2:	fa1f f888 	uxth.w	r8, r8
 800c8f6:	9306      	str	r3, [sp, #24]
 800c8f8:	fa0f f388 	sxth.w	r3, r8
 800c8fc:	9307      	str	r3, [sp, #28]
 800c8fe:	9f06      	ldr	r7, [sp, #24]
 800c900:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800c904:	443b      	add	r3, r7
 800c906:	b29b      	uxth	r3, r3
 800c908:	4596      	cmp	lr, r2
 800c90a:	9308      	str	r3, [sp, #32]
 800c90c:	da24      	bge.n	800c958 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 800c90e:	9905      	ldr	r1, [sp, #20]
 800c910:	eba3 0308 	sub.w	r3, r3, r8
 800c914:	ebaa 0401 	sub.w	r4, sl, r1
 800c918:	b2a4      	uxth	r4, r4
 800c91a:	b29b      	uxth	r3, r3
 800c91c:	b225      	sxth	r5, r4
 800c91e:	b219      	sxth	r1, r3
 800c920:	eba2 020e 	sub.w	r2, r2, lr
 800c924:	eba9 0000 	sub.w	r0, r9, r0
 800c928:	436a      	muls	r2, r5
 800c92a:	4348      	muls	r0, r1
 800c92c:	4282      	cmp	r2, r0
 800c92e:	9a02      	ldr	r2, [sp, #8]
 800c930:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800c934:	445a      	add	r2, fp
 800c936:	dc06      	bgt.n	800c946 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 800c938:	9b07      	ldr	r3, [sp, #28]
 800c93a:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 800c93e:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 800c942:	44a4      	add	ip, r4
 800c944:	e75e      	b.n	800c804 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800c946:	9904      	ldr	r1, [sp, #16]
 800c948:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 800c94c:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 800c950:	4433      	add	r3, r6
 800c952:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800c956:	e5df      	b.n	800c518 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800c958:	9f06      	ldr	r7, [sp, #24]
 800c95a:	9b04      	ldr	r3, [sp, #16]
 800c95c:	1bc9      	subs	r1, r1, r7
 800c95e:	fa0f f78a 	sxth.w	r7, sl
 800c962:	b289      	uxth	r1, r1
 800c964:	429f      	cmp	r7, r3
 800c966:	fa0f fe81 	sxth.w	lr, r1
 800c96a:	dd23      	ble.n	800c9b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 800c96c:	9a05      	ldr	r2, [sp, #20]
 800c96e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800c972:	9d07      	ldr	r5, [sp, #28]
 800c974:	ebaa 0202 	sub.w	r2, sl, r2
 800c978:	b292      	uxth	r2, r2
 800c97a:	eba5 0a03 	sub.w	sl, r5, r3
 800c97e:	b214      	sxth	r4, r2
 800c980:	eba9 0000 	sub.w	r0, r9, r0
 800c984:	9b02      	ldr	r3, [sp, #8]
 800c986:	fb0e f000 	mul.w	r0, lr, r0
 800c98a:	fb04 fa0a 	mul.w	sl, r4, sl
 800c98e:	00db      	lsls	r3, r3, #3
 800c990:	4550      	cmp	r0, sl
 800c992:	445b      	add	r3, fp
 800c994:	db03      	blt.n	800c99e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 800c996:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 800c99a:	4494      	add	ip, r2
 800c99c:	e732      	b.n	800c804 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800c99e:	9a04      	ldr	r2, [sp, #16]
 800c9a0:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 800c9a4:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 800c9a8:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 800c9ac:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800c9b0:	4431      	add	r1, r6
 800c9b2:	e75c      	b.n	800c86e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 800c9b4:	9b08      	ldr	r3, [sp, #32]
 800c9b6:	eba3 0308 	sub.w	r3, r3, r8
 800c9ba:	b29b      	uxth	r3, r3
 800c9bc:	2d06      	cmp	r5, #6
 800c9be:	b218      	sxth	r0, r3
 800c9c0:	d813      	bhi.n	800c9ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 800c9c2:	9b07      	ldr	r3, [sp, #28]
 800c9c4:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 800c9c8:	1c6b      	adds	r3, r5, #1
 800c9ca:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 800c9ce:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800c9d2:	9b01      	ldr	r3, [sp, #4]
 800c9d4:	9901      	ldr	r1, [sp, #4]
 800c9d6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800c9da:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800c9de:	805a      	strh	r2, [r3, #2]
 800c9e0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800c9e2:	809a      	strh	r2, [r3, #4]
 800c9e4:	f8a3 e006 	strh.w	lr, [r3, #6]
 800c9e8:	e75f      	b.n	800c8aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800c9ea:	9c02      	ldr	r4, [sp, #8]
 800c9ec:	4570      	cmp	r0, lr
 800c9ee:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800c9f2:	db0d      	blt.n	800ca10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 800c9f4:	4431      	add	r1, r6
 800c9f6:	9b06      	ldr	r3, [sp, #24]
 800c9f8:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800c9fc:	b289      	uxth	r1, r1
 800c9fe:	445c      	add	r4, fp
 800ca00:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800ca04:	4419      	add	r1, r3
 800ca06:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 800ca0a:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 800ca0e:	e583      	b.n	800c518 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800ca10:	445c      	add	r4, fp
 800ca12:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 800ca16:	e79b      	b.n	800c950 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 800ca18:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800ca1c:	1e65      	subs	r5, r4, #1
 800ca1e:	b2ad      	uxth	r5, r5
 800ca20:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 800ca24:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800ca28:	42b5      	cmp	r5, r6
 800ca2a:	d044      	beq.n	800cab6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800ca2c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 800ca30:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 800ca34:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 800ca38:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 800ca3c:	4282      	cmp	r2, r0
 800ca3e:	d11f      	bne.n	800ca80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800ca40:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 800ca44:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800ca48:	459c      	cmp	ip, r3
 800ca4a:	d119      	bne.n	800ca80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800ca4c:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 800ca50:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800ca54:	19d8      	adds	r0, r3, r7
 800ca56:	b200      	sxth	r0, r0
 800ca58:	4288      	cmp	r0, r1
 800ca5a:	d109      	bne.n	800ca70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 800ca5c:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 800ca60:	4413      	add	r3, r2
 800ca62:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 800ca66:	4629      	mov	r1, r5
 800ca68:	9801      	ldr	r0, [sp, #4]
 800ca6a:	f7ff fd2b 	bl	800c4c4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ca6e:	e003      	b.n	800ca78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800ca70:	4411      	add	r1, r2
 800ca72:	b209      	sxth	r1, r1
 800ca74:	42b9      	cmp	r1, r7
 800ca76:	d0f3      	beq.n	800ca60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 800ca78:	3d01      	subs	r5, #1
 800ca7a:	b2ad      	uxth	r5, r5
 800ca7c:	3c08      	subs	r4, #8
 800ca7e:	e7d3      	b.n	800ca28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800ca80:	42b9      	cmp	r1, r7
 800ca82:	d1f9      	bne.n	800ca78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800ca84:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 800ca88:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800ca8c:	4299      	cmp	r1, r3
 800ca8e:	d1f3      	bne.n	800ca78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800ca90:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800ca94:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800ca98:	181f      	adds	r7, r3, r0
 800ca9a:	b23f      	sxth	r7, r7
 800ca9c:	42ba      	cmp	r2, r7
 800ca9e:	d105      	bne.n	800caac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 800caa0:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 800caa4:	440b      	add	r3, r1
 800caa6:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800caaa:	e7dc      	b.n	800ca66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 800caac:	440a      	add	r2, r1
 800caae:	b212      	sxth	r2, r2
 800cab0:	4290      	cmp	r0, r2
 800cab2:	d1e1      	bne.n	800ca78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800cab4:	e7f6      	b.n	800caa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 800cab6:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 800caba:	2e07      	cmp	r6, #7
 800cabc:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800cac0:	d812      	bhi.n	800cae8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 800cac2:	1c75      	adds	r5, r6, #1
 800cac4:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 800cac8:	9d01      	ldr	r5, [sp, #4]
 800caca:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800cace:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 800cad2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 800cad6:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 800cada:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800cade:	442c      	add	r4, r5
 800cae0:	8061      	strh	r1, [r4, #2]
 800cae2:	80a2      	strh	r2, [r4, #4]
 800cae4:	80e3      	strh	r3, [r4, #6]
 800cae6:	e581      	b.n	800c5ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800cae8:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800caec:	3e01      	subs	r6, #1
 800caee:	445c      	add	r4, fp
 800caf0:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 800caf4:	f04f 37ff 	mov.w	r7, #4294967295
 800caf8:	2500      	movs	r5, #0
 800cafa:	9305      	str	r3, [sp, #20]
 800cafc:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800cb00:	9302      	str	r3, [sp, #8]
 800cb02:	1e72      	subs	r2, r6, #1
 800cb04:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800cb08:	9304      	str	r3, [sp, #16]
 800cb0a:	4691      	mov	r9, r2
 800cb0c:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 800cb10:	f1b9 3fff 	cmp.w	r9, #4294967295
 800cb14:	bf14      	ite	ne
 800cb16:	9905      	ldrne	r1, [sp, #20]
 800cb18:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800cb1c:	6818      	ldr	r0, [r3, #0]
 800cb1e:	9207      	str	r2, [sp, #28]
 800cb20:	bf18      	it	ne
 800cb22:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800cb26:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800cb2a:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800cb2e:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800cb32:	9306      	str	r3, [sp, #24]
 800cb34:	fb18 f801 	smulbb	r8, r8, r1
 800cb38:	6859      	ldr	r1, [r3, #4]
 800cb3a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800cb3e:	4671      	mov	r1, lr
 800cb40:	a80c      	add	r0, sp, #48	@ 0x30
 800cb42:	f7ff fb23 	bl	800c18c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cb46:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800cb4a:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800cb4e:	9b04      	ldr	r3, [sp, #16]
 800cb50:	9a02      	ldr	r2, [sp, #8]
 800cb52:	fb10 f001 	smulbb	r0, r0, r1
 800cb56:	fb02 8803 	mla	r8, r2, r3, r8
 800cb5a:	eba0 0108 	sub.w	r1, r0, r8
 800cb5e:	f04f 0c08 	mov.w	ip, #8
 800cb62:	fb90 f0fc 	sdiv	r0, r0, ip
 800cb66:	4288      	cmp	r0, r1
 800cb68:	dc20      	bgt.n	800cbac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 800cb6a:	4551      	cmp	r1, sl
 800cb6c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800cb70:	da03      	bge.n	800cb7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 800cb72:	b1d9      	cbz	r1, 800cbac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 800cb74:	468a      	mov	sl, r1
 800cb76:	464f      	mov	r7, r9
 800cb78:	4635      	mov	r5, r6
 800cb7a:	f109 39ff 	add.w	r9, r9, #4294967295
 800cb7e:	f119 0f02 	cmn.w	r9, #2
 800cb82:	d1c5      	bne.n	800cb10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 800cb84:	4616      	mov	r6, r2
 800cb86:	3201      	adds	r2, #1
 800cb88:	f1a4 0408 	sub.w	r4, r4, #8
 800cb8c:	d1b6      	bne.n	800cafc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 800cb8e:	9b01      	ldr	r3, [sp, #4]
 800cb90:	b2ac      	uxth	r4, r5
 800cb92:	00ed      	lsls	r5, r5, #3
 800cb94:	1958      	adds	r0, r3, r5
 800cb96:	1c7b      	adds	r3, r7, #1
 800cb98:	d10b      	bne.n	800cbb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 800cb9a:	4601      	mov	r1, r0
 800cb9c:	9803      	ldr	r0, [sp, #12]
 800cb9e:	f7ff faf5 	bl	800c18c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cba2:	4621      	mov	r1, r4
 800cba4:	9801      	ldr	r0, [sp, #4]
 800cba6:	f7ff fc8d 	bl	800c4c4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800cbaa:	e4b5      	b.n	800c518 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800cbac:	464f      	mov	r7, r9
 800cbae:	4635      	mov	r5, r6
 800cbb0:	e7ed      	b.n	800cb8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 800cbb2:	9b01      	ldr	r3, [sp, #4]
 800cbb4:	00ff      	lsls	r7, r7, #3
 800cbb6:	19d9      	adds	r1, r3, r7
 800cbb8:	f7ff fae8 	bl	800c18c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cbbc:	9b03      	ldr	r3, [sp, #12]
 800cbbe:	cb03      	ldmia	r3!, {r0, r1}
 800cbc0:	445f      	add	r7, fp
 800cbc2:	445d      	add	r5, fp
 800cbc4:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 800cbc8:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 800cbcc:	f855 0fac 	ldr.w	r0, [r5, #172]!
 800cbd0:	9b03      	ldr	r3, [sp, #12]
 800cbd2:	6869      	ldr	r1, [r5, #4]
 800cbd4:	c303      	stmia	r3!, {r0, r1}
 800cbd6:	e7e4      	b.n	800cba2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

0800cbd8 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800cbd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cbdc:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 800cbe0:	b09b      	sub	sp, #108	@ 0x6c
 800cbe2:	4604      	mov	r4, r0
 800cbe4:	4630      	mov	r0, r6
 800cbe6:	f7fc fdf0 	bl	80097ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800cbea:	4605      	mov	r5, r0
 800cbec:	b948      	cbnz	r0, 800cc02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 800cbee:	6823      	ldr	r3, [r4, #0]
 800cbf0:	e896 0006 	ldmia.w	r6, {r1, r2}
 800cbf4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800cbf6:	4620      	mov	r0, r4
 800cbf8:	4798      	blx	r3
 800cbfa:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 800cbfe:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 800cc02:	4bc6      	ldr	r3, [pc, #792]	@ (800cf1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 800cc04:	681b      	ldr	r3, [r3, #0]
 800cc06:	2b00      	cmp	r3, #0
 800cc08:	d03f      	beq.n	800cc8a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800cc0a:	4dc5      	ldr	r5, [pc, #788]	@ (800cf20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 800cc0c:	4628      	mov	r0, r5
 800cc0e:	f7fc fddc 	bl	80097ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800cc12:	4606      	mov	r6, r0
 800cc14:	2800      	cmp	r0, #0
 800cc16:	d138      	bne.n	800cc8a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800cc18:	4628      	mov	r0, r5
 800cc1a:	f7ff f92f 	bl	800be7c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800cc1e:	6823      	ldr	r3, [r4, #0]
 800cc20:	6829      	ldr	r1, [r5, #0]
 800cc22:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800cc24:	686a      	ldr	r2, [r5, #4]
 800cc26:	4620      	mov	r0, r4
 800cc28:	4798      	blx	r3
 800cc2a:	802e      	strh	r6, [r5, #0]
 800cc2c:	806e      	strh	r6, [r5, #2]
 800cc2e:	80ae      	strh	r6, [r5, #4]
 800cc30:	80ee      	strh	r6, [r5, #6]
 800cc32:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 800cc36:	4dbb      	ldr	r5, [pc, #748]	@ (800cf24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800cc38:	4640      	mov	r0, r8
 800cc3a:	f7ff fbeb 	bl	800c414 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800cc3e:	882e      	ldrh	r6, [r5, #0]
 800cc40:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800cc44:	4633      	mov	r3, r6
 800cc46:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800cc4a:	42bb      	cmp	r3, r7
 800cc4c:	d224      	bcs.n	800cc98 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800cc4e:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 800cc52:	2907      	cmp	r1, #7
 800cc54:	d816      	bhi.n	800cc84 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 800cc56:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800cc5a:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 800cc5e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 800cc62:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 800cc66:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 800cc6a:	1c4a      	adds	r2, r1, #1
 800cc6c:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 800cc70:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 800cc74:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 800cc78:	f8a2 a002 	strh.w	sl, [r2, #2]
 800cc7c:	f8a2 e004 	strh.w	lr, [r2, #4]
 800cc80:	f8a2 c006 	strh.w	ip, [r2, #6]
 800cc84:	3301      	adds	r3, #1
 800cc86:	b29b      	uxth	r3, r3
 800cc88:	e7df      	b.n	800cc4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 800cc8a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800cc8e:	2b00      	cmp	r3, #0
 800cc90:	d1cf      	bne.n	800cc32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 800cc92:	b01b      	add	sp, #108	@ 0x6c
 800cc94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cc98:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 800cc9c:	42b3      	cmp	r3, r6
 800cc9e:	d90c      	bls.n	800ccba <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 800cca0:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800cca4:	6822      	ldr	r2, [r4, #0]
 800cca6:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 800ccaa:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 800ccac:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 800ccb0:	4620      	mov	r0, r4
 800ccb2:	3601      	adds	r6, #1
 800ccb4:	47b8      	blx	r7
 800ccb6:	b2b6      	uxth	r6, r6
 800ccb8:	e7ee      	b.n	800cc98 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800ccba:	4a9b      	ldr	r2, [pc, #620]	@ (800cf28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800ccbc:	6813      	ldr	r3, [r2, #0]
 800ccbe:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 800ccc2:	2b01      	cmp	r3, #1
 800ccc4:	4691      	mov	r9, r2
 800ccc6:	f040 80e2 	bne.w	800ce8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 800ccca:	8829      	ldrh	r1, [r5, #0]
 800cccc:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800ccd0:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 800ccd4:	33ae      	adds	r3, #174	@ 0xae
 800ccd6:	2600      	movs	r6, #0
 800ccd8:	428f      	cmp	r7, r1
 800ccda:	f103 0308 	add.w	r3, r3, #8
 800ccde:	dd0a      	ble.n	800ccf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 800cce0:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 800cce4:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 800cce8:	4402      	add	r2, r0
 800ccea:	b212      	sxth	r2, r2
 800ccec:	4296      	cmp	r6, r2
 800ccee:	bfb8      	it	lt
 800ccf0:	4616      	movlt	r6, r2
 800ccf2:	3101      	adds	r1, #1
 800ccf4:	e7f0      	b.n	800ccd8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 800ccf6:	4b8d      	ldr	r3, [pc, #564]	@ (800cf2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800ccf8:	f8df 922c 	ldr.w	r9, [pc, #556]	@ 800cf28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 800ccfc:	881b      	ldrh	r3, [r3, #0]
 800ccfe:	2b0f      	cmp	r3, #15
 800cd00:	bf88      	it	hi
 800cd02:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 800cd06:	f04f 0300 	mov.w	r3, #0
 800cd0a:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800cd0e:	bf98      	it	ls
 800cd10:	f04f 0b01 	movls.w	fp, #1
 800cd14:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 800cd18:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 800cd1c:	4b82      	ldr	r3, [pc, #520]	@ (800cf28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800cd1e:	4438      	add	r0, r7
 800cd20:	b207      	sxth	r7, r0
 800cd22:	6818      	ldr	r0, [r3, #0]
 800cd24:	42b7      	cmp	r7, r6
 800cd26:	6803      	ldr	r3, [r0, #0]
 800cd28:	f280 8083 	bge.w	800ce32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800cd2c:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800cd30:	4798      	blx	r3
 800cd32:	eb07 030b 	add.w	r3, r7, fp
 800cd36:	4298      	cmp	r0, r3
 800cd38:	da07      	bge.n	800cd4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 800cd3a:	42b0      	cmp	r0, r6
 800cd3c:	da05      	bge.n	800cd4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 800cd3e:	4287      	cmp	r7, r0
 800cd40:	dd6c      	ble.n	800ce1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800cd42:	2f00      	cmp	r7, #0
 800cd44:	dd6a      	ble.n	800ce1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800cd46:	4630      	mov	r0, r6
 800cd48:	e004      	b.n	800cd54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 800cd4a:	4287      	cmp	r7, r0
 800cd4c:	dcfb      	bgt.n	800cd46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 800cd4e:	42b0      	cmp	r0, r6
 800cd50:	bfa8      	it	ge
 800cd52:	4630      	movge	r0, r6
 800cd54:	4b76      	ldr	r3, [pc, #472]	@ (800cf30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800cd56:	f8ad 7016 	strh.w	r7, [sp, #22]
 800cd5a:	1bc0      	subs	r0, r0, r7
 800cd5c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cd60:	882f      	ldrh	r7, [r5, #0]
 800cd62:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cd66:	2200      	movs	r2, #0
 800cd68:	f8ad 2014 	strh.w	r2, [sp, #20]
 800cd6c:	f8ad 001a 	strh.w	r0, [sp, #26]
 800cd70:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800cd74:	42bb      	cmp	r3, r7
 800cd76:	d9cd      	bls.n	800cd14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800cd78:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800cd7c:	ab07      	add	r3, sp, #28
 800cd7e:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800cd82:	6851      	ldr	r1, [r2, #4]
 800cd84:	c303      	stmia	r3!, {r0, r1}
 800cd86:	a905      	add	r1, sp, #20
 800cd88:	a807      	add	r0, sp, #28
 800cd8a:	f7ff f966 	bl	800c05a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800cd8e:	2800      	cmp	r0, #0
 800cd90:	d04c      	beq.n	800ce2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 800cd92:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800cd96:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800cd9a:	f8bd a020 	ldrh.w	sl, [sp, #32]
 800cd9e:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800cda2:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800cda6:	9302      	str	r3, [sp, #8]
 800cda8:	4686      	mov	lr, r0
 800cdaa:	4290      	cmp	r0, r2
 800cdac:	4450      	add	r0, sl
 800cdae:	f8bd a018 	ldrh.w	sl, [sp, #24]
 800cdb2:	bfb8      	it	lt
 800cdb4:	4696      	movlt	lr, r2
 800cdb6:	4452      	add	r2, sl
 800cdb8:	4299      	cmp	r1, r3
 800cdba:	b280      	uxth	r0, r0
 800cdbc:	b292      	uxth	r2, r2
 800cdbe:	468c      	mov	ip, r1
 800cdc0:	fa0f fa82 	sxth.w	sl, r2
 800cdc4:	bfb8      	it	lt
 800cdc6:	469c      	movlt	ip, r3
 800cdc8:	b203      	sxth	r3, r0
 800cdca:	4553      	cmp	r3, sl
 800cdcc:	bfb8      	it	lt
 800cdce:	4602      	movlt	r2, r0
 800cdd0:	eba2 020e 	sub.w	r2, r2, lr
 800cdd4:	f8ad 2020 	strh.w	r2, [sp, #32]
 800cdd8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 800cddc:	9b02      	ldr	r3, [sp, #8]
 800cdde:	f8ad e01c 	strh.w	lr, [sp, #28]
 800cde2:	4411      	add	r1, r2
 800cde4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800cde8:	f8ad c01e 	strh.w	ip, [sp, #30]
 800cdec:	4413      	add	r3, r2
 800cdee:	b289      	uxth	r1, r1
 800cdf0:	b29b      	uxth	r3, r3
 800cdf2:	b208      	sxth	r0, r1
 800cdf4:	b21a      	sxth	r2, r3
 800cdf6:	4290      	cmp	r0, r2
 800cdf8:	bfb8      	it	lt
 800cdfa:	460b      	movlt	r3, r1
 800cdfc:	eba3 030c 	sub.w	r3, r3, ip
 800ce00:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800ce04:	a807      	add	r0, sp, #28
 800ce06:	f7fc fce0 	bl	80097ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800ce0a:	b920      	cbnz	r0, 800ce16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 800ce0c:	6823      	ldr	r3, [r4, #0]
 800ce0e:	a907      	add	r1, sp, #28
 800ce10:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800ce12:	4620      	mov	r0, r4
 800ce14:	4798      	blx	r3
 800ce16:	3701      	adds	r7, #1
 800ce18:	b2bf      	uxth	r7, r7
 800ce1a:	e7a9      	b.n	800cd70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 800ce1c:	f8d9 0000 	ldr.w	r0, [r9]
 800ce20:	6803      	ldr	r3, [r0, #0]
 800ce22:	2101      	movs	r1, #1
 800ce24:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800ce28:	4798      	blx	r3
 800ce2a:	e773      	b.n	800cd14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800ce2c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800ce30:	e7e8      	b.n	800ce04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 800ce32:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ce34:	4798      	blx	r3
 800ce36:	4b3f      	ldr	r3, [pc, #252]	@ (800cf34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800ce38:	781b      	ldrb	r3, [r3, #0]
 800ce3a:	2b00      	cmp	r3, #0
 800ce3c:	f43f af29 	beq.w	800cc92 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800ce40:	2300      	movs	r3, #0
 800ce42:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 800ce46:	882b      	ldrh	r3, [r5, #0]
 800ce48:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 800ce4c:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800ce50:	42ab      	cmp	r3, r5
 800ce52:	f4bf af1e 	bcs.w	800cc92 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800ce56:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 800ce5a:	2907      	cmp	r1, #7
 800ce5c:	d814      	bhi.n	800ce88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 800ce5e:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 800ce62:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 800ce66:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 800ce6a:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 800ce6e:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 800ce72:	1c4a      	adds	r2, r1, #1
 800ce74:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 800ce78:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 800ce7c:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 800ce80:	f8a2 c002 	strh.w	ip, [r2, #2]
 800ce84:	8097      	strh	r7, [r2, #4]
 800ce86:	80d6      	strh	r6, [r2, #6]
 800ce88:	3301      	adds	r3, #1
 800ce8a:	b29b      	uxth	r3, r3
 800ce8c:	e7e0      	b.n	800ce50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 800ce8e:	2b02      	cmp	r3, #2
 800ce90:	f040 8133 	bne.w	800d0fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 800ce94:	4b28      	ldr	r3, [pc, #160]	@ (800cf38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 800ce96:	781b      	ldrb	r3, [r3, #0]
 800ce98:	2b01      	cmp	r3, #1
 800ce9a:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 800ce9e:	f000 8098 	beq.w	800cfd2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800cea2:	882a      	ldrh	r2, [r5, #0]
 800cea4:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 800cea8:	3201      	adds	r2, #1
 800ceaa:	b292      	uxth	r2, r2
 800ceac:	2900      	cmp	r1, #0
 800ceae:	d0c2      	beq.n	800ce36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800ceb0:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 800ceb4:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 800ceb8:	441e      	add	r6, r3
 800ceba:	b236      	sxth	r6, r6
 800cebc:	4694      	mov	ip, r2
 800cebe:	f04f 0900 	mov.w	r9, #0
 800cec2:	fa1f f38c 	uxth.w	r3, ip
 800cec6:	4299      	cmp	r1, r3
 800cec8:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 800cecc:	f240 80bf 	bls.w	800d04e <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 800ced0:	4427      	add	r7, r4
 800ced2:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 800ced6:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 800ceda:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 800cede:	4283      	cmp	r3, r0
 800cee0:	f340 80a1 	ble.w	800d026 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 800cee4:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 800cee8:	4406      	add	r6, r0
 800ceea:	b236      	sxth	r6, r6
 800ceec:	429e      	cmp	r6, r3
 800ceee:	bfa8      	it	ge
 800cef0:	461e      	movge	r6, r3
 800cef2:	46e1      	mov	r9, ip
 800cef4:	f10c 0c01 	add.w	ip, ip, #1
 800cef8:	e7e3      	b.n	800cec2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 800cefa:	d10a      	bne.n	800cf12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 800cefc:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 800cf00:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 800cf04:	4562      	cmp	r2, ip
 800cf06:	bfb8      	it	lt
 800cf08:	4662      	movlt	r2, ip
 800cf0a:	4288      	cmp	r0, r1
 800cf0c:	bfb8      	it	lt
 800cf0e:	461f      	movlt	r7, r3
 800cf10:	e087      	b.n	800d022 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 800cf12:	428a      	cmp	r2, r1
 800cf14:	bfb8      	it	lt
 800cf16:	460a      	movlt	r2, r1
 800cf18:	e083      	b.n	800d022 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 800cf1a:	bf00      	nop
 800cf1c:	20013838 	.word	0x20013838
 800cf20:	20013844 	.word	0x20013844
 800cf24:	2000008c 	.word	0x2000008c
 800cf28:	20013800 	.word	0x20013800
 800cf2c:	200137f6 	.word	0x200137f6
 800cf30:	200137f4 	.word	0x200137f4
 800cf34:	200137fe 	.word	0x200137fe
 800cf38:	200137f8 	.word	0x200137f8
 800cf3c:	19a1      	adds	r1, r4, r6
 800cf3e:	ab07      	add	r3, sp, #28
 800cf40:	f851 0fac 	ldr.w	r0, [r1, #172]!
 800cf44:	6849      	ldr	r1, [r1, #4]
 800cf46:	c303      	stmia	r3!, {r0, r1}
 800cf48:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800cf4c:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800cf50:	2b13      	cmp	r3, #19
 800cf52:	bfd8      	it	le
 800cf54:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800cf58:	f8ad 201c 	strh.w	r2, [sp, #28]
 800cf5c:	440b      	add	r3, r1
 800cf5e:	1a9b      	subs	r3, r3, r2
 800cf60:	a807      	add	r0, sp, #28
 800cf62:	f8ad 3020 	strh.w	r3, [sp, #32]
 800cf66:	f7fe ffa3 	bl	800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800cf6a:	a807      	add	r0, sp, #28
 800cf6c:	f7fc fc2d 	bl	80097ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800cf70:	bb78      	cbnz	r0, 800cfd2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800cf72:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 800cf76:	f8d9 0000 	ldr.w	r0, [r9]
 800cf7a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800cf7e:	f8d0 e000 	ldr.w	lr, [r0]
 800cf82:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800cf86:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800cf8a:	f1bc 0f14 	cmp.w	ip, #20
 800cf8e:	bfa8      	it	ge
 800cf90:	f04f 0c14 	movge.w	ip, #20
 800cf94:	fa1f fc8c 	uxth.w	ip, ip
 800cf98:	f8cd c000 	str.w	ip, [sp]
 800cf9c:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 800cfa0:	47d8      	blx	fp
 800cfa2:	4683      	mov	fp, r0
 800cfa4:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800cfa8:	a807      	add	r0, sp, #28
 800cfaa:	f7fe ff67 	bl	800be7c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800cfae:	6823      	ldr	r3, [r4, #0]
 800cfb0:	4426      	add	r6, r4
 800cfb2:	4620      	mov	r0, r4
 800cfb4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800cfb6:	a907      	add	r1, sp, #28
 800cfb8:	4798      	blx	r3
 800cfba:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800cfbe:	eba0 000b 	sub.w	r0, r0, fp
 800cfc2:	b200      	sxth	r0, r0
 800cfc4:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 800cfc8:	b918      	cbnz	r0, 800cfd2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800cfca:	b2b9      	uxth	r1, r7
 800cfcc:	4650      	mov	r0, sl
 800cfce:	f7ff fa79 	bl	800c4c4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800cfd2:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 800cfd6:	f1bb 0f00 	cmp.w	fp, #0
 800cfda:	f43f af2c 	beq.w	800ce36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800cfde:	882b      	ldrh	r3, [r5, #0]
 800cfe0:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 800cfe4:	3301      	adds	r3, #1
 800cfe6:	b29b      	uxth	r3, r3
 800cfe8:	2700      	movs	r7, #0
 800cfea:	b299      	uxth	r1, r3
 800cfec:	458b      	cmp	fp, r1
 800cfee:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 800cff2:	d9a3      	bls.n	800cf3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 800cff4:	4426      	add	r6, r4
 800cff6:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 800cffa:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 800cffe:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800d002:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 800d006:	4408      	add	r0, r1
 800d008:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 800d00c:	4461      	add	r1, ip
 800d00e:	b200      	sxth	r0, r0
 800d010:	b209      	sxth	r1, r1
 800d012:	4288      	cmp	r0, r1
 800d014:	f6bf af71 	bge.w	800cefa <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 800d018:	4584      	cmp	ip, r0
 800d01a:	4662      	mov	r2, ip
 800d01c:	461f      	mov	r7, r3
 800d01e:	bfb8      	it	lt
 800d020:	4602      	movlt	r2, r0
 800d022:	3301      	adds	r3, #1
 800d024:	e7e1      	b.n	800cfea <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 800d026:	d10e      	bne.n	800d046 <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 800d028:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 800d02c:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 800d030:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 800d034:	4473      	add	r3, lr
 800d036:	b21b      	sxth	r3, r3
 800d038:	429e      	cmp	r6, r3
 800d03a:	bfa8      	it	ge
 800d03c:	461e      	movge	r6, r3
 800d03e:	4287      	cmp	r7, r0
 800d040:	bfb8      	it	lt
 800d042:	46e1      	movlt	r9, ip
 800d044:	e756      	b.n	800cef4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800d046:	4286      	cmp	r6, r0
 800d048:	bfa8      	it	ge
 800d04a:	4606      	movge	r6, r0
 800d04c:	e752      	b.n	800cef4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800d04e:	eb0a 0007 	add.w	r0, sl, r7
 800d052:	4427      	add	r7, r4
 800d054:	e9cd 2102 	strd	r2, r1, [sp, #8]
 800d058:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 800d05c:	f1bb 0f13 	cmp.w	fp, #19
 800d060:	bfde      	ittt	le
 800d062:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 800d066:	445e      	addle	r6, fp
 800d068:	b236      	sxthle	r6, r6
 800d06a:	f7fc fbae 	bl	80097ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800d06e:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 800d072:	2800      	cmp	r0, #0
 800d074:	f47f af1a 	bne.w	800ceac <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 800d078:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 800d07c:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800d080:	482a      	ldr	r0, [pc, #168]	@ (800d12c <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 800d082:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 800d086:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 800d08a:	6800      	ldr	r0, [r0, #0]
 800d08c:	f8ad 101c 	strh.w	r1, [sp, #28]
 800d090:	1ab6      	subs	r6, r6, r2
 800d092:	2e14      	cmp	r6, #20
 800d094:	f8ad 201e 	strh.w	r2, [sp, #30]
 800d098:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d09c:	bfa8      	it	ge
 800d09e:	2614      	movge	r6, #20
 800d0a0:	f8d0 c000 	ldr.w	ip, [r0]
 800d0a4:	b2b6      	uxth	r6, r6
 800d0a6:	fa1f fb8b 	uxth.w	fp, fp
 800d0aa:	455e      	cmp	r6, fp
 800d0ac:	bf94      	ite	ls
 800d0ae:	9600      	strls	r6, [sp, #0]
 800d0b0:	f8cd b000 	strhi.w	fp, [sp]
 800d0b4:	b292      	uxth	r2, r2
 800d0b6:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 800d0ba:	b29b      	uxth	r3, r3
 800d0bc:	b289      	uxth	r1, r1
 800d0be:	47b0      	blx	r6
 800d0c0:	6823      	ldr	r3, [r4, #0]
 800d0c2:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800d0c6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800d0c8:	a907      	add	r1, sp, #28
 800d0ca:	4620      	mov	r0, r4
 800d0cc:	4798      	blx	r3
 800d0ce:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 800d0d2:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 800d0d6:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 800d0da:	1a5b      	subs	r3, r3, r1
 800d0dc:	440a      	add	r2, r1
 800d0de:	b21b      	sxth	r3, r3
 800d0e0:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 800d0e4:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 800d0e8:	2b00      	cmp	r3, #0
 800d0ea:	f47f aeda 	bne.w	800cea2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 800d0ee:	fa1f f189 	uxth.w	r1, r9
 800d0f2:	4650      	mov	r0, sl
 800d0f4:	f7ff f9e6 	bl	800c4c4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d0f8:	e6d3      	b.n	800cea2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 800d0fa:	882e      	ldrh	r6, [r5, #0]
 800d0fc:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800d100:	42b3      	cmp	r3, r6
 800d102:	f67f ae98 	bls.w	800ce36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800d106:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 800d10a:	ab07      	add	r3, sp, #28
 800d10c:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800d110:	6851      	ldr	r1, [r2, #4]
 800d112:	c303      	stmia	r3!, {r0, r1}
 800d114:	a807      	add	r0, sp, #28
 800d116:	f7fc fb58 	bl	80097ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800d11a:	b920      	cbnz	r0, 800d126 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 800d11c:	6823      	ldr	r3, [r4, #0]
 800d11e:	a907      	add	r1, sp, #28
 800d120:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800d122:	4620      	mov	r0, r4
 800d124:	4798      	blx	r3
 800d126:	3601      	adds	r6, #1
 800d128:	b2b6      	uxth	r6, r6
 800d12a:	e7e7      	b.n	800d0fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 800d12c:	20013800 	.word	0x20013800

0800d130 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800d130:	4b03      	ldr	r3, [pc, #12]	@ (800d140 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800d132:	2200      	movs	r2, #0
 800d134:	801a      	strh	r2, [r3, #0]
 800d136:	805a      	strh	r2, [r3, #2]
 800d138:	809a      	strh	r2, [r3, #4]
 800d13a:	80da      	strh	r2, [r3, #6]
 800d13c:	4770      	bx	lr
 800d13e:	bf00      	nop
 800d140:	20013844 	.word	0x20013844

0800d144 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800d144:	b513      	push	{r0, r1, r4, lr}
 800d146:	6803      	ldr	r3, [r0, #0]
 800d148:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800d14c:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800d150:	f8ad 1004 	strh.w	r1, [sp, #4]
 800d154:	2400      	movs	r4, #0
 800d156:	9400      	str	r4, [sp, #0]
 800d158:	f8ad 2006 	strh.w	r2, [sp, #6]
 800d15c:	691b      	ldr	r3, [r3, #16]
 800d15e:	4669      	mov	r1, sp
 800d160:	4798      	blx	r3
 800d162:	b002      	add	sp, #8
 800d164:	bd10      	pop	{r4, pc}

0800d166 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800d166:	b538      	push	{r3, r4, r5, lr}
 800d168:	680b      	ldr	r3, [r1, #0]
 800d16a:	460c      	mov	r4, r1
 800d16c:	68db      	ldr	r3, [r3, #12]
 800d16e:	4605      	mov	r5, r0
 800d170:	4798      	blx	r3
 800d172:	6823      	ldr	r3, [r4, #0]
 800d174:	4620      	mov	r0, r4
 800d176:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d178:	4629      	mov	r1, r5
 800d17a:	4798      	blx	r3
 800d17c:	4628      	mov	r0, r5
 800d17e:	bd38      	pop	{r3, r4, r5, pc}

0800d180 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800d180:	b410      	push	{r4}
 800d182:	880a      	ldrh	r2, [r1, #0]
 800d184:	8884      	ldrh	r4, [r0, #4]
 800d186:	4422      	add	r2, r4
 800d188:	800a      	strh	r2, [r1, #0]
 800d18a:	88c4      	ldrh	r4, [r0, #6]
 800d18c:	884a      	ldrh	r2, [r1, #2]
 800d18e:	4422      	add	r2, r4
 800d190:	804a      	strh	r2, [r1, #2]
 800d192:	6940      	ldr	r0, [r0, #20]
 800d194:	b120      	cbz	r0, 800d1a0 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800d196:	6803      	ldr	r3, [r0, #0]
 800d198:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d19c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d19e:	4718      	bx	r3
 800d1a0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d1a4:	4770      	bx	lr

0800d1a6 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800d1a6:	b570      	push	{r4, r5, r6, lr}
 800d1a8:	8882      	ldrh	r2, [r0, #4]
 800d1aa:	880b      	ldrh	r3, [r1, #0]
 800d1ac:	4413      	add	r3, r2
 800d1ae:	800b      	strh	r3, [r1, #0]
 800d1b0:	88c2      	ldrh	r2, [r0, #6]
 800d1b2:	884b      	ldrh	r3, [r1, #2]
 800d1b4:	460c      	mov	r4, r1
 800d1b6:	4413      	add	r3, r2
 800d1b8:	804b      	strh	r3, [r1, #2]
 800d1ba:	4605      	mov	r5, r0
 800d1bc:	1d01      	adds	r1, r0, #4
 800d1be:	4620      	mov	r0, r4
 800d1c0:	f7fc fac0 	bl	8009744 <_ZN8touchgfx4RectaNERKS0_>
 800d1c4:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800d1c8:	2b00      	cmp	r3, #0
 800d1ca:	dd0b      	ble.n	800d1e4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d1cc:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800d1d0:	2b00      	cmp	r3, #0
 800d1d2:	dd07      	ble.n	800d1e4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d1d4:	6968      	ldr	r0, [r5, #20]
 800d1d6:	b128      	cbz	r0, 800d1e4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d1d8:	6803      	ldr	r3, [r0, #0]
 800d1da:	4621      	mov	r1, r4
 800d1dc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800d1de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d1e2:	4718      	bx	r3
 800d1e4:	bd70      	pop	{r4, r5, r6, pc}
	...

0800d1e8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800d1e8:	b570      	push	{r4, r5, r6, lr}
 800d1ea:	8882      	ldrh	r2, [r0, #4]
 800d1ec:	880b      	ldrh	r3, [r1, #0]
 800d1ee:	4413      	add	r3, r2
 800d1f0:	800b      	strh	r3, [r1, #0]
 800d1f2:	88c2      	ldrh	r2, [r0, #6]
 800d1f4:	884b      	ldrh	r3, [r1, #2]
 800d1f6:	460c      	mov	r4, r1
 800d1f8:	4413      	add	r3, r2
 800d1fa:	804b      	strh	r3, [r1, #2]
 800d1fc:	4605      	mov	r5, r0
 800d1fe:	1d01      	adds	r1, r0, #4
 800d200:	4620      	mov	r0, r4
 800d202:	f7fc fa9f 	bl	8009744 <_ZN8touchgfx4RectaNERKS0_>
 800d206:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800d20a:	2b00      	cmp	r3, #0
 800d20c:	dd19      	ble.n	800d242 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800d20e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800d212:	2b00      	cmp	r3, #0
 800d214:	dd15      	ble.n	800d242 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800d216:	6968      	ldr	r0, [r5, #20]
 800d218:	b128      	cbz	r0, 800d226 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800d21a:	6803      	ldr	r3, [r0, #0]
 800d21c:	4621      	mov	r1, r4
 800d21e:	691b      	ldr	r3, [r3, #16]
 800d220:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d224:	4718      	bx	r3
 800d226:	4b07      	ldr	r3, [pc, #28]	@ (800d244 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800d228:	681b      	ldr	r3, [r3, #0]
 800d22a:	3304      	adds	r3, #4
 800d22c:	429d      	cmp	r5, r3
 800d22e:	d108      	bne.n	800d242 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800d230:	f7fe fff2 	bl	800c218 <_ZN8touchgfx11Application11getInstanceEv>
 800d234:	6803      	ldr	r3, [r0, #0]
 800d236:	6821      	ldr	r1, [r4, #0]
 800d238:	6862      	ldr	r2, [r4, #4]
 800d23a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d23c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d240:	4718      	bx	r3
 800d242:	bd70      	pop	{r4, r5, r6, pc}
 800d244:	2001383c 	.word	0x2001383c

0800d248 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800d248:	b570      	push	{r4, r5, r6, lr}
 800d24a:	4604      	mov	r4, r0
 800d24c:	4616      	mov	r6, r2
 800d24e:	460d      	mov	r5, r1
 800d250:	b901      	cbnz	r1, 800d254 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800d252:	b192      	cbz	r2, 800d27a <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800d254:	6823      	ldr	r3, [r4, #0]
 800d256:	4620      	mov	r0, r4
 800d258:	699b      	ldr	r3, [r3, #24]
 800d25a:	4798      	blx	r3
 800d25c:	88e2      	ldrh	r2, [r4, #6]
 800d25e:	88a1      	ldrh	r1, [r4, #4]
 800d260:	4432      	add	r2, r6
 800d262:	4429      	add	r1, r5
 800d264:	4620      	mov	r0, r4
 800d266:	b212      	sxth	r2, r2
 800d268:	b209      	sxth	r1, r1
 800d26a:	f7f5 fa5a 	bl	8002722 <_ZN8touchgfx8Drawable5setXYEss>
 800d26e:	6823      	ldr	r3, [r4, #0]
 800d270:	4620      	mov	r0, r4
 800d272:	699b      	ldr	r3, [r3, #24]
 800d274:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d278:	4718      	bx	r3
 800d27a:	bd70      	pop	{r4, r5, r6, pc}

0800d27c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800d27c:	b510      	push	{r4, lr}
 800d27e:	4604      	mov	r4, r0
 800d280:	4608      	mov	r0, r1
 800d282:	2300      	movs	r3, #0
 800d284:	8023      	strh	r3, [r4, #0]
 800d286:	8063      	strh	r3, [r4, #2]
 800d288:	6803      	ldr	r3, [r0, #0]
 800d28a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800d28e:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800d292:	80a1      	strh	r1, [r4, #4]
 800d294:	80e2      	strh	r2, [r4, #6]
 800d296:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d298:	4621      	mov	r1, r4
 800d29a:	4798      	blx	r3
 800d29c:	4620      	mov	r0, r4
 800d29e:	bd10      	pop	{r4, pc}

0800d2a0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 800d2a0:	b538      	push	{r3, r4, r5, lr}
 800d2a2:	4605      	mov	r5, r0
 800d2a4:	f000 ffaa 	bl	800e1fc <_ZNK8touchgfx6Bitmap9getFormatEv>
 800d2a8:	4604      	mov	r4, r0
 800d2aa:	4628      	mov	r0, r5
 800d2ac:	f000 feea 	bl	800e084 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 800d2b0:	2800      	cmp	r0, #0
 800d2b2:	bf14      	ite	ne
 800d2b4:	2002      	movne	r0, #2
 800d2b6:	2000      	moveq	r0, #0
 800d2b8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 800d2bc:	b280      	uxth	r0, r0
 800d2be:	bd38      	pop	{r3, r4, r5, pc}

0800d2c0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 800d2c0:	b538      	push	{r3, r4, r5, lr}
 800d2c2:	4605      	mov	r5, r0
 800d2c4:	f000 ff9a 	bl	800e1fc <_ZNK8touchgfx6Bitmap9getFormatEv>
 800d2c8:	4604      	mov	r4, r0
 800d2ca:	4628      	mov	r0, r5
 800d2cc:	f000 feda 	bl	800e084 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 800d2d0:	2800      	cmp	r0, #0
 800d2d2:	bf14      	ite	ne
 800d2d4:	2002      	movne	r0, #2
 800d2d6:	2000      	moveq	r0, #0
 800d2d8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 800d2dc:	f040 0001 	orr.w	r0, r0, #1
 800d2e0:	b280      	uxth	r0, r0
 800d2e2:	bd38      	pop	{r3, r4, r5, pc}

0800d2e4 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 800d2e4:	2000      	movs	r0, #0
 800d2e6:	4770      	bx	lr

0800d2e8 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 800d2e8:	2001      	movs	r0, #1
 800d2ea:	4770      	bx	lr

0800d2ec <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 800d2ec:	2002      	movs	r0, #2
 800d2ee:	4770      	bx	lr

0800d2f0 <_ZN8touchgfx6ScreenD1Ev>:
 800d2f0:	4770      	bx	lr

0800d2f2 <_ZN8touchgfx12GestureEventD1Ev>:
 800d2f2:	4770      	bx	lr

0800d2f4 <_ZN8touchgfx9DragEventD1Ev>:
 800d2f4:	4770      	bx	lr

0800d2f6 <_ZN8touchgfx10ClickEventD1Ev>:
 800d2f6:	4770      	bx	lr

0800d2f8 <_ZN8touchgfx10ClickEventD0Ev>:
 800d2f8:	b510      	push	{r4, lr}
 800d2fa:	210c      	movs	r1, #12
 800d2fc:	4604      	mov	r4, r0
 800d2fe:	f00e fa87 	bl	801b810 <_ZdlPvj>
 800d302:	4620      	mov	r0, r4
 800d304:	bd10      	pop	{r4, pc}

0800d306 <_ZN8touchgfx9DragEventD0Ev>:
 800d306:	b510      	push	{r4, lr}
 800d308:	2110      	movs	r1, #16
 800d30a:	4604      	mov	r4, r0
 800d30c:	f00e fa80 	bl	801b810 <_ZdlPvj>
 800d310:	4620      	mov	r0, r4
 800d312:	bd10      	pop	{r4, pc}

0800d314 <_ZN8touchgfx12GestureEventD0Ev>:
 800d314:	b510      	push	{r4, lr}
 800d316:	210c      	movs	r1, #12
 800d318:	4604      	mov	r4, r0
 800d31a:	f00e fa79 	bl	801b810 <_ZdlPvj>
 800d31e:	4620      	mov	r0, r4
 800d320:	bd10      	pop	{r4, pc}

0800d322 <_ZN8touchgfx6ScreenD0Ev>:
 800d322:	b510      	push	{r4, lr}
 800d324:	213c      	movs	r1, #60	@ 0x3c
 800d326:	4604      	mov	r4, r0
 800d328:	f00e fa72 	bl	801b810 <_ZdlPvj>
 800d32c:	4620      	mov	r0, r4
 800d32e:	bd10      	pop	{r4, pc}

0800d330 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800d330:	b530      	push	{r4, r5, lr}
 800d332:	460d      	mov	r5, r1
 800d334:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800d336:	b087      	sub	sp, #28
 800d338:	4604      	mov	r4, r0
 800d33a:	b301      	cbz	r1, 800d37e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800d33c:	a801      	add	r0, sp, #4
 800d33e:	f7ff ff9d 	bl	800d27c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d342:	892a      	ldrh	r2, [r5, #8]
 800d344:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800d348:	7928      	ldrb	r0, [r5, #4]
 800d34a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800d34e:	f88d 0010 	strb.w	r0, [sp, #16]
 800d352:	1ad2      	subs	r2, r2, r3
 800d354:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800d356:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800d358:	f8ad 1012 	strh.w	r1, [sp, #18]
 800d35c:	441a      	add	r2, r3
 800d35e:	896b      	ldrh	r3, [r5, #10]
 800d360:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800d364:	f8ad 2014 	strh.w	r2, [sp, #20]
 800d368:	1b5b      	subs	r3, r3, r5
 800d36a:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 800d36c:	442b      	add	r3, r5
 800d36e:	4d05      	ldr	r5, [pc, #20]	@ (800d384 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800d370:	9503      	str	r5, [sp, #12]
 800d372:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d376:	6803      	ldr	r3, [r0, #0]
 800d378:	a903      	add	r1, sp, #12
 800d37a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800d37c:	4798      	blx	r3
 800d37e:	b007      	add	sp, #28
 800d380:	bd30      	pop	{r4, r5, pc}
 800d382:	bf00      	nop
 800d384:	0801df04 	.word	0x0801df04

0800d388 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800d388:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d38c:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800d38e:	b08a      	sub	sp, #40	@ 0x28
 800d390:	4604      	mov	r4, r0
 800d392:	460d      	mov	r5, r1
 800d394:	b113      	cbz	r3, 800d39c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800d396:	790b      	ldrb	r3, [r1, #4]
 800d398:	2b00      	cmp	r3, #0
 800d39a:	d044      	beq.n	800d426 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800d39c:	f104 0804 	add.w	r8, r4, #4
 800d3a0:	4641      	mov	r1, r8
 800d3a2:	a803      	add	r0, sp, #12
 800d3a4:	f7ff ff6a 	bl	800d27c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d3a8:	792b      	ldrb	r3, [r5, #4]
 800d3aa:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800d3ae:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800d3b2:	b983      	cbnz	r3, 800d3d6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800d3b4:	892a      	ldrh	r2, [r5, #8]
 800d3b6:	88e9      	ldrh	r1, [r5, #6]
 800d3b8:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 800d3bc:	1b92      	subs	r2, r2, r6
 800d3be:	1bc9      	subs	r1, r1, r7
 800d3c0:	9301      	str	r3, [sp, #4]
 800d3c2:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 800d3c6:	9300      	str	r3, [sp, #0]
 800d3c8:	b212      	sxth	r2, r2
 800d3ca:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 800d3ce:	b209      	sxth	r1, r1
 800d3d0:	4640      	mov	r0, r8
 800d3d2:	f7fc f8d3 	bl	800957c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800d3d6:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800d3d8:	b329      	cbz	r1, 800d426 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800d3da:	a805      	add	r0, sp, #20
 800d3dc:	f7ff ff4e 	bl	800d27c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d3e0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d3e4:	792b      	ldrb	r3, [r5, #4]
 800d3e6:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800d3e8:	f88d 3020 	strb.w	r3, [sp, #32]
 800d3ec:	1abf      	subs	r7, r7, r2
 800d3ee:	88ea      	ldrh	r2, [r5, #6]
 800d3f0:	4417      	add	r7, r2
 800d3f2:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 800d3f4:	4417      	add	r7, r2
 800d3f6:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d3fa:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 800d3fe:	1ab6      	subs	r6, r6, r2
 800d400:	892a      	ldrh	r2, [r5, #8]
 800d402:	4416      	add	r6, r2
 800d404:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800d406:	4416      	add	r6, r2
 800d408:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 800d40c:	4a07      	ldr	r2, [pc, #28]	@ (800d42c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800d40e:	9207      	str	r2, [sp, #28]
 800d410:	2600      	movs	r6, #0
 800d412:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 800d416:	6803      	ldr	r3, [r0, #0]
 800d418:	a907      	add	r1, sp, #28
 800d41a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d41c:	4798      	blx	r3
 800d41e:	792b      	ldrb	r3, [r5, #4]
 800d420:	b10b      	cbz	r3, 800d426 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800d422:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 800d426:	b00a      	add	sp, #40	@ 0x28
 800d428:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d42c:	0801dedc 	.word	0x0801dedc

0800d430 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800d430:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d434:	460c      	mov	r4, r1
 800d436:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800d438:	b088      	sub	sp, #32
 800d43a:	4605      	mov	r5, r0
 800d43c:	2900      	cmp	r1, #0
 800d43e:	d06d      	beq.n	800d51c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800d440:	4668      	mov	r0, sp
 800d442:	f7ff ff1b 	bl	800d27c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d446:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 800d448:	88e3      	ldrh	r3, [r4, #6]
 800d44a:	f9bd 8000 	ldrsh.w	r8, [sp]
 800d44e:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800d452:	440b      	add	r3, r1
 800d454:	b21b      	sxth	r3, r3
 800d456:	4543      	cmp	r3, r8
 800d458:	db31      	blt.n	800d4be <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800d45a:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800d45e:	44c4      	add	ip, r8
 800d460:	fa0f fc8c 	sxth.w	ip, ip
 800d464:	4563      	cmp	r3, ip
 800d466:	da2a      	bge.n	800d4be <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800d468:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 800d46a:	8926      	ldrh	r6, [r4, #8]
 800d46c:	4416      	add	r6, r2
 800d46e:	b236      	sxth	r6, r6
 800d470:	42be      	cmp	r6, r7
 800d472:	db24      	blt.n	800d4be <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800d474:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800d478:	4438      	add	r0, r7
 800d47a:	b200      	sxth	r0, r0
 800d47c:	4286      	cmp	r6, r0
 800d47e:	da1e      	bge.n	800d4be <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800d480:	8963      	ldrh	r3, [r4, #10]
 800d482:	4419      	add	r1, r3
 800d484:	b209      	sxth	r1, r1
 800d486:	4541      	cmp	r1, r8
 800d488:	db08      	blt.n	800d49c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800d48a:	4561      	cmp	r1, ip
 800d48c:	da06      	bge.n	800d49c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800d48e:	89a3      	ldrh	r3, [r4, #12]
 800d490:	441a      	add	r2, r3
 800d492:	b212      	sxth	r2, r2
 800d494:	42ba      	cmp	r2, r7
 800d496:	db01      	blt.n	800d49c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800d498:	4282      	cmp	r2, r0
 800d49a:	db10      	blt.n	800d4be <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800d49c:	4b21      	ldr	r3, [pc, #132]	@ (800d524 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800d49e:	9304      	str	r3, [sp, #16]
 800d4a0:	2302      	movs	r3, #2
 800d4a2:	f88d 3014 	strb.w	r3, [sp, #20]
 800d4a6:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800d4a8:	2300      	movs	r3, #0
 800d4aa:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d4ae:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d4b2:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d4b6:	6803      	ldr	r3, [r0, #0]
 800d4b8:	a904      	add	r1, sp, #16
 800d4ba:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d4bc:	4798      	blx	r3
 800d4be:	1d29      	adds	r1, r5, #4
 800d4c0:	a802      	add	r0, sp, #8
 800d4c2:	f7ff fedb 	bl	800d27c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d4c6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800d4ca:	88e0      	ldrh	r0, [r4, #6]
 800d4cc:	7921      	ldrb	r1, [r4, #4]
 800d4ce:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 800d4d2:	8922      	ldrh	r2, [r4, #8]
 800d4d4:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 800d4d6:	f88d 1014 	strb.w	r1, [sp, #20]
 800d4da:	eba3 0808 	sub.w	r8, r3, r8
 800d4de:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800d4e2:	1bdf      	subs	r7, r3, r7
 800d4e4:	b2bb      	uxth	r3, r7
 800d4e6:	fa1f f888 	uxth.w	r8, r8
 800d4ea:	8967      	ldrh	r7, [r4, #10]
 800d4ec:	89a4      	ldrh	r4, [r4, #12]
 800d4ee:	4440      	add	r0, r8
 800d4f0:	4460      	add	r0, ip
 800d4f2:	441a      	add	r2, r3
 800d4f4:	44b8      	add	r8, r7
 800d4f6:	4423      	add	r3, r4
 800d4f8:	f8ad 0016 	strh.w	r0, [sp, #22]
 800d4fc:	4433      	add	r3, r6
 800d4fe:	4432      	add	r2, r6
 800d500:	44e0      	add	r8, ip
 800d502:	4c09      	ldr	r4, [pc, #36]	@ (800d528 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800d504:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800d506:	9404      	str	r4, [sp, #16]
 800d508:	f8ad 2018 	strh.w	r2, [sp, #24]
 800d50c:	f8ad 801a 	strh.w	r8, [sp, #26]
 800d510:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d514:	6803      	ldr	r3, [r0, #0]
 800d516:	a904      	add	r1, sp, #16
 800d518:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d51a:	4798      	blx	r3
 800d51c:	b008      	add	sp, #32
 800d51e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d522:	bf00      	nop
 800d524:	0801dedc 	.word	0x0801dedc
 800d528:	0801def0 	.word	0x0801def0

0800d52c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800d52c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d52e:	4604      	mov	r4, r0
 800d530:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800d534:	3201      	adds	r2, #1
 800d536:	d112      	bne.n	800d55e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800d538:	6803      	ldr	r3, [r0, #0]
 800d53a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800d53e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800d542:	f8ad 1004 	strh.w	r1, [sp, #4]
 800d546:	2500      	movs	r5, #0
 800d548:	9500      	str	r5, [sp, #0]
 800d54a:	466d      	mov	r5, sp
 800d54c:	4629      	mov	r1, r5
 800d54e:	f8ad 2006 	strh.w	r2, [sp, #6]
 800d552:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800d554:	4798      	blx	r3
 800d556:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d55a:	e884 0003 	stmia.w	r4, {r0, r1}
 800d55e:	4620      	mov	r0, r4
 800d560:	b003      	add	sp, #12
 800d562:	bd30      	pop	{r4, r5, pc}

0800d564 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800d564:	b513      	push	{r0, r1, r4, lr}
 800d566:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800d56a:	3301      	adds	r3, #1
 800d56c:	4604      	mov	r4, r0
 800d56e:	d109      	bne.n	800d584 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800d570:	4601      	mov	r1, r0
 800d572:	4668      	mov	r0, sp
 800d574:	f7ff fe82 	bl	800d27c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d578:	f8bd 3000 	ldrh.w	r3, [sp]
 800d57c:	8423      	strh	r3, [r4, #32]
 800d57e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d582:	8463      	strh	r3, [r4, #34]	@ 0x22
 800d584:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800d588:	b002      	add	sp, #8
 800d58a:	bd10      	pop	{r4, pc}

0800d58c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800d58c:	b513      	push	{r0, r1, r4, lr}
 800d58e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 800d592:	3301      	adds	r3, #1
 800d594:	4604      	mov	r4, r0
 800d596:	d109      	bne.n	800d5ac <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800d598:	4601      	mov	r1, r0
 800d59a:	4668      	mov	r0, sp
 800d59c:	f7ff fe6e 	bl	800d27c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d5a0:	f8bd 3000 	ldrh.w	r3, [sp]
 800d5a4:	8423      	strh	r3, [r4, #32]
 800d5a6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d5aa:	8463      	strh	r3, [r4, #34]	@ 0x22
 800d5ac:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 800d5b0:	b002      	add	sp, #8
 800d5b2:	bd10      	pop	{r4, pc}

0800d5b4 <_ZN8touchgfx6ScreenC1Ev>:
 800d5b4:	b570      	push	{r4, r5, r6, lr}
 800d5b6:	4605      	mov	r5, r0
 800d5b8:	4b16      	ldr	r3, [pc, #88]	@ (800d614 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800d5ba:	f845 3b04 	str.w	r3, [r5], #4
 800d5be:	2300      	movs	r3, #0
 800d5c0:	8103      	strh	r3, [r0, #8]
 800d5c2:	8143      	strh	r3, [r0, #10]
 800d5c4:	8183      	strh	r3, [r0, #12]
 800d5c6:	81c3      	strh	r3, [r0, #14]
 800d5c8:	8203      	strh	r3, [r0, #16]
 800d5ca:	8243      	strh	r3, [r0, #18]
 800d5cc:	8283      	strh	r3, [r0, #20]
 800d5ce:	82c3      	strh	r3, [r0, #22]
 800d5d0:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800d5d4:	6203      	str	r3, [r0, #32]
 800d5d6:	8483      	strh	r3, [r0, #36]	@ 0x24
 800d5d8:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800d5da:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 800d5de:	4a0e      	ldr	r2, [pc, #56]	@ (800d618 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800d5e0:	6343      	str	r3, [r0, #52]	@ 0x34
 800d5e2:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 800d5e6:	4b0d      	ldr	r3, [pc, #52]	@ (800d61c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800d5e8:	6042      	str	r2, [r0, #4]
 800d5ea:	f9b3 6000 	ldrsh.w	r6, [r3]
 800d5ee:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800d5f0:	4a0b      	ldr	r2, [pc, #44]	@ (800d620 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800d5f2:	4604      	mov	r4, r0
 800d5f4:	2101      	movs	r1, #1
 800d5f6:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 800d5fa:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 800d5fe:	f9b2 1000 	ldrsh.w	r1, [r2]
 800d602:	4628      	mov	r0, r5
 800d604:	4798      	blx	r3
 800d606:	6863      	ldr	r3, [r4, #4]
 800d608:	4628      	mov	r0, r5
 800d60a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800d60c:	4631      	mov	r1, r6
 800d60e:	4798      	blx	r3
 800d610:	4620      	mov	r0, r4
 800d612:	bd70      	pop	{r4, r5, r6, pc}
 800d614:	0801df18 	.word	0x0801df18
 800d618:	0801db20 	.word	0x0801db20
 800d61c:	200137f6 	.word	0x200137f6
 800d620:	200137f4 	.word	0x200137f4

0800d624 <_ZN8touchgfx6Screen4drawEv>:
 800d624:	b507      	push	{r0, r1, r2, lr}
 800d626:	4b09      	ldr	r3, [pc, #36]	@ (800d64c <_ZN8touchgfx6Screen4drawEv+0x28>)
 800d628:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d62c:	4b08      	ldr	r3, [pc, #32]	@ (800d650 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800d62e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d632:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d636:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d63a:	6803      	ldr	r3, [r0, #0]
 800d63c:	2100      	movs	r1, #0
 800d63e:	9100      	str	r1, [sp, #0]
 800d640:	689b      	ldr	r3, [r3, #8]
 800d642:	4669      	mov	r1, sp
 800d644:	4798      	blx	r3
 800d646:	b003      	add	sp, #12
 800d648:	f85d fb04 	ldr.w	pc, [sp], #4
 800d64c:	200137f4 	.word	0x200137f4
 800d650:	200137f6 	.word	0x200137f6

0800d654 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800d654:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d658:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800d65c:	2b00      	cmp	r3, #0
 800d65e:	b089      	sub	sp, #36	@ 0x24
 800d660:	4680      	mov	r8, r0
 800d662:	460c      	mov	r4, r1
 800d664:	4615      	mov	r5, r2
 800d666:	dd0e      	ble.n	800d686 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800d668:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800d66c:	2b00      	cmp	r3, #0
 800d66e:	dd0a      	ble.n	800d686 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800d670:	4628      	mov	r0, r5
 800d672:	f7ff ff5b 	bl	800d52c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800d676:	4621      	mov	r1, r4
 800d678:	f7fe fcef 	bl	800c05a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d67c:	69eb      	ldr	r3, [r5, #28]
 800d67e:	b928      	cbnz	r0, 800d68c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800d680:	461d      	mov	r5, r3
 800d682:	2b00      	cmp	r3, #0
 800d684:	d1f4      	bne.n	800d670 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800d686:	b009      	add	sp, #36	@ 0x24
 800d688:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d68c:	ae04      	add	r6, sp, #16
 800d68e:	2b00      	cmp	r3, #0
 800d690:	f000 80b5 	beq.w	800d7fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800d694:	682b      	ldr	r3, [r5, #0]
 800d696:	4629      	mov	r1, r5
 800d698:	68db      	ldr	r3, [r3, #12]
 800d69a:	a802      	add	r0, sp, #8
 800d69c:	4798      	blx	r3
 800d69e:	4628      	mov	r0, r5
 800d6a0:	f7ff ff60 	bl	800d564 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800d6a4:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800d6a8:	4407      	add	r7, r0
 800d6aa:	4628      	mov	r0, r5
 800d6ac:	f7ff ff6e 	bl	800d58c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800d6b0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800d6b4:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800d6b8:	f8ad 2014 	strh.w	r2, [sp, #20]
 800d6bc:	4418      	add	r0, r3
 800d6be:	4621      	mov	r1, r4
 800d6c0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d6c4:	f8ad 0012 	strh.w	r0, [sp, #18]
 800d6c8:	b23f      	sxth	r7, r7
 800d6ca:	4630      	mov	r0, r6
 800d6cc:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d6d0:	f8ad 7010 	strh.w	r7, [sp, #16]
 800d6d4:	f7fc f836 	bl	8009744 <_ZN8touchgfx4RectaNERKS0_>
 800d6d8:	4628      	mov	r0, r5
 800d6da:	f7ff ff27 	bl	800d52c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800d6de:	4602      	mov	r2, r0
 800d6e0:	e896 0003 	ldmia.w	r6, {r0, r1}
 800d6e4:	ab06      	add	r3, sp, #24
 800d6e6:	e883 0003 	stmia.w	r3, {r0, r1}
 800d6ea:	4611      	mov	r1, r2
 800d6ec:	4618      	mov	r0, r3
 800d6ee:	f7fc f829 	bl	8009744 <_ZN8touchgfx4RectaNERKS0_>
 800d6f2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800d6f6:	f9b4 1000 	ldrsh.w	r1, [r4]
 800d6fa:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800d6fe:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800d702:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800d706:	4299      	cmp	r1, r3
 800d708:	d10b      	bne.n	800d722 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800d70a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800d70e:	4552      	cmp	r2, sl
 800d710:	d107      	bne.n	800d722 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800d712:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800d716:	455a      	cmp	r2, fp
 800d718:	d103      	bne.n	800d722 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800d71a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800d71e:	454a      	cmp	r2, r9
 800d720:	d06d      	beq.n	800d7fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800d722:	f1bb 0f00 	cmp.w	fp, #0
 800d726:	dd65      	ble.n	800d7f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800d728:	f1b9 0f00 	cmp.w	r9, #0
 800d72c:	dd62      	ble.n	800d7f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800d72e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800d732:	fa1f f08a 	uxth.w	r0, sl
 800d736:	4552      	cmp	r2, sl
 800d738:	9000      	str	r0, [sp, #0]
 800d73a:	da12      	bge.n	800d762 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800d73c:	9301      	str	r3, [sp, #4]
 800d73e:	9b00      	ldr	r3, [sp, #0]
 800d740:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800d744:	f8ad 2012 	strh.w	r2, [sp, #18]
 800d748:	1a9a      	subs	r2, r3, r2
 800d74a:	f8ad 1010 	strh.w	r1, [sp, #16]
 800d74e:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d752:	f8ad 2016 	strh.w	r2, [sp, #22]
 800d756:	69ea      	ldr	r2, [r5, #28]
 800d758:	4631      	mov	r1, r6
 800d75a:	4640      	mov	r0, r8
 800d75c:	f7ff ff7a 	bl	800d654 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d760:	9b01      	ldr	r3, [sp, #4]
 800d762:	f9b4 2000 	ldrsh.w	r2, [r4]
 800d766:	429a      	cmp	r2, r3
 800d768:	b29f      	uxth	r7, r3
 800d76a:	da0d      	bge.n	800d788 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800d76c:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d770:	1aba      	subs	r2, r7, r2
 800d772:	f8ad a012 	strh.w	sl, [sp, #18]
 800d776:	f8ad 2014 	strh.w	r2, [sp, #20]
 800d77a:	f8ad 9016 	strh.w	r9, [sp, #22]
 800d77e:	69ea      	ldr	r2, [r5, #28]
 800d780:	4631      	mov	r1, r6
 800d782:	4640      	mov	r0, r8
 800d784:	f7ff ff66 	bl	800d654 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d788:	8822      	ldrh	r2, [r4, #0]
 800d78a:	88a3      	ldrh	r3, [r4, #4]
 800d78c:	445f      	add	r7, fp
 800d78e:	4413      	add	r3, r2
 800d790:	b29b      	uxth	r3, r3
 800d792:	b2bf      	uxth	r7, r7
 800d794:	b23a      	sxth	r2, r7
 800d796:	b219      	sxth	r1, r3
 800d798:	4291      	cmp	r1, r2
 800d79a:	dd0d      	ble.n	800d7b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800d79c:	1bdb      	subs	r3, r3, r7
 800d79e:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d7a2:	f8ad a012 	strh.w	sl, [sp, #18]
 800d7a6:	f8ad 3014 	strh.w	r3, [sp, #20]
 800d7aa:	f8ad 9016 	strh.w	r9, [sp, #22]
 800d7ae:	69ea      	ldr	r2, [r5, #28]
 800d7b0:	4631      	mov	r1, r6
 800d7b2:	4640      	mov	r0, r8
 800d7b4:	f7ff ff4e 	bl	800d654 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d7b8:	88e2      	ldrh	r2, [r4, #6]
 800d7ba:	8863      	ldrh	r3, [r4, #2]
 800d7bc:	4413      	add	r3, r2
 800d7be:	9a00      	ldr	r2, [sp, #0]
 800d7c0:	444a      	add	r2, r9
 800d7c2:	b29b      	uxth	r3, r3
 800d7c4:	fa1f f982 	uxth.w	r9, r2
 800d7c8:	fa0f f289 	sxth.w	r2, r9
 800d7cc:	b219      	sxth	r1, r3
 800d7ce:	428a      	cmp	r2, r1
 800d7d0:	da15      	bge.n	800d7fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800d7d2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800d7d6:	f9b4 0000 	ldrsh.w	r0, [r4]
 800d7da:	f8ad 1014 	strh.w	r1, [sp, #20]
 800d7de:	eba3 0309 	sub.w	r3, r3, r9
 800d7e2:	f8ad 0010 	strh.w	r0, [sp, #16]
 800d7e6:	f8ad 2012 	strh.w	r2, [sp, #18]
 800d7ea:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d7ee:	69ea      	ldr	r2, [r5, #28]
 800d7f0:	4631      	mov	r1, r6
 800d7f2:	e001      	b.n	800d7f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800d7f4:	69ea      	ldr	r2, [r5, #28]
 800d7f6:	4621      	mov	r1, r4
 800d7f8:	4640      	mov	r0, r8
 800d7fa:	f7ff ff2b 	bl	800d654 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d7fe:	4628      	mov	r0, r5
 800d800:	f7ff fe94 	bl	800d52c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800d804:	6861      	ldr	r1, [r4, #4]
 800d806:	4602      	mov	r2, r0
 800d808:	6820      	ldr	r0, [r4, #0]
 800d80a:	4633      	mov	r3, r6
 800d80c:	c303      	stmia	r3!, {r0, r1}
 800d80e:	4611      	mov	r1, r2
 800d810:	4630      	mov	r0, r6
 800d812:	f7fb ff97 	bl	8009744 <_ZN8touchgfx4RectaNERKS0_>
 800d816:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800d81a:	2b00      	cmp	r3, #0
 800d81c:	f77f af33 	ble.w	800d686 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800d820:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800d824:	2b00      	cmp	r3, #0
 800d826:	f77f af2e 	ble.w	800d686 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800d82a:	4628      	mov	r0, r5
 800d82c:	f7ff fe9a 	bl	800d564 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800d830:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800d834:	1a18      	subs	r0, r3, r0
 800d836:	f8ad 0010 	strh.w	r0, [sp, #16]
 800d83a:	4628      	mov	r0, r5
 800d83c:	f7ff fea6 	bl	800d58c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800d840:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d844:	1a18      	subs	r0, r3, r0
 800d846:	f8ad 0012 	strh.w	r0, [sp, #18]
 800d84a:	682b      	ldr	r3, [r5, #0]
 800d84c:	4631      	mov	r1, r6
 800d84e:	689b      	ldr	r3, [r3, #8]
 800d850:	4628      	mov	r0, r5
 800d852:	4798      	blx	r3
 800d854:	e717      	b.n	800d686 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800d856 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800d856:	b570      	push	{r4, r5, r6, lr}
 800d858:	460c      	mov	r4, r1
 800d85a:	b086      	sub	sp, #24
 800d85c:	1d06      	adds	r6, r0, #4
 800d85e:	2300      	movs	r3, #0
 800d860:	4631      	mov	r1, r6
 800d862:	4605      	mov	r5, r0
 800d864:	a802      	add	r0, sp, #8
 800d866:	9301      	str	r3, [sp, #4]
 800d868:	f7ff fd08 	bl	800d27c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d86c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800d870:	8822      	ldrh	r2, [r4, #0]
 800d872:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800d876:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800d87a:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d87e:	1ad2      	subs	r2, r2, r3
 800d880:	8863      	ldrh	r3, [r4, #2]
 800d882:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d886:	1a5b      	subs	r3, r3, r1
 800d888:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800d88c:	f8ad 1016 	strh.w	r1, [sp, #22]
 800d890:	aa01      	add	r2, sp, #4
 800d892:	a904      	add	r1, sp, #16
 800d894:	4630      	mov	r0, r6
 800d896:	f8ad 3012 	strh.w	r3, [sp, #18]
 800d89a:	f7fc f82b 	bl	80098f4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800d89e:	9a01      	ldr	r2, [sp, #4]
 800d8a0:	b11a      	cbz	r2, 800d8aa <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800d8a2:	4621      	mov	r1, r4
 800d8a4:	4628      	mov	r0, r5
 800d8a6:	f7ff fed5 	bl	800d654 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d8aa:	b006      	add	sp, #24
 800d8ac:	bd70      	pop	{r4, r5, r6, pc}

0800d8ae <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800d8ae:	b530      	push	{r4, r5, lr}
 800d8b0:	4602      	mov	r2, r0
 800d8b2:	4604      	mov	r4, r0
 800d8b4:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800d8b8:	b085      	sub	sp, #20
 800d8ba:	460d      	mov	r5, r1
 800d8bc:	6851      	ldr	r1, [r2, #4]
 800d8be:	466b      	mov	r3, sp
 800d8c0:	c303      	stmia	r3!, {r0, r1}
 800d8c2:	4629      	mov	r1, r5
 800d8c4:	4668      	mov	r0, sp
 800d8c6:	f7fb ff3d 	bl	8009744 <_ZN8touchgfx4RectaNERKS0_>
 800d8ca:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800d8ce:	b12b      	cbz	r3, 800d8dc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800d8d0:	4669      	mov	r1, sp
 800d8d2:	4620      	mov	r0, r4
 800d8d4:	f7ff ffbf 	bl	800d856 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800d8d8:	b005      	add	sp, #20
 800d8da:	bd30      	pop	{r4, r5, pc}
 800d8dc:	3404      	adds	r4, #4
 800d8de:	4621      	mov	r1, r4
 800d8e0:	a802      	add	r0, sp, #8
 800d8e2:	f7ff fccb 	bl	800d27c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d8e6:	f8bd 3000 	ldrh.w	r3, [sp]
 800d8ea:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800d8ee:	1a9b      	subs	r3, r3, r2
 800d8f0:	f8ad 3000 	strh.w	r3, [sp]
 800d8f4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800d8f8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d8fc:	4669      	mov	r1, sp
 800d8fe:	1a9b      	subs	r3, r3, r2
 800d900:	4620      	mov	r0, r4
 800d902:	f8ad 3002 	strh.w	r3, [sp, #2]
 800d906:	f7fb ffbc 	bl	8009882 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800d90a:	e7e5      	b.n	800d8d8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800d90c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800d90c:	680a      	ldr	r2, [r1, #0]
 800d90e:	460b      	mov	r3, r1
 800d910:	6992      	ldr	r2, [r2, #24]
 800d912:	1d01      	adds	r1, r0, #4
 800d914:	4618      	mov	r0, r3
 800d916:	4710      	bx	r2

0800d918 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 800d918:	4298      	cmp	r0, r3
 800d91a:	d200      	bcs.n	800d91e <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 800d91c:	b913      	cbnz	r3, 800d924 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 800d91e:	440a      	add	r2, r1
 800d920:	b210      	sxth	r0, r2
 800d922:	4770      	bx	lr
 800d924:	ee07 0a90 	vmov	s15, r0
 800d928:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800d92c:	ee07 3a90 	vmov	s15, r3
 800d930:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800d934:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800d938:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800d93c:	ee37 7a66 	vsub.f32	s14, s14, s13
 800d940:	ee07 2a90 	vmov	s15, r2
 800d944:	ee67 5a07 	vmul.f32	s11, s14, s14
 800d948:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 800d94c:	eee5 6a87 	vfma.f32	s13, s11, s14
 800d950:	ee07 1a90 	vmov	s15, r1
 800d954:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800d958:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800d95c:	eee6 7a26 	vfma.f32	s15, s12, s13
 800d960:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d964:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d968:	bfcc      	ite	gt
 800d96a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 800d96e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 800d972:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d976:	ee17 3a90 	vmov	r3, s15
 800d97a:	b218      	sxth	r0, r3
 800d97c:	4770      	bx	lr
	...

0800d980 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800d980:	b570      	push	{r4, r5, r6, lr}
 800d982:	694a      	ldr	r2, [r1, #20]
 800d984:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800d986:	684b      	ldr	r3, [r1, #4]
 800d988:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 800d98a:	1b54      	subs	r4, r2, r5
 800d98c:	f000 8106 	beq.w	800db9c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 800d990:	1b9b      	subs	r3, r3, r6
 800d992:	d003      	beq.n	800d99c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800d994:	4363      	muls	r3, r4
 800d996:	2210      	movs	r2, #16
 800d998:	fb93 f3f2 	sdiv	r3, r3, r2
 800d99c:	680c      	ldr	r4, [r1, #0]
 800d99e:	698a      	ldr	r2, [r1, #24]
 800d9a0:	1b65      	subs	r5, r4, r5
 800d9a2:	f000 80fd 	beq.w	800dba0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 800d9a6:	1b92      	subs	r2, r2, r6
 800d9a8:	d003      	beq.n	800d9b2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800d9aa:	436a      	muls	r2, r5
 800d9ac:	2410      	movs	r4, #16
 800d9ae:	fb92 f2f4 	sdiv	r2, r2, r4
 800d9b2:	1a9b      	subs	r3, r3, r2
 800d9b4:	ee07 3a90 	vmov	s15, r3
 800d9b8:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 800dbdc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 800d9bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800d9c0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800d9c4:	ee67 7a84 	vmul.f32	s15, s15, s8
 800d9c8:	460a      	mov	r2, r1
 800d9ca:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800d9ce:	4603      	mov	r3, r0
 800d9d0:	f100 040c 	add.w	r4, r0, #12
 800d9d4:	eeb1 6a43 	vneg.f32	s12, s6
 800d9d8:	edd2 7a02 	vldr	s15, [r2, #8]
 800d9dc:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800d9e0:	3214      	adds	r2, #20
 800d9e2:	ece3 6a01 	vstmia	r3!, {s13}
 800d9e6:	ed52 7a02 	vldr	s15, [r2, #-8]
 800d9ea:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800d9ee:	429c      	cmp	r4, r3
 800d9f0:	edc3 7a02 	vstr	s15, [r3, #8]
 800d9f4:	ed52 7a01 	vldr	s15, [r2, #-4]
 800d9f8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800d9fc:	edc3 7a05 	vstr	s15, [r3, #20]
 800da00:	d1ea      	bne.n	800d9d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800da02:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800da04:	698b      	ldr	r3, [r1, #24]
 800da06:	edd0 4a02 	vldr	s9, [r0, #8]
 800da0a:	edd0 3a00 	vldr	s7, [r0]
 800da0e:	edd0 6a01 	vldr	s13, [r0, #4]
 800da12:	ed90 5a05 	vldr	s10, [r0, #20]
 800da16:	ed90 2a03 	vldr	s4, [r0, #12]
 800da1a:	edd0 5a04 	vldr	s11, [r0, #16]
 800da1e:	ed90 1a07 	vldr	s2, [r0, #28]
 800da22:	edd0 2a06 	vldr	s5, [r0, #24]
 800da26:	1a9b      	subs	r3, r3, r2
 800da28:	ee07 3a90 	vmov	s15, r3
 800da2c:	684b      	ldr	r3, [r1, #4]
 800da2e:	1a9b      	subs	r3, r3, r2
 800da30:	ee07 3a10 	vmov	s14, r3
 800da34:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800da38:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800da3c:	ee67 7a84 	vmul.f32	s15, s15, s8
 800da40:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800da44:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800da48:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800da4c:	ee27 7a04 	vmul.f32	s14, s14, s8
 800da50:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800da54:	eee6 7a87 	vfma.f32	s15, s13, s14
 800da58:	ee32 5a45 	vsub.f32	s10, s4, s10
 800da5c:	ee67 7a83 	vmul.f32	s15, s15, s6
 800da60:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 800da64:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800da66:	694a      	ldr	r2, [r1, #20]
 800da68:	1b13      	subs	r3, r2, r4
 800da6a:	ee07 3a10 	vmov	s14, r3
 800da6e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800da72:	680b      	ldr	r3, [r1, #0]
 800da74:	ee27 7a04 	vmul.f32	s14, s14, s8
 800da78:	1b1b      	subs	r3, r3, r4
 800da7a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800da7e:	ee07 3a10 	vmov	s14, r3
 800da82:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800da86:	ee27 7a04 	vmul.f32	s14, s14, s8
 800da8a:	eee6 4a87 	vfma.f32	s9, s13, s14
 800da8e:	ee64 4a86 	vmul.f32	s9, s9, s12
 800da92:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 800da96:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800da98:	698b      	ldr	r3, [r1, #24]
 800da9a:	1a9b      	subs	r3, r3, r2
 800da9c:	ee06 3a90 	vmov	s13, r3
 800daa0:	684b      	ldr	r3, [r1, #4]
 800daa2:	1a9b      	subs	r3, r3, r2
 800daa4:	ee07 3a10 	vmov	s14, r3
 800daa8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800daac:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800dab0:	ee66 6a84 	vmul.f32	s13, s13, s8
 800dab4:	ee27 7a04 	vmul.f32	s14, s14, s8
 800dab8:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800dabc:	eee5 6a87 	vfma.f32	s13, s11, s14
 800dac0:	ee66 6a83 	vmul.f32	s13, s13, s6
 800dac4:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 800dac8:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800daca:	694a      	ldr	r2, [r1, #20]
 800dacc:	1b13      	subs	r3, r2, r4
 800dace:	ee07 3a10 	vmov	s14, r3
 800dad2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800dad6:	680b      	ldr	r3, [r1, #0]
 800dad8:	ee27 7a04 	vmul.f32	s14, s14, s8
 800dadc:	1b1b      	subs	r3, r3, r4
 800dade:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800dae2:	ee07 3a10 	vmov	s14, r3
 800dae6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800daea:	ee27 7a04 	vmul.f32	s14, s14, s8
 800daee:	eea5 5a87 	vfma.f32	s10, s11, s14
 800daf2:	edd0 5a08 	vldr	s11, [r0, #32]
 800daf6:	ee25 5a06 	vmul.f32	s10, s10, s12
 800dafa:	ee31 1a65 	vsub.f32	s2, s2, s11
 800dafe:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 800db02:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800db04:	698b      	ldr	r3, [r1, #24]
 800db06:	1a9b      	subs	r3, r3, r2
 800db08:	ee07 3a10 	vmov	s14, r3
 800db0c:	684b      	ldr	r3, [r1, #4]
 800db0e:	1a9b      	subs	r3, r3, r2
 800db10:	ee01 3a90 	vmov	s3, r3
 800db14:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800db18:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800db1c:	ee27 7a04 	vmul.f32	s14, s14, s8
 800db20:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800db24:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800db28:	ee61 1a84 	vmul.f32	s3, s3, s8
 800db2c:	eea1 7a21 	vfma.f32	s14, s2, s3
 800db30:	ee27 7a03 	vmul.f32	s14, s14, s6
 800db34:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 800db38:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800db3a:	694a      	ldr	r2, [r1, #20]
 800db3c:	1b13      	subs	r3, r2, r4
 800db3e:	ee03 3a10 	vmov	s6, r3
 800db42:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800db46:	680b      	ldr	r3, [r1, #0]
 800db48:	ee23 3a04 	vmul.f32	s6, s6, s8
 800db4c:	1b1b      	subs	r3, r3, r4
 800db4e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800db52:	ee03 3a10 	vmov	s6, r3
 800db56:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800db5a:	ee23 4a04 	vmul.f32	s8, s6, s8
 800db5e:	eee1 5a04 	vfma.f32	s11, s2, s8
 800db62:	ee25 6a86 	vmul.f32	s12, s11, s12
 800db66:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800db6a:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 800db6e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800db72:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800db76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800db7a:	dd13      	ble.n	800dba4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 800db7c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800db80:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800db84:	63c3      	str	r3, [r0, #60]	@ 0x3c
 800db86:	eee3 7a87 	vfma.f32	s15, s7, s14
 800db8a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800db8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800db92:	dd15      	ble.n	800dbc0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 800db94:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800db98:	6403      	str	r3, [r0, #64]	@ 0x40
 800db9a:	bd70      	pop	{r4, r5, r6, pc}
 800db9c:	4623      	mov	r3, r4
 800db9e:	e6fd      	b.n	800d99c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800dba0:	462a      	mov	r2, r5
 800dba2:	e706      	b.n	800d9b2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800dba4:	d502      	bpl.n	800dbac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 800dba6:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 800dbaa:	e7e9      	b.n	800db80 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 800dbac:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800dbb0:	eea3 2a85 	vfma.f32	s4, s7, s10
 800dbb4:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800dbb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dbbc:	dade      	bge.n	800db7c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 800dbbe:	e7f2      	b.n	800dba6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800dbc0:	d502      	bpl.n	800dbc8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 800dbc2:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 800dbc6:	e7e7      	b.n	800db98 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 800dbc8:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800dbcc:	eee3 4a86 	vfma.f32	s9, s7, s12
 800dbd0:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800dbd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dbd8:	dadc      	bge.n	800db94 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 800dbda:	e7f2      	b.n	800dbc2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800dbdc:	3d800000 	.word	0x3d800000

0800dbe0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800dbe0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dbe4:	2714      	movs	r7, #20
 800dbe6:	435f      	muls	r7, r3
 800dbe8:	eb02 0c07 	add.w	ip, r2, r7
 800dbec:	f8dc 5004 	ldr.w	r5, [ip, #4]
 800dbf0:	f115 0e0f 	adds.w	lr, r5, #15
 800dbf4:	f100 80a2 	bmi.w	800dd3c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 800dbf8:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 800dbfc:	9c08      	ldr	r4, [sp, #32]
 800dbfe:	f8c0 e014 	str.w	lr, [r0, #20]
 800dc02:	2614      	movs	r6, #20
 800dc04:	4366      	muls	r6, r4
 800dc06:	eb02 0806 	add.w	r8, r2, r6
 800dc0a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800dc0e:	f115 040f 	adds.w	r4, r5, #15
 800dc12:	f100 809f 	bmi.w	800dd54 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 800dc16:	1124      	asrs	r4, r4, #4
 800dc18:	eba4 040e 	sub.w	r4, r4, lr
 800dc1c:	6184      	str	r4, [r0, #24]
 800dc1e:	2c00      	cmp	r4, #0
 800dc20:	f000 808a 	beq.w	800dd38 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 800dc24:	f8dc 9004 	ldr.w	r9, [ip, #4]
 800dc28:	f8d8 4004 	ldr.w	r4, [r8, #4]
 800dc2c:	5995      	ldr	r5, [r2, r6]
 800dc2e:	eba4 0809 	sub.w	r8, r4, r9
 800dc32:	59d4      	ldr	r4, [r2, r7]
 800dc34:	eba5 0a04 	sub.w	sl, r5, r4
 800dc38:	ea4f 150a 	mov.w	r5, sl, lsl #4
 800dc3c:	fb0e fe05 	mul.w	lr, lr, r5
 800dc40:	fb0a ee19 	mls	lr, sl, r9, lr
 800dc44:	fb08 e404 	mla	r4, r8, r4, lr
 800dc48:	ea4f 1608 	mov.w	r6, r8, lsl #4
 800dc4c:	3c01      	subs	r4, #1
 800dc4e:	19a4      	adds	r4, r4, r6
 800dc50:	f100 808c 	bmi.w	800dd6c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 800dc54:	fb94 fef6 	sdiv	lr, r4, r6
 800dc58:	f8c0 e000 	str.w	lr, [r0]
 800dc5c:	fb06 441e 	mls	r4, r6, lr, r4
 800dc60:	6104      	str	r4, [r0, #16]
 800dc62:	2d00      	cmp	r5, #0
 800dc64:	f2c0 8095 	blt.w	800dd92 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 800dc68:	fb95 f4f6 	sdiv	r4, r5, r6
 800dc6c:	6044      	str	r4, [r0, #4]
 800dc6e:	fb06 5514 	mls	r5, r6, r4, r5
 800dc72:	6085      	str	r5, [r0, #8]
 800dc74:	60c6      	str	r6, [r0, #12]
 800dc76:	f8dc 4004 	ldr.w	r4, [ip, #4]
 800dc7a:	6945      	ldr	r5, [r0, #20]
 800dc7c:	59d2      	ldr	r2, [r2, r7]
 800dc7e:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 800ddb4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 800dc82:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 800dc86:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 800dc8a:	ee07 4a10 	vmov	s14, r4
 800dc8e:	6804      	ldr	r4, [r0, #0]
 800dc90:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 800dc94:	ee07 2a90 	vmov	s15, r2
 800dc98:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800dc9c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800dca0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800dca4:	ee27 7a26 	vmul.f32	s14, s14, s13
 800dca8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800dcac:	edd3 6a00 	vldr	s13, [r3]
 800dcb0:	eee6 6a07 	vfma.f32	s13, s12, s14
 800dcb4:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 800dcb8:	eee6 6a27 	vfma.f32	s13, s12, s15
 800dcbc:	edc0 6a07 	vstr	s13, [r0, #28]
 800dcc0:	edd0 6a01 	vldr	s13, [r0, #4]
 800dcc4:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 800dcc8:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 800dccc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800dcd0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800dcd4:	ed80 6a08 	vstr	s12, [r0, #32]
 800dcd8:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 800dcda:	6242      	str	r2, [r0, #36]	@ 0x24
 800dcdc:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 800dce0:	ed93 6a03 	vldr	s12, [r3, #12]
 800dce4:	eea5 6a87 	vfma.f32	s12, s11, s14
 800dce8:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 800dcec:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800dcf0:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 800dcf4:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 800dcf8:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 800dcfc:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800dd00:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 800dd04:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800dd06:	6302      	str	r2, [r0, #48]	@ 0x30
 800dd08:	ed93 6a06 	vldr	s12, [r3, #24]
 800dd0c:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 800dd10:	eea5 6a87 	vfma.f32	s12, s11, s14
 800dd14:	eeb0 7a46 	vmov.f32	s14, s12
 800dd18:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 800dd1c:	eea6 7a27 	vfma.f32	s14, s12, s15
 800dd20:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 800dd24:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 800dd28:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 800dd2c:	eee6 7a87 	vfma.f32	s15, s13, s14
 800dd30:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 800dd34:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 800dd36:	63c3      	str	r3, [r0, #60]	@ 0x3c
 800dd38:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800dd3c:	f1c5 0501 	rsb	r5, r5, #1
 800dd40:	f015 050f 	ands.w	r5, r5, #15
 800dd44:	bf18      	it	ne
 800dd46:	2501      	movne	r5, #1
 800dd48:	2410      	movs	r4, #16
 800dd4a:	fb9e fef4 	sdiv	lr, lr, r4
 800dd4e:	ebae 0e05 	sub.w	lr, lr, r5
 800dd52:	e753      	b.n	800dbfc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 800dd54:	f1c5 0501 	rsb	r5, r5, #1
 800dd58:	f015 050f 	ands.w	r5, r5, #15
 800dd5c:	bf18      	it	ne
 800dd5e:	2501      	movne	r5, #1
 800dd60:	f04f 0910 	mov.w	r9, #16
 800dd64:	fb94 f4f9 	sdiv	r4, r4, r9
 800dd68:	1b64      	subs	r4, r4, r5
 800dd6a:	e755      	b.n	800dc18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 800dd6c:	4264      	negs	r4, r4
 800dd6e:	fb94 fef6 	sdiv	lr, r4, r6
 800dd72:	f1ce 0800 	rsb	r8, lr, #0
 800dd76:	fb06 441e 	mls	r4, r6, lr, r4
 800dd7a:	f8c0 8000 	str.w	r8, [r0]
 800dd7e:	6104      	str	r4, [r0, #16]
 800dd80:	2c00      	cmp	r4, #0
 800dd82:	f43f af6e 	beq.w	800dc62 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 800dd86:	ea6f 0e0e 	mvn.w	lr, lr
 800dd8a:	f8c0 e000 	str.w	lr, [r0]
 800dd8e:	1b34      	subs	r4, r6, r4
 800dd90:	e766      	b.n	800dc60 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 800dd92:	426d      	negs	r5, r5
 800dd94:	fb95 f4f6 	sdiv	r4, r5, r6
 800dd98:	f1c4 0e00 	rsb	lr, r4, #0
 800dd9c:	fb06 5514 	mls	r5, r6, r4, r5
 800dda0:	f8c0 e004 	str.w	lr, [r0, #4]
 800dda4:	6085      	str	r5, [r0, #8]
 800dda6:	2d00      	cmp	r5, #0
 800dda8:	f43f af64 	beq.w	800dc74 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 800ddac:	43e4      	mvns	r4, r4
 800ddae:	6044      	str	r4, [r0, #4]
 800ddb0:	1b75      	subs	r5, r6, r5
 800ddb2:	e75e      	b.n	800dc72 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 800ddb4:	3d800000 	.word	0x3d800000

0800ddb8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800ddb8:	4b01      	ldr	r3, [pc, #4]	@ (800ddc0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800ddba:	6018      	str	r0, [r3, #0]
 800ddbc:	4770      	bx	lr
 800ddbe:	bf00      	nop
 800ddc0:	20013860 	.word	0x20013860

0800ddc4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800ddc4:	4b06      	ldr	r3, [pc, #24]	@ (800dde0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800ddc6:	881a      	ldrh	r2, [r3, #0]
 800ddc8:	4282      	cmp	r2, r0
 800ddca:	d807      	bhi.n	800dddc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800ddcc:	4b05      	ldr	r3, [pc, #20]	@ (800dde4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800ddce:	881b      	ldrh	r3, [r3, #0]
 800ddd0:	4413      	add	r3, r2
 800ddd2:	4298      	cmp	r0, r3
 800ddd4:	bfac      	ite	ge
 800ddd6:	2000      	movge	r0, #0
 800ddd8:	2001      	movlt	r0, #1
 800ddda:	4770      	bx	lr
 800dddc:	2000      	movs	r0, #0
 800ddde:	4770      	bx	lr
 800dde0:	20013880 	.word	0x20013880
 800dde4:	20013884 	.word	0x20013884

0800dde8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800dde8:	b508      	push	{r3, lr}
 800ddea:	4601      	mov	r1, r0
 800ddec:	f7ff ffea 	bl	800ddc4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800ddf0:	b118      	cbz	r0, 800ddfa <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 800ddf2:	4b02      	ldr	r3, [pc, #8]	@ (800ddfc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 800ddf4:	681b      	ldr	r3, [r3, #0]
 800ddf6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800ddfa:	bd08      	pop	{r3, pc}
 800ddfc:	20013864 	.word	0x20013864

0800de00 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800de00:	b5f0      	push	{r4, r5, r6, r7, lr}
 800de02:	4c24      	ldr	r4, [pc, #144]	@ (800de94 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 800de04:	6823      	ldr	r3, [r4, #0]
 800de06:	2b00      	cmp	r3, #0
 800de08:	d042      	beq.n	800de90 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800de0a:	4a23      	ldr	r2, [pc, #140]	@ (800de98 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 800de0c:	4d23      	ldr	r5, [pc, #140]	@ (800de9c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 800de0e:	8811      	ldrh	r1, [r2, #0]
 800de10:	f8b5 c000 	ldrh.w	ip, [r5]
 800de14:	4822      	ldr	r0, [pc, #136]	@ (800dea0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 800de16:	4461      	add	r1, ip
 800de18:	1c4a      	adds	r2, r1, #1
 800de1a:	f022 0201 	bic.w	r2, r2, #1
 800de1e:	008f      	lsls	r7, r1, #2
 800de20:	0412      	lsls	r2, r2, #16
 800de22:	19de      	adds	r6, r3, r7
 800de24:	0c12      	lsrs	r2, r2, #16
 800de26:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 800de2a:	6006      	str	r6, [r0, #0]
 800de2c:	4e1d      	ldr	r6, [pc, #116]	@ (800dea4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 800de2e:	19da      	adds	r2, r3, r7
 800de30:	6032      	str	r2, [r6, #0]
 800de32:	220e      	movs	r2, #14
 800de34:	fb02 f20c 	mul.w	r2, r2, ip
 800de38:	3203      	adds	r2, #3
 800de3a:	f022 0203 	bic.w	r2, r2, #3
 800de3e:	443a      	add	r2, r7
 800de40:	4f19      	ldr	r7, [pc, #100]	@ (800dea8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800de42:	4413      	add	r3, r2
 800de44:	603b      	str	r3, [r7, #0]
 800de46:	4f19      	ldr	r7, [pc, #100]	@ (800deac <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800de48:	2300      	movs	r3, #0
 800de4a:	803b      	strh	r3, [r7, #0]
 800de4c:	4f18      	ldr	r7, [pc, #96]	@ (800deb0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800de4e:	683f      	ldr	r7, [r7, #0]
 800de50:	1aba      	subs	r2, r7, r2
 800de52:	4f18      	ldr	r7, [pc, #96]	@ (800deb4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800de54:	603a      	str	r2, [r7, #0]
 800de56:	4a18      	ldr	r2, [pc, #96]	@ (800deb8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800de58:	469c      	mov	ip, r3
 800de5a:	8013      	strh	r3, [r2, #0]
 800de5c:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 800de60:	428b      	cmp	r3, r1
 800de62:	d10d      	bne.n	800de80 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 800de64:	882d      	ldrh	r5, [r5, #0]
 800de66:	6830      	ldr	r0, [r6, #0]
 800de68:	2300      	movs	r3, #0
 800de6a:	240e      	movs	r4, #14
 800de6c:	429d      	cmp	r5, r3
 800de6e:	d90f      	bls.n	800de90 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800de70:	fb04 0203 	mla	r2, r4, r3, r0
 800de74:	3301      	adds	r3, #1
 800de76:	7b11      	ldrb	r1, [r2, #12]
 800de78:	f36f 1145 	bfc	r1, #5, #1
 800de7c:	7311      	strb	r1, [r2, #12]
 800de7e:	e7f5      	b.n	800de6c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 800de80:	6822      	ldr	r2, [r4, #0]
 800de82:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800de86:	6802      	ldr	r2, [r0, #0]
 800de88:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 800de8c:	3301      	adds	r3, #1
 800de8e:	e7e7      	b.n	800de60 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 800de90:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800de92:	bf00      	nop
 800de94:	20013864 	.word	0x20013864
 800de98:	20013880 	.word	0x20013880
 800de9c:	20013884 	.word	0x20013884
 800dea0:	20013878 	.word	0x20013878
 800dea4:	20013868 	.word	0x20013868
 800dea8:	20013870 	.word	0x20013870
 800deac:	20013882 	.word	0x20013882
 800deb0:	2001386c 	.word	0x2001386c
 800deb4:	2001387c 	.word	0x2001387c
 800deb8:	20013874 	.word	0x20013874

0800debc <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800debc:	4b06      	ldr	r3, [pc, #24]	@ (800ded8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 800debe:	681b      	ldr	r3, [r3, #0]
 800dec0:	b943      	cbnz	r3, 800ded4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 800dec2:	b139      	cbz	r1, 800ded4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 800dec4:	4b05      	ldr	r3, [pc, #20]	@ (800dedc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 800dec6:	801a      	strh	r2, [r3, #0]
 800dec8:	4b05      	ldr	r3, [pc, #20]	@ (800dee0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 800deca:	6019      	str	r1, [r3, #0]
 800decc:	4b05      	ldr	r3, [pc, #20]	@ (800dee4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 800dece:	6018      	str	r0, [r3, #0]
 800ded0:	f7ff bf96 	b.w	800de00 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800ded4:	4770      	bx	lr
 800ded6:	bf00      	nop
 800ded8:	20013870 	.word	0x20013870
 800dedc:	20013884 	.word	0x20013884
 800dee0:	2001386c 	.word	0x2001386c
 800dee4:	20013864 	.word	0x20013864

0800dee8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800dee8:	b470      	push	{r4, r5, r6}
 800deea:	4c07      	ldr	r4, [pc, #28]	@ (800df08 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800deec:	6826      	ldr	r6, [r4, #0]
 800deee:	4605      	mov	r5, r0
 800def0:	4610      	mov	r0, r2
 800def2:	9a03      	ldr	r2, [sp, #12]
 800def4:	b936      	cbnz	r6, 800df04 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800def6:	6025      	str	r5, [r4, #0]
 800def8:	4c04      	ldr	r4, [pc, #16]	@ (800df0c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800defa:	8021      	strh	r1, [r4, #0]
 800defc:	bc70      	pop	{r4, r5, r6}
 800defe:	4619      	mov	r1, r3
 800df00:	f7ff bfdc 	b.w	800debc <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800df04:	bc70      	pop	{r4, r5, r6}
 800df06:	4770      	bx	lr
 800df08:	20013888 	.word	0x20013888
 800df0c:	20013880 	.word	0x20013880

0800df10 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800df10:	4a12      	ldr	r2, [pc, #72]	@ (800df5c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 800df12:	8803      	ldrh	r3, [r0, #0]
 800df14:	8812      	ldrh	r2, [r2, #0]
 800df16:	4293      	cmp	r3, r2
 800df18:	d207      	bcs.n	800df2a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 800df1a:	4a11      	ldr	r2, [pc, #68]	@ (800df60 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 800df1c:	6812      	ldr	r2, [r2, #0]
 800df1e:	2114      	movs	r1, #20
 800df20:	fb01 2303 	mla	r3, r1, r3, r2
 800df24:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 800df28:	4770      	bx	lr
 800df2a:	490e      	ldr	r1, [pc, #56]	@ (800df64 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800df2c:	8809      	ldrh	r1, [r1, #0]
 800df2e:	4411      	add	r1, r2
 800df30:	428b      	cmp	r3, r1
 800df32:	da04      	bge.n	800df3e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 800df34:	1a9b      	subs	r3, r3, r2
 800df36:	4a0c      	ldr	r2, [pc, #48]	@ (800df68 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800df38:	210e      	movs	r1, #14
 800df3a:	6812      	ldr	r2, [r2, #0]
 800df3c:	e7f0      	b.n	800df20 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 800df3e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 800df42:	4293      	cmp	r3, r2
 800df44:	d108      	bne.n	800df58 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 800df46:	4b09      	ldr	r3, [pc, #36]	@ (800df6c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800df48:	781b      	ldrb	r3, [r3, #0]
 800df4a:	b91b      	cbnz	r3, 800df54 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 800df4c:	4b08      	ldr	r3, [pc, #32]	@ (800df70 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800df4e:	f9b3 0000 	ldrsh.w	r0, [r3]
 800df52:	4770      	bx	lr
 800df54:	4b07      	ldr	r3, [pc, #28]	@ (800df74 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800df56:	e7fa      	b.n	800df4e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 800df58:	2000      	movs	r0, #0
 800df5a:	4770      	bx	lr
 800df5c:	20013880 	.word	0x20013880
 800df60:	20013888 	.word	0x20013888
 800df64:	20013884 	.word	0x20013884
 800df68:	20013868 	.word	0x20013868
 800df6c:	200137f8 	.word	0x200137f8
 800df70:	200137fa 	.word	0x200137fa
 800df74:	200137fc 	.word	0x200137fc

0800df78 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800df78:	4a12      	ldr	r2, [pc, #72]	@ (800dfc4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 800df7a:	8803      	ldrh	r3, [r0, #0]
 800df7c:	8812      	ldrh	r2, [r2, #0]
 800df7e:	4293      	cmp	r3, r2
 800df80:	d207      	bcs.n	800df92 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 800df82:	4a11      	ldr	r2, [pc, #68]	@ (800dfc8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 800df84:	6812      	ldr	r2, [r2, #0]
 800df86:	2114      	movs	r1, #20
 800df88:	fb01 2303 	mla	r3, r1, r3, r2
 800df8c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 800df90:	4770      	bx	lr
 800df92:	490e      	ldr	r1, [pc, #56]	@ (800dfcc <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800df94:	8809      	ldrh	r1, [r1, #0]
 800df96:	4411      	add	r1, r2
 800df98:	428b      	cmp	r3, r1
 800df9a:	da04      	bge.n	800dfa6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 800df9c:	1a9b      	subs	r3, r3, r2
 800df9e:	4a0c      	ldr	r2, [pc, #48]	@ (800dfd0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800dfa0:	210e      	movs	r1, #14
 800dfa2:	6812      	ldr	r2, [r2, #0]
 800dfa4:	e7f0      	b.n	800df88 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 800dfa6:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 800dfaa:	4293      	cmp	r3, r2
 800dfac:	d108      	bne.n	800dfc0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 800dfae:	4b09      	ldr	r3, [pc, #36]	@ (800dfd4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800dfb0:	781b      	ldrb	r3, [r3, #0]
 800dfb2:	b91b      	cbnz	r3, 800dfbc <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 800dfb4:	4b08      	ldr	r3, [pc, #32]	@ (800dfd8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800dfb6:	f9b3 0000 	ldrsh.w	r0, [r3]
 800dfba:	4770      	bx	lr
 800dfbc:	4b07      	ldr	r3, [pc, #28]	@ (800dfdc <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800dfbe:	e7fa      	b.n	800dfb6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 800dfc0:	2000      	movs	r0, #0
 800dfc2:	4770      	bx	lr
 800dfc4:	20013880 	.word	0x20013880
 800dfc8:	20013888 	.word	0x20013888
 800dfcc:	20013884 	.word	0x20013884
 800dfd0:	20013868 	.word	0x20013868
 800dfd4:	200137f8 	.word	0x200137f8
 800dfd8:	200137fc 	.word	0x200137fc
 800dfdc:	200137fa 	.word	0x200137fa

0800dfe0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800dfe0:	b530      	push	{r4, r5, lr}
 800dfe2:	4a22      	ldr	r2, [pc, #136]	@ (800e06c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 800dfe4:	880b      	ldrh	r3, [r1, #0]
 800dfe6:	8812      	ldrh	r2, [r2, #0]
 800dfe8:	4293      	cmp	r3, r2
 800dfea:	d213      	bcs.n	800e014 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 800dfec:	4a20      	ldr	r2, [pc, #128]	@ (800e070 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800dfee:	6812      	ldr	r2, [r2, #0]
 800dff0:	2114      	movs	r1, #20
 800dff2:	fb01 2303 	mla	r3, r1, r3, r2
 800dff6:	8a1a      	ldrh	r2, [r3, #16]
 800dff8:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800dffc:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800e000:	8a5b      	ldrh	r3, [r3, #18]
 800e002:	8004      	strh	r4, [r0, #0]
 800e004:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800e008:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800e00c:	8041      	strh	r1, [r0, #2]
 800e00e:	8082      	strh	r2, [r0, #4]
 800e010:	80c3      	strh	r3, [r0, #6]
 800e012:	e024      	b.n	800e05e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 800e014:	4917      	ldr	r1, [pc, #92]	@ (800e074 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800e016:	8809      	ldrh	r1, [r1, #0]
 800e018:	4411      	add	r1, r2
 800e01a:	428b      	cmp	r3, r1
 800e01c:	da10      	bge.n	800e040 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 800e01e:	1a9b      	subs	r3, r3, r2
 800e020:	220e      	movs	r2, #14
 800e022:	4353      	muls	r3, r2
 800e024:	4a14      	ldr	r2, [pc, #80]	@ (800e078 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800e026:	6811      	ldr	r1, [r2, #0]
 800e028:	18ca      	adds	r2, r1, r3
 800e02a:	5ecd      	ldrsh	r5, [r1, r3]
 800e02c:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 800e030:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 800e034:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 800e038:	8005      	strh	r5, [r0, #0]
 800e03a:	8044      	strh	r4, [r0, #2]
 800e03c:	8081      	strh	r1, [r0, #4]
 800e03e:	e7e7      	b.n	800e010 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 800e040:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 800e044:	4293      	cmp	r3, r2
 800e046:	d10b      	bne.n	800e060 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 800e048:	4b0c      	ldr	r3, [pc, #48]	@ (800e07c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800e04a:	f9b3 1000 	ldrsh.w	r1, [r3]
 800e04e:	4b0c      	ldr	r3, [pc, #48]	@ (800e080 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800e050:	8081      	strh	r1, [r0, #4]
 800e052:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e056:	80c2      	strh	r2, [r0, #6]
 800e058:	2300      	movs	r3, #0
 800e05a:	8003      	strh	r3, [r0, #0]
 800e05c:	8043      	strh	r3, [r0, #2]
 800e05e:	bd30      	pop	{r4, r5, pc}
 800e060:	2300      	movs	r3, #0
 800e062:	8003      	strh	r3, [r0, #0]
 800e064:	8043      	strh	r3, [r0, #2]
 800e066:	8083      	strh	r3, [r0, #4]
 800e068:	e7d2      	b.n	800e010 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 800e06a:	bf00      	nop
 800e06c:	20013880 	.word	0x20013880
 800e070:	20013888 	.word	0x20013888
 800e074:	20013884 	.word	0x20013884
 800e078:	20013868 	.word	0x20013868
 800e07c:	200137f4 	.word	0x200137f4
 800e080:	200137f6 	.word	0x200137f6

0800e084 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800e084:	4a17      	ldr	r2, [pc, #92]	@ (800e0e4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 800e086:	8803      	ldrh	r3, [r0, #0]
 800e088:	8812      	ldrh	r2, [r2, #0]
 800e08a:	4293      	cmp	r3, r2
 800e08c:	d213      	bcs.n	800e0b6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 800e08e:	4a16      	ldr	r2, [pc, #88]	@ (800e0e8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800e090:	6812      	ldr	r2, [r2, #0]
 800e092:	2114      	movs	r1, #20
 800e094:	fb01 2303 	mla	r3, r1, r3, r2
 800e098:	8a1a      	ldrh	r2, [r3, #16]
 800e09a:	8919      	ldrh	r1, [r3, #8]
 800e09c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800e0a0:	428a      	cmp	r2, r1
 800e0a2:	db1d      	blt.n	800e0e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 800e0a4:	8a58      	ldrh	r0, [r3, #18]
 800e0a6:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800e0aa:	895b      	ldrh	r3, [r3, #10]
 800e0ac:	4298      	cmp	r0, r3
 800e0ae:	bfac      	ite	ge
 800e0b0:	2000      	movge	r0, #0
 800e0b2:	2001      	movlt	r0, #1
 800e0b4:	4770      	bx	lr
 800e0b6:	490d      	ldr	r1, [pc, #52]	@ (800e0ec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800e0b8:	8809      	ldrh	r1, [r1, #0]
 800e0ba:	4411      	add	r1, r2
 800e0bc:	428b      	cmp	r3, r1
 800e0be:	da0d      	bge.n	800e0dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 800e0c0:	1a9b      	subs	r3, r3, r2
 800e0c2:	4a0b      	ldr	r2, [pc, #44]	@ (800e0f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800e0c4:	6812      	ldr	r2, [r2, #0]
 800e0c6:	210e      	movs	r1, #14
 800e0c8:	fb01 2303 	mla	r3, r1, r3, r2
 800e0cc:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800e0d0:	891a      	ldrh	r2, [r3, #8]
 800e0d2:	4291      	cmp	r1, r2
 800e0d4:	db04      	blt.n	800e0e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 800e0d6:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800e0da:	e7e6      	b.n	800e0aa <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 800e0dc:	2000      	movs	r0, #0
 800e0de:	4770      	bx	lr
 800e0e0:	2001      	movs	r0, #1
 800e0e2:	4770      	bx	lr
 800e0e4:	20013880 	.word	0x20013880
 800e0e8:	20013888 	.word	0x20013888
 800e0ec:	20013884 	.word	0x20013884
 800e0f0:	20013868 	.word	0x20013868

0800e0f4 <_ZNK8touchgfx6Bitmap7getDataEv>:
 800e0f4:	4a12      	ldr	r2, [pc, #72]	@ (800e140 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800e0f6:	8803      	ldrh	r3, [r0, #0]
 800e0f8:	8811      	ldrh	r1, [r2, #0]
 800e0fa:	428b      	cmp	r3, r1
 800e0fc:	d20b      	bcs.n	800e116 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 800e0fe:	4a11      	ldr	r2, [pc, #68]	@ (800e144 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800e100:	6812      	ldr	r2, [r2, #0]
 800e102:	b112      	cbz	r2, 800e10a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800e104:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800e108:	b9c0      	cbnz	r0, 800e13c <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 800e10a:	4a0f      	ldr	r2, [pc, #60]	@ (800e148 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800e10c:	6811      	ldr	r1, [r2, #0]
 800e10e:	2214      	movs	r2, #20
 800e110:	4353      	muls	r3, r2
 800e112:	58c8      	ldr	r0, [r1, r3]
 800e114:	4770      	bx	lr
 800e116:	4a0d      	ldr	r2, [pc, #52]	@ (800e14c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800e118:	8812      	ldrh	r2, [r2, #0]
 800e11a:	440a      	add	r2, r1
 800e11c:	4293      	cmp	r3, r2
 800e11e:	da04      	bge.n	800e12a <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 800e120:	4a08      	ldr	r2, [pc, #32]	@ (800e144 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800e122:	6812      	ldr	r2, [r2, #0]
 800e124:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800e128:	4770      	bx	lr
 800e12a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 800e12e:	4293      	cmp	r3, r2
 800e130:	d103      	bne.n	800e13a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800e132:	4b07      	ldr	r3, [pc, #28]	@ (800e150 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800e134:	681b      	ldr	r3, [r3, #0]
 800e136:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 800e138:	4770      	bx	lr
 800e13a:	2000      	movs	r0, #0
 800e13c:	4770      	bx	lr
 800e13e:	bf00      	nop
 800e140:	20013880 	.word	0x20013880
 800e144:	20013864 	.word	0x20013864
 800e148:	20013888 	.word	0x20013888
 800e14c:	20013884 	.word	0x20013884
 800e150:	20013800 	.word	0x20013800

0800e154 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800e154:	4b24      	ldr	r3, [pc, #144]	@ (800e1e8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 800e156:	8802      	ldrh	r2, [r0, #0]
 800e158:	8818      	ldrh	r0, [r3, #0]
 800e15a:	4282      	cmp	r2, r0
 800e15c:	d221      	bcs.n	800e1a2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 800e15e:	4b23      	ldr	r3, [pc, #140]	@ (800e1ec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800e160:	6819      	ldr	r1, [r3, #0]
 800e162:	2314      	movs	r3, #20
 800e164:	fb03 1302 	mla	r3, r3, r2, r1
 800e168:	6858      	ldr	r0, [r3, #4]
 800e16a:	2800      	cmp	r0, #0
 800e16c:	d03a      	beq.n	800e1e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 800e16e:	4920      	ldr	r1, [pc, #128]	@ (800e1f0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800e170:	6809      	ldr	r1, [r1, #0]
 800e172:	2900      	cmp	r1, #0
 800e174:	d036      	beq.n	800e1e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 800e176:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800e17a:	2900      	cmp	r1, #0
 800e17c:	d032      	beq.n	800e1e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 800e17e:	891a      	ldrh	r2, [r3, #8]
 800e180:	8958      	ldrh	r0, [r3, #10]
 800e182:	4350      	muls	r0, r2
 800e184:	7c5a      	ldrb	r2, [r3, #17]
 800e186:	7cdb      	ldrb	r3, [r3, #19]
 800e188:	0952      	lsrs	r2, r2, #5
 800e18a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800e18e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800e192:	2b0b      	cmp	r3, #11
 800e194:	bf18      	it	ne
 800e196:	0040      	lslne	r0, r0, #1
 800e198:	3003      	adds	r0, #3
 800e19a:	f020 0003 	bic.w	r0, r0, #3
 800e19e:	4408      	add	r0, r1
 800e1a0:	4770      	bx	lr
 800e1a2:	4b14      	ldr	r3, [pc, #80]	@ (800e1f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800e1a4:	881b      	ldrh	r3, [r3, #0]
 800e1a6:	4403      	add	r3, r0
 800e1a8:	429a      	cmp	r2, r3
 800e1aa:	da1a      	bge.n	800e1e2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800e1ac:	4b12      	ldr	r3, [pc, #72]	@ (800e1f8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800e1ae:	681b      	ldr	r3, [r3, #0]
 800e1b0:	1a10      	subs	r0, r2, r0
 800e1b2:	210e      	movs	r1, #14
 800e1b4:	fb01 3000 	mla	r0, r1, r0, r3
 800e1b8:	7b03      	ldrb	r3, [r0, #12]
 800e1ba:	f003 031f 	and.w	r3, r3, #31
 800e1be:	2b0b      	cmp	r3, #11
 800e1c0:	d10b      	bne.n	800e1da <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 800e1c2:	8903      	ldrh	r3, [r0, #8]
 800e1c4:	8940      	ldrh	r0, [r0, #10]
 800e1c6:	4358      	muls	r0, r3
 800e1c8:	4b09      	ldr	r3, [pc, #36]	@ (800e1f0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800e1ca:	6819      	ldr	r1, [r3, #0]
 800e1cc:	3003      	adds	r0, #3
 800e1ce:	f020 0303 	bic.w	r3, r0, #3
 800e1d2:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800e1d6:	4418      	add	r0, r3
 800e1d8:	4770      	bx	lr
 800e1da:	2b0d      	cmp	r3, #13
 800e1dc:	d101      	bne.n	800e1e2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800e1de:	300d      	adds	r0, #13
 800e1e0:	4770      	bx	lr
 800e1e2:	2000      	movs	r0, #0
 800e1e4:	4770      	bx	lr
 800e1e6:	bf00      	nop
 800e1e8:	20013880 	.word	0x20013880
 800e1ec:	20013888 	.word	0x20013888
 800e1f0:	20013864 	.word	0x20013864
 800e1f4:	20013884 	.word	0x20013884
 800e1f8:	20013868 	.word	0x20013868

0800e1fc <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800e1fc:	b510      	push	{r4, lr}
 800e1fe:	4a17      	ldr	r2, [pc, #92]	@ (800e25c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 800e200:	8803      	ldrh	r3, [r0, #0]
 800e202:	8812      	ldrh	r2, [r2, #0]
 800e204:	4293      	cmp	r3, r2
 800e206:	d20c      	bcs.n	800e222 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800e208:	4a15      	ldr	r2, [pc, #84]	@ (800e260 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 800e20a:	6812      	ldr	r2, [r2, #0]
 800e20c:	2114      	movs	r1, #20
 800e20e:	fb01 2303 	mla	r3, r1, r3, r2
 800e212:	7c58      	ldrb	r0, [r3, #17]
 800e214:	0942      	lsrs	r2, r0, #5
 800e216:	7cd8      	ldrb	r0, [r3, #19]
 800e218:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800e21c:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800e220:	bd10      	pop	{r4, pc}
 800e222:	4910      	ldr	r1, [pc, #64]	@ (800e264 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800e224:	8809      	ldrh	r1, [r1, #0]
 800e226:	4411      	add	r1, r2
 800e228:	428b      	cmp	r3, r1
 800e22a:	da09      	bge.n	800e240 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800e22c:	1a9b      	subs	r3, r3, r2
 800e22e:	4a0e      	ldr	r2, [pc, #56]	@ (800e268 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800e230:	6812      	ldr	r2, [r2, #0]
 800e232:	210e      	movs	r1, #14
 800e234:	fb01 2303 	mla	r3, r1, r3, r2
 800e238:	7b18      	ldrb	r0, [r3, #12]
 800e23a:	f000 001f 	and.w	r0, r0, #31
 800e23e:	e7ef      	b.n	800e220 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 800e240:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 800e244:	4293      	cmp	r3, r2
 800e246:	d106      	bne.n	800e256 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 800e248:	f7f4 f812 	bl	8002270 <_ZN8touchgfx3HAL3lcdEv>
 800e24c:	6803      	ldr	r3, [r0, #0]
 800e24e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e252:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e254:	4718      	bx	r3
 800e256:	2000      	movs	r0, #0
 800e258:	e7e2      	b.n	800e220 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 800e25a:	bf00      	nop
 800e25c:	20013880 	.word	0x20013880
 800e260:	20013888 	.word	0x20013888
 800e264:	20013884 	.word	0x20013884
 800e268:	20013868 	.word	0x20013868

0800e26c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800e26c:	2010      	movs	r0, #16
 800e26e:	4770      	bx	lr

0800e270 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800e270:	2000      	movs	r0, #0
 800e272:	4770      	bx	lr

0800e274 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 800e274:	4b02      	ldr	r3, [pc, #8]	@ (800e280 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 800e276:	8818      	ldrh	r0, [r3, #0]
 800e278:	0040      	lsls	r0, r0, #1
 800e27a:	b280      	uxth	r0, r0
 800e27c:	4770      	bx	lr
 800e27e:	bf00      	nop
 800e280:	200137fa 	.word	0x200137fa

0800e284 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800e284:	2bff      	cmp	r3, #255	@ 0xff
 800e286:	d050      	beq.n	800e32a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800e288:	2a0b      	cmp	r2, #11
 800e28a:	d04a      	beq.n	800e322 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800e28c:	d80e      	bhi.n	800e2ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800e28e:	2a03      	cmp	r2, #3
 800e290:	d03f      	beq.n	800e312 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800e292:	d804      	bhi.n	800e29e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800e294:	2a01      	cmp	r2, #1
 800e296:	d03e      	beq.n	800e316 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800e298:	d93f      	bls.n	800e31a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800e29a:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 800e29c:	4770      	bx	lr
 800e29e:	2a09      	cmp	r2, #9
 800e2a0:	d03f      	beq.n	800e322 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800e2a2:	d83c      	bhi.n	800e31e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800e2a4:	2a08      	cmp	r2, #8
 800e2a6:	d03a      	beq.n	800e31e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800e2a8:	2000      	movs	r0, #0
 800e2aa:	4770      	bx	lr
 800e2ac:	2a2f      	cmp	r2, #47	@ 0x2f
 800e2ae:	d024      	beq.n	800e2fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800e2b0:	d80d      	bhi.n	800e2ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800e2b2:	2a2d      	cmp	r2, #45	@ 0x2d
 800e2b4:	d014      	beq.n	800e2e0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800e2b6:	d826      	bhi.n	800e306 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800e2b8:	2a2c      	cmp	r2, #44	@ 0x2c
 800e2ba:	d1f5      	bne.n	800e2a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e2bc:	684b      	ldr	r3, [r1, #4]
 800e2be:	781b      	ldrb	r3, [r3, #0]
 800e2c0:	2b01      	cmp	r3, #1
 800e2c2:	d018      	beq.n	800e2f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800e2c4:	d323      	bcc.n	800e30e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800e2c6:	2b02      	cmp	r3, #2
 800e2c8:	d1ee      	bne.n	800e2a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e2ca:	68c0      	ldr	r0, [r0, #12]
 800e2cc:	4770      	bx	lr
 800e2ce:	2a31      	cmp	r2, #49	@ 0x31
 800e2d0:	d004      	beq.n	800e2dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800e2d2:	d328      	bcc.n	800e326 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800e2d4:	2a32      	cmp	r2, #50	@ 0x32
 800e2d6:	d026      	beq.n	800e326 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800e2d8:	2a33      	cmp	r2, #51	@ 0x33
 800e2da:	d1e5      	bne.n	800e2a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e2dc:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800e2de:	4770      	bx	lr
 800e2e0:	684b      	ldr	r3, [r1, #4]
 800e2e2:	781b      	ldrb	r3, [r3, #0]
 800e2e4:	2b01      	cmp	r3, #1
 800e2e6:	d004      	beq.n	800e2f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800e2e8:	d30b      	bcc.n	800e302 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800e2ea:	2b02      	cmp	r3, #2
 800e2ec:	d1dc      	bne.n	800e2a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e2ee:	6940      	ldr	r0, [r0, #20]
 800e2f0:	4770      	bx	lr
 800e2f2:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 800e2f4:	4770      	bx	lr
 800e2f6:	69c0      	ldr	r0, [r0, #28]
 800e2f8:	4770      	bx	lr
 800e2fa:	684b      	ldr	r3, [r1, #4]
 800e2fc:	781b      	ldrb	r3, [r3, #0]
 800e2fe:	2b00      	cmp	r3, #0
 800e300:	d1d2      	bne.n	800e2a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e302:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 800e304:	4770      	bx	lr
 800e306:	684b      	ldr	r3, [r1, #4]
 800e308:	781b      	ldrb	r3, [r3, #0]
 800e30a:	2b00      	cmp	r3, #0
 800e30c:	d1cc      	bne.n	800e2a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e30e:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 800e310:	4770      	bx	lr
 800e312:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 800e314:	4770      	bx	lr
 800e316:	6d40      	ldr	r0, [r0, #84]	@ 0x54
 800e318:	4770      	bx	lr
 800e31a:	6c40      	ldr	r0, [r0, #68]	@ 0x44
 800e31c:	4770      	bx	lr
 800e31e:	6dc0      	ldr	r0, [r0, #92]	@ 0x5c
 800e320:	4770      	bx	lr
 800e322:	6e40      	ldr	r0, [r0, #100]	@ 0x64
 800e324:	4770      	bx	lr
 800e326:	6ec0      	ldr	r0, [r0, #108]	@ 0x6c
 800e328:	4770      	bx	lr
 800e32a:	2a0b      	cmp	r2, #11
 800e32c:	d049      	beq.n	800e3c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800e32e:	d80e      	bhi.n	800e34e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800e330:	2a03      	cmp	r2, #3
 800e332:	d040      	beq.n	800e3b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800e334:	d804      	bhi.n	800e340 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800e336:	2a01      	cmp	r2, #1
 800e338:	d03f      	beq.n	800e3ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800e33a:	d940      	bls.n	800e3be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800e33c:	6c00      	ldr	r0, [r0, #64]	@ 0x40
 800e33e:	4770      	bx	lr
 800e340:	2a09      	cmp	r2, #9
 800e342:	d03e      	beq.n	800e3c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800e344:	d801      	bhi.n	800e34a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800e346:	2a08      	cmp	r2, #8
 800e348:	d1ae      	bne.n	800e2a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e34a:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 800e34c:	4770      	bx	lr
 800e34e:	2a2f      	cmp	r2, #47	@ 0x2f
 800e350:	d024      	beq.n	800e39c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800e352:	d80d      	bhi.n	800e370 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800e354:	2a2d      	cmp	r2, #45	@ 0x2d
 800e356:	d014      	beq.n	800e382 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800e358:	d826      	bhi.n	800e3a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800e35a:	2a2c      	cmp	r2, #44	@ 0x2c
 800e35c:	d1a4      	bne.n	800e2a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e35e:	684b      	ldr	r3, [r1, #4]
 800e360:	781b      	ldrb	r3, [r3, #0]
 800e362:	2b01      	cmp	r3, #1
 800e364:	d018      	beq.n	800e398 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800e366:	d324      	bcc.n	800e3b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800e368:	2b02      	cmp	r3, #2
 800e36a:	d19d      	bne.n	800e2a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e36c:	6900      	ldr	r0, [r0, #16]
 800e36e:	4770      	bx	lr
 800e370:	2a31      	cmp	r2, #49	@ 0x31
 800e372:	d004      	beq.n	800e37e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800e374:	d327      	bcc.n	800e3c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800e376:	2a32      	cmp	r2, #50	@ 0x32
 800e378:	d025      	beq.n	800e3c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800e37a:	2a33      	cmp	r2, #51	@ 0x33
 800e37c:	d194      	bne.n	800e2a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e37e:	6f80      	ldr	r0, [r0, #120]	@ 0x78
 800e380:	4770      	bx	lr
 800e382:	684b      	ldr	r3, [r1, #4]
 800e384:	781b      	ldrb	r3, [r3, #0]
 800e386:	2b01      	cmp	r3, #1
 800e388:	d004      	beq.n	800e394 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800e38a:	d30b      	bcc.n	800e3a4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800e38c:	2b02      	cmp	r3, #2
 800e38e:	d18b      	bne.n	800e2a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e390:	6980      	ldr	r0, [r0, #24]
 800e392:	4770      	bx	lr
 800e394:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800e396:	4770      	bx	lr
 800e398:	6a00      	ldr	r0, [r0, #32]
 800e39a:	4770      	bx	lr
 800e39c:	684b      	ldr	r3, [r1, #4]
 800e39e:	781b      	ldrb	r3, [r3, #0]
 800e3a0:	2b00      	cmp	r3, #0
 800e3a2:	d181      	bne.n	800e2a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e3a4:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 800e3a6:	4770      	bx	lr
 800e3a8:	684b      	ldr	r3, [r1, #4]
 800e3aa:	781b      	ldrb	r3, [r3, #0]
 800e3ac:	2b00      	cmp	r3, #0
 800e3ae:	f47f af7b 	bne.w	800e2a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e3b2:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 800e3b4:	4770      	bx	lr
 800e3b6:	6d00      	ldr	r0, [r0, #80]	@ 0x50
 800e3b8:	4770      	bx	lr
 800e3ba:	6d80      	ldr	r0, [r0, #88]	@ 0x58
 800e3bc:	4770      	bx	lr
 800e3be:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 800e3c0:	4770      	bx	lr
 800e3c2:	6e80      	ldr	r0, [r0, #104]	@ 0x68
 800e3c4:	4770      	bx	lr
 800e3c6:	6f00      	ldr	r0, [r0, #112]	@ 0x70
 800e3c8:	4770      	bx	lr

0800e3ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800e3ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e3ce:	b087      	sub	sp, #28
 800e3d0:	9815      	ldr	r0, [sp, #84]	@ 0x54
 800e3d2:	9205      	str	r2, [sp, #20]
 800e3d4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800e3d8:	9202      	str	r2, [sp, #8]
 800e3da:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 800e3de:	9101      	str	r1, [sp, #4]
 800e3e0:	6841      	ldr	r1, [r0, #4]
 800e3e2:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 800e3e6:	fb01 2404 	mla	r4, r1, r4, r2
 800e3ea:	6802      	ldr	r2, [r0, #0]
 800e3ec:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800e3f0:	f8de 2000 	ldr.w	r2, [lr]
 800e3f4:	9203      	str	r2, [sp, #12]
 800e3f6:	f8de 2004 	ldr.w	r2, [lr, #4]
 800e3fa:	3204      	adds	r2, #4
 800e3fc:	9204      	str	r2, [sp, #16]
 800e3fe:	9a02      	ldr	r2, [sp, #8]
 800e400:	43d6      	mvns	r6, r2
 800e402:	b2f6      	uxtb	r6, r6
 800e404:	9a01      	ldr	r2, [sp, #4]
 800e406:	2a00      	cmp	r2, #0
 800e408:	dc03      	bgt.n	800e412 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 800e40a:	9a05      	ldr	r2, [sp, #20]
 800e40c:	2a00      	cmp	r2, #0
 800e40e:	f340 8129 	ble.w	800e664 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800e412:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800e414:	f9be c008 	ldrsh.w	ip, [lr, #8]
 800e418:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 800e41c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 800e420:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800e422:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 800e426:	2b00      	cmp	r3, #0
 800e428:	dd0e      	ble.n	800e448 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800e42a:	1408      	asrs	r0, r1, #16
 800e42c:	d405      	bmi.n	800e43a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800e42e:	4560      	cmp	r0, ip
 800e430:	da03      	bge.n	800e43a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800e432:	1410      	asrs	r0, r2, #16
 800e434:	d401      	bmi.n	800e43a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800e436:	42b8      	cmp	r0, r7
 800e438:	db07      	blt.n	800e44a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 800e43a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 800e43c:	4401      	add	r1, r0
 800e43e:	9814      	ldr	r0, [sp, #80]	@ 0x50
 800e440:	3b01      	subs	r3, #1
 800e442:	4402      	add	r2, r0
 800e444:	3402      	adds	r4, #2
 800e446:	e7ee      	b.n	800e426 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 800e448:	d071      	beq.n	800e52e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800e44a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 800e44c:	1e58      	subs	r0, r3, #1
 800e44e:	fb05 1500 	mla	r5, r5, r0, r1
 800e452:	142d      	asrs	r5, r5, #16
 800e454:	d45f      	bmi.n	800e516 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800e456:	4565      	cmp	r5, ip
 800e458:	da5d      	bge.n	800e516 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800e45a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 800e45c:	fb05 2000 	mla	r0, r5, r0, r2
 800e460:	1400      	asrs	r0, r0, #16
 800e462:	d458      	bmi.n	800e516 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800e464:	42b8      	cmp	r0, r7
 800e466:	da56      	bge.n	800e516 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800e468:	f8bd b008 	ldrh.w	fp, [sp, #8]
 800e46c:	4699      	mov	r9, r3
 800e46e:	46a2      	mov	sl, r4
 800e470:	f1b9 0f00 	cmp.w	r9, #0
 800e474:	dd57      	ble.n	800e526 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 800e476:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800e47a:	9803      	ldr	r0, [sp, #12]
 800e47c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800e480:	140d      	asrs	r5, r1, #16
 800e482:	fb07 000c 	mla	r0, r7, ip, r0
 800e486:	f109 39ff 	add.w	r9, r9, #4294967295
 800e48a:	5d40      	ldrb	r0, [r0, r5]
 800e48c:	9d04      	ldr	r5, [sp, #16]
 800e48e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800e492:	f8ba 5000 	ldrh.w	r5, [sl]
 800e496:	122f      	asrs	r7, r5, #8
 800e498:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800e49c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 800e4a0:	fb17 f706 	smulbb	r7, r7, r6
 800e4a4:	ea4f 08e5 	mov.w	r8, r5, asr #3
 800e4a8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 800e4ac:	00ed      	lsls	r5, r5, #3
 800e4ae:	fb0c 7c0b 	mla	ip, ip, fp, r7
 800e4b2:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 800e4b6:	10c7      	asrs	r7, r0, #3
 800e4b8:	b2ed      	uxtb	r5, r5
 800e4ba:	00c0      	lsls	r0, r0, #3
 800e4bc:	fb18 f806 	smulbb	r8, r8, r6
 800e4c0:	fb15 f506 	smulbb	r5, r5, r6
 800e4c4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 800e4c8:	b2c0      	uxtb	r0, r0
 800e4ca:	fa1f fc8c 	uxth.w	ip, ip
 800e4ce:	fb07 870b 	mla	r7, r7, fp, r8
 800e4d2:	fb00 500b 	mla	r0, r0, fp, r5
 800e4d6:	b280      	uxth	r0, r0
 800e4d8:	b2bf      	uxth	r7, r7
 800e4da:	f10c 0501 	add.w	r5, ip, #1
 800e4de:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800e4e2:	f107 0801 	add.w	r8, r7, #1
 800e4e6:	1c45      	adds	r5, r0, #1
 800e4e8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800e4ec:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 800e4f0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 800e4f2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 800e4f6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800e4fa:	ea4f 1858 	mov.w	r8, r8, lsr #5
 800e4fe:	ea45 0c0c 	orr.w	ip, r5, ip
 800e502:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800e506:	4401      	add	r1, r0
 800e508:	9814      	ldr	r0, [sp, #80]	@ 0x50
 800e50a:	ea4c 0c08 	orr.w	ip, ip, r8
 800e50e:	f82a cb02 	strh.w	ip, [sl], #2
 800e512:	4402      	add	r2, r0
 800e514:	e7ac      	b.n	800e470 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 800e516:	f8bd a008 	ldrh.w	sl, [sp, #8]
 800e51a:	f04f 0800 	mov.w	r8, #0
 800e51e:	eb03 0008 	add.w	r0, r3, r8
 800e522:	2800      	cmp	r0, #0
 800e524:	dc41      	bgt.n	800e5aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800e526:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e52a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e52e:	9b01      	ldr	r3, [sp, #4]
 800e530:	2b00      	cmp	r3, #0
 800e532:	f340 8097 	ble.w	800e664 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800e536:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e53a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800e53e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800e542:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800e544:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e548:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e54c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e550:	eef0 6a62 	vmov.f32	s13, s5
 800e554:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e558:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e55c:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e560:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 800e564:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e568:	eef0 6a43 	vmov.f32	s13, s6
 800e56c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e570:	ee12 2a90 	vmov	r2, s5
 800e574:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e578:	fb92 f3f3 	sdiv	r3, r2, r3
 800e57c:	ee13 2a10 	vmov	r2, s6
 800e580:	9313      	str	r3, [sp, #76]	@ 0x4c
 800e582:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800e584:	fb92 f3f3 	sdiv	r3, r2, r3
 800e588:	9314      	str	r3, [sp, #80]	@ 0x50
 800e58a:	9b01      	ldr	r3, [sp, #4]
 800e58c:	9a05      	ldr	r2, [sp, #20]
 800e58e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e592:	3b01      	subs	r3, #1
 800e594:	9301      	str	r3, [sp, #4]
 800e596:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 800e59a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800e59c:	eeb0 3a67 	vmov.f32	s6, s15
 800e5a0:	bf08      	it	eq
 800e5a2:	4613      	moveq	r3, r2
 800e5a4:	eef0 2a47 	vmov.f32	s5, s14
 800e5a8:	e72c      	b.n	800e404 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 800e5aa:	140f      	asrs	r7, r1, #16
 800e5ac:	d453      	bmi.n	800e656 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800e5ae:	f8de 5008 	ldr.w	r5, [lr, #8]
 800e5b2:	42bd      	cmp	r5, r7
 800e5b4:	dd4f      	ble.n	800e656 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800e5b6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800e5ba:	d44c      	bmi.n	800e656 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800e5bc:	f8de 000c 	ldr.w	r0, [lr, #12]
 800e5c0:	4560      	cmp	r0, ip
 800e5c2:	dd48      	ble.n	800e656 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800e5c4:	9803      	ldr	r0, [sp, #12]
 800e5c6:	b22d      	sxth	r5, r5
 800e5c8:	fb0c 0505 	mla	r5, ip, r5, r0
 800e5cc:	5de8      	ldrb	r0, [r5, r7]
 800e5ce:	9d04      	ldr	r5, [sp, #16]
 800e5d0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800e5d4:	f06f 0501 	mvn.w	r5, #1
 800e5d8:	fb05 fb08 	mul.w	fp, r5, r8
 800e5dc:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800e5e0:	f834 500b 	ldrh.w	r5, [r4, fp]
 800e5e4:	122f      	asrs	r7, r5, #8
 800e5e6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 800e5ea:	fb17 f706 	smulbb	r7, r7, r6
 800e5ee:	ea4f 09e5 	mov.w	r9, r5, asr #3
 800e5f2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 800e5f6:	00ed      	lsls	r5, r5, #3
 800e5f8:	fb0c 7c0a 	mla	ip, ip, sl, r7
 800e5fc:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 800e600:	10c7      	asrs	r7, r0, #3
 800e602:	b2ed      	uxtb	r5, r5
 800e604:	00c0      	lsls	r0, r0, #3
 800e606:	fb19 f906 	smulbb	r9, r9, r6
 800e60a:	fb15 f506 	smulbb	r5, r5, r6
 800e60e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 800e612:	b2c0      	uxtb	r0, r0
 800e614:	fa1f fc8c 	uxth.w	ip, ip
 800e618:	fb07 970a 	mla	r7, r7, sl, r9
 800e61c:	fb00 500a 	mla	r0, r0, sl, r5
 800e620:	b2bf      	uxth	r7, r7
 800e622:	b280      	uxth	r0, r0
 800e624:	f10c 0501 	add.w	r5, ip, #1
 800e628:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800e62c:	f107 0901 	add.w	r9, r7, #1
 800e630:	1c45      	adds	r5, r0, #1
 800e632:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800e636:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800e63a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 800e63e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800e642:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800e646:	ea45 0c0c 	orr.w	ip, r5, ip
 800e64a:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 800e64e:	ea4c 0c09 	orr.w	ip, ip, r9
 800e652:	f824 c00b 	strh.w	ip, [r4, fp]
 800e656:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 800e658:	4401      	add	r1, r0
 800e65a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 800e65c:	f108 38ff 	add.w	r8, r8, #4294967295
 800e660:	4402      	add	r2, r0
 800e662:	e75c      	b.n	800e51e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 800e664:	b007      	add	sp, #28
 800e666:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e66a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800e66a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e66e:	b085      	sub	sp, #20
 800e670:	4693      	mov	fp, r2
 800e672:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 800e674:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 800e676:	6870      	ldr	r0, [r6, #4]
 800e678:	9100      	str	r1, [sp, #0]
 800e67a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 800e67e:	fb00 2404 	mla	r4, r0, r4, r2
 800e682:	6832      	ldr	r2, [r6, #0]
 800e684:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800e688:	682a      	ldr	r2, [r5, #0]
 800e68a:	9201      	str	r2, [sp, #4]
 800e68c:	686a      	ldr	r2, [r5, #4]
 800e68e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 800e692:	3204      	adds	r2, #4
 800e694:	9202      	str	r2, [sp, #8]
 800e696:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800e69a:	9a00      	ldr	r2, [sp, #0]
 800e69c:	2a00      	cmp	r2, #0
 800e69e:	dc03      	bgt.n	800e6a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 800e6a0:	f1bb 0f00 	cmp.w	fp, #0
 800e6a4:	f340 80a0 	ble.w	800e7e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 800e6a8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800e6aa:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800e6ae:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 800e6b2:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 800e6b6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800e6b8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 800e6bc:	2b00      	cmp	r3, #0
 800e6be:	dd0c      	ble.n	800e6da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800e6c0:	1406      	asrs	r6, r0, #16
 800e6c2:	d405      	bmi.n	800e6d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800e6c4:	454e      	cmp	r6, r9
 800e6c6:	da03      	bge.n	800e6d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800e6c8:	1416      	asrs	r6, r2, #16
 800e6ca:	d401      	bmi.n	800e6d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800e6cc:	4546      	cmp	r6, r8
 800e6ce:	db05      	blt.n	800e6dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800e6d0:	4470      	add	r0, lr
 800e6d2:	4462      	add	r2, ip
 800e6d4:	3b01      	subs	r3, #1
 800e6d6:	3402      	adds	r4, #2
 800e6d8:	e7f0      	b.n	800e6bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 800e6da:	d00f      	beq.n	800e6fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 800e6dc:	1e5e      	subs	r6, r3, #1
 800e6de:	fb0e 0706 	mla	r7, lr, r6, r0
 800e6e2:	143f      	asrs	r7, r7, #16
 800e6e4:	d541      	bpl.n	800e76a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 800e6e6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 800e6ea:	4698      	mov	r8, r3
 800e6ec:	9603      	str	r6, [sp, #12]
 800e6ee:	f1b8 0f00 	cmp.w	r8, #0
 800e6f2:	dc59      	bgt.n	800e7a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800e6f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e6f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e6fc:	9b00      	ldr	r3, [sp, #0]
 800e6fe:	2b00      	cmp	r3, #0
 800e700:	dd72      	ble.n	800e7e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 800e702:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e706:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e70a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800e70e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800e710:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e714:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e718:	eeb0 6a62 	vmov.f32	s12, s5
 800e71c:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e720:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e724:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e728:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 800e72c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e730:	eeb0 6a43 	vmov.f32	s12, s6
 800e734:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e738:	ee12 2a90 	vmov	r2, s5
 800e73c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e740:	fb92 fef3 	sdiv	lr, r2, r3
 800e744:	ee13 2a10 	vmov	r2, s6
 800e748:	fb92 fcf3 	sdiv	ip, r2, r3
 800e74c:	9b00      	ldr	r3, [sp, #0]
 800e74e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e752:	3b01      	subs	r3, #1
 800e754:	9300      	str	r3, [sp, #0]
 800e756:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 800e75a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800e75c:	eeb0 3a67 	vmov.f32	s6, s15
 800e760:	bf08      	it	eq
 800e762:	465b      	moveq	r3, fp
 800e764:	eef0 2a47 	vmov.f32	s5, s14
 800e768:	e797      	b.n	800e69a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 800e76a:	454f      	cmp	r7, r9
 800e76c:	dabb      	bge.n	800e6e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800e76e:	fb0c 2606 	mla	r6, ip, r6, r2
 800e772:	1436      	asrs	r6, r6, #16
 800e774:	d4b7      	bmi.n	800e6e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800e776:	4546      	cmp	r6, r8
 800e778:	dab5      	bge.n	800e6e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800e77a:	461e      	mov	r6, r3
 800e77c:	46a0      	mov	r8, r4
 800e77e:	2e00      	cmp	r6, #0
 800e780:	ddb8      	ble.n	800e6f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 800e782:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 800e786:	9901      	ldr	r1, [sp, #4]
 800e788:	1417      	asrs	r7, r2, #16
 800e78a:	ea4f 4920 	mov.w	r9, r0, asr #16
 800e78e:	fb0a 1707 	mla	r7, sl, r7, r1
 800e792:	9902      	ldr	r1, [sp, #8]
 800e794:	f817 7009 	ldrb.w	r7, [r7, r9]
 800e798:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 800e79c:	f828 7b02 	strh.w	r7, [r8], #2
 800e7a0:	4470      	add	r0, lr
 800e7a2:	4462      	add	r2, ip
 800e7a4:	3e01      	subs	r6, #1
 800e7a6:	e7ea      	b.n	800e77e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 800e7a8:	ea5f 4920 	movs.w	r9, r0, asr #16
 800e7ac:	d417      	bmi.n	800e7de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800e7ae:	68ae      	ldr	r6, [r5, #8]
 800e7b0:	454e      	cmp	r6, r9
 800e7b2:	dd14      	ble.n	800e7de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800e7b4:	ea5f 4a22 	movs.w	sl, r2, asr #16
 800e7b8:	d411      	bmi.n	800e7de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800e7ba:	68ef      	ldr	r7, [r5, #12]
 800e7bc:	4557      	cmp	r7, sl
 800e7be:	dd0e      	ble.n	800e7de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800e7c0:	9f01      	ldr	r7, [sp, #4]
 800e7c2:	b236      	sxth	r6, r6
 800e7c4:	fb0a 7606 	mla	r6, sl, r6, r7
 800e7c8:	9f02      	ldr	r7, [sp, #8]
 800e7ca:	f816 6009 	ldrb.w	r6, [r6, r9]
 800e7ce:	f06f 0101 	mvn.w	r1, #1
 800e7d2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 800e7d6:	fb01 f608 	mul.w	r6, r1, r8
 800e7da:	9903      	ldr	r1, [sp, #12]
 800e7dc:	538f      	strh	r7, [r1, r6]
 800e7de:	4470      	add	r0, lr
 800e7e0:	4462      	add	r2, ip
 800e7e2:	f108 38ff 	add.w	r8, r8, #4294967295
 800e7e6:	e782      	b.n	800e6ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 800e7e8:	b005      	add	sp, #20
 800e7ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e7ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800e7ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e7f2:	b087      	sub	sp, #28
 800e7f4:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 800e7f6:	9205      	str	r2, [sp, #20]
 800e7f8:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800e7fc:	9203      	str	r2, [sp, #12]
 800e7fe:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 800e802:	9102      	str	r1, [sp, #8]
 800e804:	6861      	ldr	r1, [r4, #4]
 800e806:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 800e80a:	fb01 2000 	mla	r0, r1, r0, r2
 800e80e:	6822      	ldr	r2, [r4, #0]
 800e810:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 800e814:	9200      	str	r2, [sp, #0]
 800e816:	f8dc 2000 	ldr.w	r2, [ip]
 800e81a:	9204      	str	r2, [sp, #16]
 800e81c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 800e820:	3204      	adds	r2, #4
 800e822:	9201      	str	r2, [sp, #4]
 800e824:	9a03      	ldr	r2, [sp, #12]
 800e826:	43d5      	mvns	r5, r2
 800e828:	b2ed      	uxtb	r5, r5
 800e82a:	9a02      	ldr	r2, [sp, #8]
 800e82c:	2a00      	cmp	r2, #0
 800e82e:	dc03      	bgt.n	800e838 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 800e830:	9a05      	ldr	r2, [sp, #20]
 800e832:	2a00      	cmp	r2, #0
 800e834:	f340 812c 	ble.w	800ea90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 800e838:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800e83a:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 800e83e:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 800e842:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 800e846:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800e848:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 800e84c:	2b00      	cmp	r3, #0
 800e84e:	dd10      	ble.n	800e872 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 800e850:	140c      	asrs	r4, r1, #16
 800e852:	d405      	bmi.n	800e860 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800e854:	4574      	cmp	r4, lr
 800e856:	da03      	bge.n	800e860 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800e858:	1414      	asrs	r4, r2, #16
 800e85a:	d401      	bmi.n	800e860 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800e85c:	42bc      	cmp	r4, r7
 800e85e:	db09      	blt.n	800e874 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 800e860:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 800e862:	9800      	ldr	r0, [sp, #0]
 800e864:	4421      	add	r1, r4
 800e866:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 800e868:	3002      	adds	r0, #2
 800e86a:	4422      	add	r2, r4
 800e86c:	3b01      	subs	r3, #1
 800e86e:	9000      	str	r0, [sp, #0]
 800e870:	e7ec      	b.n	800e84c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 800e872:	d071      	beq.n	800e958 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 800e874:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 800e876:	1e5c      	subs	r4, r3, #1
 800e878:	fb06 1604 	mla	r6, r6, r4, r1
 800e87c:	1436      	asrs	r6, r6, #16
 800e87e:	d45d      	bmi.n	800e93c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800e880:	4576      	cmp	r6, lr
 800e882:	da5b      	bge.n	800e93c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800e884:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 800e886:	fb06 2404 	mla	r4, r6, r4, r2
 800e88a:	1424      	asrs	r4, r4, #16
 800e88c:	d456      	bmi.n	800e93c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800e88e:	42bc      	cmp	r4, r7
 800e890:	da54      	bge.n	800e93c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800e892:	f8dd 9000 	ldr.w	r9, [sp]
 800e896:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 800e89a:	4698      	mov	r8, r3
 800e89c:	f1b8 0f00 	cmp.w	r8, #0
 800e8a0:	dd54      	ble.n	800e94c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 800e8a2:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 800e8a6:	9804      	ldr	r0, [sp, #16]
 800e8a8:	1414      	asrs	r4, r2, #16
 800e8aa:	fb07 0404 	mla	r4, r7, r4, r0
 800e8ae:	140e      	asrs	r6, r1, #16
 800e8b0:	9801      	ldr	r0, [sp, #4]
 800e8b2:	f814 e006 	ldrb.w	lr, [r4, r6]
 800e8b6:	f8b9 4000 	ldrh.w	r4, [r9]
 800e8ba:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 800e8be:	eb00 0b0e 	add.w	fp, r0, lr
 800e8c2:	1227      	asrs	r7, r4, #8
 800e8c4:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800e8c8:	f89b b001 	ldrb.w	fp, [fp, #1]
 800e8cc:	f810 e00e 	ldrb.w	lr, [r0, lr]
 800e8d0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 800e8d2:	fb16 f60a 	smulbb	r6, r6, sl
 800e8d6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 800e8da:	fb07 6705 	mla	r7, r7, r5, r6
 800e8de:	10e6      	asrs	r6, r4, #3
 800e8e0:	00e4      	lsls	r4, r4, #3
 800e8e2:	b2e4      	uxtb	r4, r4
 800e8e4:	fb1b fb0a 	smulbb	fp, fp, sl
 800e8e8:	fb14 f405 	smulbb	r4, r4, r5
 800e8ec:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 800e8f0:	b2bf      	uxth	r7, r7
 800e8f2:	fb06 b605 	mla	r6, r6, r5, fp
 800e8f6:	fb0e 4e0a 	mla	lr, lr, sl, r4
 800e8fa:	b2b6      	uxth	r6, r6
 800e8fc:	fa1f fe8e 	uxth.w	lr, lr
 800e900:	1c7c      	adds	r4, r7, #1
 800e902:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 800e906:	f106 0b01 	add.w	fp, r6, #1
 800e90a:	f10e 0401 	add.w	r4, lr, #1
 800e90e:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 800e912:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 800e916:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 800e91a:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 800e91e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800e922:	4327      	orrs	r7, r4
 800e924:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 800e928:	4401      	add	r1, r0
 800e92a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 800e92c:	ea47 070b 	orr.w	r7, r7, fp
 800e930:	f829 7b02 	strh.w	r7, [r9], #2
 800e934:	4402      	add	r2, r0
 800e936:	f108 38ff 	add.w	r8, r8, #4294967295
 800e93a:	e7af      	b.n	800e89c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 800e93c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 800e940:	f04f 0e00 	mov.w	lr, #0
 800e944:	eb03 040e 	add.w	r4, r3, lr
 800e948:	2c00      	cmp	r4, #0
 800e94a:	dc43      	bgt.n	800e9d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 800e94c:	9a00      	ldr	r2, [sp, #0]
 800e94e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e952:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800e956:	9300      	str	r3, [sp, #0]
 800e958:	9b02      	ldr	r3, [sp, #8]
 800e95a:	2b00      	cmp	r3, #0
 800e95c:	f340 8098 	ble.w	800ea90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 800e960:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e964:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800e968:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800e96c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800e96e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e972:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e976:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e97a:	eef0 6a62 	vmov.f32	s13, s5
 800e97e:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e982:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e986:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e98a:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 800e98e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e992:	eef0 6a43 	vmov.f32	s13, s6
 800e996:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e99a:	ee12 2a90 	vmov	r2, s5
 800e99e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e9a2:	fb92 f3f3 	sdiv	r3, r2, r3
 800e9a6:	ee13 2a10 	vmov	r2, s6
 800e9aa:	9313      	str	r3, [sp, #76]	@ 0x4c
 800e9ac:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800e9ae:	fb92 f3f3 	sdiv	r3, r2, r3
 800e9b2:	9314      	str	r3, [sp, #80]	@ 0x50
 800e9b4:	9b02      	ldr	r3, [sp, #8]
 800e9b6:	9a05      	ldr	r2, [sp, #20]
 800e9b8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e9bc:	3b01      	subs	r3, #1
 800e9be:	9302      	str	r3, [sp, #8]
 800e9c0:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 800e9c4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800e9c6:	eeb0 3a67 	vmov.f32	s6, s15
 800e9ca:	bf08      	it	eq
 800e9cc:	4613      	moveq	r3, r2
 800e9ce:	eef0 2a47 	vmov.f32	s5, s14
 800e9d2:	e72a      	b.n	800e82a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 800e9d4:	140f      	asrs	r7, r1, #16
 800e9d6:	d454      	bmi.n	800ea82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 800e9d8:	f8dc 6008 	ldr.w	r6, [ip, #8]
 800e9dc:	42be      	cmp	r6, r7
 800e9de:	dd50      	ble.n	800ea82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 800e9e0:	ea5f 4822 	movs.w	r8, r2, asr #16
 800e9e4:	d44d      	bmi.n	800ea82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 800e9e6:	f8dc 400c 	ldr.w	r4, [ip, #12]
 800e9ea:	4544      	cmp	r4, r8
 800e9ec:	dd49      	ble.n	800ea82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 800e9ee:	9c04      	ldr	r4, [sp, #16]
 800e9f0:	b236      	sxth	r6, r6
 800e9f2:	fb08 4606 	mla	r6, r8, r6, r4
 800e9f6:	f06f 0001 	mvn.w	r0, #1
 800e9fa:	f816 8007 	ldrb.w	r8, [r6, r7]
 800e9fe:	9c01      	ldr	r4, [sp, #4]
 800ea00:	fb00 fa0e 	mul.w	sl, r0, lr
 800ea04:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800ea08:	9800      	ldr	r0, [sp, #0]
 800ea0a:	eb04 0b08 	add.w	fp, r4, r8
 800ea0e:	f830 400a 	ldrh.w	r4, [r0, sl]
 800ea12:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800ea16:	9801      	ldr	r0, [sp, #4]
 800ea18:	f89b b001 	ldrb.w	fp, [fp, #1]
 800ea1c:	f810 8008 	ldrb.w	r8, [r0, r8]
 800ea20:	9800      	ldr	r0, [sp, #0]
 800ea22:	1227      	asrs	r7, r4, #8
 800ea24:	fb16 f609 	smulbb	r6, r6, r9
 800ea28:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 800ea2c:	fb07 6705 	mla	r7, r7, r5, r6
 800ea30:	10e6      	asrs	r6, r4, #3
 800ea32:	00e4      	lsls	r4, r4, #3
 800ea34:	b2e4      	uxtb	r4, r4
 800ea36:	fb1b fb09 	smulbb	fp, fp, r9
 800ea3a:	fb14 f405 	smulbb	r4, r4, r5
 800ea3e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 800ea42:	b2bf      	uxth	r7, r7
 800ea44:	fb06 b605 	mla	r6, r6, r5, fp
 800ea48:	fb08 4809 	mla	r8, r8, r9, r4
 800ea4c:	b2b6      	uxth	r6, r6
 800ea4e:	fa1f f888 	uxth.w	r8, r8
 800ea52:	1c7c      	adds	r4, r7, #1
 800ea54:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 800ea58:	f106 0b01 	add.w	fp, r6, #1
 800ea5c:	f108 0401 	add.w	r4, r8, #1
 800ea60:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 800ea64:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 800ea68:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 800ea6c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 800ea70:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800ea74:	4327      	orrs	r7, r4
 800ea76:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 800ea7a:	ea47 070b 	orr.w	r7, r7, fp
 800ea7e:	f820 700a 	strh.w	r7, [r0, sl]
 800ea82:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 800ea84:	4401      	add	r1, r0
 800ea86:	9814      	ldr	r0, [sp, #80]	@ 0x50
 800ea88:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ea8c:	4402      	add	r2, r0
 800ea8e:	e759      	b.n	800e944 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 800ea90:	b007      	add	sp, #28
 800ea92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800ea98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800ea98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ea9c:	b085      	sub	sp, #20
 800ea9e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800eaa2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 800eaa4:	9203      	str	r2, [sp, #12]
 800eaa6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 800eaaa:	6870      	ldr	r0, [r6, #4]
 800eaac:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 800eaae:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 800eab2:	686f      	ldr	r7, [r5, #4]
 800eab4:	9101      	str	r1, [sp, #4]
 800eab6:	fb00 2404 	mla	r4, r0, r4, r2
 800eaba:	6832      	ldr	r2, [r6, #0]
 800eabc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800eac0:	682a      	ldr	r2, [r5, #0]
 800eac2:	9202      	str	r2, [sp, #8]
 800eac4:	3704      	adds	r7, #4
 800eac6:	9a01      	ldr	r2, [sp, #4]
 800eac8:	2a00      	cmp	r2, #0
 800eaca:	dc03      	bgt.n	800ead4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 800eacc:	9a03      	ldr	r2, [sp, #12]
 800eace:	2a00      	cmp	r2, #0
 800ead0:	f340 80cc 	ble.w	800ec6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 800ead4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800ead6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800eada:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 800eade:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 800eae2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800eae4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 800eae8:	2b00      	cmp	r3, #0
 800eaea:	dd0d      	ble.n	800eb08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800eaec:	1406      	asrs	r6, r0, #16
 800eaee:	d405      	bmi.n	800eafc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 800eaf0:	454e      	cmp	r6, r9
 800eaf2:	da03      	bge.n	800eafc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 800eaf4:	1416      	asrs	r6, r2, #16
 800eaf6:	d401      	bmi.n	800eafc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 800eaf8:	4546      	cmp	r6, r8
 800eafa:	db06      	blt.n	800eb0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800eafc:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 800eafe:	4460      	add	r0, ip
 800eb00:	4432      	add	r2, r6
 800eb02:	3b01      	subs	r3, #1
 800eb04:	3402      	adds	r4, #2
 800eb06:	e7ef      	b.n	800eae8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 800eb08:	d00f      	beq.n	800eb2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 800eb0a:	1e5e      	subs	r6, r3, #1
 800eb0c:	fb0c 0e06 	mla	lr, ip, r6, r0
 800eb10:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 800eb14:	d543      	bpl.n	800eb9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 800eb16:	4698      	mov	r8, r3
 800eb18:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 800eb1c:	f1b8 0f00 	cmp.w	r8, #0
 800eb20:	dc71      	bgt.n	800ec06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 800eb22:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800eb26:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800eb2a:	9b01      	ldr	r3, [sp, #4]
 800eb2c:	2b00      	cmp	r3, #0
 800eb2e:	f340 809d 	ble.w	800ec6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 800eb32:	ee30 0a04 	vadd.f32	s0, s0, s8
 800eb36:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800eb3a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800eb3e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800eb40:	ee31 1a05 	vadd.f32	s2, s2, s10
 800eb44:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800eb48:	eeb0 6a62 	vmov.f32	s12, s5
 800eb4c:	ee61 7a27 	vmul.f32	s15, s2, s15
 800eb50:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800eb54:	ee77 2a62 	vsub.f32	s5, s14, s5
 800eb58:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 800eb5c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800eb60:	eeb0 6a43 	vmov.f32	s12, s6
 800eb64:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800eb68:	ee12 2a90 	vmov	r2, s5
 800eb6c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800eb70:	fb92 fcf3 	sdiv	ip, r2, r3
 800eb74:	ee13 2a10 	vmov	r2, s6
 800eb78:	fb92 f3f3 	sdiv	r3, r2, r3
 800eb7c:	9312      	str	r3, [sp, #72]	@ 0x48
 800eb7e:	9b01      	ldr	r3, [sp, #4]
 800eb80:	9a03      	ldr	r2, [sp, #12]
 800eb82:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800eb86:	3b01      	subs	r3, #1
 800eb88:	9301      	str	r3, [sp, #4]
 800eb8a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 800eb8e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800eb90:	eeb0 3a67 	vmov.f32	s6, s15
 800eb94:	bf08      	it	eq
 800eb96:	4613      	moveq	r3, r2
 800eb98:	eef0 2a47 	vmov.f32	s5, s14
 800eb9c:	e793      	b.n	800eac6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 800eb9e:	45ce      	cmp	lr, r9
 800eba0:	dab9      	bge.n	800eb16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800eba2:	9912      	ldr	r1, [sp, #72]	@ 0x48
 800eba4:	fb01 2606 	mla	r6, r1, r6, r2
 800eba8:	1436      	asrs	r6, r6, #16
 800ebaa:	d4b4      	bmi.n	800eb16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800ebac:	4546      	cmp	r6, r8
 800ebae:	dab2      	bge.n	800eb16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800ebb0:	4698      	mov	r8, r3
 800ebb2:	46a2      	mov	sl, r4
 800ebb4:	f1b8 0f00 	cmp.w	r8, #0
 800ebb8:	ddb3      	ble.n	800eb22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 800ebba:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800ebbe:	9902      	ldr	r1, [sp, #8]
 800ebc0:	1416      	asrs	r6, r2, #16
 800ebc2:	fb09 1606 	mla	r6, r9, r6, r1
 800ebc6:	ea4f 4e20 	mov.w	lr, r0, asr #16
 800ebca:	492a      	ldr	r1, [pc, #168]	@ (800ec74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 800ebcc:	f816 e00e 	ldrb.w	lr, [r6, lr]
 800ebd0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 800ebd4:	eb07 0b0e 	add.w	fp, r7, lr
 800ebd8:	4460      	add	r0, ip
 800ebda:	f89b 6001 	ldrb.w	r6, [fp, #1]
 800ebde:	f89b 9002 	ldrb.w	r9, [fp, #2]
 800ebe2:	00f6      	lsls	r6, r6, #3
 800ebe4:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 800ebe8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 800ebec:	ea49 0606 	orr.w	r6, r9, r6
 800ebf0:	f817 900e 	ldrb.w	r9, [r7, lr]
 800ebf4:	9912      	ldr	r1, [sp, #72]	@ 0x48
 800ebf6:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 800ebfa:	f82a 6b02 	strh.w	r6, [sl], #2
 800ebfe:	440a      	add	r2, r1
 800ec00:	f108 38ff 	add.w	r8, r8, #4294967295
 800ec04:	e7d6      	b.n	800ebb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 800ec06:	ea5f 4920 	movs.w	r9, r0, asr #16
 800ec0a:	d429      	bmi.n	800ec60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 800ec0c:	68ae      	ldr	r6, [r5, #8]
 800ec0e:	454e      	cmp	r6, r9
 800ec10:	dd26      	ble.n	800ec60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 800ec12:	ea5f 4b22 	movs.w	fp, r2, asr #16
 800ec16:	d423      	bmi.n	800ec60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 800ec18:	68e9      	ldr	r1, [r5, #12]
 800ec1a:	4559      	cmp	r1, fp
 800ec1c:	dd20      	ble.n	800ec60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 800ec1e:	9902      	ldr	r1, [sp, #8]
 800ec20:	fa0f fe86 	sxth.w	lr, r6
 800ec24:	fb0b 1e0e 	mla	lr, fp, lr, r1
 800ec28:	f06f 0101 	mvn.w	r1, #1
 800ec2c:	f81e e009 	ldrb.w	lr, [lr, r9]
 800ec30:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 800ec34:	eb07 060e 	add.w	r6, r7, lr
 800ec38:	fb01 f908 	mul.w	r9, r1, r8
 800ec3c:	f896 b002 	ldrb.w	fp, [r6, #2]
 800ec40:	7876      	ldrb	r6, [r6, #1]
 800ec42:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 800ec46:	00f6      	lsls	r6, r6, #3
 800ec48:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 800ec4c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 800ec50:	ea4b 0606 	orr.w	r6, fp, r6
 800ec54:	f817 b00e 	ldrb.w	fp, [r7, lr]
 800ec58:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 800ec5c:	f82a 6009 	strh.w	r6, [sl, r9]
 800ec60:	9912      	ldr	r1, [sp, #72]	@ 0x48
 800ec62:	4460      	add	r0, ip
 800ec64:	440a      	add	r2, r1
 800ec66:	f108 38ff 	add.w	r8, r8, #4294967295
 800ec6a:	e757      	b.n	800eb1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 800ec6c:	b005      	add	sp, #20
 800ec6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ec72:	bf00      	nop
 800ec74:	fffff800 	.word	0xfffff800

0800ec78 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800ec78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ec7c:	b087      	sub	sp, #28
 800ec7e:	468b      	mov	fp, r1
 800ec80:	9815      	ldr	r0, [sp, #84]	@ 0x54
 800ec82:	9204      	str	r2, [sp, #16]
 800ec84:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800ec88:	9205      	str	r2, [sp, #20]
 800ec8a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 800ec8e:	6841      	ldr	r1, [r0, #4]
 800ec90:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 800ec94:	fb01 2404 	mla	r4, r1, r4, r2
 800ec98:	6802      	ldr	r2, [r0, #0]
 800ec9a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800ec9e:	f8dc 2000 	ldr.w	r2, [ip]
 800eca2:	9201      	str	r2, [sp, #4]
 800eca4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 800eca8:	3204      	adds	r2, #4
 800ecaa:	9202      	str	r2, [sp, #8]
 800ecac:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800ecb0:	f1bb 0f00 	cmp.w	fp, #0
 800ecb4:	dc03      	bgt.n	800ecbe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 800ecb6:	9a04      	ldr	r2, [sp, #16]
 800ecb8:	2a00      	cmp	r2, #0
 800ecba:	f340 8138 	ble.w	800ef2e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 800ecbe:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800ecc0:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 800ecc4:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 800ecc8:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 800eccc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800ecce:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 800ecd2:	2b00      	cmp	r3, #0
 800ecd4:	dd0e      	ble.n	800ecf4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800ecd6:	1402      	asrs	r2, r0, #16
 800ecd8:	d405      	bmi.n	800ece6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 800ecda:	42ba      	cmp	r2, r7
 800ecdc:	da03      	bge.n	800ece6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 800ecde:	140a      	asrs	r2, r1, #16
 800ece0:	d401      	bmi.n	800ece6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 800ece2:	42b2      	cmp	r2, r6
 800ece4:	db07      	blt.n	800ecf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800ece6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800ece8:	4410      	add	r0, r2
 800ecea:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 800ecec:	3b01      	subs	r3, #1
 800ecee:	4411      	add	r1, r2
 800ecf0:	3402      	adds	r4, #2
 800ecf2:	e7ee      	b.n	800ecd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 800ecf4:	d019      	beq.n	800ed2a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 800ecf6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 800ecf8:	1e5a      	subs	r2, r3, #1
 800ecfa:	fb05 0502 	mla	r5, r5, r2, r0
 800ecfe:	142d      	asrs	r5, r5, #16
 800ed00:	d409      	bmi.n	800ed16 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800ed02:	42bd      	cmp	r5, r7
 800ed04:	da07      	bge.n	800ed16 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800ed06:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 800ed08:	fb05 1202 	mla	r2, r5, r2, r1
 800ed0c:	1412      	asrs	r2, r2, #16
 800ed0e:	d402      	bmi.n	800ed16 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800ed10:	42b2      	cmp	r2, r6
 800ed12:	f2c0 80ac 	blt.w	800ee6e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 800ed16:	f04f 0e00 	mov.w	lr, #0
 800ed1a:	eb03 020e 	add.w	r2, r3, lr
 800ed1e:	2a00      	cmp	r2, #0
 800ed20:	dc3e      	bgt.n	800eda0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 800ed22:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ed26:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ed2a:	f1bb 0f00 	cmp.w	fp, #0
 800ed2e:	f340 80fe 	ble.w	800ef2e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 800ed32:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ed36:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ed3a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800ed3e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800ed40:	f1bb 0b01 	subs.w	fp, fp, #1
 800ed44:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ed48:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ed4c:	eeb0 6a62 	vmov.f32	s12, s5
 800ed50:	ee61 7a27 	vmul.f32	s15, s2, s15
 800ed54:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ed58:	ee77 2a62 	vsub.f32	s5, s14, s5
 800ed5c:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 800ed60:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800ed64:	eeb0 6a43 	vmov.f32	s12, s6
 800ed68:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800ed6c:	ee12 2a90 	vmov	r2, s5
 800ed70:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800ed74:	fb92 f3f3 	sdiv	r3, r2, r3
 800ed78:	ee13 2a10 	vmov	r2, s6
 800ed7c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ed80:	9313      	str	r3, [sp, #76]	@ 0x4c
 800ed82:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800ed84:	fb92 f3f3 	sdiv	r3, r2, r3
 800ed88:	9a04      	ldr	r2, [sp, #16]
 800ed8a:	9314      	str	r3, [sp, #80]	@ 0x50
 800ed8c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 800ed90:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800ed92:	eeb0 3a67 	vmov.f32	s6, s15
 800ed96:	bf08      	it	eq
 800ed98:	4613      	moveq	r3, r2
 800ed9a:	eef0 2a47 	vmov.f32	s5, s14
 800ed9e:	e787      	b.n	800ecb0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 800eda0:	1406      	asrs	r6, r0, #16
 800eda2:	d45d      	bmi.n	800ee60 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800eda4:	f8dc 5008 	ldr.w	r5, [ip, #8]
 800eda8:	42b5      	cmp	r5, r6
 800edaa:	dd59      	ble.n	800ee60 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800edac:	140f      	asrs	r7, r1, #16
 800edae:	d457      	bmi.n	800ee60 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800edb0:	f8dc 200c 	ldr.w	r2, [ip, #12]
 800edb4:	42ba      	cmp	r2, r7
 800edb6:	dd53      	ble.n	800ee60 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800edb8:	9a01      	ldr	r2, [sp, #4]
 800edba:	b22d      	sxth	r5, r5
 800edbc:	fb07 2505 	mla	r5, r7, r5, r2
 800edc0:	5daa      	ldrb	r2, [r5, r6]
 800edc2:	9d02      	ldr	r5, [sp, #8]
 800edc4:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800edc8:	0e2e      	lsrs	r6, r5, #24
 800edca:	d049      	beq.n	800ee60 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800edcc:	f06f 0201 	mvn.w	r2, #1
 800edd0:	fb02 f20e 	mul.w	r2, r2, lr
 800edd4:	9203      	str	r2, [sp, #12]
 800edd6:	f834 8002 	ldrh.w	r8, [r4, r2]
 800edda:	9a05      	ldr	r2, [sp, #20]
 800eddc:	4356      	muls	r6, r2
 800edde:	1c72      	adds	r2, r6, #1
 800ede0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800ede4:	1212      	asrs	r2, r2, #8
 800ede6:	fa1f f982 	uxth.w	r9, r2
 800edea:	ea4f 2728 	mov.w	r7, r8, asr #8
 800edee:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800edf2:	43d2      	mvns	r2, r2
 800edf4:	b2d2      	uxtb	r2, r2
 800edf6:	fb16 f609 	smulbb	r6, r6, r9
 800edfa:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 800edfe:	fb07 6702 	mla	r7, r7, r2, r6
 800ee02:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800ee06:	ea4f 06e8 	mov.w	r6, r8, asr #3
 800ee0a:	b2ed      	uxtb	r5, r5
 800ee0c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800ee10:	fa5f f888 	uxtb.w	r8, r8
 800ee14:	fb15 f509 	smulbb	r5, r5, r9
 800ee18:	fb08 5502 	mla	r5, r8, r2, r5
 800ee1c:	b2bf      	uxth	r7, r7
 800ee1e:	fb1a fa09 	smulbb	sl, sl, r9
 800ee22:	b2ad      	uxth	r5, r5
 800ee24:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 800ee28:	fb06 a602 	mla	r6, r6, r2, sl
 800ee2c:	1c7a      	adds	r2, r7, #1
 800ee2e:	f105 0a01 	add.w	sl, r5, #1
 800ee32:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800ee36:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800ee3a:	b2b6      	uxth	r6, r6
 800ee3c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800ee40:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 800ee44:	ea4a 0707 	orr.w	r7, sl, r7
 800ee48:	f106 0a01 	add.w	sl, r6, #1
 800ee4c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800ee50:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800ee54:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 800ee58:	9a03      	ldr	r2, [sp, #12]
 800ee5a:	ea47 070a 	orr.w	r7, r7, sl
 800ee5e:	52a7      	strh	r7, [r4, r2]
 800ee60:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800ee62:	4410      	add	r0, r2
 800ee64:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 800ee66:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ee6a:	4411      	add	r1, r2
 800ee6c:	e755      	b.n	800ed1a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 800ee6e:	f04f 0800 	mov.w	r8, #0
 800ee72:	eba3 0208 	sub.w	r2, r3, r8
 800ee76:	2a00      	cmp	r2, #0
 800ee78:	f77f af53 	ble.w	800ed22 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 800ee7c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 800ee80:	9f01      	ldr	r7, [sp, #4]
 800ee82:	140a      	asrs	r2, r1, #16
 800ee84:	1405      	asrs	r5, r0, #16
 800ee86:	fb06 7202 	mla	r2, r6, r2, r7
 800ee8a:	5d52      	ldrb	r2, [r2, r5]
 800ee8c:	9d02      	ldr	r5, [sp, #8]
 800ee8e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800ee92:	0e2e      	lsrs	r6, r5, #24
 800ee94:	d044      	beq.n	800ef20 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 800ee96:	9a05      	ldr	r2, [sp, #20]
 800ee98:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 800ee9c:	4356      	muls	r6, r2
 800ee9e:	1c72      	adds	r2, r6, #1
 800eea0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800eea4:	1212      	asrs	r2, r2, #8
 800eea6:	fa1f f982 	uxth.w	r9, r2
 800eeaa:	ea4f 272e 	mov.w	r7, lr, asr #8
 800eeae:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800eeb2:	43d2      	mvns	r2, r2
 800eeb4:	b2d2      	uxtb	r2, r2
 800eeb6:	fb16 f609 	smulbb	r6, r6, r9
 800eeba:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 800eebe:	fb07 6702 	mla	r7, r7, r2, r6
 800eec2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800eec6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800eeca:	b2ed      	uxtb	r5, r5
 800eecc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800eed0:	fa5f fe8e 	uxtb.w	lr, lr
 800eed4:	fb15 f509 	smulbb	r5, r5, r9
 800eed8:	fb0e 5502 	mla	r5, lr, r2, r5
 800eedc:	b2bf      	uxth	r7, r7
 800eede:	fb1a fa09 	smulbb	sl, sl, r9
 800eee2:	b2ad      	uxth	r5, r5
 800eee4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 800eee8:	fb06 a602 	mla	r6, r6, r2, sl
 800eeec:	1c7a      	adds	r2, r7, #1
 800eeee:	f105 0a01 	add.w	sl, r5, #1
 800eef2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800eef6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800eefa:	b2b6      	uxth	r6, r6
 800eefc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800ef00:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 800ef04:	ea4a 0707 	orr.w	r7, sl, r7
 800ef08:	f106 0a01 	add.w	sl, r6, #1
 800ef0c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800ef10:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800ef14:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 800ef18:	ea47 070a 	orr.w	r7, r7, sl
 800ef1c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 800ef20:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800ef22:	4410      	add	r0, r2
 800ef24:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 800ef26:	f108 0801 	add.w	r8, r8, #1
 800ef2a:	4411      	add	r1, r2
 800ef2c:	e7a1      	b.n	800ee72 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 800ef2e:	b007      	add	sp, #28
 800ef30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ef34 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800ef34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef38:	b085      	sub	sp, #20
 800ef3a:	468b      	mov	fp, r1
 800ef3c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 800ef3e:	9203      	str	r2, [sp, #12]
 800ef40:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 800ef44:	6841      	ldr	r1, [r0, #4]
 800ef46:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 800ef4a:	fb01 2404 	mla	r4, r1, r4, r2
 800ef4e:	6802      	ldr	r2, [r0, #0]
 800ef50:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800ef54:	f8de 2000 	ldr.w	r2, [lr]
 800ef58:	9200      	str	r2, [sp, #0]
 800ef5a:	f8de 2004 	ldr.w	r2, [lr, #4]
 800ef5e:	3204      	adds	r2, #4
 800ef60:	9201      	str	r2, [sp, #4]
 800ef62:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800ef66:	f1bb 0f00 	cmp.w	fp, #0
 800ef6a:	dc03      	bgt.n	800ef74 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 800ef6c:	9a03      	ldr	r2, [sp, #12]
 800ef6e:	2a00      	cmp	r2, #0
 800ef70:	f340 8153 	ble.w	800f21a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 800ef74:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800ef76:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800ef7a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 800ef7e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 800ef82:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800ef84:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 800ef88:	2b00      	cmp	r3, #0
 800ef8a:	dd0e      	ble.n	800efaa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800ef8c:	1408      	asrs	r0, r1, #16
 800ef8e:	d405      	bmi.n	800ef9c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800ef90:	42b8      	cmp	r0, r7
 800ef92:	da03      	bge.n	800ef9c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800ef94:	1410      	asrs	r0, r2, #16
 800ef96:	d401      	bmi.n	800ef9c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800ef98:	42b0      	cmp	r0, r6
 800ef9a:	db07      	blt.n	800efac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 800ef9c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 800ef9e:	4401      	add	r1, r0
 800efa0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 800efa2:	3b01      	subs	r3, #1
 800efa4:	4402      	add	r2, r0
 800efa6:	3402      	adds	r4, #2
 800efa8:	e7ee      	b.n	800ef88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 800efaa:	d017      	beq.n	800efdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 800efac:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 800efae:	1e58      	subs	r0, r3, #1
 800efb0:	fb05 1500 	mla	r5, r5, r0, r1
 800efb4:	142d      	asrs	r5, r5, #16
 800efb6:	d409      	bmi.n	800efcc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800efb8:	42bd      	cmp	r5, r7
 800efba:	da07      	bge.n	800efcc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800efbc:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 800efbe:	fb05 2000 	mla	r0, r5, r0, r2
 800efc2:	1400      	asrs	r0, r0, #16
 800efc4:	d402      	bmi.n	800efcc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800efc6:	42b0      	cmp	r0, r6
 800efc8:	f2c0 80bc 	blt.w	800f144 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 800efcc:	2600      	movs	r6, #0
 800efce:	1998      	adds	r0, r3, r6
 800efd0:	2800      	cmp	r0, #0
 800efd2:	dc3e      	bgt.n	800f052 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 800efd4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800efd8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800efdc:	f1bb 0f00 	cmp.w	fp, #0
 800efe0:	f340 811b 	ble.w	800f21a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 800efe4:	ee30 0a04 	vadd.f32	s0, s0, s8
 800efe8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800efec:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800eff0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800eff2:	f1bb 0b01 	subs.w	fp, fp, #1
 800eff6:	ee31 1a05 	vadd.f32	s2, s2, s10
 800effa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800effe:	eeb0 6a62 	vmov.f32	s12, s5
 800f002:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f006:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f00a:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f00e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 800f012:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f016:	eeb0 6a43 	vmov.f32	s12, s6
 800f01a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f01e:	ee12 2a90 	vmov	r2, s5
 800f022:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f026:	fb92 f3f3 	sdiv	r3, r2, r3
 800f02a:	ee13 2a10 	vmov	r2, s6
 800f02e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f032:	9311      	str	r3, [sp, #68]	@ 0x44
 800f034:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800f036:	fb92 f3f3 	sdiv	r3, r2, r3
 800f03a:	9a03      	ldr	r2, [sp, #12]
 800f03c:	9312      	str	r3, [sp, #72]	@ 0x48
 800f03e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 800f042:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800f044:	eeb0 3a67 	vmov.f32	s6, s15
 800f048:	bf08      	it	eq
 800f04a:	4613      	moveq	r3, r2
 800f04c:	eef0 2a47 	vmov.f32	s5, s14
 800f050:	e789      	b.n	800ef66 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 800f052:	140f      	asrs	r7, r1, #16
 800f054:	d426      	bmi.n	800f0a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 800f056:	f8de 5008 	ldr.w	r5, [lr, #8]
 800f05a:	42bd      	cmp	r5, r7
 800f05c:	dd22      	ble.n	800f0a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 800f05e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800f062:	d41f      	bmi.n	800f0a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 800f064:	f8de 000c 	ldr.w	r0, [lr, #12]
 800f068:	4560      	cmp	r0, ip
 800f06a:	dd1b      	ble.n	800f0a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 800f06c:	9800      	ldr	r0, [sp, #0]
 800f06e:	b22d      	sxth	r5, r5
 800f070:	fb0c 0505 	mla	r5, ip, r5, r0
 800f074:	5de8      	ldrb	r0, [r5, r7]
 800f076:	9d01      	ldr	r5, [sp, #4]
 800f078:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800f07c:	0e07      	lsrs	r7, r0, #24
 800f07e:	2fff      	cmp	r7, #255	@ 0xff
 800f080:	d116      	bne.n	800f0b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 800f082:	f06f 0501 	mvn.w	r5, #1
 800f086:	fb05 f706 	mul.w	r7, r5, r6
 800f08a:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 800f08e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 800f092:	0945      	lsrs	r5, r0, #5
 800f094:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 800f098:	ea4c 0505 	orr.w	r5, ip, r5
 800f09c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 800f0a0:	4305      	orrs	r5, r0
 800f0a2:	53e5      	strh	r5, [r4, r7]
 800f0a4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 800f0a6:	4401      	add	r1, r0
 800f0a8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 800f0aa:	3e01      	subs	r6, #1
 800f0ac:	4402      	add	r2, r0
 800f0ae:	e78e      	b.n	800efce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 800f0b0:	b2fd      	uxtb	r5, r7
 800f0b2:	2f00      	cmp	r7, #0
 800f0b4:	d0f6      	beq.n	800f0a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 800f0b6:	f06f 0701 	mvn.w	r7, #1
 800f0ba:	4377      	muls	r7, r6
 800f0bc:	fa1f f985 	uxth.w	r9, r5
 800f0c0:	f834 8007 	ldrh.w	r8, [r4, r7]
 800f0c4:	9702      	str	r7, [sp, #8]
 800f0c6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 800f0ca:	f3c0 4707 	ubfx	r7, r0, #16, #8
 800f0ce:	43ed      	mvns	r5, r5
 800f0d0:	b2ed      	uxtb	r5, r5
 800f0d2:	fb17 f709 	smulbb	r7, r7, r9
 800f0d6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 800f0da:	fb0c 7c05 	mla	ip, ip, r5, r7
 800f0de:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 800f0e2:	ea4f 07e8 	mov.w	r7, r8, asr #3
 800f0e6:	b2c0      	uxtb	r0, r0
 800f0e8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800f0ec:	fa5f f888 	uxtb.w	r8, r8
 800f0f0:	fb10 f009 	smulbb	r0, r0, r9
 800f0f4:	fb08 0005 	mla	r0, r8, r5, r0
 800f0f8:	b280      	uxth	r0, r0
 800f0fa:	fa1f fc8c 	uxth.w	ip, ip
 800f0fe:	fb1a fa09 	smulbb	sl, sl, r9
 800f102:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 800f106:	fb07 a705 	mla	r7, r7, r5, sl
 800f10a:	f100 0a01 	add.w	sl, r0, #1
 800f10e:	f10c 0501 	add.w	r5, ip, #1
 800f112:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 800f116:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800f11a:	b2bf      	uxth	r7, r7
 800f11c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f120:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 800f124:	ea4a 0c0c 	orr.w	ip, sl, ip
 800f128:	f107 0a01 	add.w	sl, r7, #1
 800f12c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800f130:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f134:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 800f138:	9802      	ldr	r0, [sp, #8]
 800f13a:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f13e:	f824 c000 	strh.w	ip, [r4, r0]
 800f142:	e7af      	b.n	800f0a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 800f144:	f04f 0800 	mov.w	r8, #0
 800f148:	eba3 0008 	sub.w	r0, r3, r8
 800f14c:	2800      	cmp	r0, #0
 800f14e:	f77f af41 	ble.w	800efd4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 800f152:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 800f156:	9f00      	ldr	r7, [sp, #0]
 800f158:	1410      	asrs	r0, r2, #16
 800f15a:	140d      	asrs	r5, r1, #16
 800f15c:	fb06 7000 	mla	r0, r6, r0, r7
 800f160:	5d40      	ldrb	r0, [r0, r5]
 800f162:	9d01      	ldr	r5, [sp, #4]
 800f164:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 800f168:	0e2e      	lsrs	r6, r5, #24
 800f16a:	2eff      	cmp	r6, #255	@ 0xff
 800f16c:	d112      	bne.n	800f194 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 800f16e:	482c      	ldr	r0, [pc, #176]	@ (800f220 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 800f170:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 800f174:	0968      	lsrs	r0, r5, #5
 800f176:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800f17a:	4330      	orrs	r0, r6
 800f17c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 800f180:	4328      	orrs	r0, r5
 800f182:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 800f186:	9811      	ldr	r0, [sp, #68]	@ 0x44
 800f188:	4401      	add	r1, r0
 800f18a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 800f18c:	f108 0801 	add.w	r8, r8, #1
 800f190:	4402      	add	r2, r0
 800f192:	e7d9      	b.n	800f148 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 800f194:	b2f0      	uxtb	r0, r6
 800f196:	2e00      	cmp	r6, #0
 800f198:	d0f5      	beq.n	800f186 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 800f19a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 800f19e:	fa1f f980 	uxth.w	r9, r0
 800f1a2:	ea4f 272c 	mov.w	r7, ip, asr #8
 800f1a6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800f1aa:	43c0      	mvns	r0, r0
 800f1ac:	b2c0      	uxtb	r0, r0
 800f1ae:	fb16 f609 	smulbb	r6, r6, r9
 800f1b2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 800f1b6:	fb07 6700 	mla	r7, r7, r0, r6
 800f1ba:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800f1be:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800f1c2:	b2ed      	uxtb	r5, r5
 800f1c4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800f1c8:	fa5f fc8c 	uxtb.w	ip, ip
 800f1cc:	fb15 f509 	smulbb	r5, r5, r9
 800f1d0:	fb0c 5500 	mla	r5, ip, r0, r5
 800f1d4:	b2bf      	uxth	r7, r7
 800f1d6:	fb1a fa09 	smulbb	sl, sl, r9
 800f1da:	b2ad      	uxth	r5, r5
 800f1dc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 800f1e0:	fb06 a600 	mla	r6, r6, r0, sl
 800f1e4:	1c78      	adds	r0, r7, #1
 800f1e6:	f105 0a01 	add.w	sl, r5, #1
 800f1ea:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 800f1ee:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f1f2:	b2b6      	uxth	r6, r6
 800f1f4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f1f8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 800f1fc:	ea4a 0707 	orr.w	r7, sl, r7
 800f200:	f106 0a01 	add.w	sl, r6, #1
 800f204:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f208:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f20c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 800f210:	ea47 070a 	orr.w	r7, r7, sl
 800f214:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 800f218:	e7b5      	b.n	800f186 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 800f21a:	b005      	add	sp, #20
 800f21c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f220:	fffff800 	.word	0xfffff800

0800f224 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800f224:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f228:	b087      	sub	sp, #28
 800f22a:	468b      	mov	fp, r1
 800f22c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 800f22e:	9204      	str	r2, [sp, #16]
 800f230:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800f234:	9205      	str	r2, [sp, #20]
 800f236:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 800f23a:	6861      	ldr	r1, [r4, #4]
 800f23c:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 800f240:	fb01 2000 	mla	r0, r1, r0, r2
 800f244:	6822      	ldr	r2, [r4, #0]
 800f246:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800f24a:	f8de 2000 	ldr.w	r2, [lr]
 800f24e:	9201      	str	r2, [sp, #4]
 800f250:	f8de 2004 	ldr.w	r2, [lr, #4]
 800f254:	9202      	str	r2, [sp, #8]
 800f256:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800f25a:	f1bb 0f00 	cmp.w	fp, #0
 800f25e:	dc03      	bgt.n	800f268 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 800f260:	9a04      	ldr	r2, [sp, #16]
 800f262:	2a00      	cmp	r2, #0
 800f264:	f340 8142 	ble.w	800f4ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 800f268:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800f26a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800f26e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 800f272:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 800f276:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800f278:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 800f27c:	2b00      	cmp	r3, #0
 800f27e:	dd0e      	ble.n	800f29e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 800f280:	140c      	asrs	r4, r1, #16
 800f282:	d405      	bmi.n	800f290 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800f284:	42bc      	cmp	r4, r7
 800f286:	da03      	bge.n	800f290 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800f288:	1414      	asrs	r4, r2, #16
 800f28a:	d401      	bmi.n	800f290 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800f28c:	42b4      	cmp	r4, r6
 800f28e:	db07      	blt.n	800f2a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800f290:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 800f292:	4421      	add	r1, r4
 800f294:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 800f296:	3b01      	subs	r3, #1
 800f298:	4422      	add	r2, r4
 800f29a:	3002      	adds	r0, #2
 800f29c:	e7ee      	b.n	800f27c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 800f29e:	d019      	beq.n	800f2d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 800f2a0:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 800f2a2:	1e5c      	subs	r4, r3, #1
 800f2a4:	fb05 1504 	mla	r5, r5, r4, r1
 800f2a8:	142d      	asrs	r5, r5, #16
 800f2aa:	d409      	bmi.n	800f2c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 800f2ac:	42bd      	cmp	r5, r7
 800f2ae:	da07      	bge.n	800f2c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 800f2b0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 800f2b2:	fb05 2404 	mla	r4, r5, r4, r2
 800f2b6:	1424      	asrs	r4, r4, #16
 800f2b8:	d402      	bmi.n	800f2c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 800f2ba:	42b4      	cmp	r4, r6
 800f2bc:	f2c0 80b1 	blt.w	800f422 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 800f2c0:	f04f 0800 	mov.w	r8, #0
 800f2c4:	eb03 0408 	add.w	r4, r3, r8
 800f2c8:	2c00      	cmp	r4, #0
 800f2ca:	dc3e      	bgt.n	800f34a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 800f2cc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f2d0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800f2d4:	f1bb 0f00 	cmp.w	fp, #0
 800f2d8:	f340 8108 	ble.w	800f4ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 800f2dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f2e0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f2e4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f2e8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800f2ea:	f1bb 0b01 	subs.w	fp, fp, #1
 800f2ee:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f2f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f2f6:	eeb0 6a62 	vmov.f32	s12, s5
 800f2fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f2fe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f302:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f306:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 800f30a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f30e:	eeb0 6a43 	vmov.f32	s12, s6
 800f312:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f316:	ee12 2a90 	vmov	r2, s5
 800f31a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f31e:	fb92 f3f3 	sdiv	r3, r2, r3
 800f322:	ee13 2a10 	vmov	r2, s6
 800f326:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f32a:	9313      	str	r3, [sp, #76]	@ 0x4c
 800f32c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800f32e:	fb92 f3f3 	sdiv	r3, r2, r3
 800f332:	9a04      	ldr	r2, [sp, #16]
 800f334:	9314      	str	r3, [sp, #80]	@ 0x50
 800f336:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 800f33a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800f33c:	eeb0 3a67 	vmov.f32	s6, s15
 800f340:	bf08      	it	eq
 800f342:	4613      	moveq	r3, r2
 800f344:	eef0 2a47 	vmov.f32	s5, s14
 800f348:	e787      	b.n	800f25a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 800f34a:	140e      	asrs	r6, r1, #16
 800f34c:	d462      	bmi.n	800f414 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800f34e:	f8de 5008 	ldr.w	r5, [lr, #8]
 800f352:	42b5      	cmp	r5, r6
 800f354:	dd5e      	ble.n	800f414 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800f356:	1417      	asrs	r7, r2, #16
 800f358:	d45c      	bmi.n	800f414 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800f35a:	f8de 400c 	ldr.w	r4, [lr, #12]
 800f35e:	42bc      	cmp	r4, r7
 800f360:	dd58      	ble.n	800f414 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800f362:	b22d      	sxth	r5, r5
 800f364:	fb07 6505 	mla	r5, r7, r5, r6
 800f368:	9c02      	ldr	r4, [sp, #8]
 800f36a:	5d66      	ldrb	r6, [r4, r5]
 800f36c:	2e00      	cmp	r6, #0
 800f36e:	d051      	beq.n	800f414 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800f370:	9c01      	ldr	r4, [sp, #4]
 800f372:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 800f376:	f06f 0401 	mvn.w	r4, #1
 800f37a:	fb04 f408 	mul.w	r4, r4, r8
 800f37e:	9403      	str	r4, [sp, #12]
 800f380:	5b05      	ldrh	r5, [r0, r4]
 800f382:	9c05      	ldr	r4, [sp, #20]
 800f384:	4366      	muls	r6, r4
 800f386:	1c74      	adds	r4, r6, #1
 800f388:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 800f38c:	1224      	asrs	r4, r4, #8
 800f38e:	b2a7      	uxth	r7, r4
 800f390:	122e      	asrs	r6, r5, #8
 800f392:	43e4      	mvns	r4, r4
 800f394:	b2e4      	uxtb	r4, r4
 800f396:	ea4f 2c29 	mov.w	ip, r9, asr #8
 800f39a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 800f39e:	fb16 f604 	smulbb	r6, r6, r4
 800f3a2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800f3a6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 800f3aa:	00ed      	lsls	r5, r5, #3
 800f3ac:	fb0c 6c07 	mla	ip, ip, r7, r6
 800f3b0:	b2ed      	uxtb	r5, r5
 800f3b2:	ea4f 06e9 	mov.w	r6, r9, asr #3
 800f3b6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 800f3ba:	fb15 f504 	smulbb	r5, r5, r4
 800f3be:	fa5f f989 	uxtb.w	r9, r9
 800f3c2:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 800f3c6:	fb09 5507 	mla	r5, r9, r7, r5
 800f3ca:	fb1a fa04 	smulbb	sl, sl, r4
 800f3ce:	fa1f fc8c 	uxth.w	ip, ip
 800f3d2:	b2ad      	uxth	r5, r5
 800f3d4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 800f3d8:	fb06 a607 	mla	r6, r6, r7, sl
 800f3dc:	f10c 0401 	add.w	r4, ip, #1
 800f3e0:	f105 0a01 	add.w	sl, r5, #1
 800f3e4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 800f3e8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f3ec:	b2b6      	uxth	r6, r6
 800f3ee:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f3f2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 800f3f6:	ea4a 0c0c 	orr.w	ip, sl, ip
 800f3fa:	f106 0a01 	add.w	sl, r6, #1
 800f3fe:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f402:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f406:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 800f40a:	9c03      	ldr	r4, [sp, #12]
 800f40c:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f410:	f820 c004 	strh.w	ip, [r0, r4]
 800f414:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 800f416:	4421      	add	r1, r4
 800f418:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 800f41a:	f108 38ff 	add.w	r8, r8, #4294967295
 800f41e:	4422      	add	r2, r4
 800f420:	e750      	b.n	800f2c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 800f422:	f04f 0900 	mov.w	r9, #0
 800f426:	eba3 0409 	sub.w	r4, r3, r9
 800f42a:	2c00      	cmp	r4, #0
 800f42c:	f77f af4e 	ble.w	800f2cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 800f430:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 800f434:	140d      	asrs	r5, r1, #16
 800f436:	1414      	asrs	r4, r2, #16
 800f438:	fb06 5404 	mla	r4, r6, r4, r5
 800f43c:	9d02      	ldr	r5, [sp, #8]
 800f43e:	5d2e      	ldrb	r6, [r5, r4]
 800f440:	2e00      	cmp	r6, #0
 800f442:	d04c      	beq.n	800f4de <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 800f444:	9d01      	ldr	r5, [sp, #4]
 800f446:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 800f44a:	9c05      	ldr	r4, [sp, #20]
 800f44c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 800f450:	4366      	muls	r6, r4
 800f452:	1c74      	adds	r4, r6, #1
 800f454:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 800f458:	1224      	asrs	r4, r4, #8
 800f45a:	b2a7      	uxth	r7, r4
 800f45c:	122e      	asrs	r6, r5, #8
 800f45e:	43e4      	mvns	r4, r4
 800f460:	b2e4      	uxtb	r4, r4
 800f462:	ea4f 2c28 	mov.w	ip, r8, asr #8
 800f466:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 800f46a:	fb16 f604 	smulbb	r6, r6, r4
 800f46e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800f472:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 800f476:	00ed      	lsls	r5, r5, #3
 800f478:	fb0c 6c07 	mla	ip, ip, r7, r6
 800f47c:	b2ed      	uxtb	r5, r5
 800f47e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 800f482:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800f486:	fb15 f504 	smulbb	r5, r5, r4
 800f48a:	fa5f f888 	uxtb.w	r8, r8
 800f48e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 800f492:	fb08 5507 	mla	r5, r8, r7, r5
 800f496:	fb1a fa04 	smulbb	sl, sl, r4
 800f49a:	fa1f fc8c 	uxth.w	ip, ip
 800f49e:	b2ad      	uxth	r5, r5
 800f4a0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 800f4a4:	fb06 a607 	mla	r6, r6, r7, sl
 800f4a8:	f10c 0401 	add.w	r4, ip, #1
 800f4ac:	f105 0a01 	add.w	sl, r5, #1
 800f4b0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 800f4b4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f4b8:	b2b6      	uxth	r6, r6
 800f4ba:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f4be:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 800f4c2:	ea4a 0c0c 	orr.w	ip, sl, ip
 800f4c6:	f106 0a01 	add.w	sl, r6, #1
 800f4ca:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f4ce:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f4d2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 800f4d6:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f4da:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 800f4de:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 800f4e0:	4421      	add	r1, r4
 800f4e2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 800f4e4:	f109 0901 	add.w	r9, r9, #1
 800f4e8:	4422      	add	r2, r4
 800f4ea:	e79c      	b.n	800f426 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 800f4ec:	b007      	add	sp, #28
 800f4ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f4f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800f4f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f4f6:	b085      	sub	sp, #20
 800f4f8:	468b      	mov	fp, r1
 800f4fa:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 800f4fc:	9203      	str	r2, [sp, #12]
 800f4fe:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 800f502:	6861      	ldr	r1, [r4, #4]
 800f504:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 800f508:	fb01 2000 	mla	r0, r1, r0, r2
 800f50c:	6822      	ldr	r2, [r4, #0]
 800f50e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800f512:	f8d8 2000 	ldr.w	r2, [r8]
 800f516:	9200      	str	r2, [sp, #0]
 800f518:	f8d8 2004 	ldr.w	r2, [r8, #4]
 800f51c:	9201      	str	r2, [sp, #4]
 800f51e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800f522:	f1bb 0f00 	cmp.w	fp, #0
 800f526:	dc03      	bgt.n	800f530 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 800f528:	9a03      	ldr	r2, [sp, #12]
 800f52a:	2a00      	cmp	r2, #0
 800f52c:	f340 8146 	ble.w	800f7bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 800f530:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800f532:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 800f536:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 800f53a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 800f53e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800f540:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 800f544:	2b00      	cmp	r3, #0
 800f546:	dd0e      	ble.n	800f566 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 800f548:	140c      	asrs	r4, r1, #16
 800f54a:	d405      	bmi.n	800f558 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800f54c:	42bc      	cmp	r4, r7
 800f54e:	da03      	bge.n	800f558 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800f550:	1414      	asrs	r4, r2, #16
 800f552:	d401      	bmi.n	800f558 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800f554:	42b4      	cmp	r4, r6
 800f556:	db07      	blt.n	800f568 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800f558:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 800f55a:	4421      	add	r1, r4
 800f55c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 800f55e:	3b01      	subs	r3, #1
 800f560:	4422      	add	r2, r4
 800f562:	3002      	adds	r0, #2
 800f564:	e7ee      	b.n	800f544 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 800f566:	d017      	beq.n	800f598 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 800f568:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 800f56a:	1e5c      	subs	r4, r3, #1
 800f56c:	fb05 1504 	mla	r5, r5, r4, r1
 800f570:	142d      	asrs	r5, r5, #16
 800f572:	d409      	bmi.n	800f588 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800f574:	42bd      	cmp	r5, r7
 800f576:	da07      	bge.n	800f588 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800f578:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 800f57a:	fb05 2404 	mla	r4, r5, r4, r2
 800f57e:	1424      	asrs	r4, r4, #16
 800f580:	d402      	bmi.n	800f588 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800f582:	42b4      	cmp	r4, r6
 800f584:	f2c0 80b3 	blt.w	800f6ee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 800f588:	2600      	movs	r6, #0
 800f58a:	199c      	adds	r4, r3, r6
 800f58c:	2c00      	cmp	r4, #0
 800f58e:	dc3e      	bgt.n	800f60e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 800f590:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f594:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800f598:	f1bb 0f00 	cmp.w	fp, #0
 800f59c:	f340 810e 	ble.w	800f7bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 800f5a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f5a4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f5a8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f5ac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800f5ae:	f1bb 0b01 	subs.w	fp, fp, #1
 800f5b2:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f5b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f5ba:	eeb0 6a62 	vmov.f32	s12, s5
 800f5be:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f5c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f5c6:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f5ca:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 800f5ce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f5d2:	eeb0 6a43 	vmov.f32	s12, s6
 800f5d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f5da:	ee12 2a90 	vmov	r2, s5
 800f5de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f5e2:	fb92 f3f3 	sdiv	r3, r2, r3
 800f5e6:	ee13 2a10 	vmov	r2, s6
 800f5ea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f5ee:	9311      	str	r3, [sp, #68]	@ 0x44
 800f5f0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800f5f2:	fb92 f3f3 	sdiv	r3, r2, r3
 800f5f6:	9a03      	ldr	r2, [sp, #12]
 800f5f8:	9312      	str	r3, [sp, #72]	@ 0x48
 800f5fa:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 800f5fe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800f600:	eeb0 3a67 	vmov.f32	s6, s15
 800f604:	bf08      	it	eq
 800f606:	4613      	moveq	r3, r2
 800f608:	eef0 2a47 	vmov.f32	s5, s14
 800f60c:	e789      	b.n	800f522 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 800f60e:	140f      	asrs	r7, r1, #16
 800f610:	d418      	bmi.n	800f644 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 800f612:	f8d8 5008 	ldr.w	r5, [r8, #8]
 800f616:	42bd      	cmp	r5, r7
 800f618:	dd14      	ble.n	800f644 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 800f61a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800f61e:	d411      	bmi.n	800f644 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 800f620:	f8d8 400c 	ldr.w	r4, [r8, #12]
 800f624:	4564      	cmp	r4, ip
 800f626:	dd0d      	ble.n	800f644 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 800f628:	b22d      	sxth	r5, r5
 800f62a:	fb0c 7505 	mla	r5, ip, r5, r7
 800f62e:	9c01      	ldr	r4, [sp, #4]
 800f630:	5d64      	ldrb	r4, [r4, r5]
 800f632:	2cff      	cmp	r4, #255	@ 0xff
 800f634:	d10c      	bne.n	800f650 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 800f636:	9c00      	ldr	r4, [sp, #0]
 800f638:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 800f63c:	f06f 0401 	mvn.w	r4, #1
 800f640:	4374      	muls	r4, r6
 800f642:	5305      	strh	r5, [r0, r4]
 800f644:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 800f646:	4421      	add	r1, r4
 800f648:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 800f64a:	3e01      	subs	r6, #1
 800f64c:	4422      	add	r2, r4
 800f64e:	e79c      	b.n	800f58a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800f650:	2c00      	cmp	r4, #0
 800f652:	d0f7      	beq.n	800f644 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 800f654:	9f00      	ldr	r7, [sp, #0]
 800f656:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 800f65a:	f06f 0501 	mvn.w	r5, #1
 800f65e:	4375      	muls	r5, r6
 800f660:	9502      	str	r5, [sp, #8]
 800f662:	5b45      	ldrh	r5, [r0, r5]
 800f664:	fa1f fc84 	uxth.w	ip, r4
 800f668:	122f      	asrs	r7, r5, #8
 800f66a:	43e4      	mvns	r4, r4
 800f66c:	b2e4      	uxtb	r4, r4
 800f66e:	ea4f 2e29 	mov.w	lr, r9, asr #8
 800f672:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 800f676:	fb17 f704 	smulbb	r7, r7, r4
 800f67a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800f67e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 800f682:	00ed      	lsls	r5, r5, #3
 800f684:	fb0e 7e0c 	mla	lr, lr, ip, r7
 800f688:	b2ed      	uxtb	r5, r5
 800f68a:	ea4f 07e9 	mov.w	r7, r9, asr #3
 800f68e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 800f692:	fb15 f504 	smulbb	r5, r5, r4
 800f696:	fa5f f989 	uxtb.w	r9, r9
 800f69a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 800f69e:	fb09 550c 	mla	r5, r9, ip, r5
 800f6a2:	fb1a fa04 	smulbb	sl, sl, r4
 800f6a6:	fa1f fe8e 	uxth.w	lr, lr
 800f6aa:	b2ad      	uxth	r5, r5
 800f6ac:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 800f6b0:	fb07 a70c 	mla	r7, r7, ip, sl
 800f6b4:	f10e 0401 	add.w	r4, lr, #1
 800f6b8:	f105 0a01 	add.w	sl, r5, #1
 800f6bc:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 800f6c0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f6c4:	b2bf      	uxth	r7, r7
 800f6c6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f6ca:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 800f6ce:	ea4a 0e0e 	orr.w	lr, sl, lr
 800f6d2:	f107 0a01 	add.w	sl, r7, #1
 800f6d6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800f6da:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f6de:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 800f6e2:	9c02      	ldr	r4, [sp, #8]
 800f6e4:	ea4e 0e0a 	orr.w	lr, lr, sl
 800f6e8:	f820 e004 	strh.w	lr, [r0, r4]
 800f6ec:	e7aa      	b.n	800f644 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 800f6ee:	f04f 0900 	mov.w	r9, #0
 800f6f2:	eba3 0409 	sub.w	r4, r3, r9
 800f6f6:	2c00      	cmp	r4, #0
 800f6f8:	f77f af4a 	ble.w	800f590 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800f6fc:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 800f700:	1414      	asrs	r4, r2, #16
 800f702:	140d      	asrs	r5, r1, #16
 800f704:	fb06 5504 	mla	r5, r6, r4, r5
 800f708:	9c01      	ldr	r4, [sp, #4]
 800f70a:	5d64      	ldrb	r4, [r4, r5]
 800f70c:	2cff      	cmp	r4, #255	@ 0xff
 800f70e:	d10b      	bne.n	800f728 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 800f710:	9c00      	ldr	r4, [sp, #0]
 800f712:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 800f716:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 800f71a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 800f71c:	4421      	add	r1, r4
 800f71e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 800f720:	f109 0901 	add.w	r9, r9, #1
 800f724:	4422      	add	r2, r4
 800f726:	e7e4      	b.n	800f6f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 800f728:	2c00      	cmp	r4, #0
 800f72a:	d0f6      	beq.n	800f71a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 800f72c:	9e00      	ldr	r6, [sp, #0]
 800f72e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 800f732:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 800f736:	b2a7      	uxth	r7, r4
 800f738:	122e      	asrs	r6, r5, #8
 800f73a:	43e4      	mvns	r4, r4
 800f73c:	b2e4      	uxtb	r4, r4
 800f73e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800f742:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 800f746:	fb16 f604 	smulbb	r6, r6, r4
 800f74a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800f74e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 800f752:	00ed      	lsls	r5, r5, #3
 800f754:	fb0c 6c07 	mla	ip, ip, r7, r6
 800f758:	b2ed      	uxtb	r5, r5
 800f75a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800f75e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800f762:	fb15 f504 	smulbb	r5, r5, r4
 800f766:	fa5f fe8e 	uxtb.w	lr, lr
 800f76a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 800f76e:	fb0e 5507 	mla	r5, lr, r7, r5
 800f772:	fb1a fa04 	smulbb	sl, sl, r4
 800f776:	fa1f fc8c 	uxth.w	ip, ip
 800f77a:	b2ad      	uxth	r5, r5
 800f77c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 800f780:	fb06 a607 	mla	r6, r6, r7, sl
 800f784:	f10c 0401 	add.w	r4, ip, #1
 800f788:	f105 0a01 	add.w	sl, r5, #1
 800f78c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 800f790:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f794:	b2b6      	uxth	r6, r6
 800f796:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f79a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 800f79e:	ea4a 0c0c 	orr.w	ip, sl, ip
 800f7a2:	f106 0a01 	add.w	sl, r6, #1
 800f7a6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f7aa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f7ae:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 800f7b2:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f7b6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 800f7ba:	e7ae      	b.n	800f71a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 800f7bc:	b005      	add	sp, #20
 800f7be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f7c2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800f7c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f7c6:	b085      	sub	sp, #20
 800f7c8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 800f7ca:	9203      	str	r2, [sp, #12]
 800f7cc:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 800f7d0:	9201      	str	r2, [sp, #4]
 800f7d2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 800f7d6:	9100      	str	r1, [sp, #0]
 800f7d8:	6841      	ldr	r1, [r0, #4]
 800f7da:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 800f7de:	fb01 2404 	mla	r4, r1, r4, r2
 800f7e2:	6802      	ldr	r2, [r0, #0]
 800f7e4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f7e8:	f8de 2000 	ldr.w	r2, [lr]
 800f7ec:	9202      	str	r2, [sp, #8]
 800f7ee:	9a01      	ldr	r2, [sp, #4]
 800f7f0:	43d6      	mvns	r6, r2
 800f7f2:	b2f6      	uxtb	r6, r6
 800f7f4:	9a00      	ldr	r2, [sp, #0]
 800f7f6:	2a00      	cmp	r2, #0
 800f7f8:	dc03      	bgt.n	800f802 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 800f7fa:	9a03      	ldr	r2, [sp, #12]
 800f7fc:	2a00      	cmp	r2, #0
 800f7fe:	f340 8124 	ble.w	800fa4a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 800f802:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800f804:	f9be c008 	ldrsh.w	ip, [lr, #8]
 800f808:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 800f80c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 800f810:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800f812:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 800f816:	2b00      	cmp	r3, #0
 800f818:	dd0e      	ble.n	800f838 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800f81a:	1408      	asrs	r0, r1, #16
 800f81c:	d405      	bmi.n	800f82a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800f81e:	4560      	cmp	r0, ip
 800f820:	da03      	bge.n	800f82a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800f822:	1410      	asrs	r0, r2, #16
 800f824:	d401      	bmi.n	800f82a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800f826:	42b8      	cmp	r0, r7
 800f828:	db07      	blt.n	800f83a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 800f82a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 800f82c:	4401      	add	r1, r0
 800f82e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 800f830:	3b01      	subs	r3, #1
 800f832:	4402      	add	r2, r0
 800f834:	3402      	adds	r4, #2
 800f836:	e7ee      	b.n	800f816 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 800f838:	d06e      	beq.n	800f918 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 800f83a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 800f83c:	1e58      	subs	r0, r3, #1
 800f83e:	fb05 1500 	mla	r5, r5, r0, r1
 800f842:	142d      	asrs	r5, r5, #16
 800f844:	d45c      	bmi.n	800f900 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800f846:	4565      	cmp	r5, ip
 800f848:	da5a      	bge.n	800f900 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800f84a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 800f84c:	fb05 2000 	mla	r0, r5, r0, r2
 800f850:	1400      	asrs	r0, r0, #16
 800f852:	d455      	bmi.n	800f900 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800f854:	42b8      	cmp	r0, r7
 800f856:	da53      	bge.n	800f900 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800f858:	f8bd b004 	ldrh.w	fp, [sp, #4]
 800f85c:	4699      	mov	r9, r3
 800f85e:	46a2      	mov	sl, r4
 800f860:	f1b9 0f00 	cmp.w	r9, #0
 800f864:	dd54      	ble.n	800f910 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800f866:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800f86a:	140d      	asrs	r5, r1, #16
 800f86c:	1410      	asrs	r0, r2, #16
 800f86e:	fb07 5000 	mla	r0, r7, r0, r5
 800f872:	9d02      	ldr	r5, [sp, #8]
 800f874:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800f878:	f8ba 5000 	ldrh.w	r5, [sl]
 800f87c:	122f      	asrs	r7, r5, #8
 800f87e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800f882:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 800f886:	fb17 f706 	smulbb	r7, r7, r6
 800f88a:	ea4f 08e5 	mov.w	r8, r5, asr #3
 800f88e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 800f892:	00ed      	lsls	r5, r5, #3
 800f894:	fb0c 7c0b 	mla	ip, ip, fp, r7
 800f898:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 800f89c:	10c7      	asrs	r7, r0, #3
 800f89e:	b2ed      	uxtb	r5, r5
 800f8a0:	00c0      	lsls	r0, r0, #3
 800f8a2:	fb18 f806 	smulbb	r8, r8, r6
 800f8a6:	fb15 f506 	smulbb	r5, r5, r6
 800f8aa:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 800f8ae:	b2c0      	uxtb	r0, r0
 800f8b0:	fa1f fc8c 	uxth.w	ip, ip
 800f8b4:	fb07 870b 	mla	r7, r7, fp, r8
 800f8b8:	fb00 500b 	mla	r0, r0, fp, r5
 800f8bc:	b280      	uxth	r0, r0
 800f8be:	b2bf      	uxth	r7, r7
 800f8c0:	f10c 0501 	add.w	r5, ip, #1
 800f8c4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800f8c8:	f107 0801 	add.w	r8, r7, #1
 800f8cc:	1c45      	adds	r5, r0, #1
 800f8ce:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800f8d2:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 800f8d6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 800f8d8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 800f8dc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800f8e0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 800f8e4:	ea45 0c0c 	orr.w	ip, r5, ip
 800f8e8:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800f8ec:	4401      	add	r1, r0
 800f8ee:	9812      	ldr	r0, [sp, #72]	@ 0x48
 800f8f0:	ea4c 0c08 	orr.w	ip, ip, r8
 800f8f4:	f82a cb02 	strh.w	ip, [sl], #2
 800f8f8:	4402      	add	r2, r0
 800f8fa:	f109 39ff 	add.w	r9, r9, #4294967295
 800f8fe:	e7af      	b.n	800f860 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800f900:	f8bd a004 	ldrh.w	sl, [sp, #4]
 800f904:	f04f 0800 	mov.w	r8, #0
 800f908:	eb03 0008 	add.w	r0, r3, r8
 800f90c:	2800      	cmp	r0, #0
 800f90e:	dc41      	bgt.n	800f994 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 800f910:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f914:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f918:	9b00      	ldr	r3, [sp, #0]
 800f91a:	2b00      	cmp	r3, #0
 800f91c:	f340 8095 	ble.w	800fa4a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 800f920:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f924:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800f928:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800f92c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800f92e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f932:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f936:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f93a:	eef0 6a62 	vmov.f32	s13, s5
 800f93e:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f942:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f946:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f94a:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 800f94e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f952:	eef0 6a43 	vmov.f32	s13, s6
 800f956:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f95a:	ee12 2a90 	vmov	r2, s5
 800f95e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f962:	fb92 f3f3 	sdiv	r3, r2, r3
 800f966:	ee13 2a10 	vmov	r2, s6
 800f96a:	9311      	str	r3, [sp, #68]	@ 0x44
 800f96c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800f96e:	fb92 f3f3 	sdiv	r3, r2, r3
 800f972:	9312      	str	r3, [sp, #72]	@ 0x48
 800f974:	9b00      	ldr	r3, [sp, #0]
 800f976:	9a03      	ldr	r2, [sp, #12]
 800f978:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f97c:	3b01      	subs	r3, #1
 800f97e:	9300      	str	r3, [sp, #0]
 800f980:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 800f984:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800f986:	eeb0 3a67 	vmov.f32	s6, s15
 800f98a:	bf08      	it	eq
 800f98c:	4613      	moveq	r3, r2
 800f98e:	eef0 2a47 	vmov.f32	s5, s14
 800f992:	e72f      	b.n	800f7f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 800f994:	140f      	asrs	r7, r1, #16
 800f996:	d451      	bmi.n	800fa3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 800f998:	f8de 5008 	ldr.w	r5, [lr, #8]
 800f99c:	42bd      	cmp	r5, r7
 800f99e:	dd4d      	ble.n	800fa3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 800f9a0:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800f9a4:	d44a      	bmi.n	800fa3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 800f9a6:	f8de 000c 	ldr.w	r0, [lr, #12]
 800f9aa:	4560      	cmp	r0, ip
 800f9ac:	dd46      	ble.n	800fa3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 800f9ae:	b22d      	sxth	r5, r5
 800f9b0:	fb0c 7505 	mla	r5, ip, r5, r7
 800f9b4:	9802      	ldr	r0, [sp, #8]
 800f9b6:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 800f9ba:	f06f 0501 	mvn.w	r5, #1
 800f9be:	fb05 fb08 	mul.w	fp, r5, r8
 800f9c2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800f9c6:	f834 500b 	ldrh.w	r5, [r4, fp]
 800f9ca:	122f      	asrs	r7, r5, #8
 800f9cc:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 800f9d0:	fb17 f706 	smulbb	r7, r7, r6
 800f9d4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 800f9d8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 800f9dc:	00ed      	lsls	r5, r5, #3
 800f9de:	fb0c 7c0a 	mla	ip, ip, sl, r7
 800f9e2:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 800f9e6:	10c7      	asrs	r7, r0, #3
 800f9e8:	b2ed      	uxtb	r5, r5
 800f9ea:	00c0      	lsls	r0, r0, #3
 800f9ec:	fb19 f906 	smulbb	r9, r9, r6
 800f9f0:	fb15 f506 	smulbb	r5, r5, r6
 800f9f4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 800f9f8:	b2c0      	uxtb	r0, r0
 800f9fa:	fa1f fc8c 	uxth.w	ip, ip
 800f9fe:	fb07 970a 	mla	r7, r7, sl, r9
 800fa02:	fb00 500a 	mla	r0, r0, sl, r5
 800fa06:	b2bf      	uxth	r7, r7
 800fa08:	b280      	uxth	r0, r0
 800fa0a:	f10c 0501 	add.w	r5, ip, #1
 800fa0e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800fa12:	f107 0901 	add.w	r9, r7, #1
 800fa16:	1c45      	adds	r5, r0, #1
 800fa18:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800fa1c:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800fa20:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 800fa24:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800fa28:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800fa2c:	ea45 0c0c 	orr.w	ip, r5, ip
 800fa30:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 800fa34:	ea4c 0c09 	orr.w	ip, ip, r9
 800fa38:	f824 c00b 	strh.w	ip, [r4, fp]
 800fa3c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 800fa3e:	4401      	add	r1, r0
 800fa40:	9812      	ldr	r0, [sp, #72]	@ 0x48
 800fa42:	f108 38ff 	add.w	r8, r8, #4294967295
 800fa46:	4402      	add	r2, r0
 800fa48:	e75e      	b.n	800f908 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 800fa4a:	b005      	add	sp, #20
 800fa4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fa50 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800fa50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa54:	b085      	sub	sp, #20
 800fa56:	4693      	mov	fp, r2
 800fa58:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 800fa5a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 800fa5c:	6870      	ldr	r0, [r6, #4]
 800fa5e:	9101      	str	r1, [sp, #4]
 800fa60:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 800fa64:	fb00 2404 	mla	r4, r0, r4, r2
 800fa68:	6832      	ldr	r2, [r6, #0]
 800fa6a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 800fa6e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fa72:	682a      	ldr	r2, [r5, #0]
 800fa74:	9202      	str	r2, [sp, #8]
 800fa76:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800fa7a:	9a01      	ldr	r2, [sp, #4]
 800fa7c:	2a00      	cmp	r2, #0
 800fa7e:	dc03      	bgt.n	800fa88 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 800fa80:	f1bb 0f00 	cmp.w	fp, #0
 800fa84:	f340 809a 	ble.w	800fbbc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 800fa88:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800fa8a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800fa8e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 800fa92:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 800fa96:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800fa98:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 800fa9c:	2b00      	cmp	r3, #0
 800fa9e:	dd0c      	ble.n	800faba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 800faa0:	1406      	asrs	r6, r0, #16
 800faa2:	d405      	bmi.n	800fab0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 800faa4:	454e      	cmp	r6, r9
 800faa6:	da03      	bge.n	800fab0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 800faa8:	1416      	asrs	r6, r2, #16
 800faaa:	d401      	bmi.n	800fab0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 800faac:	4546      	cmp	r6, r8
 800faae:	db05      	blt.n	800fabc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800fab0:	4470      	add	r0, lr
 800fab2:	4462      	add	r2, ip
 800fab4:	3b01      	subs	r3, #1
 800fab6:	3402      	adds	r4, #2
 800fab8:	e7f0      	b.n	800fa9c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 800faba:	d00f      	beq.n	800fadc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 800fabc:	1e5e      	subs	r6, r3, #1
 800fabe:	fb0e 0706 	mla	r7, lr, r6, r0
 800fac2:	143f      	asrs	r7, r7, #16
 800fac4:	d541      	bpl.n	800fb4a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 800fac6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 800faca:	4698      	mov	r8, r3
 800facc:	9603      	str	r6, [sp, #12]
 800face:	f1b8 0f00 	cmp.w	r8, #0
 800fad2:	dc56      	bgt.n	800fb82 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 800fad4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fad8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fadc:	9b01      	ldr	r3, [sp, #4]
 800fade:	2b00      	cmp	r3, #0
 800fae0:	dd6c      	ble.n	800fbbc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 800fae2:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fae6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800faea:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800faee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800faf0:	ee31 1a05 	vadd.f32	s2, s2, s10
 800faf4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800faf8:	eeb0 6a62 	vmov.f32	s12, s5
 800fafc:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fb00:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fb04:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fb08:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 800fb0c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fb10:	eeb0 6a43 	vmov.f32	s12, s6
 800fb14:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fb18:	ee12 2a90 	vmov	r2, s5
 800fb1c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fb20:	fb92 fef3 	sdiv	lr, r2, r3
 800fb24:	ee13 2a10 	vmov	r2, s6
 800fb28:	fb92 fcf3 	sdiv	ip, r2, r3
 800fb2c:	9b01      	ldr	r3, [sp, #4]
 800fb2e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fb32:	3b01      	subs	r3, #1
 800fb34:	9301      	str	r3, [sp, #4]
 800fb36:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 800fb3a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800fb3c:	eeb0 3a67 	vmov.f32	s6, s15
 800fb40:	bf08      	it	eq
 800fb42:	465b      	moveq	r3, fp
 800fb44:	eef0 2a47 	vmov.f32	s5, s14
 800fb48:	e797      	b.n	800fa7a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 800fb4a:	454f      	cmp	r7, r9
 800fb4c:	dabb      	bge.n	800fac6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800fb4e:	fb0c 2606 	mla	r6, ip, r6, r2
 800fb52:	1436      	asrs	r6, r6, #16
 800fb54:	d4b7      	bmi.n	800fac6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800fb56:	4546      	cmp	r6, r8
 800fb58:	dab5      	bge.n	800fac6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800fb5a:	461e      	mov	r6, r3
 800fb5c:	46a0      	mov	r8, r4
 800fb5e:	2e00      	cmp	r6, #0
 800fb60:	ddb8      	ble.n	800fad4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 800fb62:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 800fb66:	9902      	ldr	r1, [sp, #8]
 800fb68:	1417      	asrs	r7, r2, #16
 800fb6a:	ea4f 4920 	mov.w	r9, r0, asr #16
 800fb6e:	fb0a 9707 	mla	r7, sl, r7, r9
 800fb72:	4470      	add	r0, lr
 800fb74:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 800fb78:	f828 7b02 	strh.w	r7, [r8], #2
 800fb7c:	4462      	add	r2, ip
 800fb7e:	3e01      	subs	r6, #1
 800fb80:	e7ed      	b.n	800fb5e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 800fb82:	ea5f 4920 	movs.w	r9, r0, asr #16
 800fb86:	d414      	bmi.n	800fbb2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 800fb88:	68ae      	ldr	r6, [r5, #8]
 800fb8a:	454e      	cmp	r6, r9
 800fb8c:	dd11      	ble.n	800fbb2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 800fb8e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 800fb92:	d40e      	bmi.n	800fbb2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 800fb94:	68ef      	ldr	r7, [r5, #12]
 800fb96:	4557      	cmp	r7, sl
 800fb98:	dd0b      	ble.n	800fbb2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 800fb9a:	b236      	sxth	r6, r6
 800fb9c:	fb0a 9606 	mla	r6, sl, r6, r9
 800fba0:	9f02      	ldr	r7, [sp, #8]
 800fba2:	f06f 0101 	mvn.w	r1, #1
 800fba6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 800fbaa:	fb01 f608 	mul.w	r6, r1, r8
 800fbae:	9903      	ldr	r1, [sp, #12]
 800fbb0:	538f      	strh	r7, [r1, r6]
 800fbb2:	4470      	add	r0, lr
 800fbb4:	4462      	add	r2, ip
 800fbb6:	f108 38ff 	add.w	r8, r8, #4294967295
 800fbba:	e788      	b.n	800face <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800fbbc:	b005      	add	sp, #20
 800fbbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fbc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800fbc2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fbc6:	b087      	sub	sp, #28
 800fbc8:	468b      	mov	fp, r1
 800fbca:	9815      	ldr	r0, [sp, #84]	@ 0x54
 800fbcc:	9203      	str	r2, [sp, #12]
 800fbce:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800fbd2:	9204      	str	r2, [sp, #16]
 800fbd4:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 800fbd8:	6841      	ldr	r1, [r0, #4]
 800fbda:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 800fbde:	fb01 2505 	mla	r5, r1, r5, r2
 800fbe2:	6802      	ldr	r2, [r0, #0]
 800fbe4:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 800fbe8:	f8d9 2000 	ldr.w	r2, [r9]
 800fbec:	9201      	str	r2, [sp, #4]
 800fbee:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800fbf2:	f1bb 0f00 	cmp.w	fp, #0
 800fbf6:	dc03      	bgt.n	800fc00 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 800fbf8:	9a03      	ldr	r2, [sp, #12]
 800fbfa:	2a00      	cmp	r2, #0
 800fbfc:	f340 8159 	ble.w	800feb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 800fc00:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800fc02:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 800fc06:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 800fc0a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 800fc0e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800fc10:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 800fc14:	2b00      	cmp	r3, #0
 800fc16:	dd0e      	ble.n	800fc36 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 800fc18:	1402      	asrs	r2, r0, #16
 800fc1a:	d405      	bmi.n	800fc28 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800fc1c:	42ba      	cmp	r2, r7
 800fc1e:	da03      	bge.n	800fc28 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800fc20:	140a      	asrs	r2, r1, #16
 800fc22:	d401      	bmi.n	800fc28 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800fc24:	42b2      	cmp	r2, r6
 800fc26:	db07      	blt.n	800fc38 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800fc28:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800fc2a:	4410      	add	r0, r2
 800fc2c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 800fc2e:	3b01      	subs	r3, #1
 800fc30:	4411      	add	r1, r2
 800fc32:	3502      	adds	r5, #2
 800fc34:	e7ee      	b.n	800fc14 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 800fc36:	d017      	beq.n	800fc68 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 800fc38:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 800fc3a:	1e5a      	subs	r2, r3, #1
 800fc3c:	fb04 0402 	mla	r4, r4, r2, r0
 800fc40:	1424      	asrs	r4, r4, #16
 800fc42:	d409      	bmi.n	800fc58 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800fc44:	42bc      	cmp	r4, r7
 800fc46:	da07      	bge.n	800fc58 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800fc48:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 800fc4a:	fb04 1202 	mla	r2, r4, r2, r1
 800fc4e:	1412      	asrs	r2, r2, #16
 800fc50:	d402      	bmi.n	800fc58 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800fc52:	42b2      	cmp	r2, r6
 800fc54:	f2c0 80bf 	blt.w	800fdd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 800fc58:	2700      	movs	r7, #0
 800fc5a:	19da      	adds	r2, r3, r7
 800fc5c:	2a00      	cmp	r2, #0
 800fc5e:	dc3e      	bgt.n	800fcde <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 800fc60:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fc64:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800fc68:	f1bb 0f00 	cmp.w	fp, #0
 800fc6c:	f340 8121 	ble.w	800feb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 800fc70:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fc74:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fc78:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fc7c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800fc7e:	f1bb 0b01 	subs.w	fp, fp, #1
 800fc82:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fc86:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fc8a:	eeb0 6a62 	vmov.f32	s12, s5
 800fc8e:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fc92:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fc96:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fc9a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 800fc9e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fca2:	eeb0 6a43 	vmov.f32	s12, s6
 800fca6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fcaa:	ee12 2a90 	vmov	r2, s5
 800fcae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fcb2:	fb92 f3f3 	sdiv	r3, r2, r3
 800fcb6:	ee13 2a10 	vmov	r2, s6
 800fcba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fcbe:	9313      	str	r3, [sp, #76]	@ 0x4c
 800fcc0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800fcc2:	fb92 f3f3 	sdiv	r3, r2, r3
 800fcc6:	9a03      	ldr	r2, [sp, #12]
 800fcc8:	9314      	str	r3, [sp, #80]	@ 0x50
 800fcca:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 800fcce:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800fcd0:	eeb0 3a67 	vmov.f32	s6, s15
 800fcd4:	bf08      	it	eq
 800fcd6:	4613      	moveq	r3, r2
 800fcd8:	eef0 2a47 	vmov.f32	s5, s14
 800fcdc:	e789      	b.n	800fbf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 800fcde:	1406      	asrs	r6, r0, #16
 800fce0:	d42d      	bmi.n	800fd3e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 800fce2:	f8d9 4008 	ldr.w	r4, [r9, #8]
 800fce6:	42b4      	cmp	r4, r6
 800fce8:	dd29      	ble.n	800fd3e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 800fcea:	ea5f 4c21 	movs.w	ip, r1, asr #16
 800fcee:	d426      	bmi.n	800fd3e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 800fcf0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 800fcf4:	4562      	cmp	r2, ip
 800fcf6:	dd22      	ble.n	800fd3e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 800fcf8:	b224      	sxth	r4, r4
 800fcfa:	9a01      	ldr	r2, [sp, #4]
 800fcfc:	fb0c 6404 	mla	r4, ip, r4, r6
 800fd00:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 800fd04:	0e22      	lsrs	r2, r4, #24
 800fd06:	d01a      	beq.n	800fd3e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 800fd08:	9e04      	ldr	r6, [sp, #16]
 800fd0a:	4372      	muls	r2, r6
 800fd0c:	1c56      	adds	r6, r2, #1
 800fd0e:	eb06 2222 	add.w	r2, r6, r2, asr #8
 800fd12:	1212      	asrs	r2, r2, #8
 800fd14:	0a26      	lsrs	r6, r4, #8
 800fd16:	2aff      	cmp	r2, #255	@ 0xff
 800fd18:	9605      	str	r6, [sp, #20]
 800fd1a:	d116      	bne.n	800fd4a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 800fd1c:	f06f 0201 	mvn.w	r2, #1
 800fd20:	fb02 fc07 	mul.w	ip, r2, r7
 800fd24:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 800fd28:	0962      	lsrs	r2, r4, #5
 800fd2a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 800fd2e:	f026 0607 	bic.w	r6, r6, #7
 800fd32:	4316      	orrs	r6, r2
 800fd34:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 800fd38:	4326      	orrs	r6, r4
 800fd3a:	f825 600c 	strh.w	r6, [r5, ip]
 800fd3e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800fd40:	4410      	add	r0, r2
 800fd42:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 800fd44:	3f01      	subs	r7, #1
 800fd46:	4411      	add	r1, r2
 800fd48:	e787      	b.n	800fc5a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800fd4a:	f06f 0601 	mvn.w	r6, #1
 800fd4e:	437e      	muls	r6, r7
 800fd50:	fa1f fa82 	uxth.w	sl, r2
 800fd54:	f835 8006 	ldrh.w	r8, [r5, r6]
 800fd58:	9602      	str	r6, [sp, #8]
 800fd5a:	ea4f 2e28 	mov.w	lr, r8, asr #8
 800fd5e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 800fd62:	43d2      	mvns	r2, r2
 800fd64:	b2d2      	uxtb	r2, r2
 800fd66:	fb1c fc0a 	smulbb	ip, ip, sl
 800fd6a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 800fd6e:	fb0e ce02 	mla	lr, lr, r2, ip
 800fd72:	b2e4      	uxtb	r4, r4
 800fd74:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 800fd78:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800fd7c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800fd80:	fa5f f888 	uxtb.w	r8, r8
 800fd84:	fb14 f40a 	smulbb	r4, r4, sl
 800fd88:	fb08 4402 	mla	r4, r8, r2, r4
 800fd8c:	fa1f fe8e 	uxth.w	lr, lr
 800fd90:	fb16 f60a 	smulbb	r6, r6, sl
 800fd94:	b2a4      	uxth	r4, r4
 800fd96:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 800fd9a:	fb0c 6c02 	mla	ip, ip, r2, r6
 800fd9e:	f10e 0201 	add.w	r2, lr, #1
 800fda2:	1c66      	adds	r6, r4, #1
 800fda4:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 800fda8:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 800fdac:	fa1f fc8c 	uxth.w	ip, ip
 800fdb0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800fdb4:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 800fdb8:	ea46 0e0e 	orr.w	lr, r6, lr
 800fdbc:	f10c 0601 	add.w	r6, ip, #1
 800fdc0:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 800fdc4:	0976      	lsrs	r6, r6, #5
 800fdc6:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 800fdca:	9a02      	ldr	r2, [sp, #8]
 800fdcc:	ea4e 0e06 	orr.w	lr, lr, r6
 800fdd0:	f825 e002 	strh.w	lr, [r5, r2]
 800fdd4:	e7b3      	b.n	800fd3e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 800fdd6:	f04f 0800 	mov.w	r8, #0
 800fdda:	eba3 0208 	sub.w	r2, r3, r8
 800fdde:	2a00      	cmp	r2, #0
 800fde0:	f77f af3e 	ble.w	800fc60 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800fde4:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 800fde8:	1404      	asrs	r4, r0, #16
 800fdea:	140a      	asrs	r2, r1, #16
 800fdec:	fb06 4202 	mla	r2, r6, r2, r4
 800fdf0:	9c01      	ldr	r4, [sp, #4]
 800fdf2:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 800fdf6:	0e22      	lsrs	r2, r4, #24
 800fdf8:	d016      	beq.n	800fe28 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 800fdfa:	9e04      	ldr	r6, [sp, #16]
 800fdfc:	4372      	muls	r2, r6
 800fdfe:	1c56      	adds	r6, r2, #1
 800fe00:	eb06 2222 	add.w	r2, r6, r2, asr #8
 800fe04:	1212      	asrs	r2, r2, #8
 800fe06:	2aff      	cmp	r2, #255	@ 0xff
 800fe08:	ea4f 2614 	mov.w	r6, r4, lsr #8
 800fe0c:	d113      	bne.n	800fe36 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 800fe0e:	0962      	lsrs	r2, r4, #5
 800fe10:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 800fe14:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 800fe18:	f026 0607 	bic.w	r6, r6, #7
 800fe1c:	4316      	orrs	r6, r2
 800fe1e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 800fe22:	4326      	orrs	r6, r4
 800fe24:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 800fe28:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800fe2a:	4410      	add	r0, r2
 800fe2c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 800fe2e:	f108 0801 	add.w	r8, r8, #1
 800fe32:	4411      	add	r1, r2
 800fe34:	e7d1      	b.n	800fdda <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 800fe36:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 800fe3a:	fa1f fa82 	uxth.w	sl, r2
 800fe3e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800fe42:	f3c4 4707 	ubfx	r7, r4, #16, #8
 800fe46:	43d2      	mvns	r2, r2
 800fe48:	b2d2      	uxtb	r2, r2
 800fe4a:	fb17 f70a 	smulbb	r7, r7, sl
 800fe4e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 800fe52:	fb0c 7c02 	mla	ip, ip, r2, r7
 800fe56:	b2e4      	uxtb	r4, r4
 800fe58:	ea4f 07ee 	mov.w	r7, lr, asr #3
 800fe5c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800fe60:	fa5f fe8e 	uxtb.w	lr, lr
 800fe64:	fb14 f40a 	smulbb	r4, r4, sl
 800fe68:	fb0e 4402 	mla	r4, lr, r2, r4
 800fe6c:	b2f6      	uxtb	r6, r6
 800fe6e:	fa1f fc8c 	uxth.w	ip, ip
 800fe72:	fb16 f60a 	smulbb	r6, r6, sl
 800fe76:	b2a4      	uxth	r4, r4
 800fe78:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 800fe7c:	fb07 6702 	mla	r7, r7, r2, r6
 800fe80:	f10c 0201 	add.w	r2, ip, #1
 800fe84:	1c66      	adds	r6, r4, #1
 800fe86:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 800fe8a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 800fe8e:	b2bf      	uxth	r7, r7
 800fe90:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800fe94:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 800fe98:	ea46 0c0c 	orr.w	ip, r6, ip
 800fe9c:	1c7e      	adds	r6, r7, #1
 800fe9e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 800fea2:	0976      	lsrs	r6, r6, #5
 800fea4:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 800fea8:	ea4c 0c06 	orr.w	ip, ip, r6
 800feac:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 800feb0:	e7ba      	b.n	800fe28 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 800feb2:	b007      	add	sp, #28
 800feb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800feb8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800feb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800febc:	b085      	sub	sp, #20
 800febe:	468b      	mov	fp, r1
 800fec0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 800fec2:	9203      	str	r2, [sp, #12]
 800fec4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 800fec8:	6841      	ldr	r1, [r0, #4]
 800feca:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 800fece:	fb01 2404 	mla	r4, r1, r4, r2
 800fed2:	6802      	ldr	r2, [r0, #0]
 800fed4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fed8:	f8d8 2000 	ldr.w	r2, [r8]
 800fedc:	9201      	str	r2, [sp, #4]
 800fede:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800fee2:	f1bb 0f00 	cmp.w	fp, #0
 800fee6:	dc03      	bgt.n	800fef0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 800fee8:	9a03      	ldr	r2, [sp, #12]
 800feea:	2a00      	cmp	r2, #0
 800feec:	f340 814f 	ble.w	801018e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 800fef0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800fef2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 800fef6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 800fefa:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 800fefe:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800ff00:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 800ff04:	2b00      	cmp	r3, #0
 800ff06:	dd0e      	ble.n	800ff26 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 800ff08:	1408      	asrs	r0, r1, #16
 800ff0a:	d405      	bmi.n	800ff18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 800ff0c:	42b8      	cmp	r0, r7
 800ff0e:	da03      	bge.n	800ff18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 800ff10:	1410      	asrs	r0, r2, #16
 800ff12:	d401      	bmi.n	800ff18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 800ff14:	42b0      	cmp	r0, r6
 800ff16:	db07      	blt.n	800ff28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800ff18:	9811      	ldr	r0, [sp, #68]	@ 0x44
 800ff1a:	4401      	add	r1, r0
 800ff1c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 800ff1e:	3b01      	subs	r3, #1
 800ff20:	4402      	add	r2, r0
 800ff22:	3402      	adds	r4, #2
 800ff24:	e7ee      	b.n	800ff04 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 800ff26:	d017      	beq.n	800ff58 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 800ff28:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 800ff2a:	1e58      	subs	r0, r3, #1
 800ff2c:	fb05 1500 	mla	r5, r5, r0, r1
 800ff30:	142d      	asrs	r5, r5, #16
 800ff32:	d409      	bmi.n	800ff48 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 800ff34:	42bd      	cmp	r5, r7
 800ff36:	da07      	bge.n	800ff48 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 800ff38:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 800ff3a:	fb05 2000 	mla	r0, r5, r0, r2
 800ff3e:	1400      	asrs	r0, r0, #16
 800ff40:	d402      	bmi.n	800ff48 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 800ff42:	42b0      	cmp	r0, r6
 800ff44:	f2c0 80ba 	blt.w	80100bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 800ff48:	2600      	movs	r6, #0
 800ff4a:	1998      	adds	r0, r3, r6
 800ff4c:	2800      	cmp	r0, #0
 800ff4e:	dc3e      	bgt.n	800ffce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 800ff50:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ff54:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ff58:	f1bb 0f00 	cmp.w	fp, #0
 800ff5c:	f340 8117 	ble.w	801018e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 800ff60:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ff64:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ff68:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800ff6c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800ff6e:	f1bb 0b01 	subs.w	fp, fp, #1
 800ff72:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ff76:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ff7a:	eeb0 6a62 	vmov.f32	s12, s5
 800ff7e:	ee61 7a27 	vmul.f32	s15, s2, s15
 800ff82:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ff86:	ee77 2a62 	vsub.f32	s5, s14, s5
 800ff8a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 800ff8e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800ff92:	eeb0 6a43 	vmov.f32	s12, s6
 800ff96:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800ff9a:	ee12 2a90 	vmov	r2, s5
 800ff9e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800ffa2:	fb92 f3f3 	sdiv	r3, r2, r3
 800ffa6:	ee13 2a10 	vmov	r2, s6
 800ffaa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ffae:	9311      	str	r3, [sp, #68]	@ 0x44
 800ffb0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800ffb2:	fb92 f3f3 	sdiv	r3, r2, r3
 800ffb6:	9a03      	ldr	r2, [sp, #12]
 800ffb8:	9312      	str	r3, [sp, #72]	@ 0x48
 800ffba:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 800ffbe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800ffc0:	eeb0 3a67 	vmov.f32	s6, s15
 800ffc4:	bf08      	it	eq
 800ffc6:	4613      	moveq	r3, r2
 800ffc8:	eef0 2a47 	vmov.f32	s5, s14
 800ffcc:	e789      	b.n	800fee2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 800ffce:	140f      	asrs	r7, r1, #16
 800ffd0:	d424      	bmi.n	801001c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800ffd2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 800ffd6:	42bd      	cmp	r5, r7
 800ffd8:	dd20      	ble.n	801001c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800ffda:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800ffde:	d41d      	bmi.n	801001c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800ffe0:	f8d8 000c 	ldr.w	r0, [r8, #12]
 800ffe4:	4560      	cmp	r0, ip
 800ffe6:	dd19      	ble.n	801001c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800ffe8:	b22d      	sxth	r5, r5
 800ffea:	fb0c 7505 	mla	r5, ip, r5, r7
 800ffee:	9801      	ldr	r0, [sp, #4]
 800fff0:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800fff4:	0e07      	lsrs	r7, r0, #24
 800fff6:	2fff      	cmp	r7, #255	@ 0xff
 800fff8:	d116      	bne.n	8010028 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 800fffa:	f06f 0501 	mvn.w	r5, #1
 800fffe:	fb05 f706 	mul.w	r7, r5, r6
 8010002:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8010006:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801000a:	0945      	lsrs	r5, r0, #5
 801000c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8010010:	ea4c 0505 	orr.w	r5, ip, r5
 8010014:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010018:	4305      	orrs	r5, r0
 801001a:	53e5      	strh	r5, [r4, r7]
 801001c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801001e:	4401      	add	r1, r0
 8010020:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8010022:	3e01      	subs	r6, #1
 8010024:	4402      	add	r2, r0
 8010026:	e790      	b.n	800ff4a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8010028:	b2fd      	uxtb	r5, r7
 801002a:	2f00      	cmp	r7, #0
 801002c:	d0f6      	beq.n	801001c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801002e:	f06f 0701 	mvn.w	r7, #1
 8010032:	4377      	muls	r7, r6
 8010034:	fa1f f985 	uxth.w	r9, r5
 8010038:	f834 e007 	ldrh.w	lr, [r4, r7]
 801003c:	9702      	str	r7, [sp, #8]
 801003e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010042:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8010046:	43ed      	mvns	r5, r5
 8010048:	b2ed      	uxtb	r5, r5
 801004a:	fb17 f709 	smulbb	r7, r7, r9
 801004e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8010052:	fb0c 7c05 	mla	ip, ip, r5, r7
 8010056:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801005a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801005e:	b2c0      	uxtb	r0, r0
 8010060:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010064:	fa5f fe8e 	uxtb.w	lr, lr
 8010068:	fb10 f009 	smulbb	r0, r0, r9
 801006c:	fb0e 0005 	mla	r0, lr, r5, r0
 8010070:	b280      	uxth	r0, r0
 8010072:	fa1f fc8c 	uxth.w	ip, ip
 8010076:	fb1a fa09 	smulbb	sl, sl, r9
 801007a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801007e:	fb07 a705 	mla	r7, r7, r5, sl
 8010082:	f100 0a01 	add.w	sl, r0, #1
 8010086:	f10c 0501 	add.w	r5, ip, #1
 801008a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801008e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010092:	b2bf      	uxth	r7, r7
 8010094:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010098:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801009c:	ea4a 0c0c 	orr.w	ip, sl, ip
 80100a0:	f107 0a01 	add.w	sl, r7, #1
 80100a4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80100a8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80100ac:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80100b0:	9802      	ldr	r0, [sp, #8]
 80100b2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80100b6:	f824 c000 	strh.w	ip, [r4, r0]
 80100ba:	e7af      	b.n	801001c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80100bc:	f04f 0e00 	mov.w	lr, #0
 80100c0:	eba3 000e 	sub.w	r0, r3, lr
 80100c4:	2800      	cmp	r0, #0
 80100c6:	f77f af43 	ble.w	800ff50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80100ca:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80100ce:	140d      	asrs	r5, r1, #16
 80100d0:	1410      	asrs	r0, r2, #16
 80100d2:	fb06 5000 	mla	r0, r6, r0, r5
 80100d6:	9d01      	ldr	r5, [sp, #4]
 80100d8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80100dc:	0e2e      	lsrs	r6, r5, #24
 80100de:	2eff      	cmp	r6, #255	@ 0xff
 80100e0:	d112      	bne.n	8010108 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80100e2:	482c      	ldr	r0, [pc, #176]	@ (8010194 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 80100e4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80100e8:	0968      	lsrs	r0, r5, #5
 80100ea:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80100ee:	4330      	orrs	r0, r6
 80100f0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80100f4:	4328      	orrs	r0, r5
 80100f6:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 80100fa:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80100fc:	4401      	add	r1, r0
 80100fe:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8010100:	f10e 0e01 	add.w	lr, lr, #1
 8010104:	4402      	add	r2, r0
 8010106:	e7db      	b.n	80100c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8010108:	b2f0      	uxtb	r0, r6
 801010a:	2e00      	cmp	r6, #0
 801010c:	d0f5      	beq.n	80100fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801010e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8010112:	fa1f f980 	uxth.w	r9, r0
 8010116:	ea4f 272c 	mov.w	r7, ip, asr #8
 801011a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801011e:	43c0      	mvns	r0, r0
 8010120:	b2c0      	uxtb	r0, r0
 8010122:	fb16 f609 	smulbb	r6, r6, r9
 8010126:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801012a:	fb07 6700 	mla	r7, r7, r0, r6
 801012e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010132:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010136:	b2ed      	uxtb	r5, r5
 8010138:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801013c:	fa5f fc8c 	uxtb.w	ip, ip
 8010140:	fb15 f509 	smulbb	r5, r5, r9
 8010144:	fb0c 5500 	mla	r5, ip, r0, r5
 8010148:	b2bf      	uxth	r7, r7
 801014a:	fb1a fa09 	smulbb	sl, sl, r9
 801014e:	b2ad      	uxth	r5, r5
 8010150:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8010154:	fb06 a600 	mla	r6, r6, r0, sl
 8010158:	1c78      	adds	r0, r7, #1
 801015a:	f105 0a01 	add.w	sl, r5, #1
 801015e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8010162:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010166:	b2b6      	uxth	r6, r6
 8010168:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801016c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8010170:	ea4a 0707 	orr.w	r7, sl, r7
 8010174:	f106 0a01 	add.w	sl, r6, #1
 8010178:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801017c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010180:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8010184:	ea47 070a 	orr.w	r7, r7, sl
 8010188:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801018c:	e7b5      	b.n	80100fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801018e:	b005      	add	sp, #20
 8010190:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010194:	fffff800 	.word	0xfffff800

08010198 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010198:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801019c:	b087      	sub	sp, #28
 801019e:	468b      	mov	fp, r1
 80101a0:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80101a2:	9203      	str	r2, [sp, #12]
 80101a4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80101a8:	9204      	str	r2, [sp, #16]
 80101aa:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80101ae:	6841      	ldr	r1, [r0, #4]
 80101b0:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 80101b4:	fb01 2404 	mla	r4, r1, r4, r2
 80101b8:	6802      	ldr	r2, [r0, #0]
 80101ba:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80101be:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80101c2:	3201      	adds	r2, #1
 80101c4:	f022 0201 	bic.w	r2, r2, #1
 80101c8:	9200      	str	r2, [sp, #0]
 80101ca:	f8d9 2000 	ldr.w	r2, [r9]
 80101ce:	9201      	str	r2, [sp, #4]
 80101d0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80101d4:	f1bb 0f00 	cmp.w	fp, #0
 80101d8:	dc03      	bgt.n	80101e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80101da:	9a03      	ldr	r2, [sp, #12]
 80101dc:	2a00      	cmp	r2, #0
 80101de:	f340 8169 	ble.w	80104b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80101e2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80101e4:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80101e8:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80101ec:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80101f0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80101f2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80101f6:	2b00      	cmp	r3, #0
 80101f8:	dd0e      	ble.n	8010218 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80101fa:	1402      	asrs	r2, r0, #16
 80101fc:	d405      	bmi.n	801020a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80101fe:	42ba      	cmp	r2, r7
 8010200:	da03      	bge.n	801020a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010202:	140a      	asrs	r2, r1, #16
 8010204:	d401      	bmi.n	801020a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010206:	42b2      	cmp	r2, r6
 8010208:	db07      	blt.n	801021a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801020a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801020c:	4410      	add	r0, r2
 801020e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8010210:	3b01      	subs	r3, #1
 8010212:	4411      	add	r1, r2
 8010214:	3402      	adds	r4, #2
 8010216:	e7ee      	b.n	80101f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8010218:	d017      	beq.n	801024a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801021a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801021c:	1e5a      	subs	r2, r3, #1
 801021e:	fb05 0502 	mla	r5, r5, r2, r0
 8010222:	142d      	asrs	r5, r5, #16
 8010224:	d409      	bmi.n	801023a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8010226:	42bd      	cmp	r5, r7
 8010228:	da07      	bge.n	801023a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801022a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801022c:	fb05 1202 	mla	r2, r5, r2, r1
 8010230:	1412      	asrs	r2, r2, #16
 8010232:	d402      	bmi.n	801023a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8010234:	42b2      	cmp	r2, r6
 8010236:	f2c0 80c7 	blt.w	80103c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801023a:	2700      	movs	r7, #0
 801023c:	19da      	adds	r2, r3, r7
 801023e:	2a00      	cmp	r2, #0
 8010240:	dc3e      	bgt.n	80102c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8010242:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010246:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801024a:	f1bb 0f00 	cmp.w	fp, #0
 801024e:	f340 8131 	ble.w	80104b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8010252:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010256:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801025a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801025e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010260:	f1bb 0b01 	subs.w	fp, fp, #1
 8010264:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010268:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801026c:	eeb0 6a62 	vmov.f32	s12, s5
 8010270:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010274:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010278:	ee77 2a62 	vsub.f32	s5, s14, s5
 801027c:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8010280:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010284:	eeb0 6a43 	vmov.f32	s12, s6
 8010288:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801028c:	ee12 2a90 	vmov	r2, s5
 8010290:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010294:	fb92 f3f3 	sdiv	r3, r2, r3
 8010298:	ee13 2a10 	vmov	r2, s6
 801029c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80102a0:	9313      	str	r3, [sp, #76]	@ 0x4c
 80102a2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80102a4:	fb92 f3f3 	sdiv	r3, r2, r3
 80102a8:	9a03      	ldr	r2, [sp, #12]
 80102aa:	9314      	str	r3, [sp, #80]	@ 0x50
 80102ac:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80102b0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80102b2:	eeb0 3a67 	vmov.f32	s6, s15
 80102b6:	bf08      	it	eq
 80102b8:	4613      	moveq	r3, r2
 80102ba:	eef0 2a47 	vmov.f32	s5, s14
 80102be:	e789      	b.n	80101d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80102c0:	1405      	asrs	r5, r0, #16
 80102c2:	d435      	bmi.n	8010330 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80102c4:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80102c8:	42aa      	cmp	r2, r5
 80102ca:	dd31      	ble.n	8010330 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80102cc:	140e      	asrs	r6, r1, #16
 80102ce:	d42f      	bmi.n	8010330 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80102d0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80102d4:	42b2      	cmp	r2, r6
 80102d6:	dd2b      	ble.n	8010330 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80102d8:	9a00      	ldr	r2, [sp, #0]
 80102da:	fb06 5502 	mla	r5, r6, r2, r5
 80102de:	086a      	lsrs	r2, r5, #1
 80102e0:	9e01      	ldr	r6, [sp, #4]
 80102e2:	5cb2      	ldrb	r2, [r6, r2]
 80102e4:	07ee      	lsls	r6, r5, #31
 80102e6:	bf54      	ite	pl
 80102e8:	f002 020f 	andpl.w	r2, r2, #15
 80102ec:	1112      	asrmi	r2, r2, #4
 80102ee:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80102f2:	b2d2      	uxtb	r2, r2
 80102f4:	b1e2      	cbz	r2, 8010330 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80102f6:	9d04      	ldr	r5, [sp, #16]
 80102f8:	436a      	muls	r2, r5
 80102fa:	1c55      	adds	r5, r2, #1
 80102fc:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8010300:	4d6e      	ldr	r5, [pc, #440]	@ (80104bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8010302:	682d      	ldr	r5, [r5, #0]
 8010304:	1212      	asrs	r2, r2, #8
 8010306:	0a2e      	lsrs	r6, r5, #8
 8010308:	2aff      	cmp	r2, #255	@ 0xff
 801030a:	9605      	str	r6, [sp, #20]
 801030c:	d116      	bne.n	801033c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801030e:	f06f 0201 	mvn.w	r2, #1
 8010312:	fb02 fc07 	mul.w	ip, r2, r7
 8010316:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801031a:	096a      	lsrs	r2, r5, #5
 801031c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8010320:	f026 0607 	bic.w	r6, r6, #7
 8010324:	4316      	orrs	r6, r2
 8010326:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801032a:	432e      	orrs	r6, r5
 801032c:	f824 600c 	strh.w	r6, [r4, ip]
 8010330:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8010332:	4410      	add	r0, r2
 8010334:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8010336:	3f01      	subs	r7, #1
 8010338:	4411      	add	r1, r2
 801033a:	e77f      	b.n	801023c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801033c:	f06f 0601 	mvn.w	r6, #1
 8010340:	437e      	muls	r6, r7
 8010342:	fa1f fa82 	uxth.w	sl, r2
 8010346:	f834 8006 	ldrh.w	r8, [r4, r6]
 801034a:	9602      	str	r6, [sp, #8]
 801034c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8010350:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8010354:	43d2      	mvns	r2, r2
 8010356:	b2d2      	uxtb	r2, r2
 8010358:	fb1c fc0a 	smulbb	ip, ip, sl
 801035c:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8010360:	fb0e ce02 	mla	lr, lr, r2, ip
 8010364:	b2ed      	uxtb	r5, r5
 8010366:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801036a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801036e:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8010372:	fa5f f888 	uxtb.w	r8, r8
 8010376:	fb15 f50a 	smulbb	r5, r5, sl
 801037a:	fb08 5502 	mla	r5, r8, r2, r5
 801037e:	fa1f fe8e 	uxth.w	lr, lr
 8010382:	fb16 f60a 	smulbb	r6, r6, sl
 8010386:	b2ad      	uxth	r5, r5
 8010388:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801038c:	fb0c 6c02 	mla	ip, ip, r2, r6
 8010390:	f10e 0201 	add.w	r2, lr, #1
 8010394:	1c6e      	adds	r6, r5, #1
 8010396:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801039a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801039e:	fa1f fc8c 	uxth.w	ip, ip
 80103a2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80103a6:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 80103aa:	ea46 0e0e 	orr.w	lr, r6, lr
 80103ae:	f10c 0601 	add.w	r6, ip, #1
 80103b2:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80103b6:	0976      	lsrs	r6, r6, #5
 80103b8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80103bc:	9a02      	ldr	r2, [sp, #8]
 80103be:	ea4e 0e06 	orr.w	lr, lr, r6
 80103c2:	f824 e002 	strh.w	lr, [r4, r2]
 80103c6:	e7b3      	b.n	8010330 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80103c8:	f04f 0800 	mov.w	r8, #0
 80103cc:	eba3 0208 	sub.w	r2, r3, r8
 80103d0:	2a00      	cmp	r2, #0
 80103d2:	f77f af36 	ble.w	8010242 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80103d6:	9e00      	ldr	r6, [sp, #0]
 80103d8:	1402      	asrs	r2, r0, #16
 80103da:	140d      	asrs	r5, r1, #16
 80103dc:	fb06 2505 	mla	r5, r6, r5, r2
 80103e0:	086a      	lsrs	r2, r5, #1
 80103e2:	9e01      	ldr	r6, [sp, #4]
 80103e4:	5cb2      	ldrb	r2, [r6, r2]
 80103e6:	07ed      	lsls	r5, r5, #31
 80103e8:	bf54      	ite	pl
 80103ea:	f002 020f 	andpl.w	r2, r2, #15
 80103ee:	1112      	asrmi	r2, r2, #4
 80103f0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80103f4:	b2d2      	uxtb	r2, r2
 80103f6:	b1c2      	cbz	r2, 801042a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 80103f8:	9d04      	ldr	r5, [sp, #16]
 80103fa:	436a      	muls	r2, r5
 80103fc:	1c55      	adds	r5, r2, #1
 80103fe:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8010402:	4d2e      	ldr	r5, [pc, #184]	@ (80104bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8010404:	1212      	asrs	r2, r2, #8
 8010406:	682e      	ldr	r6, [r5, #0]
 8010408:	2aff      	cmp	r2, #255	@ 0xff
 801040a:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801040e:	d113      	bne.n	8010438 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8010410:	0972      	lsrs	r2, r6, #5
 8010412:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8010416:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801041a:	f025 0507 	bic.w	r5, r5, #7
 801041e:	4315      	orrs	r5, r2
 8010420:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8010424:	4335      	orrs	r5, r6
 8010426:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801042a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801042c:	4410      	add	r0, r2
 801042e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8010430:	f108 0801 	add.w	r8, r8, #1
 8010434:	4411      	add	r1, r2
 8010436:	e7c9      	b.n	80103cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8010438:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801043c:	fa1f fa82 	uxth.w	sl, r2
 8010440:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010444:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8010448:	43d2      	mvns	r2, r2
 801044a:	b2d2      	uxtb	r2, r2
 801044c:	fb17 f70a 	smulbb	r7, r7, sl
 8010450:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8010454:	fb0c 7c02 	mla	ip, ip, r2, r7
 8010458:	b2f6      	uxtb	r6, r6
 801045a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801045e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010462:	fa5f fe8e 	uxtb.w	lr, lr
 8010466:	fb16 f60a 	smulbb	r6, r6, sl
 801046a:	fb0e 6602 	mla	r6, lr, r2, r6
 801046e:	b2ed      	uxtb	r5, r5
 8010470:	fa1f fc8c 	uxth.w	ip, ip
 8010474:	fb15 f50a 	smulbb	r5, r5, sl
 8010478:	b2b6      	uxth	r6, r6
 801047a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801047e:	fb07 5702 	mla	r7, r7, r2, r5
 8010482:	f10c 0201 	add.w	r2, ip, #1
 8010486:	1c75      	adds	r5, r6, #1
 8010488:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801048c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8010490:	b2bf      	uxth	r7, r7
 8010492:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8010496:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801049a:	ea45 0c0c 	orr.w	ip, r5, ip
 801049e:	1c7d      	adds	r5, r7, #1
 80104a0:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 80104a4:	096d      	lsrs	r5, r5, #5
 80104a6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80104aa:	ea4c 0c05 	orr.w	ip, ip, r5
 80104ae:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 80104b2:	e7ba      	b.n	801042a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 80104b4:	b007      	add	sp, #28
 80104b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80104ba:	bf00      	nop
 80104bc:	20013808 	.word	0x20013808

080104c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80104c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80104c4:	b087      	sub	sp, #28
 80104c6:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 80107d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 80104ca:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80104cc:	9205      	str	r2, [sp, #20]
 80104ce:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80104d2:	9101      	str	r1, [sp, #4]
 80104d4:	6841      	ldr	r1, [r0, #4]
 80104d6:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 80104da:	fb01 2404 	mla	r4, r1, r4, r2
 80104de:	6802      	ldr	r2, [r0, #0]
 80104e0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80104e4:	f8db 2008 	ldr.w	r2, [fp, #8]
 80104e8:	3201      	adds	r2, #1
 80104ea:	f022 0201 	bic.w	r2, r2, #1
 80104ee:	9202      	str	r2, [sp, #8]
 80104f0:	f8db 2000 	ldr.w	r2, [fp]
 80104f4:	9203      	str	r2, [sp, #12]
 80104f6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80104fa:	9a01      	ldr	r2, [sp, #4]
 80104fc:	2a00      	cmp	r2, #0
 80104fe:	dc03      	bgt.n	8010508 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8010500:	9a05      	ldr	r2, [sp, #20]
 8010502:	2a00      	cmp	r2, #0
 8010504:	f340 8162 	ble.w	80107cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8010508:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801050a:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801050e:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8010512:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8010516:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8010518:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801051c:	2b00      	cmp	r3, #0
 801051e:	dd0e      	ble.n	801053e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010520:	1402      	asrs	r2, r0, #16
 8010522:	d405      	bmi.n	8010530 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010524:	42ba      	cmp	r2, r7
 8010526:	da03      	bge.n	8010530 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010528:	140a      	asrs	r2, r1, #16
 801052a:	d401      	bmi.n	8010530 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801052c:	42b2      	cmp	r2, r6
 801052e:	db07      	blt.n	8010540 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8010530:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8010532:	4410      	add	r0, r2
 8010534:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8010536:	3b01      	subs	r3, #1
 8010538:	4411      	add	r1, r2
 801053a:	3402      	adds	r4, #2
 801053c:	e7ee      	b.n	801051c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801053e:	d017      	beq.n	8010570 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8010540:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8010542:	1e5a      	subs	r2, r3, #1
 8010544:	fb05 0502 	mla	r5, r5, r2, r0
 8010548:	142d      	asrs	r5, r5, #16
 801054a:	d409      	bmi.n	8010560 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801054c:	42bd      	cmp	r5, r7
 801054e:	da07      	bge.n	8010560 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010550:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8010552:	fb05 1202 	mla	r2, r5, r2, r1
 8010556:	1412      	asrs	r2, r2, #16
 8010558:	d402      	bmi.n	8010560 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801055a:	42b2      	cmp	r2, r6
 801055c:	f2c0 80c3 	blt.w	80106e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8010560:	2500      	movs	r5, #0
 8010562:	195a      	adds	r2, r3, r5
 8010564:	2a00      	cmp	r2, #0
 8010566:	dc3f      	bgt.n	80105e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8010568:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801056c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010570:	9b01      	ldr	r3, [sp, #4]
 8010572:	2b00      	cmp	r3, #0
 8010574:	f340 812a 	ble.w	80107cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8010578:	ee30 0a04 	vadd.f32	s0, s0, s8
 801057c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010580:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010584:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010586:	ee31 1a05 	vadd.f32	s2, s2, s10
 801058a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801058e:	eeb0 6a62 	vmov.f32	s12, s5
 8010592:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010596:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801059a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801059e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80105a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80105a6:	eeb0 6a43 	vmov.f32	s12, s6
 80105aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80105ae:	ee12 2a90 	vmov	r2, s5
 80105b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80105b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80105ba:	ee13 2a10 	vmov	r2, s6
 80105be:	9313      	str	r3, [sp, #76]	@ 0x4c
 80105c0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80105c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80105c6:	9314      	str	r3, [sp, #80]	@ 0x50
 80105c8:	9b01      	ldr	r3, [sp, #4]
 80105ca:	9a05      	ldr	r2, [sp, #20]
 80105cc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80105d0:	3b01      	subs	r3, #1
 80105d2:	9301      	str	r3, [sp, #4]
 80105d4:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80105d8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80105da:	eeb0 3a67 	vmov.f32	s6, s15
 80105de:	bf08      	it	eq
 80105e0:	4613      	moveq	r3, r2
 80105e2:	eef0 2a47 	vmov.f32	s5, s14
 80105e6:	e788      	b.n	80104fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80105e8:	1406      	asrs	r6, r0, #16
 80105ea:	d42c      	bmi.n	8010646 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80105ec:	f8db 2008 	ldr.w	r2, [fp, #8]
 80105f0:	42b2      	cmp	r2, r6
 80105f2:	dd28      	ble.n	8010646 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80105f4:	140f      	asrs	r7, r1, #16
 80105f6:	d426      	bmi.n	8010646 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80105f8:	f8db 200c 	ldr.w	r2, [fp, #12]
 80105fc:	42ba      	cmp	r2, r7
 80105fe:	dd22      	ble.n	8010646 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8010600:	9a02      	ldr	r2, [sp, #8]
 8010602:	fb07 6602 	mla	r6, r7, r2, r6
 8010606:	0872      	lsrs	r2, r6, #1
 8010608:	9f03      	ldr	r7, [sp, #12]
 801060a:	5cba      	ldrb	r2, [r7, r2]
 801060c:	07f6      	lsls	r6, r6, #31
 801060e:	bf54      	ite	pl
 8010610:	f002 020f 	andpl.w	r2, r2, #15
 8010614:	1112      	asrmi	r2, r2, #4
 8010616:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801061a:	b2d2      	uxtb	r2, r2
 801061c:	2aff      	cmp	r2, #255	@ 0xff
 801061e:	d118      	bne.n	8010652 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8010620:	f8d8 2000 	ldr.w	r2, [r8]
 8010624:	f06f 0601 	mvn.w	r6, #1
 8010628:	fb06 f705 	mul.w	r7, r6, r5
 801062c:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8010630:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8010634:	0956      	lsrs	r6, r2, #5
 8010636:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801063a:	ea4c 0606 	orr.w	r6, ip, r6
 801063e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8010642:	4316      	orrs	r6, r2
 8010644:	53e6      	strh	r6, [r4, r7]
 8010646:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8010648:	4410      	add	r0, r2
 801064a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801064c:	3d01      	subs	r5, #1
 801064e:	4411      	add	r1, r2
 8010650:	e787      	b.n	8010562 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8010652:	2a00      	cmp	r2, #0
 8010654:	d0f7      	beq.n	8010646 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8010656:	f06f 0601 	mvn.w	r6, #1
 801065a:	436e      	muls	r6, r5
 801065c:	f8d8 c000 	ldr.w	ip, [r8]
 8010660:	f834 e006 	ldrh.w	lr, [r4, r6]
 8010664:	9604      	str	r6, [sp, #16]
 8010666:	fa1f f982 	uxth.w	r9, r2
 801066a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801066e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8010672:	43d2      	mvns	r2, r2
 8010674:	b2d2      	uxtb	r2, r2
 8010676:	fb16 f609 	smulbb	r6, r6, r9
 801067a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801067e:	fb07 6702 	mla	r7, r7, r2, r6
 8010682:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8010686:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801068a:	fa5f fc8c 	uxtb.w	ip, ip
 801068e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010692:	fa5f fe8e 	uxtb.w	lr, lr
 8010696:	fb1c fc09 	smulbb	ip, ip, r9
 801069a:	fb0e cc02 	mla	ip, lr, r2, ip
 801069e:	b2bf      	uxth	r7, r7
 80106a0:	fb1a fa09 	smulbb	sl, sl, r9
 80106a4:	fa1f fc8c 	uxth.w	ip, ip
 80106a8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80106ac:	fb06 a602 	mla	r6, r6, r2, sl
 80106b0:	1c7a      	adds	r2, r7, #1
 80106b2:	f10c 0a01 	add.w	sl, ip, #1
 80106b6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80106ba:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 80106be:	b2b6      	uxth	r6, r6
 80106c0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80106c4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80106c8:	ea4a 0707 	orr.w	r7, sl, r7
 80106cc:	f106 0a01 	add.w	sl, r6, #1
 80106d0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80106d4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80106d8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80106dc:	9a04      	ldr	r2, [sp, #16]
 80106de:	ea47 070a 	orr.w	r7, r7, sl
 80106e2:	52a7      	strh	r7, [r4, r2]
 80106e4:	e7af      	b.n	8010646 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80106e6:	f04f 0e00 	mov.w	lr, #0
 80106ea:	eba3 020e 	sub.w	r2, r3, lr
 80106ee:	2a00      	cmp	r2, #0
 80106f0:	f77f af3a 	ble.w	8010568 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80106f4:	9e02      	ldr	r6, [sp, #8]
 80106f6:	1402      	asrs	r2, r0, #16
 80106f8:	140d      	asrs	r5, r1, #16
 80106fa:	fb06 2505 	mla	r5, r6, r5, r2
 80106fe:	086a      	lsrs	r2, r5, #1
 8010700:	9e03      	ldr	r6, [sp, #12]
 8010702:	5cb2      	ldrb	r2, [r6, r2]
 8010704:	07ed      	lsls	r5, r5, #31
 8010706:	bf54      	ite	pl
 8010708:	f002 020f 	andpl.w	r2, r2, #15
 801070c:	1112      	asrmi	r2, r2, #4
 801070e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8010712:	b2d2      	uxtb	r2, r2
 8010714:	2aff      	cmp	r2, #255	@ 0xff
 8010716:	d115      	bne.n	8010744 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8010718:	f8d8 5000 	ldr.w	r5, [r8]
 801071c:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8010720:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8010724:	096a      	lsrs	r2, r5, #5
 8010726:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801072a:	4332      	orrs	r2, r6
 801072c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8010730:	432a      	orrs	r2, r5
 8010732:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8010736:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8010738:	4410      	add	r0, r2
 801073a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801073c:	f10e 0e01 	add.w	lr, lr, #1
 8010740:	4411      	add	r1, r2
 8010742:	e7d2      	b.n	80106ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8010744:	2a00      	cmp	r2, #0
 8010746:	d0f6      	beq.n	8010736 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8010748:	f8d8 7000 	ldr.w	r7, [r8]
 801074c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8010750:	fa1f f982 	uxth.w	r9, r2
 8010754:	ea4f 262c 	mov.w	r6, ip, asr #8
 8010758:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801075c:	43d2      	mvns	r2, r2
 801075e:	b2d2      	uxtb	r2, r2
 8010760:	fb15 f509 	smulbb	r5, r5, r9
 8010764:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8010768:	fb06 5602 	mla	r6, r6, r2, r5
 801076c:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8010770:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8010774:	b2ff      	uxtb	r7, r7
 8010776:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801077a:	fa5f fc8c 	uxtb.w	ip, ip
 801077e:	fb17 f709 	smulbb	r7, r7, r9
 8010782:	fb0c 7702 	mla	r7, ip, r2, r7
 8010786:	b2b6      	uxth	r6, r6
 8010788:	fb1a fa09 	smulbb	sl, sl, r9
 801078c:	b2bf      	uxth	r7, r7
 801078e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8010792:	fb05 a502 	mla	r5, r5, r2, sl
 8010796:	1c72      	adds	r2, r6, #1
 8010798:	f107 0a01 	add.w	sl, r7, #1
 801079c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80107a0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80107a4:	b2ad      	uxth	r5, r5
 80107a6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80107aa:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80107ae:	ea4a 0606 	orr.w	r6, sl, r6
 80107b2:	f105 0a01 	add.w	sl, r5, #1
 80107b6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80107ba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80107be:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80107c2:	ea46 060a 	orr.w	r6, r6, sl
 80107c6:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 80107ca:	e7b4      	b.n	8010736 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80107cc:	b007      	add	sp, #28
 80107ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80107d2:	bf00      	nop
 80107d4:	20013808 	.word	0x20013808

080107d8 <_ZN8touchgfx8LCD16bppD1Ev>:
 80107d8:	4770      	bx	lr

080107da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 80107da:	4770      	bx	lr

080107dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 80107dc:	4770      	bx	lr

080107de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 80107de:	4770      	bx	lr

080107e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80107e0:	4770      	bx	lr

080107e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80107e2:	4770      	bx	lr

080107e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80107e4:	4770      	bx	lr

080107e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80107e6:	4770      	bx	lr

080107e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80107e8:	4770      	bx	lr

080107ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80107ea:	4770      	bx	lr

080107ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80107ec:	4770      	bx	lr

080107ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80107ee:	4770      	bx	lr

080107f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80107f0:	4770      	bx	lr

080107f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80107f2:	4770      	bx	lr

080107f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80107f4:	4770      	bx	lr

080107f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80107f6:	4770      	bx	lr

080107f8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80107f8:	4770      	bx	lr

080107fa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80107fa:	4770      	bx	lr

080107fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80107fc:	4770      	bx	lr

080107fe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 80107fe:	4770      	bx	lr

08010800 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8010800:	4770      	bx	lr

08010802 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8010802:	4770      	bx	lr

08010804 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8010804:	4770      	bx	lr

08010806 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8010806:	4770      	bx	lr

08010808 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8010808:	4770      	bx	lr

0801080a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801080a:	4770      	bx	lr

0801080c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801080c:	4770      	bx	lr

0801080e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801080e:	4770      	bx	lr

08010810 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8010810:	4770      	bx	lr

08010812 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8010812:	4770      	bx	lr

08010814 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8010814:	4770      	bx	lr

08010816 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8010816:	4770      	bx	lr

08010818 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8010818:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801081c:	b088      	sub	sp, #32
 801081e:	ac08      	add	r4, sp, #32
 8010820:	4606      	mov	r6, r0
 8010822:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8010826:	4620      	mov	r0, r4
 8010828:	4688      	mov	r8, r1
 801082a:	4691      	mov	r9, r2
 801082c:	f7fd fc62 	bl	800e0f4 <_ZNK8touchgfx6Bitmap7getDataEv>
 8010830:	6833      	ldr	r3, [r6, #0]
 8010832:	4605      	mov	r5, r0
 8010834:	4620      	mov	r0, r4
 8010836:	699f      	ldr	r7, [r3, #24]
 8010838:	f7fd fb6a 	bl	800df10 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801083c:	4682      	mov	sl, r0
 801083e:	4620      	mov	r0, r4
 8010840:	f7fd fb9a 	bl	800df78 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010844:	9500      	str	r5, [sp, #0]
 8010846:	e9cd a001 	strd	sl, r0, [sp, #4]
 801084a:	464b      	mov	r3, r9
 801084c:	a806      	add	r0, sp, #24
 801084e:	4642      	mov	r2, r8
 8010850:	4631      	mov	r1, r6
 8010852:	47b8      	blx	r7
 8010854:	4628      	mov	r0, r5
 8010856:	b008      	add	sp, #32
 8010858:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801085c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801085c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8010860:	2300      	movs	r3, #0
 8010862:	9300      	str	r3, [sp, #0]
 8010864:	4b3d      	ldr	r3, [pc, #244]	@ (801095c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8010866:	781b      	ldrb	r3, [r3, #0]
 8010868:	2b00      	cmp	r3, #0
 801086a:	d137      	bne.n	80108dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801086c:	4a3c      	ldr	r2, [pc, #240]	@ (8010960 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801086e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8010872:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010876:	2b00      	cmp	r3, #0
 8010878:	d132      	bne.n	80108e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801087a:	4b3a      	ldr	r3, [pc, #232]	@ (8010964 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801087c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010880:	6808      	ldr	r0, [r1, #0]
 8010882:	6849      	ldr	r1, [r1, #4]
 8010884:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010888:	ac02      	add	r4, sp, #8
 801088a:	ab02      	add	r3, sp, #8
 801088c:	c303      	stmia	r3!, {r0, r1}
 801088e:	4669      	mov	r1, sp
 8010890:	4620      	mov	r0, r4
 8010892:	f7fb fb51 	bl	800bf38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8010896:	4668      	mov	r0, sp
 8010898:	f7fb fb0a 	bl	800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801089c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80108a0:	f8bd 2000 	ldrh.w	r2, [sp]
 80108a4:	4d30      	ldr	r5, [pc, #192]	@ (8010968 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 80108a6:	4413      	add	r3, r2
 80108a8:	f8ad 3008 	strh.w	r3, [sp, #8]
 80108ac:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80108b0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80108b4:	6828      	ldr	r0, [r5, #0]
 80108b6:	4413      	add	r3, r2
 80108b8:	f8ad 300a 	strh.w	r3, [sp, #10]
 80108bc:	6803      	ldr	r3, [r0, #0]
 80108be:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80108c0:	4798      	blx	r3
 80108c2:	f010 0f01 	tst.w	r0, #1
 80108c6:	462f      	mov	r7, r5
 80108c8:	d00c      	beq.n	80108e4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 80108ca:	6828      	ldr	r0, [r5, #0]
 80108cc:	6803      	ldr	r3, [r0, #0]
 80108ce:	e894 0006 	ldmia.w	r4, {r1, r2}
 80108d2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80108d4:	4798      	blx	r3
 80108d6:	b004      	add	sp, #16
 80108d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80108dc:	4a21      	ldr	r2, [pc, #132]	@ (8010964 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80108de:	e7c6      	b.n	801086e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 80108e0:	4b1f      	ldr	r3, [pc, #124]	@ (8010960 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80108e2:	e7cb      	b.n	801087c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 80108e4:	6838      	ldr	r0, [r7, #0]
 80108e6:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80108ea:	6803      	ldr	r3, [r0, #0]
 80108ec:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 80108f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80108f2:	4798      	blx	r3
 80108f4:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 80108f8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80108fc:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8010900:	fb16 3602 	smlabb	r6, r6, r2, r3
 8010904:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8010908:	6838      	ldr	r0, [r7, #0]
 801090a:	6803      	ldr	r3, [r0, #0]
 801090c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801090e:	4798      	blx	r3
 8010910:	4a13      	ldr	r2, [pc, #76]	@ (8010960 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8010912:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8010916:	8813      	ldrh	r3, [r2, #0]
 8010918:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801091c:	fb03 1404 	mla	r4, r3, r4, r1
 8010920:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8010924:	435d      	muls	r5, r3
 8010926:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801092a:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801092e:	4691      	mov	r9, r2
 8010930:	6838      	ldr	r0, [r7, #0]
 8010932:	42ac      	cmp	r4, r5
 8010934:	6803      	ldr	r3, [r0, #0]
 8010936:	d20e      	bcs.n	8010956 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8010938:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 801093c:	4632      	mov	r2, r6
 801093e:	4643      	mov	r3, r8
 8010940:	4621      	mov	r1, r4
 8010942:	47d0      	blx	sl
 8010944:	f8b9 3000 	ldrh.w	r3, [r9]
 8010948:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801094c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8010950:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8010954:	e7ec      	b.n	8010930 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8010956:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010958:	4798      	blx	r3
 801095a:	e7bc      	b.n	80108d6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801095c:	200137f8 	.word	0x200137f8
 8010960:	200137fa 	.word	0x200137fa
 8010964:	200137fc 	.word	0x200137fc
 8010968:	20013800 	.word	0x20013800

0801096c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801096c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010970:	b08b      	sub	sp, #44	@ 0x2c
 8010972:	460f      	mov	r7, r1
 8010974:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8010978:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 801097c:	4616      	mov	r6, r2
 801097e:	f1bb 0f00 	cmp.w	fp, #0
 8010982:	d04a      	beq.n	8010a1a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8010984:	6810      	ldr	r0, [r2, #0]
 8010986:	6851      	ldr	r1, [r2, #4]
 8010988:	ad06      	add	r5, sp, #24
 801098a:	c503      	stmia	r5!, {r0, r1}
 801098c:	6818      	ldr	r0, [r3, #0]
 801098e:	6859      	ldr	r1, [r3, #4]
 8010990:	ad08      	add	r5, sp, #32
 8010992:	c503      	stmia	r5!, {r0, r1}
 8010994:	a806      	add	r0, sp, #24
 8010996:	f7fb fa8b 	bl	800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801099a:	4631      	mov	r1, r6
 801099c:	a808      	add	r0, sp, #32
 801099e:	f7fb facb 	bl	800bf38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80109a2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80109a6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 80109aa:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80109ae:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 80109b2:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 80109b6:	fb16 2103 	smlabb	r1, r6, r3, r2
 80109ba:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80109be:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80109c2:	4f5f      	ldr	r7, [pc, #380]	@ (8010b40 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80109c4:	440a      	add	r2, r1
 80109c6:	f8ad 2020 	strh.w	r2, [sp, #32]
 80109ca:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80109ce:	6838      	ldr	r0, [r7, #0]
 80109d0:	4413      	add	r3, r2
 80109d2:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 80109d6:	6803      	ldr	r3, [r0, #0]
 80109d8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80109da:	4798      	blx	r3
 80109dc:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 80109e0:	46b9      	mov	r9, r7
 80109e2:	d11d      	bne.n	8010a20 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80109e4:	b9fc      	cbnz	r4, 8010a26 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80109e6:	f010 0f01 	tst.w	r0, #1
 80109ea:	d01c      	beq.n	8010a26 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80109ec:	f8d9 0000 	ldr.w	r0, [r9]
 80109f0:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 80109f4:	6801      	ldr	r1, [r0, #0]
 80109f6:	f8cd b00c 	str.w	fp, [sp, #12]
 80109fa:	2700      	movs	r7, #0
 80109fc:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8010a00:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8010a04:	9402      	str	r4, [sp, #8]
 8010a06:	b2ad      	uxth	r5, r5
 8010a08:	fa1f f488 	uxth.w	r4, r8
 8010a0c:	9501      	str	r5, [sp, #4]
 8010a0e:	9400      	str	r4, [sp, #0]
 8010a10:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 8010a12:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8010a16:	4631      	mov	r1, r6
 8010a18:	47a0      	blx	r4
 8010a1a:	b00b      	add	sp, #44	@ 0x2c
 8010a1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010a20:	f010 0f04 	tst.w	r0, #4
 8010a24:	e7e1      	b.n	80109ea <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8010a26:	f8d9 0000 	ldr.w	r0, [r9]
 8010a2a:	6803      	ldr	r3, [r0, #0]
 8010a2c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010a2e:	4798      	blx	r3
 8010a30:	4b44      	ldr	r3, [pc, #272]	@ (8010b44 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8010a32:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 8010a36:	881a      	ldrh	r2, [r3, #0]
 8010a38:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8010a3c:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8010a40:	fb02 1404 	mla	r4, r2, r4, r1
 8010a44:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8010a48:	469a      	mov	sl, r3
 8010a4a:	fb05 f502 	mul.w	r5, r5, r2
 8010a4e:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8010a52:	d059      	beq.n	8010b08 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8010a54:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 8010a58:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8010a5c:	fa1f f28b 	uxth.w	r2, fp
 8010a60:	fa1f f989 	uxth.w	r9, r9
 8010a64:	469e      	mov	lr, r3
 8010a66:	42ac      	cmp	r4, r5
 8010a68:	d264      	bcs.n	8010b34 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8010a6a:	eb04 0a07 	add.w	sl, r4, r7
 8010a6e:	4554      	cmp	r4, sl
 8010a70:	d23d      	bcs.n	8010aee <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8010a72:	8821      	ldrh	r1, [r4, #0]
 8010a74:	f836 3b02 	ldrh.w	r3, [r6], #2
 8010a78:	1208      	asrs	r0, r1, #8
 8010a7a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8010a7e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8010a82:	fb10 f009 	smulbb	r0, r0, r9
 8010a86:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8010a8a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8010a8e:	00c9      	lsls	r1, r1, #3
 8010a90:	fb0c 0c02 	mla	ip, ip, r2, r0
 8010a94:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8010a98:	10d8      	asrs	r0, r3, #3
 8010a9a:	b2c9      	uxtb	r1, r1
 8010a9c:	00db      	lsls	r3, r3, #3
 8010a9e:	fa1f fc8c 	uxth.w	ip, ip
 8010aa2:	fb1b fb09 	smulbb	fp, fp, r9
 8010aa6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8010aaa:	b2db      	uxtb	r3, r3
 8010aac:	fb11 f109 	smulbb	r1, r1, r9
 8010ab0:	fb00 b002 	mla	r0, r0, r2, fp
 8010ab4:	fb03 1302 	mla	r3, r3, r2, r1
 8010ab8:	f10c 0b01 	add.w	fp, ip, #1
 8010abc:	b29b      	uxth	r3, r3
 8010abe:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8010ac2:	b280      	uxth	r0, r0
 8010ac4:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8010ac8:	f103 0c01 	add.w	ip, r3, #1
 8010acc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8010ad0:	1c43      	adds	r3, r0, #1
 8010ad2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8010ad6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8010ada:	0940      	lsrs	r0, r0, #5
 8010adc:	ea4c 0c0b 	orr.w	ip, ip, fp
 8010ae0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8010ae4:	ea4c 0c00 	orr.w	ip, ip, r0
 8010ae8:	f824 cb02 	strh.w	ip, [r4], #2
 8010aec:	e7bf      	b.n	8010a6e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8010aee:	f8be 3000 	ldrh.w	r3, [lr]
 8010af2:	eba3 0308 	sub.w	r3, r3, r8
 8010af6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010afa:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8010afe:	eba3 0308 	sub.w	r3, r3, r8
 8010b02:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8010b06:	e7ae      	b.n	8010a66 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8010b08:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8010b0c:	f8d9 0000 	ldr.w	r0, [r9]
 8010b10:	42ac      	cmp	r4, r5
 8010b12:	6803      	ldr	r3, [r0, #0]
 8010b14:	d20e      	bcs.n	8010b34 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8010b16:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 8010b1a:	4632      	mov	r2, r6
 8010b1c:	463b      	mov	r3, r7
 8010b1e:	4621      	mov	r1, r4
 8010b20:	47c0      	blx	r8
 8010b22:	f8ba 3000 	ldrh.w	r3, [sl]
 8010b26:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010b2a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8010b2e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8010b32:	e7eb      	b.n	8010b0c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8010b34:	4b02      	ldr	r3, [pc, #8]	@ (8010b40 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8010b36:	6818      	ldr	r0, [r3, #0]
 8010b38:	6803      	ldr	r3, [r0, #0]
 8010b3a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010b3c:	4798      	blx	r3
 8010b3e:	e76c      	b.n	8010a1a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8010b40:	20013800 	.word	0x20013800
 8010b44:	200137fa 	.word	0x200137fa

08010b48 <_ZN8touchgfx8LCD16bppD0Ev>:
 8010b48:	b510      	push	{r4, lr}
 8010b4a:	2188      	movs	r1, #136	@ 0x88
 8010b4c:	4604      	mov	r4, r0
 8010b4e:	f00a fe5f 	bl	801b810 <_ZdlPvj>
 8010b52:	4620      	mov	r0, r4
 8010b54:	bd10      	pop	{r4, pc}

08010b56 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8010b56:	b510      	push	{r4, lr}
 8010b58:	2104      	movs	r1, #4
 8010b5a:	4604      	mov	r4, r0
 8010b5c:	f00a fe58 	bl	801b810 <_ZdlPvj>
 8010b60:	4620      	mov	r0, r4
 8010b62:	bd10      	pop	{r4, pc}

08010b64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8010b64:	b510      	push	{r4, lr}
 8010b66:	2104      	movs	r1, #4
 8010b68:	4604      	mov	r4, r0
 8010b6a:	f00a fe51 	bl	801b810 <_ZdlPvj>
 8010b6e:	4620      	mov	r0, r4
 8010b70:	bd10      	pop	{r4, pc}

08010b72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8010b72:	b510      	push	{r4, lr}
 8010b74:	f640 0144 	movw	r1, #2116	@ 0x844
 8010b78:	4604      	mov	r4, r0
 8010b7a:	f00a fe49 	bl	801b810 <_ZdlPvj>
 8010b7e:	4620      	mov	r0, r4
 8010b80:	bd10      	pop	{r4, pc}

08010b82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8010b82:	b510      	push	{r4, lr}
 8010b84:	2104      	movs	r1, #4
 8010b86:	4604      	mov	r4, r0
 8010b88:	f00a fe42 	bl	801b810 <_ZdlPvj>
 8010b8c:	4620      	mov	r0, r4
 8010b8e:	bd10      	pop	{r4, pc}

08010b90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8010b90:	b510      	push	{r4, lr}
 8010b92:	2104      	movs	r1, #4
 8010b94:	4604      	mov	r4, r0
 8010b96:	f00a fe3b 	bl	801b810 <_ZdlPvj>
 8010b9a:	4620      	mov	r0, r4
 8010b9c:	bd10      	pop	{r4, pc}

08010b9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8010b9e:	b510      	push	{r4, lr}
 8010ba0:	2104      	movs	r1, #4
 8010ba2:	4604      	mov	r4, r0
 8010ba4:	f00a fe34 	bl	801b810 <_ZdlPvj>
 8010ba8:	4620      	mov	r0, r4
 8010baa:	bd10      	pop	{r4, pc}

08010bac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8010bac:	b510      	push	{r4, lr}
 8010bae:	2104      	movs	r1, #4
 8010bb0:	4604      	mov	r4, r0
 8010bb2:	f00a fe2d 	bl	801b810 <_ZdlPvj>
 8010bb6:	4620      	mov	r0, r4
 8010bb8:	bd10      	pop	{r4, pc}

08010bba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8010bba:	b510      	push	{r4, lr}
 8010bbc:	2104      	movs	r1, #4
 8010bbe:	4604      	mov	r4, r0
 8010bc0:	f00a fe26 	bl	801b810 <_ZdlPvj>
 8010bc4:	4620      	mov	r0, r4
 8010bc6:	bd10      	pop	{r4, pc}

08010bc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8010bc8:	b510      	push	{r4, lr}
 8010bca:	2104      	movs	r1, #4
 8010bcc:	4604      	mov	r4, r0
 8010bce:	f00a fe1f 	bl	801b810 <_ZdlPvj>
 8010bd2:	4620      	mov	r0, r4
 8010bd4:	bd10      	pop	{r4, pc}

08010bd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8010bd6:	b510      	push	{r4, lr}
 8010bd8:	2104      	movs	r1, #4
 8010bda:	4604      	mov	r4, r0
 8010bdc:	f00a fe18 	bl	801b810 <_ZdlPvj>
 8010be0:	4620      	mov	r0, r4
 8010be2:	bd10      	pop	{r4, pc}

08010be4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8010be4:	b510      	push	{r4, lr}
 8010be6:	2104      	movs	r1, #4
 8010be8:	4604      	mov	r4, r0
 8010bea:	f00a fe11 	bl	801b810 <_ZdlPvj>
 8010bee:	4620      	mov	r0, r4
 8010bf0:	bd10      	pop	{r4, pc}

08010bf2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8010bf2:	b510      	push	{r4, lr}
 8010bf4:	2104      	movs	r1, #4
 8010bf6:	4604      	mov	r4, r0
 8010bf8:	f00a fe0a 	bl	801b810 <_ZdlPvj>
 8010bfc:	4620      	mov	r0, r4
 8010bfe:	bd10      	pop	{r4, pc}

08010c00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8010c00:	b510      	push	{r4, lr}
 8010c02:	2104      	movs	r1, #4
 8010c04:	4604      	mov	r4, r0
 8010c06:	f00a fe03 	bl	801b810 <_ZdlPvj>
 8010c0a:	4620      	mov	r0, r4
 8010c0c:	bd10      	pop	{r4, pc}

08010c0e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8010c0e:	b510      	push	{r4, lr}
 8010c10:	2104      	movs	r1, #4
 8010c12:	4604      	mov	r4, r0
 8010c14:	f00a fdfc 	bl	801b810 <_ZdlPvj>
 8010c18:	4620      	mov	r0, r4
 8010c1a:	bd10      	pop	{r4, pc}

08010c1c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8010c1c:	b510      	push	{r4, lr}
 8010c1e:	2104      	movs	r1, #4
 8010c20:	4604      	mov	r4, r0
 8010c22:	f00a fdf5 	bl	801b810 <_ZdlPvj>
 8010c26:	4620      	mov	r0, r4
 8010c28:	bd10      	pop	{r4, pc}

08010c2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8010c2a:	b510      	push	{r4, lr}
 8010c2c:	2104      	movs	r1, #4
 8010c2e:	4604      	mov	r4, r0
 8010c30:	f00a fdee 	bl	801b810 <_ZdlPvj>
 8010c34:	4620      	mov	r0, r4
 8010c36:	bd10      	pop	{r4, pc}

08010c38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8010c38:	b510      	push	{r4, lr}
 8010c3a:	2104      	movs	r1, #4
 8010c3c:	4604      	mov	r4, r0
 8010c3e:	f00a fde7 	bl	801b810 <_ZdlPvj>
 8010c42:	4620      	mov	r0, r4
 8010c44:	bd10      	pop	{r4, pc}

08010c46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8010c46:	b510      	push	{r4, lr}
 8010c48:	2104      	movs	r1, #4
 8010c4a:	4604      	mov	r4, r0
 8010c4c:	f00a fde0 	bl	801b810 <_ZdlPvj>
 8010c50:	4620      	mov	r0, r4
 8010c52:	bd10      	pop	{r4, pc}

08010c54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8010c54:	b510      	push	{r4, lr}
 8010c56:	2104      	movs	r1, #4
 8010c58:	4604      	mov	r4, r0
 8010c5a:	f00a fdd9 	bl	801b810 <_ZdlPvj>
 8010c5e:	4620      	mov	r0, r4
 8010c60:	bd10      	pop	{r4, pc}

08010c62 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8010c62:	b510      	push	{r4, lr}
 8010c64:	2104      	movs	r1, #4
 8010c66:	4604      	mov	r4, r0
 8010c68:	f00a fdd2 	bl	801b810 <_ZdlPvj>
 8010c6c:	4620      	mov	r0, r4
 8010c6e:	bd10      	pop	{r4, pc}

08010c70 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8010c70:	b510      	push	{r4, lr}
 8010c72:	2104      	movs	r1, #4
 8010c74:	4604      	mov	r4, r0
 8010c76:	f00a fdcb 	bl	801b810 <_ZdlPvj>
 8010c7a:	4620      	mov	r0, r4
 8010c7c:	bd10      	pop	{r4, pc}

08010c7e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8010c7e:	b510      	push	{r4, lr}
 8010c80:	2104      	movs	r1, #4
 8010c82:	4604      	mov	r4, r0
 8010c84:	f00a fdc4 	bl	801b810 <_ZdlPvj>
 8010c88:	4620      	mov	r0, r4
 8010c8a:	bd10      	pop	{r4, pc}

08010c8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8010c8c:	b510      	push	{r4, lr}
 8010c8e:	2104      	movs	r1, #4
 8010c90:	4604      	mov	r4, r0
 8010c92:	f00a fdbd 	bl	801b810 <_ZdlPvj>
 8010c96:	4620      	mov	r0, r4
 8010c98:	bd10      	pop	{r4, pc}

08010c9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8010c9a:	b510      	push	{r4, lr}
 8010c9c:	2104      	movs	r1, #4
 8010c9e:	4604      	mov	r4, r0
 8010ca0:	f00a fdb6 	bl	801b810 <_ZdlPvj>
 8010ca4:	4620      	mov	r0, r4
 8010ca6:	bd10      	pop	{r4, pc}

08010ca8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8010ca8:	b510      	push	{r4, lr}
 8010caa:	2104      	movs	r1, #4
 8010cac:	4604      	mov	r4, r0
 8010cae:	f00a fdaf 	bl	801b810 <_ZdlPvj>
 8010cb2:	4620      	mov	r0, r4
 8010cb4:	bd10      	pop	{r4, pc}

08010cb6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8010cb6:	b510      	push	{r4, lr}
 8010cb8:	2104      	movs	r1, #4
 8010cba:	4604      	mov	r4, r0
 8010cbc:	f00a fda8 	bl	801b810 <_ZdlPvj>
 8010cc0:	4620      	mov	r0, r4
 8010cc2:	bd10      	pop	{r4, pc}

08010cc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8010cc4:	b510      	push	{r4, lr}
 8010cc6:	2104      	movs	r1, #4
 8010cc8:	4604      	mov	r4, r0
 8010cca:	f00a fda1 	bl	801b810 <_ZdlPvj>
 8010cce:	4620      	mov	r0, r4
 8010cd0:	bd10      	pop	{r4, pc}

08010cd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8010cd2:	b510      	push	{r4, lr}
 8010cd4:	2104      	movs	r1, #4
 8010cd6:	4604      	mov	r4, r0
 8010cd8:	f00a fd9a 	bl	801b810 <_ZdlPvj>
 8010cdc:	4620      	mov	r0, r4
 8010cde:	bd10      	pop	{r4, pc}

08010ce0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8010ce0:	b510      	push	{r4, lr}
 8010ce2:	2104      	movs	r1, #4
 8010ce4:	4604      	mov	r4, r0
 8010ce6:	f00a fd93 	bl	801b810 <_ZdlPvj>
 8010cea:	4620      	mov	r0, r4
 8010cec:	bd10      	pop	{r4, pc}

08010cee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8010cee:	b510      	push	{r4, lr}
 8010cf0:	2104      	movs	r1, #4
 8010cf2:	4604      	mov	r4, r0
 8010cf4:	f00a fd8c 	bl	801b810 <_ZdlPvj>
 8010cf8:	4620      	mov	r0, r4
 8010cfa:	bd10      	pop	{r4, pc}

08010cfc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8010cfc:	b510      	push	{r4, lr}
 8010cfe:	2104      	movs	r1, #4
 8010d00:	4604      	mov	r4, r0
 8010d02:	f00a fd85 	bl	801b810 <_ZdlPvj>
 8010d06:	4620      	mov	r0, r4
 8010d08:	bd10      	pop	{r4, pc}
	...

08010d0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8010d0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010d10:	b08f      	sub	sp, #60	@ 0x3c
 8010d12:	461c      	mov	r4, r3
 8010d14:	9205      	str	r2, [sp, #20]
 8010d16:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8010d1a:	9100      	str	r1, [sp, #0]
 8010d1c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8010d1e:	9201      	str	r2, [sp, #4]
 8010d20:	2a00      	cmp	r2, #0
 8010d22:	f000 8115 	beq.w	8010f50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 8010d26:	6820      	ldr	r0, [r4, #0]
 8010d28:	6861      	ldr	r1, [r4, #4]
 8010d2a:	aa0a      	add	r2, sp, #40	@ 0x28
 8010d2c:	c203      	stmia	r2!, {r0, r1}
 8010d2e:	6818      	ldr	r0, [r3, #0]
 8010d30:	6859      	ldr	r1, [r3, #4]
 8010d32:	aa0c      	add	r2, sp, #48	@ 0x30
 8010d34:	c203      	stmia	r2!, {r0, r1}
 8010d36:	a80a      	add	r0, sp, #40	@ 0x28
 8010d38:	f7fb f8ba 	bl	800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010d3c:	4621      	mov	r1, r4
 8010d3e:	a80c      	add	r0, sp, #48	@ 0x30
 8010d40:	f7fb f8fa 	bl	800bf38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8010d44:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8010d48:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8010d4c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8010d50:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8010d54:	bfde      	ittt	le
 8010d56:	b2b3      	uxthle	r3, r6
 8010d58:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8010d5c:	fb92 f3f3 	sdivle	r3, r2, r3
 8010d60:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8010d64:	bfc8      	it	gt
 8010d66:	2301      	movgt	r3, #1
 8010d68:	fb92 f1f3 	sdiv	r1, r2, r3
 8010d6c:	fa1f fc81 	uxth.w	ip, r1
 8010d70:	fb0c 2413 	mls	r4, ip, r3, r2
 8010d74:	fb14 f406 	smulbb	r4, r4, r6
 8010d78:	441d      	add	r5, r3
 8010d7a:	4404      	add	r4, r0
 8010d7c:	4661      	mov	r1, ip
 8010d7e:	3d01      	subs	r5, #1
 8010d80:	b2a4      	uxth	r4, r4
 8010d82:	fb95 f5f3 	sdiv	r5, r5, r3
 8010d86:	b131      	cbz	r1, 8010d96 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 8010d88:	9b05      	ldr	r3, [sp, #20]
 8010d8a:	9900      	ldr	r1, [sp, #0]
 8010d8c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8010d90:	ba1b      	rev	r3, r3
 8010d92:	4419      	add	r1, r3
 8010d94:	9100      	str	r1, [sp, #0]
 8010d96:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8010d9a:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 8010d9e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8010da2:	4418      	add	r0, r3
 8010da4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8010da8:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8010dac:	441a      	add	r2, r3
 8010dae:	4b6a      	ldr	r3, [pc, #424]	@ (8010f58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8010db0:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8010db4:	6818      	ldr	r0, [r3, #0]
 8010db6:	6803      	ldr	r3, [r0, #0]
 8010db8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010dba:	4798      	blx	r3
 8010dbc:	4967      	ldr	r1, [pc, #412]	@ (8010f5c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8010dbe:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8010dc2:	880b      	ldrh	r3, [r1, #0]
 8010dc4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8010dc8:	9109      	str	r1, [sp, #36]	@ 0x24
 8010dca:	fb03 c202 	mla	r2, r3, r2, ip
 8010dce:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8010dd2:	4373      	muls	r3, r6
 8010dd4:	b2ad      	uxth	r5, r5
 8010dd6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8010dda:	00ad      	lsls	r5, r5, #2
 8010ddc:	9306      	str	r3, [sp, #24]
 8010dde:	1d2b      	adds	r3, r5, #4
 8010de0:	9307      	str	r3, [sp, #28]
 8010de2:	9b01      	ldr	r3, [sp, #4]
 8010de4:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8010de8:	9103      	str	r1, [sp, #12]
 8010dea:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 8010dee:	2c00      	cmp	r4, #0
 8010df0:	bf0c      	ite	eq
 8010df2:	46c6      	moveq	lr, r8
 8010df4:	f04f 0e00 	movne.w	lr, #0
 8010df8:	2300      	movs	r3, #0
 8010dfa:	b292      	uxth	r2, r2
 8010dfc:	fa1f fe8e 	uxth.w	lr, lr
 8010e00:	9302      	str	r3, [sp, #8]
 8010e02:	9204      	str	r2, [sp, #16]
 8010e04:	9a06      	ldr	r2, [sp, #24]
 8010e06:	4282      	cmp	r2, r0
 8010e08:	f240 809d 	bls.w	8010f46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8010e0c:	b963      	cbnz	r3, 8010e28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8010e0e:	9b00      	ldr	r3, [sp, #0]
 8010e10:	781a      	ldrb	r2, [r3, #0]
 8010e12:	0993      	lsrs	r3, r2, #6
 8010e14:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8010e18:	9202      	str	r2, [sp, #8]
 8010e1a:	1e5a      	subs	r2, r3, #1
 8010e1c:	2a02      	cmp	r2, #2
 8010e1e:	d815      	bhi.n	8010e4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 8010e20:	9a00      	ldr	r2, [sp, #0]
 8010e22:	3201      	adds	r2, #1
 8010e24:	9200      	str	r2, [sp, #0]
 8010e26:	b29b      	uxth	r3, r3
 8010e28:	b1b4      	cbz	r4, 8010e58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 8010e2a:	429c      	cmp	r4, r3
 8010e2c:	bf95      	itete	ls
 8010e2e:	1b1c      	subls	r4, r3, r4
 8010e30:	1ae4      	subhi	r4, r4, r3
 8010e32:	fa1f fa84 	uxthls.w	sl, r4
 8010e36:	b2a4      	uxthhi	r4, r4
 8010e38:	bf87      	ittee	hi
 8010e3a:	4671      	movhi	r1, lr
 8010e3c:	f04f 0a00 	movhi.w	sl, #0
 8010e40:	fa1f f188 	uxthls.w	r1, r8
 8010e44:	2400      	movls	r4, #0
 8010e46:	4653      	mov	r3, sl
 8010e48:	468e      	mov	lr, r1
 8010e4a:	e7db      	b.n	8010e04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 8010e4c:	9a00      	ldr	r2, [sp, #0]
 8010e4e:	9b00      	ldr	r3, [sp, #0]
 8010e50:	3202      	adds	r2, #2
 8010e52:	785b      	ldrb	r3, [r3, #1]
 8010e54:	9200      	str	r2, [sp, #0]
 8010e56:	e7e7      	b.n	8010e28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8010e58:	2202      	movs	r2, #2
 8010e5a:	4615      	mov	r5, r2
 8010e5c:	9907      	ldr	r1, [sp, #28]
 8010e5e:	9a02      	ldr	r2, [sp, #8]
 8010e60:	fb15 1202 	smlabb	r2, r5, r2, r1
 8010e64:	9905      	ldr	r1, [sp, #20]
 8010e66:	4573      	cmp	r3, lr
 8010e68:	f831 c002 	ldrh.w	ip, [r1, r2]
 8010e6c:	9a01      	ldr	r2, [sp, #4]
 8010e6e:	bf2b      	itete	cs
 8010e70:	eba3 0a0e 	subcs.w	sl, r3, lr
 8010e74:	ebae 0103 	subcc.w	r1, lr, r3
 8010e78:	46f1      	movcs	r9, lr
 8010e7a:	4699      	movcc	r9, r3
 8010e7c:	bf27      	ittee	cs
 8010e7e:	fa1f fa8a 	uxthcs.w	sl, sl
 8010e82:	4621      	movcs	r1, r4
 8010e84:	b289      	uxthcc	r1, r1
 8010e86:	46a2      	movcc	sl, r4
 8010e88:	2aff      	cmp	r2, #255	@ 0xff
 8010e8a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8010e8e:	d105      	bne.n	8010e9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8010e90:	4481      	add	r9, r0
 8010e92:	4581      	cmp	r9, r0
 8010e94:	d045      	beq.n	8010f22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8010e96:	f820 cb02 	strh.w	ip, [r0], #2
 8010e9a:	e7fa      	b.n	8010e92 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8010e9c:	9d03      	ldr	r5, [sp, #12]
 8010e9e:	ea4f 222c 	mov.w	r2, ip, asr #8
 8010ea2:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8010ea6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8010eaa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010eae:	436a      	muls	r2, r5
 8010eb0:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8010eb4:	fa5f fc8c 	uxtb.w	ip, ip
 8010eb8:	9208      	str	r2, [sp, #32]
 8010eba:	fb0b fb05 	mul.w	fp, fp, r5
 8010ebe:	fb0c fc05 	mul.w	ip, ip, r5
 8010ec2:	4481      	add	r9, r0
 8010ec4:	4581      	cmp	r9, r0
 8010ec6:	d02c      	beq.n	8010f22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8010ec8:	8802      	ldrh	r2, [r0, #0]
 8010eca:	9d04      	ldr	r5, [sp, #16]
 8010ecc:	9f04      	ldr	r7, [sp, #16]
 8010ece:	1216      	asrs	r6, r2, #8
 8010ed0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8010ed4:	fb16 f605 	smulbb	r6, r6, r5
 8010ed8:	9d08      	ldr	r5, [sp, #32]
 8010eda:	442e      	add	r6, r5
 8010edc:	10d5      	asrs	r5, r2, #3
 8010ede:	00d2      	lsls	r2, r2, #3
 8010ee0:	b2d2      	uxtb	r2, r2
 8010ee2:	fb12 f207 	smulbb	r2, r2, r7
 8010ee6:	b2b6      	uxth	r6, r6
 8010ee8:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8010eec:	4462      	add	r2, ip
 8010eee:	fb15 f507 	smulbb	r5, r5, r7
 8010ef2:	b292      	uxth	r2, r2
 8010ef4:	1c77      	adds	r7, r6, #1
 8010ef6:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8010efa:	1c57      	adds	r7, r2, #1
 8010efc:	445d      	add	r5, fp
 8010efe:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8010f02:	b2ad      	uxth	r5, r5
 8010f04:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8010f08:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8010f0c:	4316      	orrs	r6, r2
 8010f0e:	1c6a      	adds	r2, r5, #1
 8010f10:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8010f14:	096d      	lsrs	r5, r5, #5
 8010f16:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8010f1a:	432e      	orrs	r6, r5
 8010f1c:	f820 6b02 	strh.w	r6, [r0], #2
 8010f20:	e7d0      	b.n	8010ec4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 8010f22:	4573      	cmp	r3, lr
 8010f24:	d38f      	bcc.n	8010e46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8010f26:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8010f2a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010f2c:	fa1f f188 	uxth.w	r1, r8
 8010f30:	1a64      	subs	r4, r4, r1
 8010f32:	881b      	ldrh	r3, [r3, #0]
 8010f34:	b2a4      	uxth	r4, r4
 8010f36:	2c00      	cmp	r4, #0
 8010f38:	eba3 0308 	sub.w	r3, r3, r8
 8010f3c:	bf18      	it	ne
 8010f3e:	2100      	movne	r1, #0
 8010f40:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010f44:	e77f      	b.n	8010e46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8010f46:	4b04      	ldr	r3, [pc, #16]	@ (8010f58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8010f48:	6818      	ldr	r0, [r3, #0]
 8010f4a:	6803      	ldr	r3, [r0, #0]
 8010f4c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010f4e:	4798      	blx	r3
 8010f50:	b00f      	add	sp, #60	@ 0x3c
 8010f52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f56:	bf00      	nop
 8010f58:	20013800 	.word	0x20013800
 8010f5c:	200137fa 	.word	0x200137fa

08010f60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8010f60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f64:	b09f      	sub	sp, #124	@ 0x7c
 8010f66:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8010f6a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8010f6e:	9209      	str	r2, [sp, #36]	@ 0x24
 8010f70:	461d      	mov	r5, r3
 8010f72:	4604      	mov	r4, r0
 8010f74:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8010f76:	2a00      	cmp	r2, #0
 8010f78:	f000 81eb 	beq.w	8011352 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 8010f7c:	6828      	ldr	r0, [r5, #0]
 8010f7e:	6869      	ldr	r1, [r5, #4]
 8010f80:	aa1a      	add	r2, sp, #104	@ 0x68
 8010f82:	c203      	stmia	r2!, {r0, r1}
 8010f84:	6818      	ldr	r0, [r3, #0]
 8010f86:	6859      	ldr	r1, [r3, #4]
 8010f88:	aa1c      	add	r2, sp, #112	@ 0x70
 8010f8a:	c203      	stmia	r2!, {r0, r1}
 8010f8c:	a81a      	add	r0, sp, #104	@ 0x68
 8010f8e:	f7fa ff8f 	bl	800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010f92:	4629      	mov	r1, r5
 8010f94:	a81c      	add	r0, sp, #112	@ 0x70
 8010f96:	f7fa ffcf 	bl	800bf38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8010f9a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8010f9e:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 8010fa2:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 8010fa6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8010faa:	bfd7      	itett	le
 8010fac:	b29a      	uxthle	r2, r3
 8010fae:	2201      	movgt	r2, #1
 8010fb0:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8010fb4:	fb91 f2f2 	sdivle	r2, r1, r2
 8010fb8:	9202      	str	r2, [sp, #8]
 8010fba:	9802      	ldr	r0, [sp, #8]
 8010fbc:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8010fc0:	fb92 f0f0 	sdiv	r0, r2, r0
 8010fc4:	b280      	uxth	r0, r0
 8010fc6:	9010      	str	r0, [sp, #64]	@ 0x40
 8010fc8:	9902      	ldr	r1, [sp, #8]
 8010fca:	9802      	ldr	r0, [sp, #8]
 8010fcc:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8010fce:	4488      	add	r8, r1
 8010fd0:	fb05 2510 	mls	r5, r5, r0, r2
 8010fd4:	fb15 f503 	smulbb	r5, r5, r3
 8010fd8:	f108 38ff 	add.w	r8, r8, #4294967295
 8010fdc:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8010fe0:	fb98 f8f1 	sdiv	r8, r8, r1
 8010fe4:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8010fe8:	440d      	add	r5, r1
 8010fea:	4419      	add	r1, r3
 8010fec:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8010ff0:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8010ff4:	441a      	add	r2, r3
 8010ff6:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8010ffa:	9304      	str	r3, [sp, #16]
 8010ffc:	4b95      	ldr	r3, [pc, #596]	@ (8011254 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8010ffe:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8011002:	6818      	ldr	r0, [r3, #0]
 8011004:	6803      	ldr	r3, [r0, #0]
 8011006:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011008:	4798      	blx	r3
 801100a:	4b93      	ldr	r3, [pc, #588]	@ (8011258 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801100c:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8011010:	881a      	ldrh	r2, [r3, #0]
 8011012:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8011016:	9318      	str	r3, [sp, #96]	@ 0x60
 8011018:	fb02 7101 	mla	r1, r2, r1, r7
 801101c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8011020:	4356      	muls	r6, r2
 8011022:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8011026:	f108 0801 	add.w	r8, r8, #1
 801102a:	920a      	str	r2, [sp, #40]	@ 0x28
 801102c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801102e:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8011032:	930f      	str	r3, [sp, #60]	@ 0x3c
 8011034:	fa1f f888 	uxth.w	r8, r8
 8011038:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801103c:	f108 0204 	add.w	r2, r8, #4
 8011040:	9211      	str	r2, [sp, #68]	@ 0x44
 8011042:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8011044:	4b85      	ldr	r3, [pc, #532]	@ (801125c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8011046:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 801104a:	b2ad      	uxth	r5, r5
 801104c:	9215      	str	r2, [sp, #84]	@ 0x54
 801104e:	2d00      	cmp	r5, #0
 8011050:	9a04      	ldr	r2, [sp, #16]
 8011052:	f04f 0100 	mov.w	r1, #0
 8011056:	bf18      	it	ne
 8011058:	2200      	movne	r2, #0
 801105a:	1b1b      	subs	r3, r3, r4
 801105c:	b292      	uxth	r2, r2
 801105e:	910d      	str	r1, [sp, #52]	@ 0x34
 8011060:	9319      	str	r3, [sp, #100]	@ 0x64
 8011062:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8011064:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8011066:	fa11 f383 	uxtah	r3, r1, r3
 801106a:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801106c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8011070:	3304      	adds	r3, #4
 8011072:	9306      	str	r3, [sp, #24]
 8011074:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8011076:	4283      	cmp	r3, r0
 8011078:	f240 8166 	bls.w	8011348 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801107c:	9902      	ldr	r1, [sp, #8]
 801107e:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8011082:	fbb5 f3f3 	udiv	r3, r5, r3
 8011086:	1acb      	subs	r3, r1, r3
 8011088:	b29b      	uxth	r3, r3
 801108a:	9316      	str	r3, [sp, #88]	@ 0x58
 801108c:	9b06      	ldr	r3, [sp, #24]
 801108e:	9e06      	ldr	r6, [sp, #24]
 8011090:	7859      	ldrb	r1, [r3, #1]
 8011092:	789b      	ldrb	r3, [r3, #2]
 8011094:	7836      	ldrb	r6, [r6, #0]
 8011096:	9612      	str	r6, [sp, #72]	@ 0x48
 8011098:	021b      	lsls	r3, r3, #8
 801109a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801109e:	9906      	ldr	r1, [sp, #24]
 80110a0:	78c9      	ldrb	r1, [r1, #3]
 80110a2:	430b      	orrs	r3, r1
 80110a4:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80110a6:	3601      	adds	r6, #1
 80110a8:	4419      	add	r1, r3
 80110aa:	9605      	str	r6, [sp, #20]
 80110ac:	1c4e      	adds	r6, r1, #1
 80110ae:	9603      	str	r6, [sp, #12]
 80110b0:	7849      	ldrb	r1, [r1, #1]
 80110b2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80110b4:	0209      	lsls	r1, r1, #8
 80110b6:	5cf3      	ldrb	r3, [r6, r3]
 80110b8:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 80110bc:	4319      	orrs	r1, r3
 80110be:	b28b      	uxth	r3, r1
 80110c0:	930c      	str	r3, [sp, #48]	@ 0x30
 80110c2:	2300      	movs	r3, #0
 80110c4:	f04f 0a01 	mov.w	sl, #1
 80110c8:	9307      	str	r3, [sp, #28]
 80110ca:	469c      	mov	ip, r3
 80110cc:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 80110d0:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 80110d4:	46d3      	mov	fp, sl
 80110d6:	4657      	mov	r7, sl
 80110d8:	930e      	str	r3, [sp, #56]	@ 0x38
 80110da:	2d00      	cmp	r5, #0
 80110dc:	d07e      	beq.n	80111dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 80110de:	42af      	cmp	r7, r5
 80110e0:	d26e      	bcs.n	80111c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 80110e2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80110e4:	9201      	str	r2, [sp, #4]
 80110e6:	1bed      	subs	r5, r5, r7
 80110e8:	4283      	cmp	r3, r0
 80110ea:	b2ad      	uxth	r5, r5
 80110ec:	d802      	bhi.n	80110f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 80110ee:	e073      	b.n	80111d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 80110f0:	2b00      	cmp	r3, #0
 80110f2:	d15f      	bne.n	80111b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 80110f4:	9b03      	ldr	r3, [sp, #12]
 80110f6:	785b      	ldrb	r3, [r3, #1]
 80110f8:	f1cb 0207 	rsb	r2, fp, #7
 80110fc:	4093      	lsls	r3, r2
 80110fe:	005b      	lsls	r3, r3, #1
 8011100:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8011104:	9b03      	ldr	r3, [sp, #12]
 8011106:	781b      	ldrb	r3, [r3, #0]
 8011108:	fa43 f30b 	asr.w	r3, r3, fp
 801110c:	b2db      	uxtb	r3, r3
 801110e:	4313      	orrs	r3, r2
 8011110:	f10b 0201 	add.w	r2, fp, #1
 8011114:	fa5f fb82 	uxtb.w	fp, r2
 8011118:	9a03      	ldr	r2, [sp, #12]
 801111a:	f1bb 0f08 	cmp.w	fp, #8
 801111e:	bf15      	itete	ne
 8011120:	3201      	addne	r2, #1
 8011122:	3202      	addeq	r2, #2
 8011124:	9203      	strne	r2, [sp, #12]
 8011126:	9203      	streq	r2, [sp, #12]
 8011128:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801112a:	b29f      	uxth	r7, r3
 801112c:	bf08      	it	eq
 801112e:	f04f 0b00 	moveq.w	fp, #0
 8011132:	42ba      	cmp	r2, r7
 8011134:	d309      	bcc.n	801114a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 8011136:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801113a:	2301      	movs	r3, #1
 801113c:	9a05      	ldr	r2, [sp, #20]
 801113e:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 8011142:	d30e      	bcc.n	8011162 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 8011144:	469a      	mov	sl, r3
 8011146:	2600      	movs	r6, #0
 8011148:	e035      	b.n	80111b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801114a:	9b05      	ldr	r3, [sp, #20]
 801114c:	429f      	cmp	r7, r3
 801114e:	d318      	bcc.n	8011182 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 8011150:	eb04 030a 	add.w	r3, r4, sl
 8011154:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8011158:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 801115c:	f10a 0301 	add.w	r3, sl, #1
 8011160:	b29b      	uxth	r3, r3
 8011162:	9a05      	ldr	r2, [sp, #20]
 8011164:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8011168:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801116a:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801116e:	7116      	strb	r6, [r2, #4]
 8011170:	f10a 0601 	add.w	r6, sl, #1
 8011174:	80d1      	strh	r1, [r2, #6]
 8011176:	7156      	strb	r6, [r2, #5]
 8011178:	9a05      	ldr	r2, [sp, #20]
 801117a:	3201      	adds	r2, #1
 801117c:	b292      	uxth	r2, r2
 801117e:	9205      	str	r2, [sp, #20]
 8011180:	e7e0      	b.n	8011144 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 8011182:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 8011186:	463a      	mov	r2, r7
 8011188:	795b      	ldrb	r3, [r3, #5]
 801118a:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801118e:	4426      	add	r6, r4
 8011190:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8011192:	eb01 0c06 	add.w	ip, r1, r6
 8011196:	f1bc 0f00 	cmp.w	ip, #0
 801119a:	dd07      	ble.n	80111ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801119c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80111a0:	f892 c004 	ldrb.w	ip, [r2, #4]
 80111a4:	f806 cd01 	strb.w	ip, [r6, #-1]!
 80111a8:	88d2      	ldrh	r2, [r2, #6]
 80111aa:	e7f1      	b.n	8011190 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 80111ac:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 80111b0:	b29b      	uxth	r3, r3
 80111b2:	e7c3      	b.n	801113c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 80111b4:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80111b6:	970c      	str	r7, [sp, #48]	@ 0x30
 80111b8:	9a01      	ldr	r2, [sp, #4]
 80111ba:	46b4      	mov	ip, r6
 80111bc:	461f      	mov	r7, r3
 80111be:	e78c      	b.n	80110da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 80111c0:	1b7b      	subs	r3, r7, r5
 80111c2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80111c6:	9201      	str	r2, [sp, #4]
 80111c8:	eb0c 0605 	add.w	r6, ip, r5
 80111cc:	b29b      	uxth	r3, r3
 80111ce:	b2b6      	uxth	r6, r6
 80111d0:	2500      	movs	r5, #0
 80111d2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80111d4:	4282      	cmp	r2, r0
 80111d6:	d88b      	bhi.n	80110f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 80111d8:	9a01      	ldr	r2, [sp, #4]
 80111da:	e74b      	b.n	8011074 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 80111dc:	4297      	cmp	r7, r2
 80111de:	d332      	bcc.n	8011246 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 80111e0:	1abb      	subs	r3, r7, r2
 80111e2:	b29b      	uxth	r3, r3
 80111e4:	9208      	str	r2, [sp, #32]
 80111e6:	9501      	str	r5, [sp, #4]
 80111e8:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80111ea:	29ff      	cmp	r1, #255	@ 0xff
 80111ec:	9908      	ldr	r1, [sp, #32]
 80111ee:	eb0c 0601 	add.w	r6, ip, r1
 80111f2:	d135      	bne.n	8011260 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 80111f4:	f1a0 0e02 	sub.w	lr, r0, #2
 80111f8:	b2b6      	uxth	r6, r6
 80111fa:	45b4      	cmp	ip, r6
 80111fc:	f040 808c 	bne.w	8011318 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 8011200:	9908      	ldr	r1, [sp, #32]
 8011202:	4297      	cmp	r7, r2
 8011204:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8011208:	d3e2      	bcc.n	80111d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801120a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801120c:	9904      	ldr	r1, [sp, #16]
 801120e:	8812      	ldrh	r2, [r2, #0]
 8011210:	1a52      	subs	r2, r2, r1
 8011212:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8011216:	9a07      	ldr	r2, [sp, #28]
 8011218:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801121a:	3201      	adds	r2, #1
 801121c:	428a      	cmp	r2, r1
 801121e:	9207      	str	r2, [sp, #28]
 8011220:	f040 8087 	bne.w	8011332 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 8011224:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8011228:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 801122c:	9b04      	ldr	r3, [sp, #16]
 801122e:	1bed      	subs	r5, r5, r7
 8011230:	b2ad      	uxth	r5, r5
 8011232:	2d00      	cmp	r5, #0
 8011234:	bf08      	it	eq
 8011236:	461a      	moveq	r2, r3
 8011238:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801123a:	bf18      	it	ne
 801123c:	2200      	movne	r2, #0
 801123e:	3301      	adds	r3, #1
 8011240:	930d      	str	r3, [sp, #52]	@ 0x34
 8011242:	b292      	uxth	r2, r2
 8011244:	e70d      	b.n	8011062 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 8011246:	1bd1      	subs	r1, r2, r7
 8011248:	b28b      	uxth	r3, r1
 801124a:	9301      	str	r3, [sp, #4]
 801124c:	9708      	str	r7, [sp, #32]
 801124e:	462b      	mov	r3, r5
 8011250:	e7ca      	b.n	80111e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 8011252:	bf00      	nop
 8011254:	20013800 	.word	0x20013800
 8011258:	200137fa 	.word	0x200137fa
 801125c:	fffff7fb 	.word	0xfffff7fb
 8011260:	b2b6      	uxth	r6, r6
 8011262:	900b      	str	r0, [sp, #44]	@ 0x2c
 8011264:	45b4      	cmp	ip, r6
 8011266:	d0cb      	beq.n	8011200 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 8011268:	f10c 0101 	add.w	r1, ip, #1
 801126c:	44a4      	add	ip, r4
 801126e:	9117      	str	r1, [sp, #92]	@ 0x5c
 8011270:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8011274:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8011276:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801127a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801127c:	f8b1 c000 	ldrh.w	ip, [r1]
 8011280:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8011282:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8011286:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801128a:	fb1e fe01 	smulbb	lr, lr, r1
 801128e:	ea4f 2825 	mov.w	r8, r5, asr #8
 8011292:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8011294:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8011298:	fb08 e801 	mla	r8, r8, r1, lr
 801129c:	ea4f 09ec 	mov.w	r9, ip, asr #3
 80112a0:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80112a2:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80112a6:	fb19 f901 	smulbb	r9, r9, r1
 80112aa:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 80112ae:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80112b0:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80112b4:	fb0e 9e01 	mla	lr, lr, r1, r9
 80112b8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80112bc:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80112be:	fa5f fc8c 	uxtb.w	ip, ip
 80112c2:	fb1c fc01 	smulbb	ip, ip, r1
 80112c6:	00ed      	lsls	r5, r5, #3
 80112c8:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80112ca:	b2ed      	uxtb	r5, r5
 80112cc:	fb05 c501 	mla	r5, r5, r1, ip
 80112d0:	fa1f f888 	uxth.w	r8, r8
 80112d4:	fa1f fe8e 	uxth.w	lr, lr
 80112d8:	b2ad      	uxth	r5, r5
 80112da:	f108 0c01 	add.w	ip, r8, #1
 80112de:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 80112e2:	f10e 0901 	add.w	r9, lr, #1
 80112e6:	f105 0c01 	add.w	ip, r5, #1
 80112ea:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 80112ee:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 80112f2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80112f6:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 80112fa:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80112fe:	ea4c 0808 	orr.w	r8, ip, r8
 8011302:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8011304:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 8011308:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801130c:	ea48 0809 	orr.w	r8, r8, r9
 8011310:	f821 8b02 	strh.w	r8, [r1], #2
 8011314:	910b      	str	r1, [sp, #44]	@ 0x2c
 8011316:	e7a5      	b.n	8011264 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8011318:	f10c 0801 	add.w	r8, ip, #1
 801131c:	44a4      	add	ip, r4
 801131e:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8011320:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8011324:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8011328:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801132c:	fa1f fc88 	uxth.w	ip, r8
 8011330:	e763      	b.n	80111fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 8011332:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8011336:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801133a:	1aad      	subs	r5, r5, r2
 801133c:	b2ad      	uxth	r5, r5
 801133e:	2d00      	cmp	r5, #0
 8011340:	bf18      	it	ne
 8011342:	2200      	movne	r2, #0
 8011344:	9201      	str	r2, [sp, #4]
 8011346:	e744      	b.n	80111d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 8011348:	4b03      	ldr	r3, [pc, #12]	@ (8011358 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801134a:	6818      	ldr	r0, [r3, #0]
 801134c:	6803      	ldr	r3, [r0, #0]
 801134e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011350:	4798      	blx	r3
 8011352:	b01f      	add	sp, #124	@ 0x7c
 8011354:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011358:	20013800 	.word	0x20013800

0801135c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801135c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011360:	b08f      	sub	sp, #60	@ 0x3c
 8011362:	461c      	mov	r4, r3
 8011364:	9203      	str	r2, [sp, #12]
 8011366:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801136a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801136c:	9202      	str	r2, [sp, #8]
 801136e:	460f      	mov	r7, r1
 8011370:	2a00      	cmp	r2, #0
 8011372:	f000 8128 	beq.w	80115c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 8011376:	6820      	ldr	r0, [r4, #0]
 8011378:	6861      	ldr	r1, [r4, #4]
 801137a:	aa0a      	add	r2, sp, #40	@ 0x28
 801137c:	c203      	stmia	r2!, {r0, r1}
 801137e:	6818      	ldr	r0, [r3, #0]
 8011380:	6859      	ldr	r1, [r3, #4]
 8011382:	aa0c      	add	r2, sp, #48	@ 0x30
 8011384:	c203      	stmia	r2!, {r0, r1}
 8011386:	a80a      	add	r0, sp, #40	@ 0x28
 8011388:	f7fa fd92 	bl	800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801138c:	4621      	mov	r1, r4
 801138e:	a80c      	add	r0, sp, #48	@ 0x30
 8011390:	f7fa fdd2 	bl	800bf38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011394:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8011398:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801139c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 80113a0:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80113a4:	bfde      	ittt	le
 80113a6:	b2b3      	uxthle	r3, r6
 80113a8:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80113ac:	fb92 f3f3 	sdivle	r3, r2, r3
 80113b0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80113b4:	bfc8      	it	gt
 80113b6:	2301      	movgt	r3, #1
 80113b8:	fb92 f1f3 	sdiv	r1, r2, r3
 80113bc:	fa1f fc81 	uxth.w	ip, r1
 80113c0:	fb0c 2413 	mls	r4, ip, r3, r2
 80113c4:	fb14 f406 	smulbb	r4, r4, r6
 80113c8:	441d      	add	r5, r3
 80113ca:	4404      	add	r4, r0
 80113cc:	4661      	mov	r1, ip
 80113ce:	3d01      	subs	r5, #1
 80113d0:	b2a4      	uxth	r4, r4
 80113d2:	fb95 f5f3 	sdiv	r5, r5, r3
 80113d6:	b121      	cbz	r1, 80113e2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 80113d8:	9b03      	ldr	r3, [sp, #12]
 80113da:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80113de:	ba1b      	rev	r3, r3
 80113e0:	441f      	add	r7, r3
 80113e2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80113e6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 80113ea:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 80113ee:	4418      	add	r0, r3
 80113f0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80113f4:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 80113f8:	441a      	add	r2, r3
 80113fa:	4b74      	ldr	r3, [pc, #464]	@ (80115cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 80113fc:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8011400:	6818      	ldr	r0, [r3, #0]
 8011402:	6803      	ldr	r3, [r0, #0]
 8011404:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011406:	4798      	blx	r3
 8011408:	4a71      	ldr	r2, [pc, #452]	@ (80115d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801140a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801140e:	8813      	ldrh	r3, [r2, #0]
 8011410:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8011414:	9209      	str	r2, [sp, #36]	@ 0x24
 8011416:	fb03 c101 	mla	r1, r3, r1, ip
 801141a:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801141e:	4373      	muls	r3, r6
 8011420:	b2ad      	uxth	r5, r5
 8011422:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8011426:	00ad      	lsls	r5, r5, #2
 8011428:	2c00      	cmp	r4, #0
 801142a:	9304      	str	r3, [sp, #16]
 801142c:	f105 0304 	add.w	r3, r5, #4
 8011430:	9305      	str	r3, [sp, #20]
 8011432:	bf0c      	ite	eq
 8011434:	46c8      	moveq	r8, r9
 8011436:	f04f 0800 	movne.w	r8, #0
 801143a:	2300      	movs	r3, #0
 801143c:	fa1f f888 	uxth.w	r8, r8
 8011440:	9301      	str	r3, [sp, #4]
 8011442:	9a04      	ldr	r2, [sp, #16]
 8011444:	4282      	cmp	r2, r0
 8011446:	f240 80b9 	bls.w	80115bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801144a:	b95b      	cbnz	r3, 8011464 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801144c:	783a      	ldrb	r2, [r7, #0]
 801144e:	0993      	lsrs	r3, r2, #6
 8011450:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8011454:	9201      	str	r2, [sp, #4]
 8011456:	1e5a      	subs	r2, r3, #1
 8011458:	2a02      	cmp	r2, #2
 801145a:	bf8d      	iteet	hi
 801145c:	787b      	ldrbhi	r3, [r7, #1]
 801145e:	3701      	addls	r7, #1
 8011460:	b29b      	uxthls	r3, r3
 8011462:	3702      	addhi	r7, #2
 8011464:	b184      	cbz	r4, 8011488 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 8011466:	429c      	cmp	r4, r3
 8011468:	bf95      	itete	ls
 801146a:	1b1c      	subls	r4, r3, r4
 801146c:	1ae4      	subhi	r4, r4, r3
 801146e:	fa1f fa84 	uxthls.w	sl, r4
 8011472:	b2a4      	uxthhi	r4, r4
 8011474:	bf87      	ittee	hi
 8011476:	46c4      	movhi	ip, r8
 8011478:	f04f 0a00 	movhi.w	sl, #0
 801147c:	fa1f fc89 	uxthls.w	ip, r9
 8011480:	2400      	movls	r4, #0
 8011482:	4653      	mov	r3, sl
 8011484:	46e0      	mov	r8, ip
 8011486:	e7dc      	b.n	8011442 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 8011488:	2204      	movs	r2, #4
 801148a:	4615      	mov	r5, r2
 801148c:	9905      	ldr	r1, [sp, #20]
 801148e:	9a01      	ldr	r2, [sp, #4]
 8011490:	fb15 1202 	smlabb	r2, r5, r2, r1
 8011494:	9903      	ldr	r1, [sp, #12]
 8011496:	588a      	ldr	r2, [r1, r2]
 8011498:	4543      	cmp	r3, r8
 801149a:	bf27      	ittee	cs
 801149c:	eba3 0a08 	subcs.w	sl, r3, r8
 80114a0:	46c6      	movcs	lr, r8
 80114a2:	eba8 0c03 	subcc.w	ip, r8, r3
 80114a6:	469e      	movcc	lr, r3
 80114a8:	ea4f 6112 	mov.w	r1, r2, lsr #24
 80114ac:	bf27      	ittee	cs
 80114ae:	fa1f fa8a 	uxthcs.w	sl, sl
 80114b2:	46a4      	movcs	ip, r4
 80114b4:	fa1f fc8c 	uxthcc.w	ip, ip
 80114b8:	46a2      	movcc	sl, r4
 80114ba:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 80114be:	2900      	cmp	r1, #0
 80114c0:	d066      	beq.n	8011590 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 80114c2:	29ff      	cmp	r1, #255	@ 0xff
 80114c4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80114c8:	d114      	bne.n	80114f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 80114ca:	9d02      	ldr	r5, [sp, #8]
 80114cc:	2dff      	cmp	r5, #255	@ 0xff
 80114ce:	d111      	bne.n	80114f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 80114d0:	0951      	lsrs	r1, r2, #5
 80114d2:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80114d6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80114da:	f026 0607 	bic.w	r6, r6, #7
 80114de:	430e      	orrs	r6, r1
 80114e0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80114e4:	4316      	orrs	r6, r2
 80114e6:	b2b6      	uxth	r6, r6
 80114e8:	4486      	add	lr, r0
 80114ea:	4586      	cmp	lr, r0
 80114ec:	d051      	beq.n	8011592 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80114ee:	f820 6b02 	strh.w	r6, [r0], #2
 80114f2:	e7fa      	b.n	80114ea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 80114f4:	9d02      	ldr	r5, [sp, #8]
 80114f6:	4369      	muls	r1, r5
 80114f8:	1c4d      	adds	r5, r1, #1
 80114fa:	eb05 2521 	add.w	r5, r5, r1, asr #8
 80114fe:	122d      	asrs	r5, r5, #8
 8011500:	ea6f 0b05 	mvn.w	fp, r5
 8011504:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8011508:	b2ad      	uxth	r5, r5
 801150a:	b2f6      	uxtb	r6, r6
 801150c:	b2d2      	uxtb	r2, r2
 801150e:	fb11 f105 	smulbb	r1, r1, r5
 8011512:	fb16 f605 	smulbb	r6, r6, r5
 8011516:	fb12 f205 	smulbb	r2, r2, r5
 801151a:	b289      	uxth	r1, r1
 801151c:	b2b6      	uxth	r6, r6
 801151e:	b292      	uxth	r2, r2
 8011520:	9106      	str	r1, [sp, #24]
 8011522:	9607      	str	r6, [sp, #28]
 8011524:	9208      	str	r2, [sp, #32]
 8011526:	4486      	add	lr, r0
 8011528:	fa5f fb8b 	uxtb.w	fp, fp
 801152c:	4586      	cmp	lr, r0
 801152e:	d030      	beq.n	8011592 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8011530:	8802      	ldrh	r2, [r0, #0]
 8011532:	9906      	ldr	r1, [sp, #24]
 8011534:	1216      	asrs	r6, r2, #8
 8011536:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801153a:	10d5      	asrs	r5, r2, #3
 801153c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8011540:	fb06 160b 	mla	r6, r6, fp, r1
 8011544:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8011548:	9907      	ldr	r1, [sp, #28]
 801154a:	00d2      	lsls	r2, r2, #3
 801154c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8011550:	fb05 150b 	mla	r5, r5, fp, r1
 8011554:	b2d2      	uxtb	r2, r2
 8011556:	9908      	ldr	r1, [sp, #32]
 8011558:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801155c:	b2b6      	uxth	r6, r6
 801155e:	fb02 120b 	mla	r2, r2, fp, r1
 8011562:	b292      	uxth	r2, r2
 8011564:	1c71      	adds	r1, r6, #1
 8011566:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801156a:	1c51      	adds	r1, r2, #1
 801156c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8011570:	b2ad      	uxth	r5, r5
 8011572:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8011576:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801157a:	4316      	orrs	r6, r2
 801157c:	1c6a      	adds	r2, r5, #1
 801157e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8011582:	096d      	lsrs	r5, r5, #5
 8011584:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8011588:	432e      	orrs	r6, r5
 801158a:	f820 6b02 	strh.w	r6, [r0], #2
 801158e:	e7cd      	b.n	801152c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8011590:	4470      	add	r0, lr
 8011592:	4543      	cmp	r3, r8
 8011594:	f4ff af75 	bcc.w	8011482 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8011598:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801159c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801159e:	fa1f fc89 	uxth.w	ip, r9
 80115a2:	eba4 040c 	sub.w	r4, r4, ip
 80115a6:	881b      	ldrh	r3, [r3, #0]
 80115a8:	b2a4      	uxth	r4, r4
 80115aa:	2c00      	cmp	r4, #0
 80115ac:	eba3 0309 	sub.w	r3, r3, r9
 80115b0:	bf18      	it	ne
 80115b2:	f04f 0c00 	movne.w	ip, #0
 80115b6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80115ba:	e762      	b.n	8011482 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 80115bc:	4b03      	ldr	r3, [pc, #12]	@ (80115cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 80115be:	6818      	ldr	r0, [r3, #0]
 80115c0:	6803      	ldr	r3, [r0, #0]
 80115c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80115c4:	4798      	blx	r3
 80115c6:	b00f      	add	sp, #60	@ 0x3c
 80115c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80115cc:	20013800 	.word	0x20013800
 80115d0:	200137fa 	.word	0x200137fa

080115d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80115d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80115d8:	b093      	sub	sp, #76	@ 0x4c
 80115da:	461c      	mov	r4, r3
 80115dc:	9205      	str	r2, [sp, #20]
 80115de:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 80115e2:	9101      	str	r1, [sp, #4]
 80115e4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80115e6:	9202      	str	r2, [sp, #8]
 80115e8:	2a00      	cmp	r2, #0
 80115ea:	f000 812c 	beq.w	8011846 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 80115ee:	6820      	ldr	r0, [r4, #0]
 80115f0:	6861      	ldr	r1, [r4, #4]
 80115f2:	aa0e      	add	r2, sp, #56	@ 0x38
 80115f4:	c203      	stmia	r2!, {r0, r1}
 80115f6:	6818      	ldr	r0, [r3, #0]
 80115f8:	6859      	ldr	r1, [r3, #4]
 80115fa:	aa10      	add	r2, sp, #64	@ 0x40
 80115fc:	c203      	stmia	r2!, {r0, r1}
 80115fe:	a80e      	add	r0, sp, #56	@ 0x38
 8011600:	f7fa fc56 	bl	800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011604:	4621      	mov	r1, r4
 8011606:	a810      	add	r0, sp, #64	@ 0x40
 8011608:	f7fa fc96 	bl	800bf38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801160c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8011610:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8011614:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8011618:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801161c:	bfde      	ittt	le
 801161e:	b2b3      	uxthle	r3, r6
 8011620:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8011624:	fb92 f3f3 	sdivle	r3, r2, r3
 8011628:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801162c:	bfc8      	it	gt
 801162e:	2301      	movgt	r3, #1
 8011630:	fb92 f1f3 	sdiv	r1, r2, r3
 8011634:	fa1f fc81 	uxth.w	ip, r1
 8011638:	fb0c 2413 	mls	r4, ip, r3, r2
 801163c:	fb14 f406 	smulbb	r4, r4, r6
 8011640:	441d      	add	r5, r3
 8011642:	4404      	add	r4, r0
 8011644:	4661      	mov	r1, ip
 8011646:	3d01      	subs	r5, #1
 8011648:	b2a4      	uxth	r4, r4
 801164a:	fb95 f5f3 	sdiv	r5, r5, r3
 801164e:	b131      	cbz	r1, 801165e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 8011650:	9b05      	ldr	r3, [sp, #20]
 8011652:	9901      	ldr	r1, [sp, #4]
 8011654:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8011658:	ba1b      	rev	r3, r3
 801165a:	4419      	add	r1, r3
 801165c:	9101      	str	r1, [sp, #4]
 801165e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8011662:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8011666:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 801166a:	4418      	add	r0, r3
 801166c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8011670:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8011674:	441a      	add	r2, r3
 8011676:	4b75      	ldr	r3, [pc, #468]	@ (801184c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8011678:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 801167c:	6818      	ldr	r0, [r3, #0]
 801167e:	6803      	ldr	r3, [r0, #0]
 8011680:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011682:	4798      	blx	r3
 8011684:	4972      	ldr	r1, [pc, #456]	@ (8011850 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8011686:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 801168a:	880b      	ldrh	r3, [r1, #0]
 801168c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8011690:	910d      	str	r1, [sp, #52]	@ 0x34
 8011692:	fb03 c202 	mla	r2, r3, r2, ip
 8011696:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801169a:	4373      	muls	r3, r6
 801169c:	b2ad      	uxth	r5, r5
 801169e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80116a2:	00ad      	lsls	r5, r5, #2
 80116a4:	9308      	str	r3, [sp, #32]
 80116a6:	1d2b      	adds	r3, r5, #4
 80116a8:	9309      	str	r3, [sp, #36]	@ 0x24
 80116aa:	9b02      	ldr	r3, [sp, #8]
 80116ac:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80116b0:	9106      	str	r1, [sp, #24]
 80116b2:	43da      	mvns	r2, r3
 80116b4:	2c00      	cmp	r4, #0
 80116b6:	bf0c      	ite	eq
 80116b8:	46dc      	moveq	ip, fp
 80116ba:	f04f 0c00 	movne.w	ip, #0
 80116be:	2300      	movs	r3, #0
 80116c0:	b2d2      	uxtb	r2, r2
 80116c2:	fa1f fc8c 	uxth.w	ip, ip
 80116c6:	9303      	str	r3, [sp, #12]
 80116c8:	9207      	str	r2, [sp, #28]
 80116ca:	9a08      	ldr	r2, [sp, #32]
 80116cc:	4282      	cmp	r2, r0
 80116ce:	f240 80b5 	bls.w	801183c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 80116d2:	b963      	cbnz	r3, 80116ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 80116d4:	9b01      	ldr	r3, [sp, #4]
 80116d6:	781a      	ldrb	r2, [r3, #0]
 80116d8:	0993      	lsrs	r3, r2, #6
 80116da:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80116de:	9203      	str	r2, [sp, #12]
 80116e0:	1e5a      	subs	r2, r3, #1
 80116e2:	2a02      	cmp	r2, #2
 80116e4:	d815      	bhi.n	8011712 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 80116e6:	9a01      	ldr	r2, [sp, #4]
 80116e8:	3201      	adds	r2, #1
 80116ea:	9201      	str	r2, [sp, #4]
 80116ec:	b29b      	uxth	r3, r3
 80116ee:	b1b4      	cbz	r4, 801171e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 80116f0:	429c      	cmp	r4, r3
 80116f2:	bf95      	itete	ls
 80116f4:	1b1c      	subls	r4, r3, r4
 80116f6:	1ae4      	subhi	r4, r4, r3
 80116f8:	fa1f f884 	uxthls.w	r8, r4
 80116fc:	b2a4      	uxthhi	r4, r4
 80116fe:	bf87      	ittee	hi
 8011700:	4666      	movhi	r6, ip
 8011702:	f04f 0800 	movhi.w	r8, #0
 8011706:	fa1f f68b 	uxthls.w	r6, fp
 801170a:	2400      	movls	r4, #0
 801170c:	4643      	mov	r3, r8
 801170e:	46b4      	mov	ip, r6
 8011710:	e7db      	b.n	80116ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 8011712:	9a01      	ldr	r2, [sp, #4]
 8011714:	9b01      	ldr	r3, [sp, #4]
 8011716:	3202      	adds	r2, #2
 8011718:	785b      	ldrb	r3, [r3, #1]
 801171a:	9201      	str	r2, [sp, #4]
 801171c:	e7e7      	b.n	80116ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801171e:	2203      	movs	r2, #3
 8011720:	4615      	mov	r5, r2
 8011722:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8011724:	9a03      	ldr	r2, [sp, #12]
 8011726:	fb15 1202 	smlabb	r2, r5, r2, r1
 801172a:	9905      	ldr	r1, [sp, #20]
 801172c:	4563      	cmp	r3, ip
 801172e:	eb01 0502 	add.w	r5, r1, r2
 8011732:	9902      	ldr	r1, [sp, #8]
 8011734:	bf29      	itett	cs
 8011736:	eba3 080c 	subcs.w	r8, r3, ip
 801173a:	ebac 0603 	subcc.w	r6, ip, r3
 801173e:	fa1f f888 	uxthcs.w	r8, r8
 8011742:	46e1      	movcs	r9, ip
 8011744:	bf2f      	iteee	cs
 8011746:	4626      	movcs	r6, r4
 8011748:	b2b6      	uxthcc	r6, r6
 801174a:	4699      	movcc	r9, r3
 801174c:	46a0      	movcc	r8, r4
 801174e:	29ff      	cmp	r1, #255	@ 0xff
 8011750:	d04a      	beq.n	80117e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 8011752:	9f06      	ldr	r7, [sp, #24]
 8011754:	78a9      	ldrb	r1, [r5, #2]
 8011756:	9004      	str	r0, [sp, #16]
 8011758:	4379      	muls	r1, r7
 801175a:	910a      	str	r1, [sp, #40]	@ 0x28
 801175c:	7869      	ldrb	r1, [r5, #1]
 801175e:	4379      	muls	r1, r7
 8011760:	910b      	str	r1, [sp, #44]	@ 0x2c
 8011762:	9905      	ldr	r1, [sp, #20]
 8011764:	5c8a      	ldrb	r2, [r1, r2]
 8011766:	437a      	muls	r2, r7
 8011768:	920c      	str	r2, [sp, #48]	@ 0x30
 801176a:	46ca      	mov	sl, r9
 801176c:	f1ba 0f00 	cmp.w	sl, #0
 8011770:	d03d      	beq.n	80117ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 8011772:	9a04      	ldr	r2, [sp, #16]
 8011774:	9f07      	ldr	r7, [sp, #28]
 8011776:	8812      	ldrh	r2, [r2, #0]
 8011778:	1215      	asrs	r5, r2, #8
 801177a:	46be      	mov	lr, r7
 801177c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8011780:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8011782:	10d1      	asrs	r1, r2, #3
 8011784:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8011788:	fb05 750e 	mla	r5, r5, lr, r7
 801178c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8011790:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8011792:	00d2      	lsls	r2, r2, #3
 8011794:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8011798:	fb01 710e 	mla	r1, r1, lr, r7
 801179c:	b2d2      	uxtb	r2, r2
 801179e:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80117a0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80117a4:	b2ad      	uxth	r5, r5
 80117a6:	fb02 720e 	mla	r2, r2, lr, r7
 80117aa:	b292      	uxth	r2, r2
 80117ac:	f105 0e01 	add.w	lr, r5, #1
 80117b0:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80117b4:	f102 0e01 	add.w	lr, r2, #1
 80117b8:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 80117bc:	b289      	uxth	r1, r1
 80117be:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80117c2:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80117c6:	4315      	orrs	r5, r2
 80117c8:	1c4a      	adds	r2, r1, #1
 80117ca:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80117ce:	0949      	lsrs	r1, r1, #5
 80117d0:	9a04      	ldr	r2, [sp, #16]
 80117d2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80117d6:	430d      	orrs	r5, r1
 80117d8:	f822 5b02 	strh.w	r5, [r2], #2
 80117dc:	f10a 3aff 	add.w	sl, sl, #4294967295
 80117e0:	9204      	str	r2, [sp, #16]
 80117e2:	fa1f fa8a 	uxth.w	sl, sl
 80117e6:	e7c1      	b.n	801176c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 80117e8:	4649      	mov	r1, r9
 80117ea:	4686      	mov	lr, r0
 80117ec:	b999      	cbnz	r1, 8011816 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 80117ee:	4563      	cmp	r3, ip
 80117f0:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 80117f4:	d38a      	bcc.n	801170c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 80117f6:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 80117fa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80117fc:	fa1f f68b 	uxth.w	r6, fp
 8011800:	1ba4      	subs	r4, r4, r6
 8011802:	881b      	ldrh	r3, [r3, #0]
 8011804:	b2a4      	uxth	r4, r4
 8011806:	2c00      	cmp	r4, #0
 8011808:	eba3 030b 	sub.w	r3, r3, fp
 801180c:	bf18      	it	ne
 801180e:	2600      	movne	r6, #0
 8011810:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011814:	e77a      	b.n	801170c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8011816:	78aa      	ldrb	r2, [r5, #2]
 8011818:	4f0e      	ldr	r7, [pc, #56]	@ (8011854 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801181a:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801181e:	786a      	ldrb	r2, [r5, #1]
 8011820:	00d2      	lsls	r2, r2, #3
 8011822:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8011826:	ea4a 0202 	orr.w	r2, sl, r2
 801182a:	f895 a000 	ldrb.w	sl, [r5]
 801182e:	3901      	subs	r1, #1
 8011830:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8011834:	f82e 2b02 	strh.w	r2, [lr], #2
 8011838:	b289      	uxth	r1, r1
 801183a:	e7d7      	b.n	80117ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801183c:	4b03      	ldr	r3, [pc, #12]	@ (801184c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801183e:	6818      	ldr	r0, [r3, #0]
 8011840:	6803      	ldr	r3, [r0, #0]
 8011842:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011844:	4798      	blx	r3
 8011846:	b013      	add	sp, #76	@ 0x4c
 8011848:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801184c:	20013800 	.word	0x20013800
 8011850:	200137fa 	.word	0x200137fa
 8011854:	fffff800 	.word	0xfffff800

08011858 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8011858:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801185c:	b09d      	sub	sp, #116	@ 0x74
 801185e:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 8011862:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 8011866:	920e      	str	r2, [sp, #56]	@ 0x38
 8011868:	461c      	mov	r4, r3
 801186a:	4683      	mov	fp, r0
 801186c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801186e:	2a00      	cmp	r2, #0
 8011870:	f000 81e0 	beq.w	8011c34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 8011874:	6820      	ldr	r0, [r4, #0]
 8011876:	6861      	ldr	r1, [r4, #4]
 8011878:	aa18      	add	r2, sp, #96	@ 0x60
 801187a:	c203      	stmia	r2!, {r0, r1}
 801187c:	6818      	ldr	r0, [r3, #0]
 801187e:	6859      	ldr	r1, [r3, #4]
 8011880:	aa1a      	add	r2, sp, #104	@ 0x68
 8011882:	c203      	stmia	r2!, {r0, r1}
 8011884:	a818      	add	r0, sp, #96	@ 0x60
 8011886:	f7fa fb13 	bl	800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801188a:	4621      	mov	r1, r4
 801188c:	a81a      	add	r0, sp, #104	@ 0x68
 801188e:	f7fa fb53 	bl	800bf38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011892:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 8011896:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 801189a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801189e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80118a2:	bfd7      	itett	le
 80118a4:	b29a      	uxthle	r2, r3
 80118a6:	2201      	movgt	r2, #1
 80118a8:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80118ac:	fb91 f2f2 	sdivle	r2, r1, r2
 80118b0:	9202      	str	r2, [sp, #8]
 80118b2:	9802      	ldr	r0, [sp, #8]
 80118b4:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 80118b8:	fb92 f0f0 	sdiv	r0, r2, r0
 80118bc:	b280      	uxth	r0, r0
 80118be:	900f      	str	r0, [sp, #60]	@ 0x3c
 80118c0:	9902      	ldr	r1, [sp, #8]
 80118c2:	9802      	ldr	r0, [sp, #8]
 80118c4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80118c6:	440c      	add	r4, r1
 80118c8:	fb05 2510 	mls	r5, r5, r0, r2
 80118cc:	fb15 f503 	smulbb	r5, r5, r3
 80118d0:	3c01      	subs	r4, #1
 80118d2:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 80118d6:	fb94 f4f1 	sdiv	r4, r4, r1
 80118da:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 80118de:	440d      	add	r5, r1
 80118e0:	4419      	add	r1, r3
 80118e2:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 80118e6:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 80118ea:	441a      	add	r2, r3
 80118ec:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 80118f0:	9306      	str	r3, [sp, #24]
 80118f2:	4bb3      	ldr	r3, [pc, #716]	@ (8011bc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 80118f4:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 80118f8:	6818      	ldr	r0, [r3, #0]
 80118fa:	6803      	ldr	r3, [r0, #0]
 80118fc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80118fe:	4798      	blx	r3
 8011900:	4bb0      	ldr	r3, [pc, #704]	@ (8011bc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 8011902:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8011906:	881a      	ldrh	r2, [r3, #0]
 8011908:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 801190c:	9316      	str	r3, [sp, #88]	@ 0x58
 801190e:	fb02 7101 	mla	r1, r2, r1, r7
 8011912:	3401      	adds	r4, #1
 8011914:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8011918:	b2a4      	uxth	r4, r4
 801191a:	4356      	muls	r6, r2
 801191c:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8011920:	00a4      	lsls	r4, r4, #2
 8011922:	920a      	str	r2, [sp, #40]	@ 0x28
 8011924:	1d22      	adds	r2, r4, #4
 8011926:	b2ad      	uxth	r5, r5
 8011928:	9213      	str	r2, [sp, #76]	@ 0x4c
 801192a:	4ba7      	ldr	r3, [pc, #668]	@ (8011bc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801192c:	9a06      	ldr	r2, [sp, #24]
 801192e:	2d00      	cmp	r5, #0
 8011930:	bf0c      	ite	eq
 8011932:	4611      	moveq	r1, r2
 8011934:	2100      	movne	r1, #0
 8011936:	2200      	movs	r2, #0
 8011938:	eba3 030b 	sub.w	r3, r3, fp
 801193c:	b289      	uxth	r1, r1
 801193e:	920d      	str	r2, [sp, #52]	@ 0x34
 8011940:	9317      	str	r3, [sp, #92]	@ 0x5c
 8011942:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8011944:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8011946:	fa12 f383 	uxtah	r3, r2, r3
 801194a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801194c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8011950:	3304      	adds	r3, #4
 8011952:	9308      	str	r3, [sp, #32]
 8011954:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8011956:	4543      	cmp	r3, r8
 8011958:	f240 8167 	bls.w	8011c2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801195c:	9a02      	ldr	r2, [sp, #8]
 801195e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8011962:	fbb5 f3f3 	udiv	r3, r5, r3
 8011966:	1ad3      	subs	r3, r2, r3
 8011968:	b29b      	uxth	r3, r3
 801196a:	9314      	str	r3, [sp, #80]	@ 0x50
 801196c:	9b08      	ldr	r3, [sp, #32]
 801196e:	9808      	ldr	r0, [sp, #32]
 8011970:	785a      	ldrb	r2, [r3, #1]
 8011972:	789b      	ldrb	r3, [r3, #2]
 8011974:	7800      	ldrb	r0, [r0, #0]
 8011976:	9010      	str	r0, [sp, #64]	@ 0x40
 8011978:	021b      	lsls	r3, r3, #8
 801197a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801197e:	9a08      	ldr	r2, [sp, #32]
 8011980:	78d2      	ldrb	r2, [r2, #3]
 8011982:	4313      	orrs	r3, r2
 8011984:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8011986:	3001      	adds	r0, #1
 8011988:	441a      	add	r2, r3
 801198a:	9007      	str	r0, [sp, #28]
 801198c:	1c50      	adds	r0, r2, #1
 801198e:	9005      	str	r0, [sp, #20]
 8011990:	7852      	ldrb	r2, [r2, #1]
 8011992:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8011994:	0212      	lsls	r2, r2, #8
 8011996:	5cc3      	ldrb	r3, [r0, r3]
 8011998:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801199c:	431a      	orrs	r2, r3
 801199e:	b293      	uxth	r3, r2
 80119a0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80119a2:	2300      	movs	r3, #0
 80119a4:	9309      	str	r3, [sp, #36]	@ 0x24
 80119a6:	2301      	movs	r3, #1
 80119a8:	9301      	str	r3, [sp, #4]
 80119aa:	9304      	str	r3, [sp, #16]
 80119ac:	2300      	movs	r3, #0
 80119ae:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 80119b2:	9303      	str	r3, [sp, #12]
 80119b4:	f04f 0e01 	mov.w	lr, #1
 80119b8:	2d00      	cmp	r5, #0
 80119ba:	d07c      	beq.n	8011ab6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 80119bc:	45ae      	cmp	lr, r5
 80119be:	d26b      	bcs.n	8011a98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 80119c0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80119c2:	eba5 050e 	sub.w	r5, r5, lr
 80119c6:	4543      	cmp	r3, r8
 80119c8:	b2ad      	uxth	r5, r5
 80119ca:	460c      	mov	r4, r1
 80119cc:	d802      	bhi.n	80119d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 80119ce:	e070      	b.n	8011ab2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 80119d0:	2b00      	cmp	r3, #0
 80119d2:	d15c      	bne.n	8011a8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80119d4:	9b05      	ldr	r3, [sp, #20]
 80119d6:	9a04      	ldr	r2, [sp, #16]
 80119d8:	785b      	ldrb	r3, [r3, #1]
 80119da:	9904      	ldr	r1, [sp, #16]
 80119dc:	f1c2 0207 	rsb	r2, r2, #7
 80119e0:	4093      	lsls	r3, r2
 80119e2:	005b      	lsls	r3, r3, #1
 80119e4:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 80119e8:	9b05      	ldr	r3, [sp, #20]
 80119ea:	781b      	ldrb	r3, [r3, #0]
 80119ec:	410b      	asrs	r3, r1
 80119ee:	3101      	adds	r1, #1
 80119f0:	b2c9      	uxtb	r1, r1
 80119f2:	2908      	cmp	r1, #8
 80119f4:	9104      	str	r1, [sp, #16]
 80119f6:	9905      	ldr	r1, [sp, #20]
 80119f8:	bf0a      	itet	eq
 80119fa:	3102      	addeq	r1, #2
 80119fc:	3101      	addne	r1, #1
 80119fe:	9105      	streq	r1, [sp, #20]
 8011a00:	b2db      	uxtb	r3, r3
 8011a02:	bf0a      	itet	eq
 8011a04:	2100      	moveq	r1, #0
 8011a06:	9105      	strne	r1, [sp, #20]
 8011a08:	9104      	streq	r1, [sp, #16]
 8011a0a:	4313      	orrs	r3, r2
 8011a0c:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8011a0e:	b29a      	uxth	r2, r3
 8011a10:	4291      	cmp	r1, r2
 8011a12:	d30a      	bcc.n	8011a2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8011a14:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8011a18:	2301      	movs	r3, #1
 8011a1a:	9907      	ldr	r1, [sp, #28]
 8011a1c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8011a20:	d30f      	bcc.n	8011a42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8011a22:	2100      	movs	r1, #0
 8011a24:	9301      	str	r3, [sp, #4]
 8011a26:	9103      	str	r1, [sp, #12]
 8011a28:	e032      	b.n	8011a90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 8011a2a:	9b07      	ldr	r3, [sp, #28]
 8011a2c:	429a      	cmp	r2, r3
 8011a2e:	d318      	bcc.n	8011a62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 8011a30:	9b01      	ldr	r3, [sp, #4]
 8011a32:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 8011a36:	445b      	add	r3, fp
 8011a38:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8011a3c:	9b01      	ldr	r3, [sp, #4]
 8011a3e:	3301      	adds	r3, #1
 8011a40:	b29b      	uxth	r3, r3
 8011a42:	9907      	ldr	r1, [sp, #28]
 8011a44:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8011a48:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8011a4c:	7108      	strb	r0, [r1, #4]
 8011a4e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8011a50:	80c8      	strh	r0, [r1, #6]
 8011a52:	9801      	ldr	r0, [sp, #4]
 8011a54:	3001      	adds	r0, #1
 8011a56:	7148      	strb	r0, [r1, #5]
 8011a58:	9907      	ldr	r1, [sp, #28]
 8011a5a:	3101      	adds	r1, #1
 8011a5c:	b289      	uxth	r1, r1
 8011a5e:	9107      	str	r1, [sp, #28]
 8011a60:	e7df      	b.n	8011a22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8011a62:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8011a66:	4611      	mov	r1, r2
 8011a68:	795b      	ldrb	r3, [r3, #5]
 8011a6a:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 8011a6e:	4458      	add	r0, fp
 8011a70:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 8011a72:	4406      	add	r6, r0
 8011a74:	2e00      	cmp	r6, #0
 8011a76:	dd06      	ble.n	8011a86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 8011a78:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8011a7c:	790e      	ldrb	r6, [r1, #4]
 8011a7e:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8011a82:	88c9      	ldrh	r1, [r1, #6]
 8011a84:	e7f4      	b.n	8011a70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 8011a86:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 8011a8a:	b29b      	uxth	r3, r3
 8011a8c:	e7c5      	b.n	8011a1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 8011a8e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8011a90:	920b      	str	r2, [sp, #44]	@ 0x2c
 8011a92:	4621      	mov	r1, r4
 8011a94:	469e      	mov	lr, r3
 8011a96:	e78f      	b.n	80119b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 8011a98:	9a03      	ldr	r2, [sp, #12]
 8011a9a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8011a9e:	442a      	add	r2, r5
 8011aa0:	ebae 0305 	sub.w	r3, lr, r5
 8011aa4:	b292      	uxth	r2, r2
 8011aa6:	b29b      	uxth	r3, r3
 8011aa8:	9203      	str	r2, [sp, #12]
 8011aaa:	2500      	movs	r5, #0
 8011aac:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8011aae:	4542      	cmp	r2, r8
 8011ab0:	d88e      	bhi.n	80119d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 8011ab2:	4621      	mov	r1, r4
 8011ab4:	e74e      	b.n	8011954 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 8011ab6:	458e      	cmp	lr, r1
 8011ab8:	bf29      	itett	cs
 8011aba:	ebae 0301 	subcs.w	r3, lr, r1
 8011abe:	eba1 040e 	subcc.w	r4, r1, lr
 8011ac2:	b29b      	uxthcs	r3, r3
 8011ac4:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8011ac6:	bf2f      	iteee	cs
 8011ac8:	462c      	movcs	r4, r5
 8011aca:	b2a4      	uxthcc	r4, r4
 8011acc:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 8011ad0:	462b      	movcc	r3, r5
 8011ad2:	f04f 0900 	mov.w	r9, #0
 8011ad6:	9a03      	ldr	r2, [sp, #12]
 8011ad8:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8011ada:	444a      	add	r2, r9
 8011adc:	4548      	cmp	r0, r9
 8011ade:	b292      	uxth	r2, r2
 8011ae0:	d074      	beq.n	8011bcc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 8011ae2:	445a      	add	r2, fp
 8011ae4:	2004      	movs	r0, #4
 8011ae6:	4605      	mov	r5, r0
 8011ae8:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 8011aec:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8011aee:	fb15 0202 	smlabb	r2, r5, r2, r0
 8011af2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8011af4:	5880      	ldr	r0, [r0, r2]
 8011af6:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8011afa:	d014      	beq.n	8011b26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8011afc:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8011b00:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8011b04:	d112      	bne.n	8011b2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8011b06:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8011b08:	2aff      	cmp	r2, #255	@ 0xff
 8011b0a:	d10f      	bne.n	8011b2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8011b0c:	0942      	lsrs	r2, r0, #5
 8011b0e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8011b12:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8011b16:	f025 0507 	bic.w	r5, r5, #7
 8011b1a:	4315      	orrs	r5, r2
 8011b1c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8011b20:	4305      	orrs	r5, r0
 8011b22:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8011b26:	f109 0901 	add.w	r9, r9, #1
 8011b2a:	e7d4      	b.n	8011ad6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 8011b2c:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8011b30:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8011b34:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 8011b38:	9215      	str	r2, [sp, #84]	@ 0x54
 8011b3a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8011b3c:	fb02 fa0a 	mul.w	sl, r2, sl
 8011b40:	f10a 0201 	add.w	r2, sl, #1
 8011b44:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8011b48:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011b4c:	1212      	asrs	r2, r2, #8
 8011b4e:	fa1f fa82 	uxth.w	sl, r2
 8011b52:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8011b56:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011b5a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011b5e:	43d2      	mvns	r2, r2
 8011b60:	b2d2      	uxtb	r2, r2
 8011b62:	fb16 f60a 	smulbb	r6, r6, sl
 8011b66:	fa5f fc8c 	uxtb.w	ip, ip
 8011b6a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8011b6e:	b2c0      	uxtb	r0, r0
 8011b70:	fb07 6702 	mla	r7, r7, r2, r6
 8011b74:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8011b78:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8011b7a:	fb10 f00a 	smulbb	r0, r0, sl
 8011b7e:	fb0c 0002 	mla	r0, ip, r2, r0
 8011b82:	b2ed      	uxtb	r5, r5
 8011b84:	b2bf      	uxth	r7, r7
 8011b86:	fb15 f50a 	smulbb	r5, r5, sl
 8011b8a:	b280      	uxth	r0, r0
 8011b8c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8011b90:	fb06 5602 	mla	r6, r6, r2, r5
 8011b94:	1c7a      	adds	r2, r7, #1
 8011b96:	1c45      	adds	r5, r0, #1
 8011b98:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011b9c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011ba0:	b2b6      	uxth	r6, r6
 8011ba2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011ba6:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8011baa:	432f      	orrs	r7, r5
 8011bac:	1c75      	adds	r5, r6, #1
 8011bae:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8011bb2:	096d      	lsrs	r5, r5, #5
 8011bb4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8011bb8:	432f      	orrs	r7, r5
 8011bba:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8011bbe:	e7b2      	b.n	8011b26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8011bc0:	20013800 	.word	0x20013800
 8011bc4:	200137fa 	.word	0x200137fa
 8011bc8:	fffff7fb 	.word	0xfffff7fb
 8011bcc:	9203      	str	r2, [sp, #12]
 8011bce:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8011bd0:	458e      	cmp	lr, r1
 8011bd2:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8011bd6:	f4ff af68 	bcc.w	8011aaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 8011bda:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8011bdc:	9906      	ldr	r1, [sp, #24]
 8011bde:	8812      	ldrh	r2, [r2, #0]
 8011be0:	1a52      	subs	r2, r2, r1
 8011be2:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8011be6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8011be8:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8011bea:	3201      	adds	r2, #1
 8011bec:	428a      	cmp	r2, r1
 8011bee:	9209      	str	r2, [sp, #36]	@ 0x24
 8011bf0:	d111      	bne.n	8011c16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 8011bf2:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 8011bf6:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 8011bfa:	9b06      	ldr	r3, [sp, #24]
 8011bfc:	eba5 0509 	sub.w	r5, r5, r9
 8011c00:	b2ad      	uxth	r5, r5
 8011c02:	2d00      	cmp	r5, #0
 8011c04:	bf08      	it	eq
 8011c06:	4619      	moveq	r1, r3
 8011c08:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8011c0a:	bf18      	it	ne
 8011c0c:	2100      	movne	r1, #0
 8011c0e:	3301      	adds	r3, #1
 8011c10:	930d      	str	r3, [sp, #52]	@ 0x34
 8011c12:	b289      	uxth	r1, r1
 8011c14:	e695      	b.n	8011942 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 8011c16:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8011c1a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8011c1e:	1b2d      	subs	r5, r5, r4
 8011c20:	b2ad      	uxth	r5, r5
 8011c22:	2d00      	cmp	r5, #0
 8011c24:	bf18      	it	ne
 8011c26:	2400      	movne	r4, #0
 8011c28:	e740      	b.n	8011aac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 8011c2a:	4b04      	ldr	r3, [pc, #16]	@ (8011c3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8011c2c:	6818      	ldr	r0, [r3, #0]
 8011c2e:	6803      	ldr	r3, [r0, #0]
 8011c30:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011c32:	4798      	blx	r3
 8011c34:	b01d      	add	sp, #116	@ 0x74
 8011c36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011c3a:	bf00      	nop
 8011c3c:	20013800 	.word	0x20013800

08011c40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8011c40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c44:	b09f      	sub	sp, #124	@ 0x7c
 8011c46:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8011c4a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8011c4e:	920a      	str	r2, [sp, #40]	@ 0x28
 8011c50:	461d      	mov	r5, r3
 8011c52:	4604      	mov	r4, r0
 8011c54:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8011c56:	2a00      	cmp	r2, #0
 8011c58:	f000 81fa 	beq.w	8012050 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 8011c5c:	6828      	ldr	r0, [r5, #0]
 8011c5e:	6869      	ldr	r1, [r5, #4]
 8011c60:	aa1a      	add	r2, sp, #104	@ 0x68
 8011c62:	c203      	stmia	r2!, {r0, r1}
 8011c64:	6818      	ldr	r0, [r3, #0]
 8011c66:	6859      	ldr	r1, [r3, #4]
 8011c68:	aa1c      	add	r2, sp, #112	@ 0x70
 8011c6a:	c203      	stmia	r2!, {r0, r1}
 8011c6c:	a81a      	add	r0, sp, #104	@ 0x68
 8011c6e:	f7fa f91f 	bl	800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011c72:	4629      	mov	r1, r5
 8011c74:	a81c      	add	r0, sp, #112	@ 0x70
 8011c76:	f7fa f95f 	bl	800bf38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011c7a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8011c7e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8011c82:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 8011c86:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8011c8a:	bfd7      	itett	le
 8011c8c:	b29a      	uxthle	r2, r3
 8011c8e:	2201      	movgt	r2, #1
 8011c90:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8011c94:	fb91 f2f2 	sdivle	r2, r1, r2
 8011c98:	9201      	str	r2, [sp, #4]
 8011c9a:	9801      	ldr	r0, [sp, #4]
 8011c9c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8011ca0:	fb92 f0f0 	sdiv	r0, r2, r0
 8011ca4:	b280      	uxth	r0, r0
 8011ca6:	9010      	str	r0, [sp, #64]	@ 0x40
 8011ca8:	9901      	ldr	r1, [sp, #4]
 8011caa:	9801      	ldr	r0, [sp, #4]
 8011cac:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8011cae:	440e      	add	r6, r1
 8011cb0:	fb05 2510 	mls	r5, r5, r0, r2
 8011cb4:	fb15 f503 	smulbb	r5, r5, r3
 8011cb8:	3e01      	subs	r6, #1
 8011cba:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8011cbe:	fb96 f6f1 	sdiv	r6, r6, r1
 8011cc2:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8011cc6:	440d      	add	r5, r1
 8011cc8:	4419      	add	r1, r3
 8011cca:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8011cce:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8011cd2:	441a      	add	r2, r3
 8011cd4:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8011cd8:	9304      	str	r3, [sp, #16]
 8011cda:	4b96      	ldr	r3, [pc, #600]	@ (8011f34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8011cdc:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8011ce0:	6818      	ldr	r0, [r3, #0]
 8011ce2:	6803      	ldr	r3, [r0, #0]
 8011ce4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011ce6:	4798      	blx	r3
 8011ce8:	4b93      	ldr	r3, [pc, #588]	@ (8011f38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8011cea:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8011cee:	881a      	ldrh	r2, [r3, #0]
 8011cf0:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 8011cf4:	9318      	str	r3, [sp, #96]	@ 0x60
 8011cf6:	fb02 c101 	mla	r1, r2, r1, ip
 8011cfa:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8011cfe:	4357      	muls	r7, r2
 8011d00:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8011d04:	3601      	adds	r6, #1
 8011d06:	920b      	str	r2, [sp, #44]	@ 0x2c
 8011d08:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8011d0a:	4b8c      	ldr	r3, [pc, #560]	@ (8011f3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8011d0c:	b2b6      	uxth	r6, r6
 8011d0e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8011d12:	1d32      	adds	r2, r6, #4
 8011d14:	9206      	str	r2, [sp, #24]
 8011d16:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8011d18:	43d2      	mvns	r2, r2
 8011d1a:	b2d2      	uxtb	r2, r2
 8011d1c:	b2ad      	uxth	r5, r5
 8011d1e:	9215      	str	r2, [sp, #84]	@ 0x54
 8011d20:	9a04      	ldr	r2, [sp, #16]
 8011d22:	2d00      	cmp	r5, #0
 8011d24:	bf0c      	ite	eq
 8011d26:	4611      	moveq	r1, r2
 8011d28:	2100      	movne	r1, #0
 8011d2a:	2200      	movs	r2, #0
 8011d2c:	1b1b      	subs	r3, r3, r4
 8011d2e:	b289      	uxth	r1, r1
 8011d30:	920d      	str	r2, [sp, #52]	@ 0x34
 8011d32:	9319      	str	r3, [sp, #100]	@ 0x64
 8011d34:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8011d36:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8011d38:	fa12 f383 	uxtah	r3, r2, r3
 8011d3c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8011d3e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8011d42:	3304      	adds	r3, #4
 8011d44:	9307      	str	r3, [sp, #28]
 8011d46:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8011d48:	455b      	cmp	r3, fp
 8011d4a:	f240 817c 	bls.w	8012046 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 8011d4e:	9a01      	ldr	r2, [sp, #4]
 8011d50:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8011d54:	fbb5 f3f3 	udiv	r3, r5, r3
 8011d58:	1ad3      	subs	r3, r2, r3
 8011d5a:	b29b      	uxth	r3, r3
 8011d5c:	9316      	str	r3, [sp, #88]	@ 0x58
 8011d5e:	9b07      	ldr	r3, [sp, #28]
 8011d60:	9807      	ldr	r0, [sp, #28]
 8011d62:	785a      	ldrb	r2, [r3, #1]
 8011d64:	789b      	ldrb	r3, [r3, #2]
 8011d66:	7800      	ldrb	r0, [r0, #0]
 8011d68:	9011      	str	r0, [sp, #68]	@ 0x44
 8011d6a:	021b      	lsls	r3, r3, #8
 8011d6c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8011d70:	9a07      	ldr	r2, [sp, #28]
 8011d72:	78d2      	ldrb	r2, [r2, #3]
 8011d74:	4313      	orrs	r3, r2
 8011d76:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8011d78:	3001      	adds	r0, #1
 8011d7a:	441a      	add	r2, r3
 8011d7c:	9005      	str	r0, [sp, #20]
 8011d7e:	1c50      	adds	r0, r2, #1
 8011d80:	9003      	str	r0, [sp, #12]
 8011d82:	7852      	ldrb	r2, [r2, #1]
 8011d84:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8011d86:	0212      	lsls	r2, r2, #8
 8011d88:	5cc3      	ldrb	r3, [r0, r3]
 8011d8a:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8011d8e:	431a      	orrs	r2, r3
 8011d90:	b293      	uxth	r3, r2
 8011d92:	930c      	str	r3, [sp, #48]	@ 0x30
 8011d94:	2300      	movs	r3, #0
 8011d96:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8011d9a:	9308      	str	r3, [sp, #32]
 8011d9c:	461a      	mov	r2, r3
 8011d9e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8011da2:	930e      	str	r3, [sp, #56]	@ 0x38
 8011da4:	f04f 0801 	mov.w	r8, #1
 8011da8:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8011dac:	f8cd 8008 	str.w	r8, [sp, #8]
 8011db0:	46c4      	mov	ip, r8
 8011db2:	930f      	str	r3, [sp, #60]	@ 0x3c
 8011db4:	2d00      	cmp	r5, #0
 8011db6:	d07c      	beq.n	8011eb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8011db8:	45ac      	cmp	ip, r5
 8011dba:	d26c      	bcs.n	8011e96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8011dbc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8011dbe:	eba5 050c 	sub.w	r5, r5, ip
 8011dc2:	455b      	cmp	r3, fp
 8011dc4:	b2ad      	uxth	r5, r5
 8011dc6:	4608      	mov	r0, r1
 8011dc8:	d802      	bhi.n	8011dd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8011dca:	e070      	b.n	8011eae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 8011dcc:	2b00      	cmp	r3, #0
 8011dce:	d15c      	bne.n	8011e8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8011dd0:	9b03      	ldr	r3, [sp, #12]
 8011dd2:	9a02      	ldr	r2, [sp, #8]
 8011dd4:	785b      	ldrb	r3, [r3, #1]
 8011dd6:	9902      	ldr	r1, [sp, #8]
 8011dd8:	f1c2 0207 	rsb	r2, r2, #7
 8011ddc:	4093      	lsls	r3, r2
 8011dde:	005b      	lsls	r3, r3, #1
 8011de0:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8011de4:	9b03      	ldr	r3, [sp, #12]
 8011de6:	781b      	ldrb	r3, [r3, #0]
 8011de8:	410b      	asrs	r3, r1
 8011dea:	3101      	adds	r1, #1
 8011dec:	b2c9      	uxtb	r1, r1
 8011dee:	2908      	cmp	r1, #8
 8011df0:	9102      	str	r1, [sp, #8]
 8011df2:	9903      	ldr	r1, [sp, #12]
 8011df4:	bf0a      	itet	eq
 8011df6:	3102      	addeq	r1, #2
 8011df8:	3101      	addne	r1, #1
 8011dfa:	9103      	streq	r1, [sp, #12]
 8011dfc:	b2db      	uxtb	r3, r3
 8011dfe:	bf0a      	itet	eq
 8011e00:	2100      	moveq	r1, #0
 8011e02:	9103      	strne	r1, [sp, #12]
 8011e04:	9102      	streq	r1, [sp, #8]
 8011e06:	4313      	orrs	r3, r2
 8011e08:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8011e0a:	b29a      	uxth	r2, r3
 8011e0c:	4291      	cmp	r1, r2
 8011e0e:	d30a      	bcc.n	8011e26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8011e10:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8011e14:	2301      	movs	r3, #1
 8011e16:	9905      	ldr	r1, [sp, #20]
 8011e18:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8011e1c:	d30f      	bcc.n	8011e3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 8011e1e:	2100      	movs	r1, #0
 8011e20:	4698      	mov	r8, r3
 8011e22:	9100      	str	r1, [sp, #0]
 8011e24:	e032      	b.n	8011e8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 8011e26:	9b05      	ldr	r3, [sp, #20]
 8011e28:	429a      	cmp	r2, r3
 8011e2a:	d318      	bcc.n	8011e5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8011e2c:	eb04 0308 	add.w	r3, r4, r8
 8011e30:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 8011e34:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8011e38:	f108 0301 	add.w	r3, r8, #1
 8011e3c:	b29b      	uxth	r3, r3
 8011e3e:	9905      	ldr	r1, [sp, #20]
 8011e40:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8011e44:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8011e48:	710e      	strb	r6, [r1, #4]
 8011e4a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8011e4c:	80ce      	strh	r6, [r1, #6]
 8011e4e:	f108 0601 	add.w	r6, r8, #1
 8011e52:	714e      	strb	r6, [r1, #5]
 8011e54:	9905      	ldr	r1, [sp, #20]
 8011e56:	3101      	adds	r1, #1
 8011e58:	b289      	uxth	r1, r1
 8011e5a:	9105      	str	r1, [sp, #20]
 8011e5c:	e7df      	b.n	8011e1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 8011e5e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8011e62:	4611      	mov	r1, r2
 8011e64:	795b      	ldrb	r3, [r3, #5]
 8011e66:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8011e6a:	4426      	add	r6, r4
 8011e6c:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 8011e6e:	4437      	add	r7, r6
 8011e70:	2f00      	cmp	r7, #0
 8011e72:	dd06      	ble.n	8011e82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8011e74:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8011e78:	790f      	ldrb	r7, [r1, #4]
 8011e7a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8011e7e:	88c9      	ldrh	r1, [r1, #6]
 8011e80:	e7f4      	b.n	8011e6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 8011e82:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8011e86:	b29b      	uxth	r3, r3
 8011e88:	e7c5      	b.n	8011e16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8011e8a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8011e8c:	920c      	str	r2, [sp, #48]	@ 0x30
 8011e8e:	4601      	mov	r1, r0
 8011e90:	9a00      	ldr	r2, [sp, #0]
 8011e92:	469c      	mov	ip, r3
 8011e94:	e78e      	b.n	8011db4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 8011e96:	1957      	adds	r7, r2, r5
 8011e98:	ebac 0305 	sub.w	r3, ip, r5
 8011e9c:	b2ba      	uxth	r2, r7
 8011e9e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8011ea2:	9200      	str	r2, [sp, #0]
 8011ea4:	b29b      	uxth	r3, r3
 8011ea6:	2500      	movs	r5, #0
 8011ea8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8011eaa:	455a      	cmp	r2, fp
 8011eac:	d88e      	bhi.n	8011dcc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 8011eae:	4601      	mov	r1, r0
 8011eb0:	e749      	b.n	8011d46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 8011eb2:	458c      	cmp	ip, r1
 8011eb4:	bf2c      	ite	cs
 8011eb6:	4628      	movcs	r0, r5
 8011eb8:	462b      	movcc	r3, r5
 8011eba:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8011ebc:	bf27      	ittee	cs
 8011ebe:	9109      	strcs	r1, [sp, #36]	@ 0x24
 8011ec0:	ebac 0301 	subcs.w	r3, ip, r1
 8011ec4:	eba1 000c 	subcc.w	r0, r1, ip
 8011ec8:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 8011ecc:	bf2c      	ite	cs
 8011ece:	b29b      	uxthcs	r3, r3
 8011ed0:	b280      	uxthcc	r0, r0
 8011ed2:	2dff      	cmp	r5, #255	@ 0xff
 8011ed4:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8011ed6:	eb02 0705 	add.w	r7, r2, r5
 8011eda:	b2bd      	uxth	r5, r7
 8011edc:	9500      	str	r5, [sp, #0]
 8011ede:	d12f      	bne.n	8011f40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 8011ee0:	465e      	mov	r6, fp
 8011ee2:	9d00      	ldr	r5, [sp, #0]
 8011ee4:	42aa      	cmp	r2, r5
 8011ee6:	f040 8084 	bne.w	8011ff2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 8011eea:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8011eec:	458c      	cmp	ip, r1
 8011eee:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8011ef2:	d3d8      	bcc.n	8011ea6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 8011ef4:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8011ef6:	9904      	ldr	r1, [sp, #16]
 8011ef8:	8812      	ldrh	r2, [r2, #0]
 8011efa:	1a52      	subs	r2, r2, r1
 8011efc:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8011f00:	9a08      	ldr	r2, [sp, #32]
 8011f02:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8011f04:	3201      	adds	r2, #1
 8011f06:	428a      	cmp	r2, r1
 8011f08:	9208      	str	r2, [sp, #32]
 8011f0a:	f040 8092 	bne.w	8012032 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 8011f0e:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8011f12:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 8011f16:	9b04      	ldr	r3, [sp, #16]
 8011f18:	eba5 050c 	sub.w	r5, r5, ip
 8011f1c:	b2ad      	uxth	r5, r5
 8011f1e:	2d00      	cmp	r5, #0
 8011f20:	bf08      	it	eq
 8011f22:	4619      	moveq	r1, r3
 8011f24:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8011f26:	bf18      	it	ne
 8011f28:	2100      	movne	r1, #0
 8011f2a:	3301      	adds	r3, #1
 8011f2c:	930d      	str	r3, [sp, #52]	@ 0x34
 8011f2e:	b289      	uxth	r1, r1
 8011f30:	e700      	b.n	8011d34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8011f32:	bf00      	nop
 8011f34:	20013800 	.word	0x20013800
 8011f38:	200137fa 	.word	0x200137fa
 8011f3c:	fffff7fb 	.word	0xfffff7fb
 8011f40:	46d9      	mov	r9, fp
 8011f42:	9d00      	ldr	r5, [sp, #0]
 8011f44:	42aa      	cmp	r2, r5
 8011f46:	d0d0      	beq.n	8011eea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 8011f48:	1c55      	adds	r5, r2, #1
 8011f4a:	4422      	add	r2, r4
 8011f4c:	9517      	str	r5, [sp, #92]	@ 0x5c
 8011f4e:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 8011f52:	9a06      	ldr	r2, [sp, #24]
 8011f54:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8011f58:	4472      	add	r2, lr
 8011f5a:	9212      	str	r2, [sp, #72]	@ 0x48
 8011f5c:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8011f5e:	f8b9 2000 	ldrh.w	r2, [r9]
 8011f62:	f897 a002 	ldrb.w	sl, [r7, #2]
 8011f66:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8011f68:	1216      	asrs	r6, r2, #8
 8011f6a:	fb1a fa07 	smulbb	sl, sl, r7
 8011f6e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8011f72:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8011f74:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8011f78:	fb06 a607 	mla	r6, r6, r7, sl
 8011f7c:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8011f7e:	f897 a001 	ldrb.w	sl, [r7, #1]
 8011f82:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8011f84:	10d5      	asrs	r5, r2, #3
 8011f86:	fb1a fa07 	smulbb	sl, sl, r7
 8011f8a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8011f8e:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8011f90:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8011f94:	fb05 a507 	mla	r5, r5, r7, sl
 8011f98:	9f06      	ldr	r7, [sp, #24]
 8011f9a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8011f9e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8011fa0:	00d2      	lsls	r2, r2, #3
 8011fa2:	fb1e fe07 	smulbb	lr, lr, r7
 8011fa6:	b2d2      	uxtb	r2, r2
 8011fa8:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8011faa:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8011fae:	b2b6      	uxth	r6, r6
 8011fb0:	fb02 e207 	mla	r2, r2, r7, lr
 8011fb4:	b292      	uxth	r2, r2
 8011fb6:	b2ad      	uxth	r5, r5
 8011fb8:	f106 0a01 	add.w	sl, r6, #1
 8011fbc:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8011fc0:	f102 0e01 	add.w	lr, r2, #1
 8011fc4:	f105 0a01 	add.w	sl, r5, #1
 8011fc8:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8011fcc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011fd0:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8011fd4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8011fd8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011fdc:	ea4e 0606 	orr.w	r6, lr, r6
 8011fe0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8011fe4:	ea46 060a 	orr.w	r6, r6, sl
 8011fe8:	f829 6b02 	strh.w	r6, [r9], #2
 8011fec:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8011ff0:	e7a7      	b.n	8011f42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 8011ff2:	f102 0e01 	add.w	lr, r2, #1
 8011ff6:	4422      	add	r2, r4
 8011ff8:	9f06      	ldr	r7, [sp, #24]
 8011ffa:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 8011ffe:	9a06      	ldr	r2, [sp, #24]
 8012000:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8012004:	eb02 0a05 	add.w	sl, r2, r5
 8012008:	4a13      	ldr	r2, [pc, #76]	@ (8012058 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801200a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801200e:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 8012012:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8012016:	00d2      	lsls	r2, r2, #3
 8012018:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801201c:	ea49 0202 	orr.w	r2, r9, r2
 8012020:	f817 9005 	ldrb.w	r9, [r7, r5]
 8012024:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8012028:	f826 2b02 	strh.w	r2, [r6], #2
 801202c:	fa1f f28e 	uxth.w	r2, lr
 8012030:	e757      	b.n	8011ee2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 8012032:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8012036:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801203a:	1a2d      	subs	r5, r5, r0
 801203c:	b2ad      	uxth	r5, r5
 801203e:	2d00      	cmp	r5, #0
 8012040:	bf18      	it	ne
 8012042:	2000      	movne	r0, #0
 8012044:	e730      	b.n	8011ea8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8012046:	4b05      	ldr	r3, [pc, #20]	@ (801205c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 8012048:	6818      	ldr	r0, [r3, #0]
 801204a:	6803      	ldr	r3, [r0, #0]
 801204c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801204e:	4798      	blx	r3
 8012050:	b01f      	add	sp, #124	@ 0x7c
 8012052:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012056:	bf00      	nop
 8012058:	fffff800 	.word	0xfffff800
 801205c:	20013800 	.word	0x20013800

08012060 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8012060:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012064:	b091      	sub	sp, #68	@ 0x44
 8012066:	469b      	mov	fp, r3
 8012068:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 801206c:	4616      	mov	r6, r2
 801206e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 8012072:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012076:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801207a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801207e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8012082:	4604      	mov	r4, r0
 8012084:	460d      	mov	r5, r1
 8012086:	4640      	mov	r0, r8
 8012088:	4659      	mov	r1, fp
 801208a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801208e:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 8012092:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 8012096:	f7f7 fb55 	bl	8009744 <_ZN8touchgfx4RectaNERKS0_>
 801209a:	4631      	mov	r1, r6
 801209c:	4640      	mov	r0, r8
 801209e:	f7f7 fb51 	bl	8009744 <_ZN8touchgfx4RectaNERKS0_>
 80120a2:	4b74      	ldr	r3, [pc, #464]	@ (8012274 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 80120a4:	8818      	ldrh	r0, [r3, #0]
 80120a6:	4b74      	ldr	r3, [pc, #464]	@ (8012278 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 80120a8:	8819      	ldrh	r1, [r3, #0]
 80120aa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80120ae:	2b00      	cmp	r3, #0
 80120b0:	b202      	sxth	r2, r0
 80120b2:	b20e      	sxth	r6, r1
 80120b4:	da07      	bge.n	80120c6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 80120b6:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 80120ba:	4463      	add	r3, ip
 80120bc:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 80120c0:	2300      	movs	r3, #0
 80120c2:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 80120c6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80120ca:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 80120ce:	1ad2      	subs	r2, r2, r3
 80120d0:	4594      	cmp	ip, r2
 80120d2:	bfc4      	itt	gt
 80120d4:	1ac2      	subgt	r2, r0, r3
 80120d6:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 80120da:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80120de:	2a00      	cmp	r2, #0
 80120e0:	da07      	bge.n	80120f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 80120e2:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 80120e6:	4462      	add	r2, ip
 80120e8:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 80120ec:	2200      	movs	r2, #0
 80120ee:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80120f2:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 80120f6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 80120fa:	eba6 060a 	sub.w	r6, r6, sl
 80120fe:	42b2      	cmp	r2, r6
 8012100:	bfc4      	itt	gt
 8012102:	eba1 020a 	subgt.w	r2, r1, sl
 8012106:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 801210a:	4a5c      	ldr	r2, [pc, #368]	@ (801227c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801210c:	7812      	ldrb	r2, [r2, #0]
 801210e:	b9a2      	cbnz	r2, 801213a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8012110:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8012114:	4286      	cmp	r6, r0
 8012116:	4640      	mov	r0, r8
 8012118:	9303      	str	r3, [sp, #12]
 801211a:	bf14      	ite	ne
 801211c:	2600      	movne	r6, #0
 801211e:	2601      	moveq	r6, #1
 8012120:	f7f7 fb53 	bl	80097ca <_ZNK8touchgfx4Rect7isEmptyEv>
 8012124:	9b03      	ldr	r3, [sp, #12]
 8012126:	b160      	cbz	r0, 8012142 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8012128:	2300      	movs	r3, #0
 801212a:	8023      	strh	r3, [r4, #0]
 801212c:	8063      	strh	r3, [r4, #2]
 801212e:	80a3      	strh	r3, [r4, #4]
 8012130:	4620      	mov	r0, r4
 8012132:	80e3      	strh	r3, [r4, #6]
 8012134:	b011      	add	sp, #68	@ 0x44
 8012136:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801213a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801213e:	428e      	cmp	r6, r1
 8012140:	e7e9      	b.n	8012116 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8012142:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8012146:	9205      	str	r2, [sp, #20]
 8012148:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801214c:	9206      	str	r2, [sp, #24]
 801214e:	f8bb 2000 	ldrh.w	r2, [fp]
 8012152:	900e      	str	r0, [sp, #56]	@ 0x38
 8012154:	1a9b      	subs	r3, r3, r2
 8012156:	b21b      	sxth	r3, r3
 8012158:	9303      	str	r3, [sp, #12]
 801215a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801215e:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 8012162:	ebaa 0a03 	sub.w	sl, sl, r3
 8012166:	fa0f f38a 	sxth.w	r3, sl
 801216a:	9304      	str	r3, [sp, #16]
 801216c:	9b03      	ldr	r3, [sp, #12]
 801216e:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8012172:	9b04      	ldr	r3, [sp, #16]
 8012174:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8012178:	9b05      	ldr	r3, [sp, #20]
 801217a:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801217e:	a90e      	add	r1, sp, #56	@ 0x38
 8012180:	9b06      	ldr	r3, [sp, #24]
 8012182:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8012186:	a80c      	add	r0, sp, #48	@ 0x30
 8012188:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 801218c:	f7f9 fed4 	bl	800bf38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012190:	4640      	mov	r0, r8
 8012192:	f7f9 fe8d 	bl	800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012196:	a80e      	add	r0, sp, #56	@ 0x38
 8012198:	f7f9 fe8a 	bl	800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801219c:	4b38      	ldr	r3, [pc, #224]	@ (8012280 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801219e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 80121a2:	881b      	ldrh	r3, [r3, #0]
 80121a4:	9307      	str	r3, [sp, #28]
 80121a6:	682b      	ldr	r3, [r5, #0]
 80121a8:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 8012284 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80121ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80121ae:	4628      	mov	r0, r5
 80121b0:	4798      	blx	r3
 80121b2:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 80121b6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 80121ba:	4681      	mov	r9, r0
 80121bc:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80121c0:	f8db 0000 	ldr.w	r0, [fp]
 80121c4:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 80121c6:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80121ca:	6803      	ldr	r3, [r0, #0]
 80121cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80121ce:	4798      	blx	r3
 80121d0:	4607      	mov	r7, r0
 80121d2:	f8db 0000 	ldr.w	r0, [fp]
 80121d6:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 80121da:	6803      	ldr	r3, [r0, #0]
 80121dc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80121e0:	9109      	str	r1, [sp, #36]	@ 0x24
 80121e2:	9208      	str	r2, [sp, #32]
 80121e4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80121e6:	4798      	blx	r3
 80121e8:	f010 0f01 	tst.w	r0, #1
 80121ec:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80121f0:	d012      	beq.n	8012218 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 80121f2:	f8db 0000 	ldr.w	r0, [fp]
 80121f6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 80121fa:	6803      	ldr	r3, [r0, #0]
 80121fc:	9200      	str	r2, [sp, #0]
 80121fe:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 8012200:	e898 0006 	ldmia.w	r8, {r1, r2}
 8012204:	462b      	mov	r3, r5
 8012206:	47b0      	blx	r6
 8012208:	9b03      	ldr	r3, [sp, #12]
 801220a:	8023      	strh	r3, [r4, #0]
 801220c:	9b04      	ldr	r3, [sp, #16]
 801220e:	8063      	strh	r3, [r4, #2]
 8012210:	9b05      	ldr	r3, [sp, #20]
 8012212:	80a3      	strh	r3, [r4, #4]
 8012214:	9b06      	ldr	r3, [sp, #24]
 8012216:	e78b      	b.n	8012130 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8012218:	fb09 f202 	mul.w	r2, r9, r2
 801221c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8012220:	440f      	add	r7, r1
 8012222:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 8012226:	b166      	cbz	r6, 8012242 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8012228:	9a07      	ldr	r2, [sp, #28]
 801222a:	4592      	cmp	sl, r2
 801222c:	d109      	bne.n	8012242 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801222e:	f8db 0000 	ldr.w	r0, [fp]
 8012232:	6802      	ldr	r2, [r0, #0]
 8012234:	fb09 f303 	mul.w	r3, r9, r3
 8012238:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 801223a:	4629      	mov	r1, r5
 801223c:	463a      	mov	r2, r7
 801223e:	47b0      	blx	r6
 8012240:	e7e2      	b.n	8012208 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8012242:	fb0a f303 	mul.w	r3, sl, r3
 8012246:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 8012284 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801224a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801224e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8012252:	4545      	cmp	r5, r8
 8012254:	d2d8      	bcs.n	8012208 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8012256:	f8db 0000 	ldr.w	r0, [fp]
 801225a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801225e:	6802      	ldr	r2, [r0, #0]
 8012260:	4629      	mov	r1, r5
 8012262:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 8012266:	005b      	lsls	r3, r3, #1
 8012268:	463a      	mov	r2, r7
 801226a:	47d0      	blx	sl
 801226c:	444f      	add	r7, r9
 801226e:	4435      	add	r5, r6
 8012270:	e7ef      	b.n	8012252 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8012272:	bf00      	nop
 8012274:	200137f4 	.word	0x200137f4
 8012278:	200137f6 	.word	0x200137f6
 801227c:	200137f8 	.word	0x200137f8
 8012280:	200137fa 	.word	0x200137fa
 8012284:	20013800 	.word	0x20013800

08012288 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8012288:	b5f0      	push	{r4, r5, r6, r7, lr}
 801228a:	4606      	mov	r6, r0
 801228c:	b087      	sub	sp, #28
 801228e:	460c      	mov	r4, r1
 8012290:	4617      	mov	r7, r2
 8012292:	461d      	mov	r5, r3
 8012294:	b333      	cbz	r3, 80122e4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8012296:	4608      	mov	r0, r1
 8012298:	f7f7 fa97 	bl	80097ca <_ZNK8touchgfx4Rect7isEmptyEv>
 801229c:	bb10      	cbnz	r0, 80122e4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801229e:	6820      	ldr	r0, [r4, #0]
 80122a0:	6861      	ldr	r1, [r4, #4]
 80122a2:	4c1c      	ldr	r4, [pc, #112]	@ (8012314 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80122a4:	ab04      	add	r3, sp, #16
 80122a6:	c303      	stmia	r3!, {r0, r1}
 80122a8:	a804      	add	r0, sp, #16
 80122aa:	f7f9 fe01 	bl	800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80122ae:	6820      	ldr	r0, [r4, #0]
 80122b0:	6803      	ldr	r3, [r0, #0]
 80122b2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80122b4:	4798      	blx	r3
 80122b6:	2dff      	cmp	r5, #255	@ 0xff
 80122b8:	d016      	beq.n	80122e8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80122ba:	f010 0f08 	tst.w	r0, #8
 80122be:	6820      	ldr	r0, [r4, #0]
 80122c0:	d015      	beq.n	80122ee <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80122c2:	2400      	movs	r4, #0
 80122c4:	6801      	ldr	r1, [r0, #0]
 80122c6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80122ca:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80122ce:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80122d2:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80122d6:	9401      	str	r4, [sp, #4]
 80122d8:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80122dc:	9400      	str	r4, [sp, #0]
 80122de:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 80122e0:	4639      	mov	r1, r7
 80122e2:	47a0      	blx	r4
 80122e4:	b007      	add	sp, #28
 80122e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80122e8:	f010 0f02 	tst.w	r0, #2
 80122ec:	e7e7      	b.n	80122be <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80122ee:	6803      	ldr	r3, [r0, #0]
 80122f0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80122f2:	4798      	blx	r3
 80122f4:	4b08      	ldr	r3, [pc, #32]	@ (8012318 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80122f6:	881a      	ldrh	r2, [r3, #0]
 80122f8:	6833      	ldr	r3, [r6, #0]
 80122fa:	e9cd 7500 	strd	r7, r5, [sp]
 80122fe:	4601      	mov	r1, r0
 8012300:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 8012302:	4630      	mov	r0, r6
 8012304:	ab04      	add	r3, sp, #16
 8012306:	47a8      	blx	r5
 8012308:	6820      	ldr	r0, [r4, #0]
 801230a:	6803      	ldr	r3, [r0, #0]
 801230c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801230e:	4798      	blx	r3
 8012310:	e7e8      	b.n	80122e4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8012312:	bf00      	nop
 8012314:	20013800 	.word	0x20013800
 8012318:	200137fa 	.word	0x200137fa

0801231c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801231c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012320:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 8012324:	9e08      	ldr	r6, [sp, #32]
 8012326:	4688      	mov	r8, r1
 8012328:	4614      	mov	r4, r2
 801232a:	461d      	mov	r5, r3
 801232c:	2f00      	cmp	r7, #0
 801232e:	f000 80a9 	beq.w	8012484 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8012332:	4618      	mov	r0, r3
 8012334:	f7f7 fa49 	bl	80097ca <_ZNK8touchgfx4Rect7isEmptyEv>
 8012338:	2800      	cmp	r0, #0
 801233a:	f040 80a3 	bne.w	8012484 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801233e:	f9b5 1000 	ldrsh.w	r1, [r5]
 8012342:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8012346:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801234a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801234e:	fb04 1303 	mla	r3, r4, r3, r1
 8012352:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8012356:	4365      	muls	r5, r4
 8012358:	2fff      	cmp	r7, #255	@ 0xff
 801235a:	eba4 0200 	sub.w	r2, r4, r0
 801235e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8012362:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8012366:	d04a      	beq.n	80123fe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8012368:	b2bc      	uxth	r4, r7
 801236a:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 801236e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8012372:	fa5f f788 	uxtb.w	r7, r8
 8012376:	b2f3      	uxtb	r3, r6
 8012378:	0040      	lsls	r0, r0, #1
 801237a:	fb0e fe04 	mul.w	lr, lr, r4
 801237e:	4367      	muls	r7, r4
 8012380:	4363      	muls	r3, r4
 8012382:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8012386:	fa1f fc8c 	uxth.w	ip, ip
 801238a:	42a9      	cmp	r1, r5
 801238c:	d27a      	bcs.n	8012484 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801238e:	eb01 0900 	add.w	r9, r1, r0
 8012392:	4549      	cmp	r1, r9
 8012394:	d231      	bcs.n	80123fa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8012396:	880a      	ldrh	r2, [r1, #0]
 8012398:	1214      	asrs	r4, r2, #8
 801239a:	10d6      	asrs	r6, r2, #3
 801239c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80123a0:	00d2      	lsls	r2, r2, #3
 80123a2:	b2d2      	uxtb	r2, r2
 80123a4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80123a8:	fb14 f40c 	smulbb	r4, r4, ip
 80123ac:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80123b0:	4474      	add	r4, lr
 80123b2:	fb12 f20c 	smulbb	r2, r2, ip
 80123b6:	b2a4      	uxth	r4, r4
 80123b8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80123bc:	441a      	add	r2, r3
 80123be:	b292      	uxth	r2, r2
 80123c0:	f104 0a01 	add.w	sl, r4, #1
 80123c4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80123c8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80123cc:	fb16 f60c 	smulbb	r6, r6, ip
 80123d0:	f102 0a01 	add.w	sl, r2, #1
 80123d4:	443e      	add	r6, r7
 80123d6:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 80123da:	b2b6      	uxth	r6, r6
 80123dc:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80123e0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80123e4:	4322      	orrs	r2, r4
 80123e6:	1c74      	adds	r4, r6, #1
 80123e8:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80123ec:	0976      	lsrs	r6, r6, #5
 80123ee:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80123f2:	4332      	orrs	r2, r6
 80123f4:	f821 2b02 	strh.w	r2, [r1], #2
 80123f8:	e7cb      	b.n	8012392 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 80123fa:	4441      	add	r1, r8
 80123fc:	e7c5      	b.n	801238a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 80123fe:	4f22      	ldr	r7, [pc, #136]	@ (8012488 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8012400:	0973      	lsrs	r3, r6, #5
 8012402:	ea08 0707 	and.w	r7, r8, r7
 8012406:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801240a:	433b      	orrs	r3, r7
 801240c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8012410:	4333      	orrs	r3, r6
 8012412:	07e7      	lsls	r7, r4, #31
 8012414:	b29b      	uxth	r3, r3
 8012416:	d50b      	bpl.n	8012430 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8012418:	0040      	lsls	r0, r0, #1
 801241a:	0052      	lsls	r2, r2, #1
 801241c:	42a9      	cmp	r1, r5
 801241e:	d231      	bcs.n	8012484 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8012420:	180c      	adds	r4, r1, r0
 8012422:	42a1      	cmp	r1, r4
 8012424:	d202      	bcs.n	801242c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8012426:	f821 3b02 	strh.w	r3, [r1], #2
 801242a:	e7fa      	b.n	8012422 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801242c:	4411      	add	r1, r2
 801242e:	e7f5      	b.n	801241c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8012430:	078e      	lsls	r6, r1, #30
 8012432:	d008      	beq.n	8012446 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8012434:	0066      	lsls	r6, r4, #1
 8012436:	460a      	mov	r2, r1
 8012438:	42aa      	cmp	r2, r5
 801243a:	d202      	bcs.n	8012442 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801243c:	8013      	strh	r3, [r2, #0]
 801243e:	4432      	add	r2, r6
 8012440:	e7fa      	b.n	8012438 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8012442:	3102      	adds	r1, #2
 8012444:	3801      	subs	r0, #1
 8012446:	07c2      	lsls	r2, r0, #31
 8012448:	d50b      	bpl.n	8012462 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801244a:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 801244e:	3a01      	subs	r2, #1
 8012450:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8012454:	0066      	lsls	r6, r4, #1
 8012456:	42aa      	cmp	r2, r5
 8012458:	d202      	bcs.n	8012460 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801245a:	8013      	strh	r3, [r2, #0]
 801245c:	4432      	add	r2, r6
 801245e:	e7fa      	b.n	8012456 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8012460:	3801      	subs	r0, #1
 8012462:	b178      	cbz	r0, 8012484 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8012464:	1040      	asrs	r0, r0, #1
 8012466:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801246a:	0080      	lsls	r0, r0, #2
 801246c:	0064      	lsls	r4, r4, #1
 801246e:	42a9      	cmp	r1, r5
 8012470:	d208      	bcs.n	8012484 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8012472:	180e      	adds	r6, r1, r0
 8012474:	460a      	mov	r2, r1
 8012476:	42b2      	cmp	r2, r6
 8012478:	d202      	bcs.n	8012480 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801247a:	f842 3b04 	str.w	r3, [r2], #4
 801247e:	e7fa      	b.n	8012476 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8012480:	4421      	add	r1, r4
 8012482:	e7f4      	b.n	801246e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8012484:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012488:	00fff800 	.word	0x00fff800

0801248c <_ZN8touchgfx8LCD16bppC1Ev>:
 801248c:	2200      	movs	r2, #0
 801248e:	4912      	ldr	r1, [pc, #72]	@ (80124d8 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8012490:	6001      	str	r1, [r0, #0]
 8012492:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8012496:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801249a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801249e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80124a2:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 80124a6:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 80124aa:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 80124ae:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 80124b2:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 80124b6:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 80124ba:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 80124be:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 80124c2:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 80124c6:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 80124ca:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 80124ce:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 80124d2:	f8c0 2084 	str.w	r2, [r0, #132]	@ 0x84
 80124d6:	4770      	bx	lr
 80124d8:	0801e1d0 	.word	0x0801e1d0

080124dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80124dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80124e0:	460d      	mov	r5, r1
 80124e2:	b08d      	sub	sp, #52	@ 0x34
 80124e4:	4604      	mov	r4, r0
 80124e6:	6808      	ldr	r0, [r1, #0]
 80124e8:	6849      	ldr	r1, [r1, #4]
 80124ea:	4699      	mov	r9, r3
 80124ec:	ab08      	add	r3, sp, #32
 80124ee:	c303      	stmia	r3!, {r0, r1}
 80124f0:	6810      	ldr	r0, [r2, #0]
 80124f2:	6851      	ldr	r1, [r2, #4]
 80124f4:	ab0a      	add	r3, sp, #40	@ 0x28
 80124f6:	c303      	stmia	r3!, {r0, r1}
 80124f8:	a808      	add	r0, sp, #32
 80124fa:	f7f9 fcd9 	bl	800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80124fe:	4629      	mov	r1, r5
 8012500:	a80a      	add	r0, sp, #40	@ 0x28
 8012502:	f7f9 fd19 	bl	800bf38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012506:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801250a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 801250e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 8012512:	4d63      	ldr	r5, [pc, #396]	@ (80126a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8012514:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 8012518:	6828      	ldr	r0, [r5, #0]
 801251a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801251e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012522:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8012526:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801252a:	440a      	add	r2, r1
 801252c:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8012530:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8012534:	4413      	add	r3, r2
 8012536:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801253a:	6803      	ldr	r3, [r0, #0]
 801253c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801253e:	4798      	blx	r3
 8012540:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8012544:	d119      	bne.n	801257a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8012546:	f010 0f20 	tst.w	r0, #32
 801254a:	6828      	ldr	r0, [r5, #0]
 801254c:	d018      	beq.n	8012580 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801254e:	2500      	movs	r5, #0
 8012550:	6801      	ldr	r1, [r0, #0]
 8012552:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8012556:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801255a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801255e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 8012562:	9502      	str	r5, [sp, #8]
 8012564:	b2b6      	uxth	r6, r6
 8012566:	fa1f f588 	uxth.w	r5, r8
 801256a:	9601      	str	r6, [sp, #4]
 801256c:	9500      	str	r5, [sp, #0]
 801256e:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 8012570:	4621      	mov	r1, r4
 8012572:	47a8      	blx	r5
 8012574:	b00d      	add	sp, #52	@ 0x34
 8012576:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801257a:	f010 0f40 	tst.w	r0, #64	@ 0x40
 801257e:	e7e4      	b.n	801254a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8012580:	6803      	ldr	r3, [r0, #0]
 8012582:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012584:	4798      	blx	r3
 8012586:	4947      	ldr	r1, [pc, #284]	@ (80126a4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8012588:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801258c:	880b      	ldrh	r3, [r1, #0]
 801258e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 8012592:	fb03 5202 	mla	r2, r3, r2, r5
 8012596:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801259a:	4373      	muls	r3, r6
 801259c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80125a0:	9307      	str	r3, [sp, #28]
 80125a2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80125a6:	9306      	str	r3, [sp, #24]
 80125a8:	468a      	mov	sl, r1
 80125aa:	9b07      	ldr	r3, [sp, #28]
 80125ac:	4298      	cmp	r0, r3
 80125ae:	d270      	bcs.n	8012692 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 80125b0:	9b06      	ldr	r3, [sp, #24]
 80125b2:	4621      	mov	r1, r4
 80125b4:	eb00 0b03 	add.w	fp, r0, r3
 80125b8:	4558      	cmp	r0, fp
 80125ba:	d25d      	bcs.n	8012678 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 80125bc:	f851 4b04 	ldr.w	r4, [r1], #4
 80125c0:	0e23      	lsrs	r3, r4, #24
 80125c2:	d014      	beq.n	80125ee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80125c4:	2bff      	cmp	r3, #255	@ 0xff
 80125c6:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 80125ca:	d112      	bne.n	80125f2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80125cc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80125d0:	d10f      	bne.n	80125f2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80125d2:	0963      	lsrs	r3, r4, #5
 80125d4:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 80125d8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80125dc:	f02c 0c07 	bic.w	ip, ip, #7
 80125e0:	ea43 0c0c 	orr.w	ip, r3, ip
 80125e4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80125e8:	ea4c 0404 	orr.w	r4, ip, r4
 80125ec:	8004      	strh	r4, [r0, #0]
 80125ee:	3002      	adds	r0, #2
 80125f0:	e7e2      	b.n	80125b8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 80125f2:	fb09 f303 	mul.w	r3, r9, r3
 80125f6:	8807      	ldrh	r7, [r0, #0]
 80125f8:	1c5a      	adds	r2, r3, #1
 80125fa:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80125fe:	1212      	asrs	r2, r2, #8
 8012600:	123e      	asrs	r6, r7, #8
 8012602:	b293      	uxth	r3, r2
 8012604:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8012608:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801260c:	43d2      	mvns	r2, r2
 801260e:	b2d2      	uxtb	r2, r2
 8012610:	10fd      	asrs	r5, r7, #3
 8012612:	fb1e fe03 	smulbb	lr, lr, r3
 8012616:	00ff      	lsls	r7, r7, #3
 8012618:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801261c:	fb06 e602 	mla	r6, r6, r2, lr
 8012620:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8012624:	b2ff      	uxtb	r7, r7
 8012626:	fa5f fc8c 	uxtb.w	ip, ip
 801262a:	b2e4      	uxtb	r4, r4
 801262c:	b2b6      	uxth	r6, r6
 801262e:	fb1c fc03 	smulbb	ip, ip, r3
 8012632:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8012636:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801263a:	fb14 f403 	smulbb	r4, r4, r3
 801263e:	fb05 c502 	mla	r5, r5, r2, ip
 8012642:	f106 0e01 	add.w	lr, r6, #1
 8012646:	fb07 4702 	mla	r7, r7, r2, r4
 801264a:	b2ad      	uxth	r5, r5
 801264c:	b2bf      	uxth	r7, r7
 801264e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8012652:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 8012656:	f105 0c01 	add.w	ip, r5, #1
 801265a:	1c7e      	adds	r6, r7, #1
 801265c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8012660:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8012664:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012668:	096d      	lsrs	r5, r5, #5
 801266a:	ea46 060e 	orr.w	r6, r6, lr
 801266e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8012672:	432e      	orrs	r6, r5
 8012674:	8006      	strh	r6, [r0, #0]
 8012676:	e7ba      	b.n	80125ee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8012678:	f8ba 3000 	ldrh.w	r3, [sl]
 801267c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 8012680:	eba3 0308 	sub.w	r3, r3, r8
 8012684:	eba4 0408 	sub.w	r4, r4, r8
 8012688:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801268c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8012690:	e78b      	b.n	80125aa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8012692:	4b03      	ldr	r3, [pc, #12]	@ (80126a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8012694:	6818      	ldr	r0, [r3, #0]
 8012696:	6803      	ldr	r3, [r0, #0]
 8012698:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801269a:	4798      	blx	r3
 801269c:	e76a      	b.n	8012574 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801269e:	bf00      	nop
 80126a0:	20013800 	.word	0x20013800
 80126a4:	200137fa 	.word	0x200137fa

080126a8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 80126a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80126ac:	460c      	mov	r4, r1
 80126ae:	b085      	sub	sp, #20
 80126b0:	6810      	ldr	r0, [r2, #0]
 80126b2:	6851      	ldr	r1, [r2, #4]
 80126b4:	466d      	mov	r5, sp
 80126b6:	c503      	stmia	r5!, {r0, r1}
 80126b8:	6818      	ldr	r0, [r3, #0]
 80126ba:	6859      	ldr	r1, [r3, #4]
 80126bc:	4616      	mov	r6, r2
 80126be:	c503      	stmia	r5!, {r0, r1}
 80126c0:	4668      	mov	r0, sp
 80126c2:	f7f9 fbf5 	bl	800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80126c6:	4631      	mov	r1, r6
 80126c8:	a802      	add	r0, sp, #8
 80126ca:	f7f9 fc35 	bl	800bf38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80126ce:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80126d2:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80126d6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80126da:	4d28      	ldr	r5, [pc, #160]	@ (801277c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 80126dc:	4e28      	ldr	r6, [pc, #160]	@ (8012780 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 80126de:	6828      	ldr	r0, [r5, #0]
 80126e0:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80126e4:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 80126e8:	fb11 2103 	smlabb	r1, r1, r3, r2
 80126ec:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80126f0:	f8bd 1000 	ldrh.w	r1, [sp]
 80126f4:	440a      	add	r2, r1
 80126f6:	f8ad 2008 	strh.w	r2, [sp, #8]
 80126fa:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80126fe:	4413      	add	r3, r2
 8012700:	f8ad 300a 	strh.w	r3, [sp, #10]
 8012704:	6803      	ldr	r3, [r0, #0]
 8012706:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012708:	4798      	blx	r3
 801270a:	8833      	ldrh	r3, [r6, #0]
 801270c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8012710:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8012714:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 8012784 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8012718:	fb03 1202 	mla	r2, r3, r2, r1
 801271c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012720:	fb08 f303 	mul.w	r3, r8, r3
 8012724:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012728:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801272c:	4298      	cmp	r0, r3
 801272e:	d21d      	bcs.n	801276c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8012730:	eb00 080c 	add.w	r8, r0, ip
 8012734:	4540      	cmp	r0, r8
 8012736:	d20f      	bcs.n	8012758 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8012738:	f854 1b04 	ldr.w	r1, [r4], #4
 801273c:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8012740:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8012744:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8012748:	ea42 0209 	orr.w	r2, r2, r9
 801274c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8012750:	430a      	orrs	r2, r1
 8012752:	f820 2b02 	strh.w	r2, [r0], #2
 8012756:	e7ed      	b.n	8012734 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8012758:	8832      	ldrh	r2, [r6, #0]
 801275a:	1bd2      	subs	r2, r2, r7
 801275c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012760:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8012764:	1bd2      	subs	r2, r2, r7
 8012766:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801276a:	e7df      	b.n	801272c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801276c:	6828      	ldr	r0, [r5, #0]
 801276e:	6803      	ldr	r3, [r0, #0]
 8012770:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012772:	4798      	blx	r3
 8012774:	b005      	add	sp, #20
 8012776:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801277a:	bf00      	nop
 801277c:	20013800 	.word	0x20013800
 8012780:	200137fa 	.word	0x200137fa
 8012784:	fffff800 	.word	0xfffff800

08012788 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8012788:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801278c:	460e      	mov	r6, r1
 801278e:	b08e      	sub	sp, #56	@ 0x38
 8012790:	4604      	mov	r4, r0
 8012792:	6808      	ldr	r0, [r1, #0]
 8012794:	6849      	ldr	r1, [r1, #4]
 8012796:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 8012970 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801279a:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 8012974 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801279e:	461d      	mov	r5, r3
 80127a0:	ab0a      	add	r3, sp, #40	@ 0x28
 80127a2:	c303      	stmia	r3!, {r0, r1}
 80127a4:	6810      	ldr	r0, [r2, #0]
 80127a6:	6851      	ldr	r1, [r2, #4]
 80127a8:	ab0c      	add	r3, sp, #48	@ 0x30
 80127aa:	c303      	stmia	r3!, {r0, r1}
 80127ac:	a80a      	add	r0, sp, #40	@ 0x28
 80127ae:	f7f9 fb7f 	bl	800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80127b2:	4631      	mov	r1, r6
 80127b4:	a80c      	add	r0, sp, #48	@ 0x30
 80127b6:	f7f9 fbbf 	bl	800bf38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80127ba:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80127be:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80127c2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 80127c6:	f8d8 0000 	ldr.w	r0, [r8]
 80127ca:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 80127ce:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 80127d2:	fb11 2103 	smlabb	r1, r1, r3, r2
 80127d6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80127da:	440c      	add	r4, r1
 80127dc:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 80127e0:	440a      	add	r2, r1
 80127e2:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80127e6:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 80127ea:	4413      	add	r3, r2
 80127ec:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80127f0:	6803      	ldr	r3, [r0, #0]
 80127f2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80127f4:	4798      	blx	r3
 80127f6:	2dff      	cmp	r5, #255	@ 0xff
 80127f8:	d124      	bne.n	8012844 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 80127fa:	f010 0f01 	tst.w	r0, #1
 80127fe:	f8d8 0000 	ldr.w	r0, [r8]
 8012802:	d022      	beq.n	801284a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8012804:	2100      	movs	r1, #0
 8012806:	f8d0 c000 	ldr.w	ip, [r0]
 801280a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801280e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8012812:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8012816:	f04f 0e01 	mov.w	lr, #1
 801281a:	f8cd e018 	str.w	lr, [sp, #24]
 801281e:	f8b9 e000 	ldrh.w	lr, [r9]
 8012822:	9503      	str	r5, [sp, #12]
 8012824:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8012828:	b2b6      	uxth	r6, r6
 801282a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801282e:	9102      	str	r1, [sp, #8]
 8012830:	b2bf      	uxth	r7, r7
 8012832:	9601      	str	r6, [sp, #4]
 8012834:	9700      	str	r7, [sp, #0]
 8012836:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 801283a:	4621      	mov	r1, r4
 801283c:	47a8      	blx	r5
 801283e:	b00e      	add	sp, #56	@ 0x38
 8012840:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012844:	f010 0f04 	tst.w	r0, #4
 8012848:	e7d9      	b.n	80127fe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801284a:	6803      	ldr	r3, [r0, #0]
 801284c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801284e:	4798      	blx	r3
 8012850:	f8b9 3000 	ldrh.w	r3, [r9]
 8012854:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8012858:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 801285c:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8012860:	fb03 1202 	mla	r2, r3, r2, r1
 8012864:	ebac 0c07 	sub.w	ip, ip, r7
 8012868:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801286c:	435e      	muls	r6, r3
 801286e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8012872:	2dff      	cmp	r5, #255	@ 0xff
 8012874:	eba3 0707 	sub.w	r7, r3, r7
 8012878:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801287c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8012880:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8012884:	d049      	beq.n	801291a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8012886:	43eb      	mvns	r3, r5
 8012888:	fa1f f985 	uxth.w	r9, r5
 801288c:	b2db      	uxtb	r3, r3
 801288e:	42b0      	cmp	r0, r6
 8012890:	d266      	bcs.n	8012960 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8012892:	eb00 0a0e 	add.w	sl, r0, lr
 8012896:	4550      	cmp	r0, sl
 8012898:	4621      	mov	r1, r4
 801289a:	f104 0403 	add.w	r4, r4, #3
 801289e:	d25b      	bcs.n	8012958 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 80128a0:	8802      	ldrh	r2, [r0, #0]
 80128a2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80128a6:	ea4f 2822 	mov.w	r8, r2, asr #8
 80128aa:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 80128ae:	fb11 f109 	smulbb	r1, r1, r9
 80128b2:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 80128b6:	10d5      	asrs	r5, r2, #3
 80128b8:	fb08 1803 	mla	r8, r8, r3, r1
 80128bc:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 80128c0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80128c4:	fb11 f109 	smulbb	r1, r1, r9
 80128c8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80128cc:	fb05 1503 	mla	r5, r5, r3, r1
 80128d0:	00d2      	lsls	r2, r2, #3
 80128d2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80128d6:	b2d2      	uxtb	r2, r2
 80128d8:	fb11 f109 	smulbb	r1, r1, r9
 80128dc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80128e0:	fa1f f888 	uxth.w	r8, r8
 80128e4:	fb02 1203 	mla	r2, r2, r3, r1
 80128e8:	b292      	uxth	r2, r2
 80128ea:	f108 0101 	add.w	r1, r8, #1
 80128ee:	b2ad      	uxth	r5, r5
 80128f0:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 80128f4:	1c51      	adds	r1, r2, #1
 80128f6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80128fa:	1c69      	adds	r1, r5, #1
 80128fc:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8012900:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8012904:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012908:	096d      	lsrs	r5, r5, #5
 801290a:	ea42 0208 	orr.w	r2, r2, r8
 801290e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8012912:	432a      	orrs	r2, r5
 8012914:	f820 2b02 	strh.w	r2, [r0], #2
 8012918:	e7bd      	b.n	8012896 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801291a:	4a14      	ldr	r2, [pc, #80]	@ (801296c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801291c:	42b0      	cmp	r0, r6
 801291e:	d21f      	bcs.n	8012960 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8012920:	eb00 050e 	add.w	r5, r0, lr
 8012924:	42a8      	cmp	r0, r5
 8012926:	4621      	mov	r1, r4
 8012928:	f104 0403 	add.w	r4, r4, #3
 801292c:	d210      	bcs.n	8012950 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801292e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8012932:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8012936:	00db      	lsls	r3, r3, #3
 8012938:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801293c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8012940:	430b      	orrs	r3, r1
 8012942:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8012946:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801294a:	f820 3b02 	strh.w	r3, [r0], #2
 801294e:	e7e9      	b.n	8012924 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8012950:	4438      	add	r0, r7
 8012952:	eb01 040c 	add.w	r4, r1, ip
 8012956:	e7e1      	b.n	801291c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8012958:	4438      	add	r0, r7
 801295a:	eb01 040c 	add.w	r4, r1, ip
 801295e:	e796      	b.n	801288e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8012960:	4b03      	ldr	r3, [pc, #12]	@ (8012970 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8012962:	6818      	ldr	r0, [r3, #0]
 8012964:	6803      	ldr	r3, [r0, #0]
 8012966:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012968:	4798      	blx	r3
 801296a:	e768      	b.n	801283e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801296c:	fffff800 	.word	0xfffff800
 8012970:	20013800 	.word	0x20013800
 8012974:	200137fa 	.word	0x200137fa

08012978 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8012978:	b4f0      	push	{r4, r5, r6, r7}
 801297a:	4616      	mov	r6, r2
 801297c:	2e01      	cmp	r6, #1
 801297e:	461c      	mov	r4, r3
 8012980:	460d      	mov	r5, r1
 8012982:	9a04      	ldr	r2, [sp, #16]
 8012984:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8012988:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801298c:	d012      	beq.n	80129b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801298e:	d303      	bcc.n	8012998 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8012990:	2e02      	cmp	r6, #2
 8012992:	d00a      	beq.n	80129aa <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8012994:	bcf0      	pop	{r4, r5, r6, r7}
 8012996:	4770      	bx	lr
 8012998:	6805      	ldr	r5, [r0, #0]
 801299a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801299e:	68ed      	ldr	r5, [r5, #12]
 80129a0:	4613      	mov	r3, r2
 80129a2:	46ac      	mov	ip, r5
 80129a4:	4622      	mov	r2, r4
 80129a6:	bcf0      	pop	{r4, r5, r6, r7}
 80129a8:	4760      	bx	ip
 80129aa:	4621      	mov	r1, r4
 80129ac:	4628      	mov	r0, r5
 80129ae:	bcf0      	pop	{r4, r5, r6, r7}
 80129b0:	f7ff bd94 	b.w	80124dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80129b4:	4621      	mov	r1, r4
 80129b6:	4628      	mov	r0, r5
 80129b8:	bcf0      	pop	{r4, r5, r6, r7}
 80129ba:	f7ff bee5 	b.w	8012788 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

080129c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 80129c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80129c4:	4681      	mov	r9, r0
 80129c6:	b093      	sub	sp, #76	@ 0x4c
 80129c8:	6810      	ldr	r0, [r2, #0]
 80129ca:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 80129ce:	4f6d      	ldr	r7, [pc, #436]	@ (8012b84 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 80129d0:	4688      	mov	r8, r1
 80129d2:	6851      	ldr	r1, [r2, #4]
 80129d4:	ac0e      	add	r4, sp, #56	@ 0x38
 80129d6:	c403      	stmia	r4!, {r0, r1}
 80129d8:	6818      	ldr	r0, [r3, #0]
 80129da:	6859      	ldr	r1, [r3, #4]
 80129dc:	ac10      	add	r4, sp, #64	@ 0x40
 80129de:	4616      	mov	r6, r2
 80129e0:	c403      	stmia	r4!, {r0, r1}
 80129e2:	a80e      	add	r0, sp, #56	@ 0x38
 80129e4:	f7f9 fa64 	bl	800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80129e8:	4631      	mov	r1, r6
 80129ea:	a810      	add	r0, sp, #64	@ 0x40
 80129ec:	f7f9 faa4 	bl	800bf38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80129f0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 80129f4:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 80129f8:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 80129fc:	4e62      	ldr	r6, [pc, #392]	@ (8012b88 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80129fe:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 8012a02:	6830      	ldr	r0, [r6, #0]
 8012a04:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8012a08:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012a0c:	4489      	add	r9, r1
 8012a0e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8012a12:	440a      	add	r2, r1
 8012a14:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8012a18:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8012a1c:	4413      	add	r3, r2
 8012a1e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8012a22:	6803      	ldr	r3, [r0, #0]
 8012a24:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012a26:	4798      	blx	r3
 8012a28:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8012a2c:	6830      	ldr	r0, [r6, #0]
 8012a2e:	d01d      	beq.n	8012a6c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8012a30:	2200      	movs	r2, #0
 8012a32:	6801      	ldr	r1, [r0, #0]
 8012a34:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8012a38:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8012a3c:	220b      	movs	r2, #11
 8012a3e:	9207      	str	r2, [sp, #28]
 8012a40:	883a      	ldrh	r2, [r7, #0]
 8012a42:	9206      	str	r2, [sp, #24]
 8012a44:	2201      	movs	r2, #1
 8012a46:	e9cd a204 	strd	sl, r2, [sp, #16]
 8012a4a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 8012a4e:	9203      	str	r2, [sp, #12]
 8012a50:	b2a4      	uxth	r4, r4
 8012a52:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 8012a56:	9200      	str	r2, [sp, #0]
 8012a58:	b2ad      	uxth	r5, r5
 8012a5a:	9502      	str	r5, [sp, #8]
 8012a5c:	9401      	str	r4, [sp, #4]
 8012a5e:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 8012a60:	4642      	mov	r2, r8
 8012a62:	4649      	mov	r1, r9
 8012a64:	47a0      	blx	r4
 8012a66:	b013      	add	sp, #76	@ 0x4c
 8012a68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012a6c:	6803      	ldr	r3, [r0, #0]
 8012a6e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012a70:	4798      	blx	r3
 8012a72:	883b      	ldrh	r3, [r7, #0]
 8012a74:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8012a78:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8012a7c:	fb03 1202 	mla	r2, r3, r2, r1
 8012a80:	435d      	muls	r5, r3
 8012a82:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012a86:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8012a8a:	920c      	str	r2, [sp, #48]	@ 0x30
 8012a8c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8012a90:	1b12      	subs	r2, r2, r4
 8012a92:	920d      	str	r2, [sp, #52]	@ 0x34
 8012a94:	0062      	lsls	r2, r4, #1
 8012a96:	1b1c      	subs	r4, r3, r4
 8012a98:	0063      	lsls	r3, r4, #1
 8012a9a:	920a      	str	r2, [sp, #40]	@ 0x28
 8012a9c:	930b      	str	r3, [sp, #44]	@ 0x2c
 8012a9e:	f04f 0e04 	mov.w	lr, #4
 8012aa2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8012aa4:	4298      	cmp	r0, r3
 8012aa6:	d266      	bcs.n	8012b76 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8012aa8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012aaa:	eb00 0b03 	add.w	fp, r0, r3
 8012aae:	4558      	cmp	r0, fp
 8012ab0:	d25c      	bcs.n	8012b6c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8012ab2:	f819 3b01 	ldrb.w	r3, [r9], #1
 8012ab6:	fb1e e303 	smlabb	r3, lr, r3, lr
 8012aba:	f858 2003 	ldr.w	r2, [r8, r3]
 8012abe:	0e11      	lsrs	r1, r2, #24
 8012ac0:	d012      	beq.n	8012ae8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8012ac2:	29ff      	cmp	r1, #255	@ 0xff
 8012ac4:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8012ac8:	d110      	bne.n	8012aec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8012aca:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8012ace:	d10d      	bne.n	8012aec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8012ad0:	0953      	lsrs	r3, r2, #5
 8012ad2:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 8012ad6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8012ada:	f027 0707 	bic.w	r7, r7, #7
 8012ade:	431f      	orrs	r7, r3
 8012ae0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8012ae4:	433a      	orrs	r2, r7
 8012ae6:	8002      	strh	r2, [r0, #0]
 8012ae8:	3002      	adds	r0, #2
 8012aea:	e7e0      	b.n	8012aae <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8012aec:	fb0a f101 	mul.w	r1, sl, r1
 8012af0:	8806      	ldrh	r6, [r0, #0]
 8012af2:	1c4b      	adds	r3, r1, #1
 8012af4:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8012af8:	1235      	asrs	r5, r6, #8
 8012afa:	10f4      	asrs	r4, r6, #3
 8012afc:	121b      	asrs	r3, r3, #8
 8012afe:	00f6      	lsls	r6, r6, #3
 8012b00:	b299      	uxth	r1, r3
 8012b02:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8012b06:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8012b0a:	b2f6      	uxtb	r6, r6
 8012b0c:	43db      	mvns	r3, r3
 8012b0e:	b2d2      	uxtb	r2, r2
 8012b10:	b2db      	uxtb	r3, r3
 8012b12:	fb1c fc01 	smulbb	ip, ip, r1
 8012b16:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8012b1a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8012b1e:	fb12 f201 	smulbb	r2, r2, r1
 8012b22:	fb05 c503 	mla	r5, r5, r3, ip
 8012b26:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8012b2a:	b2ff      	uxtb	r7, r7
 8012b2c:	fb06 2203 	mla	r2, r6, r3, r2
 8012b30:	b2ad      	uxth	r5, r5
 8012b32:	fb17 f701 	smulbb	r7, r7, r1
 8012b36:	b292      	uxth	r2, r2
 8012b38:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8012b3c:	fb04 7403 	mla	r4, r4, r3, r7
 8012b40:	f105 0c01 	add.w	ip, r5, #1
 8012b44:	1c57      	adds	r7, r2, #1
 8012b46:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8012b4a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8012b4e:	b2a4      	uxth	r4, r4
 8012b50:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8012b54:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8012b58:	433d      	orrs	r5, r7
 8012b5a:	1c67      	adds	r7, r4, #1
 8012b5c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8012b60:	0964      	lsrs	r4, r4, #5
 8012b62:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8012b66:	4325      	orrs	r5, r4
 8012b68:	8005      	strh	r5, [r0, #0]
 8012b6a:	e7bd      	b.n	8012ae8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8012b6c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8012b6e:	4418      	add	r0, r3
 8012b70:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8012b72:	4499      	add	r9, r3
 8012b74:	e795      	b.n	8012aa2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8012b76:	4b04      	ldr	r3, [pc, #16]	@ (8012b88 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8012b78:	6818      	ldr	r0, [r3, #0]
 8012b7a:	6803      	ldr	r3, [r0, #0]
 8012b7c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012b7e:	4798      	blx	r3
 8012b80:	e771      	b.n	8012a66 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8012b82:	bf00      	nop
 8012b84:	200137fa 	.word	0x200137fa
 8012b88:	20013800 	.word	0x20013800

08012b8c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8012b8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b90:	b087      	sub	sp, #28
 8012b92:	4680      	mov	r8, r0
 8012b94:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 8012b98:	460d      	mov	r5, r1
 8012b9a:	4614      	mov	r4, r2
 8012b9c:	2e00      	cmp	r6, #0
 8012b9e:	f000 80b9 	beq.w	8012d14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8012ba2:	6810      	ldr	r0, [r2, #0]
 8012ba4:	6851      	ldr	r1, [r2, #4]
 8012ba6:	af02      	add	r7, sp, #8
 8012ba8:	c703      	stmia	r7!, {r0, r1}
 8012baa:	6818      	ldr	r0, [r3, #0]
 8012bac:	6859      	ldr	r1, [r3, #4]
 8012bae:	af04      	add	r7, sp, #16
 8012bb0:	c703      	stmia	r7!, {r0, r1}
 8012bb2:	a802      	add	r0, sp, #8
 8012bb4:	f7f9 f97c 	bl	800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012bb8:	4621      	mov	r1, r4
 8012bba:	a804      	add	r0, sp, #16
 8012bbc:	f7f9 f9bc 	bl	800bf38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012bc0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8012bc4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8012bc8:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8012bcc:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8012bd0:	fb14 2103 	smlabb	r1, r4, r3, r2
 8012bd4:	eb08 0401 	add.w	r4, r8, r1
 8012bd8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8012bdc:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8012be0:	440a      	add	r2, r1
 8012be2:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012be6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8012bea:	4413      	add	r3, r2
 8012bec:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012bf0:	4b4a      	ldr	r3, [pc, #296]	@ (8012d1c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8012bf2:	6818      	ldr	r0, [r3, #0]
 8012bf4:	6803      	ldr	r3, [r0, #0]
 8012bf6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012bf8:	4798      	blx	r3
 8012bfa:	4b49      	ldr	r3, [pc, #292]	@ (8012d20 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8012bfc:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8012c00:	881a      	ldrh	r2, [r3, #0]
 8012c02:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8012c06:	2eff      	cmp	r6, #255	@ 0xff
 8012c08:	fb02 c101 	mla	r1, r2, r1, ip
 8012c0c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8012c10:	fb02 f207 	mul.w	r2, r2, r7
 8012c14:	f105 0104 	add.w	r1, r5, #4
 8012c18:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8012c1c:	461d      	mov	r5, r3
 8012c1e:	d05a      	beq.n	8012cd6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8012c20:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 8012c24:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8012c28:	b2b6      	uxth	r6, r6
 8012c2a:	fa1f fe8e 	uxth.w	lr, lr
 8012c2e:	9301      	str	r3, [sp, #4]
 8012c30:	4282      	cmp	r2, r0
 8012c32:	d96a      	bls.n	8012d0a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8012c34:	eb00 0b0a 	add.w	fp, r0, sl
 8012c38:	4583      	cmp	fp, r0
 8012c3a:	d940      	bls.n	8012cbe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8012c3c:	f814 3b01 	ldrb.w	r3, [r4], #1
 8012c40:	8805      	ldrh	r5, [r0, #0]
 8012c42:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8012c46:	122f      	asrs	r7, r5, #8
 8012c48:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8012c4c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8012c50:	fb17 f70e 	smulbb	r7, r7, lr
 8012c54:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8012c58:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012c5c:	00ed      	lsls	r5, r5, #3
 8012c5e:	fb0c 7c06 	mla	ip, ip, r6, r7
 8012c62:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8012c66:	10df      	asrs	r7, r3, #3
 8012c68:	b2ed      	uxtb	r5, r5
 8012c6a:	00db      	lsls	r3, r3, #3
 8012c6c:	fa1f fc8c 	uxth.w	ip, ip
 8012c70:	fb19 f90e 	smulbb	r9, r9, lr
 8012c74:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8012c78:	b2db      	uxtb	r3, r3
 8012c7a:	fb15 f50e 	smulbb	r5, r5, lr
 8012c7e:	fb07 9706 	mla	r7, r7, r6, r9
 8012c82:	fb03 5306 	mla	r3, r3, r6, r5
 8012c86:	f10c 0901 	add.w	r9, ip, #1
 8012c8a:	b29b      	uxth	r3, r3
 8012c8c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8012c90:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 8012c94:	f103 0c01 	add.w	ip, r3, #1
 8012c98:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8012c9c:	b2bf      	uxth	r7, r7
 8012c9e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8012ca2:	ea4c 0c09 	orr.w	ip, ip, r9
 8012ca6:	f107 0901 	add.w	r9, r7, #1
 8012caa:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8012cae:	097f      	lsrs	r7, r7, #5
 8012cb0:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8012cb4:	ea4c 0c07 	orr.w	ip, ip, r7
 8012cb8:	f820 cb02 	strh.w	ip, [r0], #2
 8012cbc:	e7bc      	b.n	8012c38 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8012cbe:	9b01      	ldr	r3, [sp, #4]
 8012cc0:	881b      	ldrh	r3, [r3, #0]
 8012cc2:	eba3 0308 	sub.w	r3, r3, r8
 8012cc6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012cca:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8012cce:	eba3 0308 	sub.w	r3, r3, r8
 8012cd2:	441c      	add	r4, r3
 8012cd4:	e7ac      	b.n	8012c30 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8012cd6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8012cda:	4282      	cmp	r2, r0
 8012cdc:	d915      	bls.n	8012d0a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8012cde:	eb00 060a 	add.w	r6, r0, sl
 8012ce2:	4286      	cmp	r6, r0
 8012ce4:	d906      	bls.n	8012cf4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8012ce6:	f814 3b01 	ldrb.w	r3, [r4], #1
 8012cea:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8012cee:	f820 3b02 	strh.w	r3, [r0], #2
 8012cf2:	e7f6      	b.n	8012ce2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8012cf4:	882b      	ldrh	r3, [r5, #0]
 8012cf6:	eba3 0308 	sub.w	r3, r3, r8
 8012cfa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012cfe:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8012d02:	eba3 0308 	sub.w	r3, r3, r8
 8012d06:	441c      	add	r4, r3
 8012d08:	e7e7      	b.n	8012cda <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8012d0a:	4b04      	ldr	r3, [pc, #16]	@ (8012d1c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8012d0c:	6818      	ldr	r0, [r3, #0]
 8012d0e:	6803      	ldr	r3, [r0, #0]
 8012d10:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012d12:	4798      	blx	r3
 8012d14:	b007      	add	sp, #28
 8012d16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012d1a:	bf00      	nop
 8012d1c:	20013800 	.word	0x20013800
 8012d20:	200137fa 	.word	0x200137fa

08012d24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8012d24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d28:	b091      	sub	sp, #68	@ 0x44
 8012d2a:	4680      	mov	r8, r0
 8012d2c:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 8012d30:	460f      	mov	r7, r1
 8012d32:	4614      	mov	r4, r2
 8012d34:	2d00      	cmp	r5, #0
 8012d36:	d051      	beq.n	8012ddc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8012d38:	6810      	ldr	r0, [r2, #0]
 8012d3a:	6851      	ldr	r1, [r2, #4]
 8012d3c:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 8012f40 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8012d40:	ae0c      	add	r6, sp, #48	@ 0x30
 8012d42:	c603      	stmia	r6!, {r0, r1}
 8012d44:	6818      	ldr	r0, [r3, #0]
 8012d46:	6859      	ldr	r1, [r3, #4]
 8012d48:	ae0e      	add	r6, sp, #56	@ 0x38
 8012d4a:	c603      	stmia	r6!, {r0, r1}
 8012d4c:	a80c      	add	r0, sp, #48	@ 0x30
 8012d4e:	f7f9 f8af 	bl	800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012d52:	4621      	mov	r1, r4
 8012d54:	a80e      	add	r0, sp, #56	@ 0x38
 8012d56:	f7f9 f8ef 	bl	800bf38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012d5a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 8012d5e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8012d62:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8012d66:	f8d9 0000 	ldr.w	r0, [r9]
 8012d6a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8012d6e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 8012d72:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012d76:	eb08 0401 	add.w	r4, r8, r1
 8012d7a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8012d7e:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 8012f44 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8012d82:	440a      	add	r2, r1
 8012d84:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8012d88:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8012d8c:	4413      	add	r3, r2
 8012d8e:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8012d92:	6803      	ldr	r3, [r0, #0]
 8012d94:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012d96:	4798      	blx	r3
 8012d98:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8012d9c:	f8d9 0000 	ldr.w	r0, [r9]
 8012da0:	d01f      	beq.n	8012de2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8012da2:	2200      	movs	r2, #0
 8012da4:	6801      	ldr	r1, [r0, #0]
 8012da6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8012daa:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8012dae:	220b      	movs	r2, #11
 8012db0:	9207      	str	r2, [sp, #28]
 8012db2:	f8b8 2000 	ldrh.w	r2, [r8]
 8012db6:	9206      	str	r2, [sp, #24]
 8012db8:	2201      	movs	r2, #1
 8012dba:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8012dbe:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 8012dc2:	9203      	str	r2, [sp, #12]
 8012dc4:	fa1f f28a 	uxth.w	r2, sl
 8012dc8:	9202      	str	r2, [sp, #8]
 8012dca:	b2b6      	uxth	r6, r6
 8012dcc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8012dd0:	9200      	str	r2, [sp, #0]
 8012dd2:	9601      	str	r6, [sp, #4]
 8012dd4:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 8012dd6:	463a      	mov	r2, r7
 8012dd8:	4621      	mov	r1, r4
 8012dda:	47a8      	blx	r5
 8012ddc:	b011      	add	sp, #68	@ 0x44
 8012dde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012de2:	6803      	ldr	r3, [r0, #0]
 8012de4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012de6:	4798      	blx	r3
 8012de8:	f8b8 2000 	ldrh.w	r2, [r8]
 8012dec:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8012df0:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 8012df4:	2dff      	cmp	r5, #255	@ 0xff
 8012df6:	fb02 1303 	mla	r3, r2, r3, r1
 8012dfa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012dfe:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8012e02:	fb0a fa02 	mul.w	sl, sl, r2
 8012e06:	d062      	beq.n	8012ece <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8012e08:	ea6f 0c05 	mvn.w	ip, r5
 8012e0c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8012e10:	930a      	str	r3, [sp, #40]	@ 0x28
 8012e12:	b2ad      	uxth	r5, r5
 8012e14:	fa5f fc8c 	uxtb.w	ip, ip
 8012e18:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 8012e1c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012e1e:	4298      	cmp	r0, r3
 8012e20:	f080 8085 	bcs.w	8012f2e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8012e24:	eb00 0b09 	add.w	fp, r0, r9
 8012e28:	4558      	cmp	r0, fp
 8012e2a:	d246      	bcs.n	8012eba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8012e2c:	f814 eb01 	ldrb.w	lr, [r4], #1
 8012e30:	2303      	movs	r3, #3
 8012e32:	2204      	movs	r2, #4
 8012e34:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8012e38:	eb07 0a0e 	add.w	sl, r7, lr
 8012e3c:	8803      	ldrh	r3, [r0, #0]
 8012e3e:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8012e42:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8012e46:	1219      	asrs	r1, r3, #8
 8012e48:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8012e4c:	fb18 f805 	smulbb	r8, r8, r5
 8012e50:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8012e54:	10da      	asrs	r2, r3, #3
 8012e56:	fb01 810c 	mla	r1, r1, ip, r8
 8012e5a:	00db      	lsls	r3, r3, #3
 8012e5c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8012e60:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8012e64:	b2db      	uxtb	r3, r3
 8012e66:	fb18 f805 	smulbb	r8, r8, r5
 8012e6a:	fb1e fe05 	smulbb	lr, lr, r5
 8012e6e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8012e72:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8012e76:	b289      	uxth	r1, r1
 8012e78:	fb02 820c 	mla	r2, r2, ip, r8
 8012e7c:	fb03 e30c 	mla	r3, r3, ip, lr
 8012e80:	b292      	uxth	r2, r2
 8012e82:	b29b      	uxth	r3, r3
 8012e84:	f101 0801 	add.w	r8, r1, #1
 8012e88:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8012e8c:	f103 0e01 	add.w	lr, r3, #1
 8012e90:	f102 0801 	add.w	r8, r2, #1
 8012e94:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8012e98:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8012e9c:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8012ea0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8012ea4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8012ea8:	ea4e 0101 	orr.w	r1, lr, r1
 8012eac:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8012eb0:	ea41 0108 	orr.w	r1, r1, r8
 8012eb4:	f820 1b02 	strh.w	r1, [r0], #2
 8012eb8:	e7b6      	b.n	8012e28 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8012eba:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8012ebc:	881b      	ldrh	r3, [r3, #0]
 8012ebe:	1b9b      	subs	r3, r3, r6
 8012ec0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012ec4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8012ec8:	1b9b      	subs	r3, r3, r6
 8012eca:	441c      	add	r4, r3
 8012ecc:	e7a6      	b.n	8012e1c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8012ece:	491b      	ldr	r1, [pc, #108]	@ (8012f3c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8012ed0:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8012ed4:	2203      	movs	r2, #3
 8012ed6:	2504      	movs	r5, #4
 8012ed8:	4550      	cmp	r0, sl
 8012eda:	d228      	bcs.n	8012f2e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8012edc:	eb00 0c09 	add.w	ip, r0, r9
 8012ee0:	4560      	cmp	r0, ip
 8012ee2:	4623      	mov	r3, r4
 8012ee4:	d219      	bcs.n	8012f1a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8012ee6:	f893 e000 	ldrb.w	lr, [r3]
 8012eea:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8012eee:	eb07 0b0e 	add.w	fp, r7, lr
 8012ef2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8012ef6:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8012efa:	f89b b001 	ldrb.w	fp, [fp, #1]
 8012efe:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8012f02:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8012f06:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8012f0a:	ea43 030b 	orr.w	r3, r3, fp
 8012f0e:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8012f12:	3401      	adds	r4, #1
 8012f14:	f820 3b02 	strh.w	r3, [r0], #2
 8012f18:	e7e2      	b.n	8012ee0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8012f1a:	f8b8 3000 	ldrh.w	r3, [r8]
 8012f1e:	1b9b      	subs	r3, r3, r6
 8012f20:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012f24:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8012f28:	1b9b      	subs	r3, r3, r6
 8012f2a:	441c      	add	r4, r3
 8012f2c:	e7d4      	b.n	8012ed8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8012f2e:	4b04      	ldr	r3, [pc, #16]	@ (8012f40 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8012f30:	6818      	ldr	r0, [r3, #0]
 8012f32:	6803      	ldr	r3, [r0, #0]
 8012f34:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012f36:	4798      	blx	r3
 8012f38:	e750      	b.n	8012ddc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8012f3a:	bf00      	nop
 8012f3c:	fffff800 	.word	0xfffff800
 8012f40:	20013800 	.word	0x20013800
 8012f44:	200137fa 	.word	0x200137fa

08012f48 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8012f48:	b4f0      	push	{r4, r5, r6, r7}
 8012f4a:	460c      	mov	r4, r1
 8012f4c:	4611      	mov	r1, r2
 8012f4e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8012f52:	780f      	ldrb	r7, [r1, #0]
 8012f54:	784e      	ldrb	r6, [r1, #1]
 8012f56:	2f01      	cmp	r7, #1
 8012f58:	461a      	mov	r2, r3
 8012f5a:	9b04      	ldr	r3, [sp, #16]
 8012f5c:	d038      	beq.n	8012fd0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 8012f5e:	d31f      	bcc.n	8012fa0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 8012f60:	2f02      	cmp	r7, #2
 8012f62:	d14d      	bne.n	8013000 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8012f64:	2e03      	cmp	r6, #3
 8012f66:	d84b      	bhi.n	8013000 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8012f68:	e8df f006 	tbb	[pc, r6]
 8012f6c:	17140702 	.word	0x17140702
 8012f70:	9504      	str	r5, [sp, #16]
 8012f72:	4620      	mov	r0, r4
 8012f74:	bcf0      	pop	{r4, r5, r6, r7}
 8012f76:	f7ff be09 	b.w	8012b8c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8012f7a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8012f7c:	2800      	cmp	r0, #0
 8012f7e:	d03f      	beq.n	8013000 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8012f80:	6806      	ldr	r6, [r0, #0]
 8012f82:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8012f86:	68b5      	ldr	r5, [r6, #8]
 8012f88:	4613      	mov	r3, r2
 8012f8a:	46ac      	mov	ip, r5
 8012f8c:	460a      	mov	r2, r1
 8012f8e:	4621      	mov	r1, r4
 8012f90:	bcf0      	pop	{r4, r5, r6, r7}
 8012f92:	4760      	bx	ip
 8012f94:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8012f98:	e7f0      	b.n	8012f7c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8012f9a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8012f9e:	e7ed      	b.n	8012f7c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8012fa0:	2e03      	cmp	r6, #3
 8012fa2:	d82d      	bhi.n	8013000 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8012fa4:	e8df f006 	tbb	[pc, r6]
 8012fa8:	110e0702 	.word	0x110e0702
 8012fac:	9504      	str	r5, [sp, #16]
 8012fae:	4620      	mov	r0, r4
 8012fb0:	bcf0      	pop	{r4, r5, r6, r7}
 8012fb2:	f7ff bd05 	b.w	80129c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8012fb6:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8012fb8:	b310      	cbz	r0, 8013000 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8012fba:	6806      	ldr	r6, [r0, #0]
 8012fbc:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8012fc0:	68f5      	ldr	r5, [r6, #12]
 8012fc2:	e7e1      	b.n	8012f88 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8012fc4:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8012fc8:	e7f6      	b.n	8012fb8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8012fca:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8012fce:	e7f3      	b.n	8012fb8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8012fd0:	2e03      	cmp	r6, #3
 8012fd2:	d815      	bhi.n	8013000 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8012fd4:	e8df f006 	tbb	[pc, r6]
 8012fd8:	110e0702 	.word	0x110e0702
 8012fdc:	9504      	str	r5, [sp, #16]
 8012fde:	4620      	mov	r0, r4
 8012fe0:	bcf0      	pop	{r4, r5, r6, r7}
 8012fe2:	f7ff be9f 	b.w	8012d24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8012fe6:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8012fe8:	b150      	cbz	r0, 8013000 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8012fea:	6806      	ldr	r6, [r0, #0]
 8012fec:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8012ff0:	6935      	ldr	r5, [r6, #16]
 8012ff2:	e7c9      	b.n	8012f88 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8012ff4:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8012ff8:	e7f6      	b.n	8012fe8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8012ffa:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8012ffe:	e7f3      	b.n	8012fe8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8013000:	bcf0      	pop	{r4, r5, r6, r7}
 8013002:	4770      	bx	lr

08013004 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8013004:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013008:	4604      	mov	r4, r0
 801300a:	b087      	sub	sp, #28
 801300c:	6810      	ldr	r0, [r2, #0]
 801300e:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 8013012:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 801324c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8013016:	460e      	mov	r6, r1
 8013018:	6851      	ldr	r1, [r2, #4]
 801301a:	ad02      	add	r5, sp, #8
 801301c:	c503      	stmia	r5!, {r0, r1}
 801301e:	6818      	ldr	r0, [r3, #0]
 8013020:	6859      	ldr	r1, [r3, #4]
 8013022:	ad04      	add	r5, sp, #16
 8013024:	4617      	mov	r7, r2
 8013026:	c503      	stmia	r5!, {r0, r1}
 8013028:	a802      	add	r0, sp, #8
 801302a:	f7f8 ff41 	bl	800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801302e:	4639      	mov	r1, r7
 8013030:	a804      	add	r0, sp, #16
 8013032:	f7f8 ff81 	bl	800bf38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013036:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801303a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801303e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8013042:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8013046:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801304a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801304e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8013052:	440e      	add	r6, r1
 8013054:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8013058:	440a      	add	r2, r1
 801305a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801305e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8013062:	4413      	add	r3, r2
 8013064:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013068:	4b77      	ldr	r3, [pc, #476]	@ (8013248 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801306a:	6818      	ldr	r0, [r3, #0]
 801306c:	6803      	ldr	r3, [r0, #0]
 801306e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013070:	4798      	blx	r3
 8013072:	f8b9 b000 	ldrh.w	fp, [r9]
 8013076:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801307a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801307e:	fb0b 2303 	mla	r3, fp, r3, r2
 8013082:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013086:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801308a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801308e:	fb05 f50b 	mul.w	r5, r5, fp
 8013092:	9300      	str	r3, [sp, #0]
 8013094:	d069      	beq.n	801316a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8013096:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801309a:	4558      	cmp	r0, fp
 801309c:	f080 80cc 	bcs.w	8013238 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80130a0:	9b00      	ldr	r3, [sp, #0]
 80130a2:	18c3      	adds	r3, r0, r3
 80130a4:	9301      	str	r3, [sp, #4]
 80130a6:	4631      	mov	r1, r6
 80130a8:	9b01      	ldr	r3, [sp, #4]
 80130aa:	4298      	cmp	r0, r3
 80130ac:	d24f      	bcs.n	801314e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 80130ae:	f811 2b01 	ldrb.w	r2, [r1], #1
 80130b2:	2a00      	cmp	r2, #0
 80130b4:	d048      	beq.n	8013148 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80130b6:	fb0a f202 	mul.w	r2, sl, r2
 80130ba:	1c53      	adds	r3, r2, #1
 80130bc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80130c0:	121b      	asrs	r3, r3, #8
 80130c2:	d041      	beq.n	8013148 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80130c4:	8802      	ldrh	r2, [r0, #0]
 80130c6:	f8b4 c000 	ldrh.w	ip, [r4]
 80130ca:	b29e      	uxth	r6, r3
 80130cc:	1215      	asrs	r5, r2, #8
 80130ce:	43db      	mvns	r3, r3
 80130d0:	b2db      	uxtb	r3, r3
 80130d2:	ea4f 272c 	mov.w	r7, ip, asr #8
 80130d6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80130da:	fb15 f503 	smulbb	r5, r5, r3
 80130de:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80130e2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80130e6:	00d2      	lsls	r2, r2, #3
 80130e8:	fb07 5706 	mla	r7, r7, r6, r5
 80130ec:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80130f0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80130f4:	b2d2      	uxtb	r2, r2
 80130f6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80130fa:	b2bf      	uxth	r7, r7
 80130fc:	fb1e fe03 	smulbb	lr, lr, r3
 8013100:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8013104:	fa5f fc8c 	uxtb.w	ip, ip
 8013108:	fb12 f203 	smulbb	r2, r2, r3
 801310c:	fb05 e506 	mla	r5, r5, r6, lr
 8013110:	fb0c 2c06 	mla	ip, ip, r6, r2
 8013114:	f107 0e01 	add.w	lr, r7, #1
 8013118:	fa1f fc8c 	uxth.w	ip, ip
 801311c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8013120:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 8013124:	f10c 0701 	add.w	r7, ip, #1
 8013128:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801312c:	b2ad      	uxth	r5, r5
 801312e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8013132:	ea47 070e 	orr.w	r7, r7, lr
 8013136:	f105 0e01 	add.w	lr, r5, #1
 801313a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801313e:	096d      	lsrs	r5, r5, #5
 8013140:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8013144:	432f      	orrs	r7, r5
 8013146:	8007      	strh	r7, [r0, #0]
 8013148:	3002      	adds	r0, #2
 801314a:	3402      	adds	r4, #2
 801314c:	e7ac      	b.n	80130a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801314e:	f8b9 3000 	ldrh.w	r3, [r9]
 8013152:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8013156:	eba3 0308 	sub.w	r3, r3, r8
 801315a:	eba6 0608 	sub.w	r6, r6, r8
 801315e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8013162:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013166:	440e      	add	r6, r1
 8013168:	e797      	b.n	801309a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801316a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801316e:	42a8      	cmp	r0, r5
 8013170:	d262      	bcs.n	8013238 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8013172:	9b00      	ldr	r3, [sp, #0]
 8013174:	4631      	mov	r1, r6
 8013176:	eb00 0b03 	add.w	fp, r0, r3
 801317a:	4558      	cmp	r0, fp
 801317c:	d24e      	bcs.n	801321c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801317e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8013182:	b12b      	cbz	r3, 8013190 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8013184:	2bff      	cmp	r3, #255	@ 0xff
 8013186:	f8b4 e000 	ldrh.w	lr, [r4]
 801318a:	d104      	bne.n	8013196 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801318c:	f8a0 e000 	strh.w	lr, [r0]
 8013190:	3002      	adds	r0, #2
 8013192:	3402      	adds	r4, #2
 8013194:	e7f1      	b.n	801317a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8013196:	8802      	ldrh	r2, [r0, #0]
 8013198:	b29f      	uxth	r7, r3
 801319a:	1216      	asrs	r6, r2, #8
 801319c:	43db      	mvns	r3, r3
 801319e:	b2db      	uxtb	r3, r3
 80131a0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80131a4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80131a8:	fb16 f603 	smulbb	r6, r6, r3
 80131ac:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80131b0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80131b4:	00d2      	lsls	r2, r2, #3
 80131b6:	fb0c 6c07 	mla	ip, ip, r7, r6
 80131ba:	b2d2      	uxtb	r2, r2
 80131bc:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80131c0:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80131c4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80131c8:	fb1a fa03 	smulbb	sl, sl, r3
 80131cc:	fa1f fc8c 	uxth.w	ip, ip
 80131d0:	fb12 f303 	smulbb	r3, r2, r3
 80131d4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80131d8:	fa5f fe8e 	uxtb.w	lr, lr
 80131dc:	fb06 a607 	mla	r6, r6, r7, sl
 80131e0:	f10c 0201 	add.w	r2, ip, #1
 80131e4:	fb0e 3307 	mla	r3, lr, r7, r3
 80131e8:	b2b6      	uxth	r6, r6
 80131ea:	b29b      	uxth	r3, r3
 80131ec:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80131f0:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 80131f4:	f106 0a01 	add.w	sl, r6, #1
 80131f8:	f103 0c01 	add.w	ip, r3, #1
 80131fc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8013200:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8013204:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8013208:	0976      	lsrs	r6, r6, #5
 801320a:	ea4c 0c02 	orr.w	ip, ip, r2
 801320e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8013212:	ea4c 0c06 	orr.w	ip, ip, r6
 8013216:	f8a0 c000 	strh.w	ip, [r0]
 801321a:	e7b9      	b.n	8013190 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801321c:	f8b9 3000 	ldrh.w	r3, [r9]
 8013220:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8013224:	eba3 0308 	sub.w	r3, r3, r8
 8013228:	eba6 0608 	sub.w	r6, r6, r8
 801322c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8013230:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013234:	440e      	add	r6, r1
 8013236:	e79a      	b.n	801316e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8013238:	4b03      	ldr	r3, [pc, #12]	@ (8013248 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801323a:	6818      	ldr	r0, [r3, #0]
 801323c:	6803      	ldr	r3, [r0, #0]
 801323e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013240:	4798      	blx	r3
 8013242:	b007      	add	sp, #28
 8013244:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013248:	20013800 	.word	0x20013800
 801324c:	200137fa 	.word	0x200137fa

08013250 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8013250:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013254:	b089      	sub	sp, #36	@ 0x24
 8013256:	4682      	mov	sl, r0
 8013258:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 801325c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801325e:	460f      	mov	r7, r1
 8013260:	4691      	mov	r9, r2
 8013262:	4698      	mov	r8, r3
 8013264:	2e00      	cmp	r6, #0
 8013266:	d03d      	beq.n	80132e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013268:	4608      	mov	r0, r1
 801326a:	f7fa fe51 	bl	800df10 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801326e:	4605      	mov	r5, r0
 8013270:	4638      	mov	r0, r7
 8013272:	f7fa fe81 	bl	800df78 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013276:	f8ad 000e 	strh.w	r0, [sp, #14]
 801327a:	4638      	mov	r0, r7
 801327c:	f8ad 9008 	strh.w	r9, [sp, #8]
 8013280:	f8ad 500c 	strh.w	r5, [sp, #12]
 8013284:	f8ad 800a 	strh.w	r8, [sp, #10]
 8013288:	f7fa ff34 	bl	800e0f4 <_ZNK8touchgfx6Bitmap7getDataEv>
 801328c:	4605      	mov	r5, r0
 801328e:	4638      	mov	r0, r7
 8013290:	f7fa ff60 	bl	800e154 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8013294:	4681      	mov	r9, r0
 8013296:	4638      	mov	r0, r7
 8013298:	f7fa ffb0 	bl	800e1fc <_ZNK8touchgfx6Bitmap9getFormatEv>
 801329c:	280b      	cmp	r0, #11
 801329e:	d821      	bhi.n	80132e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80132a0:	e8df f000 	tbb	[pc, r0]
 80132a4:	2006aebe 	.word	0x2006aebe
 80132a8:	20202020 	.word	0x20202020
 80132ac:	b5202020 	.word	0xb5202020
 80132b0:	4bb0      	ldr	r3, [pc, #704]	@ (8013574 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 80132b2:	6818      	ldr	r0, [r3, #0]
 80132b4:	6803      	ldr	r3, [r0, #0]
 80132b6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80132b8:	4798      	blx	r3
 80132ba:	2eff      	cmp	r6, #255	@ 0xff
 80132bc:	d101      	bne.n	80132c2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 80132be:	0683      	lsls	r3, r0, #26
 80132c0:	d506      	bpl.n	80132d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 80132c2:	4633      	mov	r3, r6
 80132c4:	4622      	mov	r2, r4
 80132c6:	a902      	add	r1, sp, #8
 80132c8:	4628      	mov	r0, r5
 80132ca:	f7ff f907 	bl	80124dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80132ce:	e009      	b.n	80132e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80132d0:	4638      	mov	r0, r7
 80132d2:	f7fa fed7 	bl	800e084 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80132d6:	b940      	cbnz	r0, 80132ea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 80132d8:	4623      	mov	r3, r4
 80132da:	aa02      	add	r2, sp, #8
 80132dc:	4629      	mov	r1, r5
 80132de:	4650      	mov	r0, sl
 80132e0:	f7ff f9e2 	bl	80126a8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80132e4:	b009      	add	sp, #36	@ 0x24
 80132e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80132ea:	f10d 0818 	add.w	r8, sp, #24
 80132ee:	4639      	mov	r1, r7
 80132f0:	4640      	mov	r0, r8
 80132f2:	f7fa fe75 	bl	800dfe0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80132f6:	e898 0003 	ldmia.w	r8, {r0, r1}
 80132fa:	af04      	add	r7, sp, #16
 80132fc:	e887 0003 	stmia.w	r7, {r0, r1}
 8013300:	4638      	mov	r0, r7
 8013302:	4621      	mov	r1, r4
 8013304:	f7f6 fa1e 	bl	8009744 <_ZN8touchgfx4RectaNERKS0_>
 8013308:	4638      	mov	r0, r7
 801330a:	f7f6 fa5e 	bl	80097ca <_ZNK8touchgfx4Rect7isEmptyEv>
 801330e:	2800      	cmp	r0, #0
 8013310:	d1d7      	bne.n	80132c2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 8013312:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013316:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801331a:	4293      	cmp	r3, r2
 801331c:	dd12      	ble.n	8013344 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801331e:	1a9b      	subs	r3, r3, r2
 8013320:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013324:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8013328:	f8ad 0018 	strh.w	r0, [sp, #24]
 801332c:	f8ad 201a 	strh.w	r2, [sp, #26]
 8013330:	f8ad 101c 	strh.w	r1, [sp, #28]
 8013334:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013338:	4642      	mov	r2, r8
 801333a:	4633      	mov	r3, r6
 801333c:	a902      	add	r1, sp, #8
 801333e:	4628      	mov	r0, r5
 8013340:	f7ff f8cc 	bl	80124dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013344:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8013348:	f9b4 2000 	ldrsh.w	r2, [r4]
 801334c:	4293      	cmp	r3, r2
 801334e:	dd12      	ble.n	8013376 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 8013350:	1a9b      	subs	r3, r3, r2
 8013352:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8013356:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801335a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801335e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8013362:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013366:	f8ad 101e 	strh.w	r1, [sp, #30]
 801336a:	23ff      	movs	r3, #255	@ 0xff
 801336c:	4642      	mov	r2, r8
 801336e:	a902      	add	r1, sp, #8
 8013370:	4628      	mov	r0, r5
 8013372:	f7ff f8b3 	bl	80124dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013376:	463b      	mov	r3, r7
 8013378:	aa02      	add	r2, sp, #8
 801337a:	4629      	mov	r1, r5
 801337c:	4650      	mov	r0, sl
 801337e:	f7ff f993 	bl	80126a8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8013382:	88a2      	ldrh	r2, [r4, #4]
 8013384:	8823      	ldrh	r3, [r4, #0]
 8013386:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801338a:	4413      	add	r3, r2
 801338c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013390:	440a      	add	r2, r1
 8013392:	b29b      	uxth	r3, r3
 8013394:	b292      	uxth	r2, r2
 8013396:	b211      	sxth	r1, r2
 8013398:	b218      	sxth	r0, r3
 801339a:	4288      	cmp	r0, r1
 801339c:	dd12      	ble.n	80133c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801339e:	1a9b      	subs	r3, r3, r2
 80133a0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80133a4:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 80133a8:	f8ad 1018 	strh.w	r1, [sp, #24]
 80133ac:	f8ad 301c 	strh.w	r3, [sp, #28]
 80133b0:	f8ad 001e 	strh.w	r0, [sp, #30]
 80133b4:	23ff      	movs	r3, #255	@ 0xff
 80133b6:	4642      	mov	r2, r8
 80133b8:	a902      	add	r1, sp, #8
 80133ba:	4628      	mov	r0, r5
 80133bc:	f8ad 601a 	strh.w	r6, [sp, #26]
 80133c0:	f7ff f88c 	bl	80124dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80133c4:	88e2      	ldrh	r2, [r4, #6]
 80133c6:	8863      	ldrh	r3, [r4, #2]
 80133c8:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80133cc:	4413      	add	r3, r2
 80133ce:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80133d2:	440a      	add	r2, r1
 80133d4:	b29b      	uxth	r3, r3
 80133d6:	b292      	uxth	r2, r2
 80133d8:	b211      	sxth	r1, r2
 80133da:	b218      	sxth	r0, r3
 80133dc:	4288      	cmp	r0, r1
 80133de:	dd81      	ble.n	80132e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80133e0:	1a9b      	subs	r3, r3, r2
 80133e2:	f9b4 6000 	ldrsh.w	r6, [r4]
 80133e6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80133ea:	f8ad 301e 	strh.w	r3, [sp, #30]
 80133ee:	f8ad 6018 	strh.w	r6, [sp, #24]
 80133f2:	f8ad 101a 	strh.w	r1, [sp, #26]
 80133f6:	f8ad 001c 	strh.w	r0, [sp, #28]
 80133fa:	23ff      	movs	r3, #255	@ 0xff
 80133fc:	4642      	mov	r2, r8
 80133fe:	e762      	b.n	80132c6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 8013400:	4633      	mov	r3, r6
 8013402:	4622      	mov	r2, r4
 8013404:	a902      	add	r1, sp, #8
 8013406:	4628      	mov	r0, r5
 8013408:	f7ff f9be 	bl	8012788 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801340c:	e76a      	b.n	80132e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801340e:	e9cd 4600 	strd	r4, r6, [sp]
 8013412:	ab02      	add	r3, sp, #8
 8013414:	464a      	mov	r2, r9
 8013416:	4629      	mov	r1, r5
 8013418:	4650      	mov	r0, sl
 801341a:	f7ff fd95 	bl	8012f48 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801341e:	e761      	b.n	80132e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013420:	4638      	mov	r0, r7
 8013422:	f7fa fe2f 	bl	800e084 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8013426:	b950      	cbnz	r0, 801343e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 8013428:	e9cd 6000 	strd	r6, r0, [sp]
 801342c:	f8da 3000 	ldr.w	r3, [sl]
 8013430:	aa02      	add	r2, sp, #8
 8013432:	68de      	ldr	r6, [r3, #12]
 8013434:	4629      	mov	r1, r5
 8013436:	4623      	mov	r3, r4
 8013438:	4650      	mov	r0, sl
 801343a:	47b0      	blx	r6
 801343c:	e752      	b.n	80132e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801343e:	f10d 0818 	add.w	r8, sp, #24
 8013442:	4639      	mov	r1, r7
 8013444:	4640      	mov	r0, r8
 8013446:	f7fa fdcb 	bl	800dfe0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801344a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801344e:	af04      	add	r7, sp, #16
 8013450:	e887 0003 	stmia.w	r7, {r0, r1}
 8013454:	4638      	mov	r0, r7
 8013456:	4621      	mov	r1, r4
 8013458:	f7f6 f974 	bl	8009744 <_ZN8touchgfx4RectaNERKS0_>
 801345c:	4638      	mov	r0, r7
 801345e:	f7f6 f9b4 	bl	80097ca <_ZNK8touchgfx4Rect7isEmptyEv>
 8013462:	b138      	cbz	r0, 8013474 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8013464:	9600      	str	r6, [sp, #0]
 8013466:	4623      	mov	r3, r4
 8013468:	aa02      	add	r2, sp, #8
 801346a:	4649      	mov	r1, r9
 801346c:	4628      	mov	r0, r5
 801346e:	f7ff fdc9 	bl	8013004 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013472:	e737      	b.n	80132e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013474:	e9cd 6000 	strd	r6, r0, [sp]
 8013478:	f8da 3000 	ldr.w	r3, [sl]
 801347c:	aa02      	add	r2, sp, #8
 801347e:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8013482:	4629      	mov	r1, r5
 8013484:	463b      	mov	r3, r7
 8013486:	4650      	mov	r0, sl
 8013488:	47d8      	blx	fp
 801348a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801348e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013492:	4293      	cmp	r3, r2
 8013494:	dd13      	ble.n	80134be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 8013496:	f9b4 0000 	ldrsh.w	r0, [r4]
 801349a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801349e:	f8ad 0018 	strh.w	r0, [sp, #24]
 80134a2:	1a9b      	subs	r3, r3, r2
 80134a4:	f8ad 201a 	strh.w	r2, [sp, #26]
 80134a8:	f8ad 101c 	strh.w	r1, [sp, #28]
 80134ac:	f8ad 301e 	strh.w	r3, [sp, #30]
 80134b0:	9600      	str	r6, [sp, #0]
 80134b2:	4643      	mov	r3, r8
 80134b4:	aa02      	add	r2, sp, #8
 80134b6:	4649      	mov	r1, r9
 80134b8:	4628      	mov	r0, r5
 80134ba:	f7ff fda3 	bl	8013004 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80134be:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80134c2:	f9b4 2000 	ldrsh.w	r2, [r4]
 80134c6:	4293      	cmp	r3, r2
 80134c8:	dd13      	ble.n	80134f2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 80134ca:	1a9b      	subs	r3, r3, r2
 80134cc:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80134d0:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80134d4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80134d8:	f8ad 001a 	strh.w	r0, [sp, #26]
 80134dc:	f8ad 301c 	strh.w	r3, [sp, #28]
 80134e0:	f8ad 101e 	strh.w	r1, [sp, #30]
 80134e4:	9600      	str	r6, [sp, #0]
 80134e6:	4643      	mov	r3, r8
 80134e8:	aa02      	add	r2, sp, #8
 80134ea:	4649      	mov	r1, r9
 80134ec:	4628      	mov	r0, r5
 80134ee:	f7ff fd89 	bl	8013004 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80134f2:	88a2      	ldrh	r2, [r4, #4]
 80134f4:	8823      	ldrh	r3, [r4, #0]
 80134f6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80134fa:	4413      	add	r3, r2
 80134fc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013500:	440a      	add	r2, r1
 8013502:	b29b      	uxth	r3, r3
 8013504:	b292      	uxth	r2, r2
 8013506:	b211      	sxth	r1, r2
 8013508:	b218      	sxth	r0, r3
 801350a:	4288      	cmp	r0, r1
 801350c:	dd13      	ble.n	8013536 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801350e:	1a9b      	subs	r3, r3, r2
 8013510:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8013514:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8013518:	f8ad 1018 	strh.w	r1, [sp, #24]
 801351c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013520:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013524:	9600      	str	r6, [sp, #0]
 8013526:	4643      	mov	r3, r8
 8013528:	aa02      	add	r2, sp, #8
 801352a:	4649      	mov	r1, r9
 801352c:	4628      	mov	r0, r5
 801352e:	f8ad 701a 	strh.w	r7, [sp, #26]
 8013532:	f7ff fd67 	bl	8013004 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013536:	88e2      	ldrh	r2, [r4, #6]
 8013538:	8863      	ldrh	r3, [r4, #2]
 801353a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801353e:	4413      	add	r3, r2
 8013540:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013544:	440a      	add	r2, r1
 8013546:	b29b      	uxth	r3, r3
 8013548:	b292      	uxth	r2, r2
 801354a:	b211      	sxth	r1, r2
 801354c:	b218      	sxth	r0, r3
 801354e:	4288      	cmp	r0, r1
 8013550:	f77f aec8 	ble.w	80132e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013554:	f9b4 7000 	ldrsh.w	r7, [r4]
 8013558:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801355c:	f8ad 7018 	strh.w	r7, [sp, #24]
 8013560:	1a9b      	subs	r3, r3, r2
 8013562:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013566:	f8ad 101a 	strh.w	r1, [sp, #26]
 801356a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801356e:	9600      	str	r6, [sp, #0]
 8013570:	4643      	mov	r3, r8
 8013572:	e779      	b.n	8013468 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 8013574:	20013800 	.word	0x20013800

08013578 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8013578:	b180      	cbz	r0, 801359c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801357a:	2903      	cmp	r1, #3
 801357c:	d81c      	bhi.n	80135b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801357e:	e8df f001 	tbb	[pc, r1]
 8013582:	1d02      	.short	0x1d02
 8013584:	1f08      	.short	0x1f08
 8013586:	4b10      	ldr	r3, [pc, #64]	@ (80135c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8013588:	8818      	ldrh	r0, [r3, #0]
 801358a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801358e:	4240      	negs	r0, r0
 8013590:	4770      	bx	lr
 8013592:	4b0d      	ldr	r3, [pc, #52]	@ (80135c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8013594:	8818      	ldrh	r0, [r3, #0]
 8013596:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801359a:	4770      	bx	lr
 801359c:	2903      	cmp	r1, #3
 801359e:	d80b      	bhi.n	80135b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80135a0:	a301      	add	r3, pc, #4	@ (adr r3, 80135a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 80135a2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80135a6:	bf00      	nop
 80135a8:	080135bd 	.word	0x080135bd
 80135ac:	08013593 	.word	0x08013593
 80135b0:	080135c1 	.word	0x080135c1
 80135b4:	08013587 	.word	0x08013587
 80135b8:	2000      	movs	r0, #0
 80135ba:	4770      	bx	lr
 80135bc:	2001      	movs	r0, #1
 80135be:	4770      	bx	lr
 80135c0:	f04f 30ff 	mov.w	r0, #4294967295
 80135c4:	4770      	bx	lr
 80135c6:	bf00      	nop
 80135c8:	200137fa 	.word	0x200137fa

080135cc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80135cc:	b180      	cbz	r0, 80135f0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 80135ce:	2903      	cmp	r1, #3
 80135d0:	d81c      	bhi.n	801360c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80135d2:	e8df f001 	tbb	[pc, r1]
 80135d6:	021d      	.short	0x021d
 80135d8:	071f      	.short	0x071f
 80135da:	4b10      	ldr	r3, [pc, #64]	@ (801361c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80135dc:	8818      	ldrh	r0, [r3, #0]
 80135de:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80135e2:	4770      	bx	lr
 80135e4:	4b0d      	ldr	r3, [pc, #52]	@ (801361c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80135e6:	8818      	ldrh	r0, [r3, #0]
 80135e8:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80135ec:	4240      	negs	r0, r0
 80135ee:	4770      	bx	lr
 80135f0:	2903      	cmp	r1, #3
 80135f2:	d80b      	bhi.n	801360c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80135f4:	a301      	add	r3, pc, #4	@ (adr r3, 80135fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 80135f6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80135fa:	bf00      	nop
 80135fc:	080135db 	.word	0x080135db
 8013600:	08013615 	.word	0x08013615
 8013604:	080135e5 	.word	0x080135e5
 8013608:	08013611 	.word	0x08013611
 801360c:	2000      	movs	r0, #0
 801360e:	4770      	bx	lr
 8013610:	2001      	movs	r0, #1
 8013612:	4770      	bx	lr
 8013614:	f04f 30ff 	mov.w	r0, #4294967295
 8013618:	4770      	bx	lr
 801361a:	bf00      	nop
 801361c:	200137fa 	.word	0x200137fa

08013620 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8013620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013624:	b099      	sub	sp, #100	@ 0x64
 8013626:	910b      	str	r1, [sp, #44]	@ 0x2c
 8013628:	a914      	add	r1, sp, #80	@ 0x50
 801362a:	e881 000c 	stmia.w	r1, {r2, r3}
 801362e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 8013632:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 8013636:	f891 900d 	ldrb.w	r9, [r1, #13]
 801363a:	9309      	str	r3, [sp, #36]	@ 0x24
 801363c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8013640:	9310      	str	r3, [sp, #64]	@ 0x40
 8013642:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8013646:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 801364a:	930c      	str	r3, [sp, #48]	@ 0x30
 801364c:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 8013650:	798f      	ldrb	r7, [r1, #6]
 8013652:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 8013656:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 801365a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 801365e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 8013662:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 8013666:	431f      	orrs	r7, r3
 8013668:	f000 8195 	beq.w	8013996 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801366c:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8013670:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 8013674:	f891 9007 	ldrb.w	r9, [r1, #7]
 8013678:	ea59 0903 	orrs.w	r9, r9, r3
 801367c:	f000 818b 	beq.w	8013996 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8013680:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8013684:	b29b      	uxth	r3, r3
 8013686:	2d00      	cmp	r5, #0
 8013688:	f000 812e 	beq.w	80138e8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801368c:	1aed      	subs	r5, r5, r3
 801368e:	b2ad      	uxth	r5, r5
 8013690:	042b      	lsls	r3, r5, #16
 8013692:	d502      	bpl.n	801369a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8013694:	1b64      	subs	r4, r4, r5
 8013696:	b224      	sxth	r4, r4
 8013698:	2500      	movs	r5, #0
 801369a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801369e:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 80136a2:	428c      	cmp	r4, r1
 80136a4:	b28b      	uxth	r3, r1
 80136a6:	bfbf      	itttt	lt
 80136a8:	18ed      	addlt	r5, r5, r3
 80136aa:	1b2c      	sublt	r4, r5, r4
 80136ac:	b2a5      	uxthlt	r5, r4
 80136ae:	460c      	movlt	r4, r1
 80136b0:	8891      	ldrh	r1, [r2, #4]
 80136b2:	440b      	add	r3, r1
 80136b4:	b21b      	sxth	r3, r3
 80136b6:	930f      	str	r3, [sp, #60]	@ 0x3c
 80136b8:	88d3      	ldrh	r3, [r2, #6]
 80136ba:	8852      	ldrh	r2, [r2, #2]
 80136bc:	4413      	add	r3, r2
 80136be:	b21b      	sxth	r3, r3
 80136c0:	930d      	str	r3, [sp, #52]	@ 0x34
 80136c2:	4bbe      	ldr	r3, [pc, #760]	@ (80139bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 80136c4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80136c6:	f893 b000 	ldrb.w	fp, [r3]
 80136ca:	f10b 3cff 	add.w	ip, fp, #4294967295
 80136ce:	f1dc 0300 	rsbs	r3, ip, #0
 80136d2:	eb43 030c 	adc.w	r3, r3, ip
 80136d6:	930e      	str	r3, [sp, #56]	@ 0x38
 80136d8:	4621      	mov	r1, r4
 80136da:	4653      	mov	r3, sl
 80136dc:	a814      	add	r0, sp, #80	@ 0x50
 80136de:	f7f8 fa5b 	bl	800bb98 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 80136e2:	4621      	mov	r1, r4
 80136e4:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 80136e8:	4653      	mov	r3, sl
 80136ea:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80136ec:	a814      	add	r0, sp, #80	@ 0x50
 80136ee:	f7f8 fa70 	bl	800bbd2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 80136f2:	a918      	add	r1, sp, #96	@ 0x60
 80136f4:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80136f8:	a817      	add	r0, sp, #92	@ 0x5c
 80136fa:	f7f8 fb97 	bl	800be2c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80136fe:	f1ba 0f00 	cmp.w	sl, #0
 8013702:	f040 80f4 	bne.w	80138ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8013706:	f1bb 0f01 	cmp.w	fp, #1
 801370a:	f040 80f8 	bne.w	80138fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801370e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013710:	2b00      	cmp	r3, #0
 8013712:	f040 8145 	bne.w	80139a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8013716:	b2ba      	uxth	r2, r7
 8013718:	b905      	cbnz	r5, 801371c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801371a:	b16e      	cbz	r6, 8013738 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801371c:	fb06 5302 	mla	r3, r6, r2, r5
 8013720:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 8013722:	fb08 f303 	mul.w	r3, r8, r3
 8013726:	4631      	mov	r1, r6
 8013728:	f003 0607 	and.w	r6, r3, #7
 801372c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8013730:	9328      	str	r3, [sp, #160]	@ 0xa0
 8013732:	eba9 0301 	sub.w	r3, r9, r1
 8013736:	930a      	str	r3, [sp, #40]	@ 0x28
 8013738:	4651      	mov	r1, sl
 801373a:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801373c:	f7ff ff1c 	bl	8013578 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8013740:	4681      	mov	r9, r0
 8013742:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8013744:	f7ff ff42 	bl	80135cc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8013748:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801374a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801374c:	eba3 0a01 	sub.w	sl, r3, r1
 8013750:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8013752:	459a      	cmp	sl, r3
 8013754:	bfa8      	it	ge
 8013756:	469a      	movge	sl, r3
 8013758:	f1ba 0f00 	cmp.w	sl, #0
 801375c:	4683      	mov	fp, r0
 801375e:	f340 811a 	ble.w	8013996 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8013762:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8013764:	1b64      	subs	r4, r4, r5
 8013766:	1b1c      	subs	r4, r3, r4
 8013768:	42bc      	cmp	r4, r7
 801376a:	bfd4      	ite	le
 801376c:	ebc5 0504 	rsble	r5, r5, r4
 8013770:	ebc5 0507 	rsbgt	r5, r5, r7
 8013774:	2d00      	cmp	r5, #0
 8013776:	f340 810e 	ble.w	8013996 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801377a:	1b52      	subs	r2, r2, r5
 801377c:	fb08 f302 	mul.w	r3, r8, r2
 8013780:	930f      	str	r3, [sp, #60]	@ 0x3c
 8013782:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8013784:	2b00      	cmp	r3, #0
 8013786:	f040 8116 	bne.w	80139b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801378a:	4b8d      	ldr	r3, [pc, #564]	@ (80139c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801378c:	6818      	ldr	r0, [r3, #0]
 801378e:	6803      	ldr	r3, [r0, #0]
 8013790:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013792:	4798      	blx	r3
 8013794:	2301      	movs	r3, #1
 8013796:	fa03 f308 	lsl.w	r3, r3, r8
 801379a:	4a8a      	ldr	r2, [pc, #552]	@ (80139c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801379c:	3b01      	subs	r3, #1
 801379e:	b2db      	uxtb	r3, r3
 80137a0:	8811      	ldrh	r1, [r2, #0]
 80137a2:	930e      	str	r3, [sp, #56]	@ 0x38
 80137a4:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 80137a8:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 80137ac:	fb01 2303 	mla	r3, r1, r3, r2
 80137b0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80137b4:	930a      	str	r3, [sp, #40]	@ 0x28
 80137b6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80137b8:	f3c3 4307 	ubfx	r3, r3, #16, #8
 80137bc:	9313      	str	r3, [sp, #76]	@ 0x4c
 80137be:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80137c0:	0a19      	lsrs	r1, r3, #8
 80137c2:	b2cb      	uxtb	r3, r1
 80137c4:	9312      	str	r3, [sp, #72]	@ 0x48
 80137c6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80137c8:	b2db      	uxtb	r3, r3
 80137ca:	9311      	str	r3, [sp, #68]	@ 0x44
 80137cc:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80137ce:	095a      	lsrs	r2, r3, #5
 80137d0:	4b7d      	ldr	r3, [pc, #500]	@ (80139c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 80137d2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80137d6:	400b      	ands	r3, r1
 80137d8:	4313      	orrs	r3, r2
 80137da:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 80137dc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80137e0:	4313      	orrs	r3, r2
 80137e2:	b29b      	uxth	r3, r3
 80137e4:	9310      	str	r3, [sp, #64]	@ 0x40
 80137e6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80137e8:	781a      	ldrb	r2, [r3, #0]
 80137ea:	ea4f 0349 	mov.w	r3, r9, lsl #1
 80137ee:	4132      	asrs	r2, r6
 80137f0:	fb05 b919 	mls	r9, r5, r9, fp
 80137f4:	fb03 fb05 	mul.w	fp, r3, r5
 80137f8:	b2d2      	uxtb	r2, r2
 80137fa:	930d      	str	r3, [sp, #52]	@ 0x34
 80137fc:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8013800:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8013804:	f0c0 80f5 	bcc.w	80139f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8013808:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 801380c:	46ae      	mov	lr, r5
 801380e:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8013812:	f0c0 80dd 	bcc.w	80139d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8013816:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013818:	4013      	ands	r3, r2
 801381a:	d055      	beq.n	80138c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801381c:	20ff      	movs	r0, #255	@ 0xff
 801381e:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8013820:	fb90 f1f1 	sdiv	r1, r0, r1
 8013824:	434b      	muls	r3, r1
 8013826:	2bfe      	cmp	r3, #254	@ 0xfe
 8013828:	dd03      	ble.n	8013832 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801382a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801382c:	4281      	cmp	r1, r0
 801382e:	f000 80cd 	beq.w	80139cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8013832:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8013834:	f8bc 4000 	ldrh.w	r4, [ip]
 8013838:	fb11 f303 	smulbb	r3, r1, r3
 801383c:	b29b      	uxth	r3, r3
 801383e:	1c59      	adds	r1, r3, #1
 8013840:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8013844:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8013848:	b29f      	uxth	r7, r3
 801384a:	43db      	mvns	r3, r3
 801384c:	b2db      	uxtb	r3, r3
 801384e:	9309      	str	r3, [sp, #36]	@ 0x24
 8013850:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8013852:	1220      	asrs	r0, r4, #8
 8013854:	fb13 f907 	smulbb	r9, r3, r7
 8013858:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801385c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801385e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8013862:	fb00 9003 	mla	r0, r0, r3, r9
 8013866:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8013868:	10e1      	asrs	r1, r4, #3
 801386a:	fb13 f907 	smulbb	r9, r3, r7
 801386e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8013872:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013874:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8013878:	fb01 9103 	mla	r1, r1, r3, r9
 801387c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801387e:	00e4      	lsls	r4, r4, #3
 8013880:	fb13 f707 	smulbb	r7, r3, r7
 8013884:	b2e4      	uxtb	r4, r4
 8013886:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013888:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801388c:	fb04 7403 	mla	r4, r4, r3, r7
 8013890:	b280      	uxth	r0, r0
 8013892:	b2a4      	uxth	r4, r4
 8013894:	1c43      	adds	r3, r0, #1
 8013896:	f104 0901 	add.w	r9, r4, #1
 801389a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801389e:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 80138a2:	b289      	uxth	r1, r1
 80138a4:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 80138a8:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80138ac:	ea49 0000 	orr.w	r0, r9, r0
 80138b0:	f101 0901 	add.w	r9, r1, #1
 80138b4:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 80138b8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80138bc:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80138c0:	ea40 0009 	orr.w	r0, r0, r9
 80138c4:	f8ac 0000 	strh.w	r0, [ip]
 80138c8:	4446      	add	r6, r8
 80138ca:	b2b6      	uxth	r6, r6
 80138cc:	2e07      	cmp	r6, #7
 80138ce:	bf81      	itttt	hi
 80138d0:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 80138d2:	785a      	ldrbhi	r2, [r3, #1]
 80138d4:	3301      	addhi	r3, #1
 80138d6:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 80138d8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80138da:	bf9a      	itte	ls
 80138dc:	fa42 f208 	asrls.w	r2, r2, r8
 80138e0:	b2d2      	uxtbls	r2, r2
 80138e2:	2600      	movhi	r6, #0
 80138e4:	449c      	add	ip, r3
 80138e6:	e792      	b.n	801380e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 80138e8:	441c      	add	r4, r3
 80138ea:	b224      	sxth	r4, r4
 80138ec:	e6d5      	b.n	801369a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80138ee:	f1ba 0f01 	cmp.w	sl, #1
 80138f2:	f47f af0c 	bne.w	801370e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80138f6:	f1bb 0f01 	cmp.w	fp, #1
 80138fa:	f47f af08 	bne.w	801370e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80138fe:	f8df b0c0 	ldr.w	fp, [pc, #192]	@ 80139c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8013902:	f8db 0000 	ldr.w	r0, [fp]
 8013906:	6803      	ldr	r3, [r0, #0]
 8013908:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801390a:	4798      	blx	r3
 801390c:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 8013910:	465a      	mov	r2, fp
 8013912:	d006      	beq.n	8013922 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8013914:	f1b8 0f04 	cmp.w	r8, #4
 8013918:	d140      	bne.n	801399c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801391a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801391c:	3300      	adds	r3, #0
 801391e:	bf18      	it	ne
 8013920:	2301      	movne	r3, #1
 8013922:	0580      	lsls	r0, r0, #22
 8013924:	d56e      	bpl.n	8013a04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8013926:	f1b8 0f08 	cmp.w	r8, #8
 801392a:	d16b      	bne.n	8013a04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801392c:	2b00      	cmp	r3, #0
 801392e:	bf0c      	ite	eq
 8013930:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 8013934:	f44f 7180 	movne.w	r1, #256	@ 0x100
 8013938:	2d00      	cmp	r5, #0
 801393a:	f47f aee8 	bne.w	801370e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801393e:	2e00      	cmp	r6, #0
 8013940:	f47f aee5 	bne.w	801370e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8013944:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8013946:	19e3      	adds	r3, r4, r7
 8013948:	4283      	cmp	r3, r0
 801394a:	f73f aee0 	bgt.w	801370e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801394e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013950:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8013952:	444b      	add	r3, r9
 8013954:	4283      	cmp	r3, r0
 8013956:	f73f aeda 	bgt.w	801370e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801395a:	6810      	ldr	r0, [r2, #0]
 801395c:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 8013960:	6804      	ldr	r4, [r0, #0]
 8013962:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8013966:	b2bf      	uxth	r7, r7
 8013968:	f1b8 0f08 	cmp.w	r8, #8
 801396c:	f04f 0500 	mov.w	r5, #0
 8013970:	bf18      	it	ne
 8013972:	3701      	addne	r7, #1
 8013974:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8013978:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801397a:	9104      	str	r1, [sp, #16]
 801397c:	bf18      	it	ne
 801397e:	f027 0701 	bicne.w	r7, r7, #1
 8013982:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8013984:	bf18      	it	ne
 8013986:	b2bf      	uxthne	r7, r7
 8013988:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801398c:	e9cd 7900 	strd	r7, r9, [sp]
 8013990:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8013992:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 8013994:	47a0      	blx	r4
 8013996:	b019      	add	sp, #100	@ 0x64
 8013998:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801399c:	2300      	movs	r3, #0
 801399e:	e7c0      	b.n	8013922 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 80139a0:	2208      	movs	r2, #8
 80139a2:	fb92 f3f8 	sdiv	r3, r2, r8
 80139a6:	1e5a      	subs	r2, r3, #1
 80139a8:	443a      	add	r2, r7
 80139aa:	fb92 f2f3 	sdiv	r2, r2, r3
 80139ae:	fb12 f203 	smulbb	r2, r2, r3
 80139b2:	b292      	uxth	r2, r2
 80139b4:	e6b0      	b.n	8013718 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 80139b6:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80139b8:	e6ec      	b.n	8013794 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 80139ba:	bf00      	nop
 80139bc:	200137f8 	.word	0x200137f8
 80139c0:	20013800 	.word	0x20013800
 80139c4:	200137fa 	.word	0x200137fa
 80139c8:	00fff800 	.word	0x00fff800
 80139cc:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80139ce:	e779      	b.n	80138c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 80139d0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80139d2:	b153      	cbz	r3, 80139ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 80139d4:	441e      	add	r6, r3
 80139d6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80139d8:	b2b6      	uxth	r6, r6
 80139da:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 80139de:	f006 0607 	and.w	r6, r6, #7
 80139e2:	781a      	ldrb	r2, [r3, #0]
 80139e4:	9328      	str	r3, [sp, #160]	@ 0xa0
 80139e6:	4132      	asrs	r2, r6
 80139e8:	b2d2      	uxtb	r2, r2
 80139ea:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80139ec:	445b      	add	r3, fp
 80139ee:	930a      	str	r3, [sp, #40]	@ 0x28
 80139f0:	e706      	b.n	8013800 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 80139f2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80139f4:	2b00      	cmp	r3, #0
 80139f6:	d1ce      	bne.n	8013996 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80139f8:	4b05      	ldr	r3, [pc, #20]	@ (8013a10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 80139fa:	6818      	ldr	r0, [r3, #0]
 80139fc:	6803      	ldr	r3, [r0, #0]
 80139fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013a00:	4798      	blx	r3
 8013a02:	e7c8      	b.n	8013996 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8013a04:	2b00      	cmp	r3, #0
 8013a06:	f43f ae82 	beq.w	801370e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8013a0a:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8013a0e:	e793      	b.n	8013938 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8013a10:	20013800 	.word	0x20013800

08013a14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8013a14:	b538      	push	{r3, r4, r5, lr}
 8013a16:	4c15      	ldr	r4, [pc, #84]	@ (8013a6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8013a18:	7823      	ldrb	r3, [r4, #0]
 8013a1a:	f3bf 8f5b 	dmb	ish
 8013a1e:	07da      	lsls	r2, r3, #31
 8013a20:	4605      	mov	r5, r0
 8013a22:	d40b      	bmi.n	8013a3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8013a24:	4620      	mov	r0, r4
 8013a26:	f007 fef5 	bl	801b814 <__cxa_guard_acquire>
 8013a2a:	b138      	cbz	r0, 8013a3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8013a2c:	4620      	mov	r0, r4
 8013a2e:	f007 fefd 	bl	801b82c <__cxa_guard_release>
 8013a32:	4a0f      	ldr	r2, [pc, #60]	@ (8013a70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8013a34:	490f      	ldr	r1, [pc, #60]	@ (8013a74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8013a36:	4810      	ldr	r0, [pc, #64]	@ (8013a78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8013a38:	f007 fee5 	bl	801b806 <__aeabi_atexit>
 8013a3c:	4c0f      	ldr	r4, [pc, #60]	@ (8013a7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8013a3e:	7823      	ldrb	r3, [r4, #0]
 8013a40:	f3bf 8f5b 	dmb	ish
 8013a44:	07db      	lsls	r3, r3, #31
 8013a46:	d40b      	bmi.n	8013a60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8013a48:	4620      	mov	r0, r4
 8013a4a:	f007 fee3 	bl	801b814 <__cxa_guard_acquire>
 8013a4e:	b138      	cbz	r0, 8013a60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8013a50:	4620      	mov	r0, r4
 8013a52:	f007 feeb 	bl	801b82c <__cxa_guard_release>
 8013a56:	4a06      	ldr	r2, [pc, #24]	@ (8013a70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8013a58:	4909      	ldr	r1, [pc, #36]	@ (8013a80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8013a5a:	480a      	ldr	r0, [pc, #40]	@ (8013a84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8013a5c:	f007 fed3 	bl	801b806 <__aeabi_atexit>
 8013a60:	4b05      	ldr	r3, [pc, #20]	@ (8013a78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8013a62:	616b      	str	r3, [r5, #20]
 8013a64:	4b07      	ldr	r3, [pc, #28]	@ (8013a84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8013a66:	61ab      	str	r3, [r5, #24]
 8013a68:	bd38      	pop	{r3, r4, r5, pc}
 8013a6a:	bf00      	nop
 8013a6c:	200138d8 	.word	0x200138d8
 8013a70:	20000000 	.word	0x20000000
 8013a74:	08010813 	.word	0x08010813
 8013a78:	200000d8 	.word	0x200000d8
 8013a7c:	200138dc 	.word	0x200138dc
 8013a80:	08010811 	.word	0x08010811
 8013a84:	200000dc 	.word	0x200000dc

08013a88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8013a88:	b538      	push	{r3, r4, r5, lr}
 8013a8a:	4c15      	ldr	r4, [pc, #84]	@ (8013ae0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8013a8c:	7823      	ldrb	r3, [r4, #0]
 8013a8e:	f3bf 8f5b 	dmb	ish
 8013a92:	07da      	lsls	r2, r3, #31
 8013a94:	4605      	mov	r5, r0
 8013a96:	d40b      	bmi.n	8013ab0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8013a98:	4620      	mov	r0, r4
 8013a9a:	f007 febb 	bl	801b814 <__cxa_guard_acquire>
 8013a9e:	b138      	cbz	r0, 8013ab0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8013aa0:	4620      	mov	r0, r4
 8013aa2:	f007 fec3 	bl	801b82c <__cxa_guard_release>
 8013aa6:	4a0f      	ldr	r2, [pc, #60]	@ (8013ae4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8013aa8:	490f      	ldr	r1, [pc, #60]	@ (8013ae8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8013aaa:	4810      	ldr	r0, [pc, #64]	@ (8013aec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8013aac:	f007 feab 	bl	801b806 <__aeabi_atexit>
 8013ab0:	4c0f      	ldr	r4, [pc, #60]	@ (8013af0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8013ab2:	7823      	ldrb	r3, [r4, #0]
 8013ab4:	f3bf 8f5b 	dmb	ish
 8013ab8:	07db      	lsls	r3, r3, #31
 8013aba:	d40b      	bmi.n	8013ad4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8013abc:	4620      	mov	r0, r4
 8013abe:	f007 fea9 	bl	801b814 <__cxa_guard_acquire>
 8013ac2:	b138      	cbz	r0, 8013ad4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8013ac4:	4620      	mov	r0, r4
 8013ac6:	f007 feb1 	bl	801b82c <__cxa_guard_release>
 8013aca:	4a06      	ldr	r2, [pc, #24]	@ (8013ae4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8013acc:	4909      	ldr	r1, [pc, #36]	@ (8013af4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8013ace:	480a      	ldr	r0, [pc, #40]	@ (8013af8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8013ad0:	f007 fe99 	bl	801b806 <__aeabi_atexit>
 8013ad4:	4b05      	ldr	r3, [pc, #20]	@ (8013aec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8013ad6:	60eb      	str	r3, [r5, #12]
 8013ad8:	4b07      	ldr	r3, [pc, #28]	@ (8013af8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8013ada:	612b      	str	r3, [r5, #16]
 8013adc:	bd38      	pop	{r3, r4, r5, pc}
 8013ade:	bf00      	nop
 8013ae0:	200138b0 	.word	0x200138b0
 8013ae4:	20000000 	.word	0x20000000
 8013ae8:	08010817 	.word	0x08010817
 8013aec:	200000b0 	.word	0x200000b0
 8013af0:	200138b4 	.word	0x200138b4
 8013af4:	08010815 	.word	0x08010815
 8013af8:	200000b4 	.word	0x200000b4

08013afc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8013afc:	b510      	push	{r4, lr}
 8013afe:	4604      	mov	r4, r0
 8013b00:	f7ff ff88 	bl	8013a14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8013b04:	4620      	mov	r0, r4
 8013b06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013b0a:	f7ff bfbd 	b.w	8013a88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08013b10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8013b10:	b538      	push	{r3, r4, r5, lr}
 8013b12:	4c15      	ldr	r4, [pc, #84]	@ (8013b68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8013b14:	7823      	ldrb	r3, [r4, #0]
 8013b16:	f3bf 8f5b 	dmb	ish
 8013b1a:	07da      	lsls	r2, r3, #31
 8013b1c:	4605      	mov	r5, r0
 8013b1e:	d40b      	bmi.n	8013b38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8013b20:	4620      	mov	r0, r4
 8013b22:	f007 fe77 	bl	801b814 <__cxa_guard_acquire>
 8013b26:	b138      	cbz	r0, 8013b38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8013b28:	4620      	mov	r0, r4
 8013b2a:	f007 fe7f 	bl	801b82c <__cxa_guard_release>
 8013b2e:	4a0f      	ldr	r2, [pc, #60]	@ (8013b6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8013b30:	490f      	ldr	r1, [pc, #60]	@ (8013b70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8013b32:	4810      	ldr	r0, [pc, #64]	@ (8013b74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8013b34:	f007 fe67 	bl	801b806 <__aeabi_atexit>
 8013b38:	4c0f      	ldr	r4, [pc, #60]	@ (8013b78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8013b3a:	7823      	ldrb	r3, [r4, #0]
 8013b3c:	f3bf 8f5b 	dmb	ish
 8013b40:	07db      	lsls	r3, r3, #31
 8013b42:	d40b      	bmi.n	8013b5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8013b44:	4620      	mov	r0, r4
 8013b46:	f007 fe65 	bl	801b814 <__cxa_guard_acquire>
 8013b4a:	b138      	cbz	r0, 8013b5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8013b4c:	4620      	mov	r0, r4
 8013b4e:	f007 fe6d 	bl	801b82c <__cxa_guard_release>
 8013b52:	4a06      	ldr	r2, [pc, #24]	@ (8013b6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8013b54:	4909      	ldr	r1, [pc, #36]	@ (8013b7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8013b56:	480a      	ldr	r0, [pc, #40]	@ (8013b80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8013b58:	f007 fe55 	bl	801b806 <__aeabi_atexit>
 8013b5c:	4b05      	ldr	r3, [pc, #20]	@ (8013b74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8013b5e:	626b      	str	r3, [r5, #36]	@ 0x24
 8013b60:	4b07      	ldr	r3, [pc, #28]	@ (8013b80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8013b62:	62ab      	str	r3, [r5, #40]	@ 0x28
 8013b64:	bd38      	pop	{r3, r4, r5, pc}
 8013b66:	bf00      	nop
 8013b68:	200138e0 	.word	0x200138e0
 8013b6c:	20000000 	.word	0x20000000
 8013b70:	0801080b 	.word	0x0801080b
 8013b74:	200000e0 	.word	0x200000e0
 8013b78:	200138e4 	.word	0x200138e4
 8013b7c:	08010809 	.word	0x08010809
 8013b80:	200000e4 	.word	0x200000e4

08013b84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8013b84:	b538      	push	{r3, r4, r5, lr}
 8013b86:	4c15      	ldr	r4, [pc, #84]	@ (8013bdc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8013b88:	7823      	ldrb	r3, [r4, #0]
 8013b8a:	f3bf 8f5b 	dmb	ish
 8013b8e:	07da      	lsls	r2, r3, #31
 8013b90:	4605      	mov	r5, r0
 8013b92:	d40b      	bmi.n	8013bac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8013b94:	4620      	mov	r0, r4
 8013b96:	f007 fe3d 	bl	801b814 <__cxa_guard_acquire>
 8013b9a:	b138      	cbz	r0, 8013bac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8013b9c:	4620      	mov	r0, r4
 8013b9e:	f007 fe45 	bl	801b82c <__cxa_guard_release>
 8013ba2:	4a0f      	ldr	r2, [pc, #60]	@ (8013be0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8013ba4:	490f      	ldr	r1, [pc, #60]	@ (8013be4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8013ba6:	4810      	ldr	r0, [pc, #64]	@ (8013be8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8013ba8:	f007 fe2d 	bl	801b806 <__aeabi_atexit>
 8013bac:	4c0f      	ldr	r4, [pc, #60]	@ (8013bec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8013bae:	7823      	ldrb	r3, [r4, #0]
 8013bb0:	f3bf 8f5b 	dmb	ish
 8013bb4:	07db      	lsls	r3, r3, #31
 8013bb6:	d40b      	bmi.n	8013bd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8013bb8:	4620      	mov	r0, r4
 8013bba:	f007 fe2b 	bl	801b814 <__cxa_guard_acquire>
 8013bbe:	b138      	cbz	r0, 8013bd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8013bc0:	4620      	mov	r0, r4
 8013bc2:	f007 fe33 	bl	801b82c <__cxa_guard_release>
 8013bc6:	4a06      	ldr	r2, [pc, #24]	@ (8013be0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8013bc8:	4909      	ldr	r1, [pc, #36]	@ (8013bf0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8013bca:	480a      	ldr	r0, [pc, #40]	@ (8013bf4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8013bcc:	f007 fe1b 	bl	801b806 <__aeabi_atexit>
 8013bd0:	4b05      	ldr	r3, [pc, #20]	@ (8013be8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8013bd2:	61eb      	str	r3, [r5, #28]
 8013bd4:	4b07      	ldr	r3, [pc, #28]	@ (8013bf4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8013bd6:	622b      	str	r3, [r5, #32]
 8013bd8:	bd38      	pop	{r3, r4, r5, pc}
 8013bda:	bf00      	nop
 8013bdc:	200138b8 	.word	0x200138b8
 8013be0:	20000000 	.word	0x20000000
 8013be4:	0801080f 	.word	0x0801080f
 8013be8:	200000b8 	.word	0x200000b8
 8013bec:	200138bc 	.word	0x200138bc
 8013bf0:	0801080d 	.word	0x0801080d
 8013bf4:	200000bc 	.word	0x200000bc

08013bf8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8013bf8:	b510      	push	{r4, lr}
 8013bfa:	4604      	mov	r4, r0
 8013bfc:	f7ff ff88 	bl	8013b10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8013c00:	4620      	mov	r0, r4
 8013c02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013c06:	f7ff bfbd 	b.w	8013b84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08013c0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8013c0c:	b538      	push	{r3, r4, r5, lr}
 8013c0e:	4c15      	ldr	r4, [pc, #84]	@ (8013c64 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8013c10:	7823      	ldrb	r3, [r4, #0]
 8013c12:	f3bf 8f5b 	dmb	ish
 8013c16:	07da      	lsls	r2, r3, #31
 8013c18:	4605      	mov	r5, r0
 8013c1a:	d40b      	bmi.n	8013c34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8013c1c:	4620      	mov	r0, r4
 8013c1e:	f007 fdf9 	bl	801b814 <__cxa_guard_acquire>
 8013c22:	b138      	cbz	r0, 8013c34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8013c24:	4620      	mov	r0, r4
 8013c26:	f007 fe01 	bl	801b82c <__cxa_guard_release>
 8013c2a:	4a0f      	ldr	r2, [pc, #60]	@ (8013c68 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8013c2c:	490f      	ldr	r1, [pc, #60]	@ (8013c6c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8013c2e:	4810      	ldr	r0, [pc, #64]	@ (8013c70 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8013c30:	f007 fde9 	bl	801b806 <__aeabi_atexit>
 8013c34:	4c0f      	ldr	r4, [pc, #60]	@ (8013c74 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8013c36:	7823      	ldrb	r3, [r4, #0]
 8013c38:	f3bf 8f5b 	dmb	ish
 8013c3c:	07db      	lsls	r3, r3, #31
 8013c3e:	d40b      	bmi.n	8013c58 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8013c40:	4620      	mov	r0, r4
 8013c42:	f007 fde7 	bl	801b814 <__cxa_guard_acquire>
 8013c46:	b138      	cbz	r0, 8013c58 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8013c48:	4620      	mov	r0, r4
 8013c4a:	f007 fdef 	bl	801b82c <__cxa_guard_release>
 8013c4e:	4a06      	ldr	r2, [pc, #24]	@ (8013c68 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8013c50:	4909      	ldr	r1, [pc, #36]	@ (8013c78 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8013c52:	480a      	ldr	r0, [pc, #40]	@ (8013c7c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8013c54:	f007 fdd7 	bl	801b806 <__aeabi_atexit>
 8013c58:	4b05      	ldr	r3, [pc, #20]	@ (8013c70 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8013c5a:	636b      	str	r3, [r5, #52]	@ 0x34
 8013c5c:	4b07      	ldr	r3, [pc, #28]	@ (8013c7c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8013c5e:	63ab      	str	r3, [r5, #56]	@ 0x38
 8013c60:	bd38      	pop	{r3, r4, r5, pc}
 8013c62:	bf00      	nop
 8013c64:	200138f0 	.word	0x200138f0
 8013c68:	20000000 	.word	0x20000000
 8013c6c:	08010803 	.word	0x08010803
 8013c70:	200000f0 	.word	0x200000f0
 8013c74:	200138f4 	.word	0x200138f4
 8013c78:	08010801 	.word	0x08010801
 8013c7c:	200000f4 	.word	0x200000f4

08013c80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8013c80:	b538      	push	{r3, r4, r5, lr}
 8013c82:	4c15      	ldr	r4, [pc, #84]	@ (8013cd8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8013c84:	7823      	ldrb	r3, [r4, #0]
 8013c86:	f3bf 8f5b 	dmb	ish
 8013c8a:	07da      	lsls	r2, r3, #31
 8013c8c:	4605      	mov	r5, r0
 8013c8e:	d40b      	bmi.n	8013ca8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8013c90:	4620      	mov	r0, r4
 8013c92:	f007 fdbf 	bl	801b814 <__cxa_guard_acquire>
 8013c96:	b138      	cbz	r0, 8013ca8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8013c98:	4620      	mov	r0, r4
 8013c9a:	f007 fdc7 	bl	801b82c <__cxa_guard_release>
 8013c9e:	4a0f      	ldr	r2, [pc, #60]	@ (8013cdc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8013ca0:	490f      	ldr	r1, [pc, #60]	@ (8013ce0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8013ca2:	4810      	ldr	r0, [pc, #64]	@ (8013ce4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8013ca4:	f007 fdaf 	bl	801b806 <__aeabi_atexit>
 8013ca8:	4c0f      	ldr	r4, [pc, #60]	@ (8013ce8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8013caa:	7823      	ldrb	r3, [r4, #0]
 8013cac:	f3bf 8f5b 	dmb	ish
 8013cb0:	07db      	lsls	r3, r3, #31
 8013cb2:	d40b      	bmi.n	8013ccc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8013cb4:	4620      	mov	r0, r4
 8013cb6:	f007 fdad 	bl	801b814 <__cxa_guard_acquire>
 8013cba:	b138      	cbz	r0, 8013ccc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8013cbc:	4620      	mov	r0, r4
 8013cbe:	f007 fdb5 	bl	801b82c <__cxa_guard_release>
 8013cc2:	4a06      	ldr	r2, [pc, #24]	@ (8013cdc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8013cc4:	4909      	ldr	r1, [pc, #36]	@ (8013cec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8013cc6:	480a      	ldr	r0, [pc, #40]	@ (8013cf0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8013cc8:	f007 fd9d 	bl	801b806 <__aeabi_atexit>
 8013ccc:	4b05      	ldr	r3, [pc, #20]	@ (8013ce4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8013cce:	62eb      	str	r3, [r5, #44]	@ 0x2c
 8013cd0:	4b07      	ldr	r3, [pc, #28]	@ (8013cf0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8013cd2:	632b      	str	r3, [r5, #48]	@ 0x30
 8013cd4:	bd38      	pop	{r3, r4, r5, pc}
 8013cd6:	bf00      	nop
 8013cd8:	200138c0 	.word	0x200138c0
 8013cdc:	20000000 	.word	0x20000000
 8013ce0:	08010807 	.word	0x08010807
 8013ce4:	200000c0 	.word	0x200000c0
 8013ce8:	200138c4 	.word	0x200138c4
 8013cec:	08010805 	.word	0x08010805
 8013cf0:	200000c4 	.word	0x200000c4

08013cf4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8013cf4:	b510      	push	{r4, lr}
 8013cf6:	4604      	mov	r4, r0
 8013cf8:	f7ff ff88 	bl	8013c0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8013cfc:	4620      	mov	r0, r4
 8013cfe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013d02:	f7ff bfbd 	b.w	8013c80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08013d08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8013d08:	b538      	push	{r3, r4, r5, lr}
 8013d0a:	4c15      	ldr	r4, [pc, #84]	@ (8013d60 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8013d0c:	7823      	ldrb	r3, [r4, #0]
 8013d0e:	f3bf 8f5b 	dmb	ish
 8013d12:	07da      	lsls	r2, r3, #31
 8013d14:	4605      	mov	r5, r0
 8013d16:	d40b      	bmi.n	8013d30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8013d18:	4620      	mov	r0, r4
 8013d1a:	f007 fd7b 	bl	801b814 <__cxa_guard_acquire>
 8013d1e:	b138      	cbz	r0, 8013d30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8013d20:	4620      	mov	r0, r4
 8013d22:	f007 fd83 	bl	801b82c <__cxa_guard_release>
 8013d26:	4a0f      	ldr	r2, [pc, #60]	@ (8013d64 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8013d28:	490f      	ldr	r1, [pc, #60]	@ (8013d68 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8013d2a:	4810      	ldr	r0, [pc, #64]	@ (8013d6c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8013d2c:	f007 fd6b 	bl	801b806 <__aeabi_atexit>
 8013d30:	4c0f      	ldr	r4, [pc, #60]	@ (8013d70 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8013d32:	7823      	ldrb	r3, [r4, #0]
 8013d34:	f3bf 8f5b 	dmb	ish
 8013d38:	07db      	lsls	r3, r3, #31
 8013d3a:	d40b      	bmi.n	8013d54 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8013d3c:	4620      	mov	r0, r4
 8013d3e:	f007 fd69 	bl	801b814 <__cxa_guard_acquire>
 8013d42:	b138      	cbz	r0, 8013d54 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8013d44:	4620      	mov	r0, r4
 8013d46:	f007 fd71 	bl	801b82c <__cxa_guard_release>
 8013d4a:	4a06      	ldr	r2, [pc, #24]	@ (8013d64 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8013d4c:	4909      	ldr	r1, [pc, #36]	@ (8013d74 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8013d4e:	480a      	ldr	r0, [pc, #40]	@ (8013d78 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8013d50:	f007 fd59 	bl	801b806 <__aeabi_atexit>
 8013d54:	4b05      	ldr	r3, [pc, #20]	@ (8013d6c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8013d56:	656b      	str	r3, [r5, #84]	@ 0x54
 8013d58:	4b07      	ldr	r3, [pc, #28]	@ (8013d78 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8013d5a:	65ab      	str	r3, [r5, #88]	@ 0x58
 8013d5c:	bd38      	pop	{r3, r4, r5, pc}
 8013d5e:	bf00      	nop
 8013d60:	200138f8 	.word	0x200138f8
 8013d64:	20000000 	.word	0x20000000
 8013d68:	080107f3 	.word	0x080107f3
 8013d6c:	200000f8 	.word	0x200000f8
 8013d70:	200138fc 	.word	0x200138fc
 8013d74:	080107f1 	.word	0x080107f1
 8013d78:	200000fc 	.word	0x200000fc

08013d7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8013d7c:	b538      	push	{r3, r4, r5, lr}
 8013d7e:	4c15      	ldr	r4, [pc, #84]	@ (8013dd4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8013d80:	7823      	ldrb	r3, [r4, #0]
 8013d82:	f3bf 8f5b 	dmb	ish
 8013d86:	07da      	lsls	r2, r3, #31
 8013d88:	4605      	mov	r5, r0
 8013d8a:	d40b      	bmi.n	8013da4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8013d8c:	4620      	mov	r0, r4
 8013d8e:	f007 fd41 	bl	801b814 <__cxa_guard_acquire>
 8013d92:	b138      	cbz	r0, 8013da4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8013d94:	4620      	mov	r0, r4
 8013d96:	f007 fd49 	bl	801b82c <__cxa_guard_release>
 8013d9a:	4a0f      	ldr	r2, [pc, #60]	@ (8013dd8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8013d9c:	490f      	ldr	r1, [pc, #60]	@ (8013ddc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8013d9e:	4810      	ldr	r0, [pc, #64]	@ (8013de0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8013da0:	f007 fd31 	bl	801b806 <__aeabi_atexit>
 8013da4:	4c0f      	ldr	r4, [pc, #60]	@ (8013de4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8013da6:	7823      	ldrb	r3, [r4, #0]
 8013da8:	f3bf 8f5b 	dmb	ish
 8013dac:	07db      	lsls	r3, r3, #31
 8013dae:	d40b      	bmi.n	8013dc8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8013db0:	4620      	mov	r0, r4
 8013db2:	f007 fd2f 	bl	801b814 <__cxa_guard_acquire>
 8013db6:	b138      	cbz	r0, 8013dc8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8013db8:	4620      	mov	r0, r4
 8013dba:	f007 fd37 	bl	801b82c <__cxa_guard_release>
 8013dbe:	4a06      	ldr	r2, [pc, #24]	@ (8013dd8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8013dc0:	4909      	ldr	r1, [pc, #36]	@ (8013de8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8013dc2:	480a      	ldr	r0, [pc, #40]	@ (8013dec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8013dc4:	f007 fd1f 	bl	801b806 <__aeabi_atexit>
 8013dc8:	4b05      	ldr	r3, [pc, #20]	@ (8013de0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8013dca:	64eb      	str	r3, [r5, #76]	@ 0x4c
 8013dcc:	4b07      	ldr	r3, [pc, #28]	@ (8013dec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8013dce:	652b      	str	r3, [r5, #80]	@ 0x50
 8013dd0:	bd38      	pop	{r3, r4, r5, pc}
 8013dd2:	bf00      	nop
 8013dd4:	20013900 	.word	0x20013900
 8013dd8:	20000000 	.word	0x20000000
 8013ddc:	080107f7 	.word	0x080107f7
 8013de0:	20000100 	.word	0x20000100
 8013de4:	20013904 	.word	0x20013904
 8013de8:	080107f5 	.word	0x080107f5
 8013dec:	20000104 	.word	0x20000104

08013df0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8013df0:	b538      	push	{r3, r4, r5, lr}
 8013df2:	4c15      	ldr	r4, [pc, #84]	@ (8013e48 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8013df4:	7823      	ldrb	r3, [r4, #0]
 8013df6:	f3bf 8f5b 	dmb	ish
 8013dfa:	07da      	lsls	r2, r3, #31
 8013dfc:	4605      	mov	r5, r0
 8013dfe:	d40b      	bmi.n	8013e18 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8013e00:	4620      	mov	r0, r4
 8013e02:	f007 fd07 	bl	801b814 <__cxa_guard_acquire>
 8013e06:	b138      	cbz	r0, 8013e18 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8013e08:	4620      	mov	r0, r4
 8013e0a:	f007 fd0f 	bl	801b82c <__cxa_guard_release>
 8013e0e:	4a0f      	ldr	r2, [pc, #60]	@ (8013e4c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8013e10:	490f      	ldr	r1, [pc, #60]	@ (8013e50 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8013e12:	4810      	ldr	r0, [pc, #64]	@ (8013e54 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8013e14:	f007 fcf7 	bl	801b806 <__aeabi_atexit>
 8013e18:	4c0f      	ldr	r4, [pc, #60]	@ (8013e58 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8013e1a:	7823      	ldrb	r3, [r4, #0]
 8013e1c:	f3bf 8f5b 	dmb	ish
 8013e20:	07db      	lsls	r3, r3, #31
 8013e22:	d40b      	bmi.n	8013e3c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8013e24:	4620      	mov	r0, r4
 8013e26:	f007 fcf5 	bl	801b814 <__cxa_guard_acquire>
 8013e2a:	b138      	cbz	r0, 8013e3c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8013e2c:	4620      	mov	r0, r4
 8013e2e:	f007 fcfd 	bl	801b82c <__cxa_guard_release>
 8013e32:	4a06      	ldr	r2, [pc, #24]	@ (8013e4c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8013e34:	4909      	ldr	r1, [pc, #36]	@ (8013e5c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8013e36:	480a      	ldr	r0, [pc, #40]	@ (8013e60 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8013e38:	f007 fce5 	bl	801b806 <__aeabi_atexit>
 8013e3c:	4b05      	ldr	r3, [pc, #20]	@ (8013e54 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8013e3e:	646b      	str	r3, [r5, #68]	@ 0x44
 8013e40:	4b07      	ldr	r3, [pc, #28]	@ (8013e60 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8013e42:	64ab      	str	r3, [r5, #72]	@ 0x48
 8013e44:	bd38      	pop	{r3, r4, r5, pc}
 8013e46:	bf00      	nop
 8013e48:	200138c8 	.word	0x200138c8
 8013e4c:	20000000 	.word	0x20000000
 8013e50:	080107fb 	.word	0x080107fb
 8013e54:	200000c8 	.word	0x200000c8
 8013e58:	200138cc 	.word	0x200138cc
 8013e5c:	080107f9 	.word	0x080107f9
 8013e60:	200000cc 	.word	0x200000cc

08013e64 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8013e64:	b538      	push	{r3, r4, r5, lr}
 8013e66:	4c15      	ldr	r4, [pc, #84]	@ (8013ebc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8013e68:	7823      	ldrb	r3, [r4, #0]
 8013e6a:	f3bf 8f5b 	dmb	ish
 8013e6e:	07da      	lsls	r2, r3, #31
 8013e70:	4605      	mov	r5, r0
 8013e72:	d40b      	bmi.n	8013e8c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8013e74:	4620      	mov	r0, r4
 8013e76:	f007 fccd 	bl	801b814 <__cxa_guard_acquire>
 8013e7a:	b138      	cbz	r0, 8013e8c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8013e7c:	4620      	mov	r0, r4
 8013e7e:	f007 fcd5 	bl	801b82c <__cxa_guard_release>
 8013e82:	4a0f      	ldr	r2, [pc, #60]	@ (8013ec0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8013e84:	490f      	ldr	r1, [pc, #60]	@ (8013ec4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8013e86:	4810      	ldr	r0, [pc, #64]	@ (8013ec8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8013e88:	f007 fcbd 	bl	801b806 <__aeabi_atexit>
 8013e8c:	4c0f      	ldr	r4, [pc, #60]	@ (8013ecc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8013e8e:	7823      	ldrb	r3, [r4, #0]
 8013e90:	f3bf 8f5b 	dmb	ish
 8013e94:	07db      	lsls	r3, r3, #31
 8013e96:	d40b      	bmi.n	8013eb0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8013e98:	4620      	mov	r0, r4
 8013e9a:	f007 fcbb 	bl	801b814 <__cxa_guard_acquire>
 8013e9e:	b138      	cbz	r0, 8013eb0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8013ea0:	4620      	mov	r0, r4
 8013ea2:	f007 fcc3 	bl	801b82c <__cxa_guard_release>
 8013ea6:	4a06      	ldr	r2, [pc, #24]	@ (8013ec0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8013ea8:	4909      	ldr	r1, [pc, #36]	@ (8013ed0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8013eaa:	480a      	ldr	r0, [pc, #40]	@ (8013ed4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8013eac:	f007 fcab 	bl	801b806 <__aeabi_atexit>
 8013eb0:	4b05      	ldr	r3, [pc, #20]	@ (8013ec8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8013eb2:	63eb      	str	r3, [r5, #60]	@ 0x3c
 8013eb4:	4b07      	ldr	r3, [pc, #28]	@ (8013ed4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8013eb6:	642b      	str	r3, [r5, #64]	@ 0x40
 8013eb8:	bd38      	pop	{r3, r4, r5, pc}
 8013eba:	bf00      	nop
 8013ebc:	200138e8 	.word	0x200138e8
 8013ec0:	20000000 	.word	0x20000000
 8013ec4:	080107ff 	.word	0x080107ff
 8013ec8:	200000e8 	.word	0x200000e8
 8013ecc:	200138ec 	.word	0x200138ec
 8013ed0:	080107fd 	.word	0x080107fd
 8013ed4:	200000ec 	.word	0x200000ec

08013ed8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8013ed8:	b510      	push	{r4, lr}
 8013eda:	4604      	mov	r4, r0
 8013edc:	f7ff ff14 	bl	8013d08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8013ee0:	4620      	mov	r0, r4
 8013ee2:	f7ff ff85 	bl	8013df0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8013ee6:	4620      	mov	r0, r4
 8013ee8:	f7ff ff48 	bl	8013d7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8013eec:	4620      	mov	r0, r4
 8013eee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013ef2:	f7ff bfb7 	b.w	8013e64 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08013ef8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8013ef8:	b538      	push	{r3, r4, r5, lr}
 8013efa:	4c15      	ldr	r4, [pc, #84]	@ (8013f50 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8013efc:	7823      	ldrb	r3, [r4, #0]
 8013efe:	f3bf 8f5b 	dmb	ish
 8013f02:	07da      	lsls	r2, r3, #31
 8013f04:	4605      	mov	r5, r0
 8013f06:	d40b      	bmi.n	8013f20 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8013f08:	4620      	mov	r0, r4
 8013f0a:	f007 fc83 	bl	801b814 <__cxa_guard_acquire>
 8013f0e:	b138      	cbz	r0, 8013f20 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8013f10:	4620      	mov	r0, r4
 8013f12:	f007 fc8b 	bl	801b82c <__cxa_guard_release>
 8013f16:	4a0f      	ldr	r2, [pc, #60]	@ (8013f54 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8013f18:	490f      	ldr	r1, [pc, #60]	@ (8013f58 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8013f1a:	4810      	ldr	r0, [pc, #64]	@ (8013f5c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8013f1c:	f007 fc73 	bl	801b806 <__aeabi_atexit>
 8013f20:	4c0f      	ldr	r4, [pc, #60]	@ (8013f60 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8013f22:	7823      	ldrb	r3, [r4, #0]
 8013f24:	f3bf 8f5b 	dmb	ish
 8013f28:	07db      	lsls	r3, r3, #31
 8013f2a:	d40b      	bmi.n	8013f44 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8013f2c:	4620      	mov	r0, r4
 8013f2e:	f007 fc71 	bl	801b814 <__cxa_guard_acquire>
 8013f32:	b138      	cbz	r0, 8013f44 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8013f34:	4620      	mov	r0, r4
 8013f36:	f007 fc79 	bl	801b82c <__cxa_guard_release>
 8013f3a:	4a06      	ldr	r2, [pc, #24]	@ (8013f54 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8013f3c:	4909      	ldr	r1, [pc, #36]	@ (8013f64 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8013f3e:	480a      	ldr	r0, [pc, #40]	@ (8013f68 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8013f40:	f007 fc61 	bl	801b806 <__aeabi_atexit>
 8013f44:	4b05      	ldr	r3, [pc, #20]	@ (8013f5c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8013f46:	666b      	str	r3, [r5, #100]	@ 0x64
 8013f48:	4b07      	ldr	r3, [pc, #28]	@ (8013f68 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8013f4a:	66ab      	str	r3, [r5, #104]	@ 0x68
 8013f4c:	bd38      	pop	{r3, r4, r5, pc}
 8013f4e:	bf00      	nop
 8013f50:	200138d0 	.word	0x200138d0
 8013f54:	20000000 	.word	0x20000000
 8013f58:	080107eb 	.word	0x080107eb
 8013f5c:	200000d0 	.word	0x200000d0
 8013f60:	200138d4 	.word	0x200138d4
 8013f64:	080107e9 	.word	0x080107e9
 8013f68:	200000d4 	.word	0x200000d4

08013f6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8013f6c:	b538      	push	{r3, r4, r5, lr}
 8013f6e:	4c15      	ldr	r4, [pc, #84]	@ (8013fc4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8013f70:	7823      	ldrb	r3, [r4, #0]
 8013f72:	f3bf 8f5b 	dmb	ish
 8013f76:	07da      	lsls	r2, r3, #31
 8013f78:	4605      	mov	r5, r0
 8013f7a:	d40b      	bmi.n	8013f94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8013f7c:	4620      	mov	r0, r4
 8013f7e:	f007 fc49 	bl	801b814 <__cxa_guard_acquire>
 8013f82:	b138      	cbz	r0, 8013f94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8013f84:	4620      	mov	r0, r4
 8013f86:	f007 fc51 	bl	801b82c <__cxa_guard_release>
 8013f8a:	4a0f      	ldr	r2, [pc, #60]	@ (8013fc8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8013f8c:	490f      	ldr	r1, [pc, #60]	@ (8013fcc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8013f8e:	4810      	ldr	r0, [pc, #64]	@ (8013fd0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8013f90:	f007 fc39 	bl	801b806 <__aeabi_atexit>
 8013f94:	4c0f      	ldr	r4, [pc, #60]	@ (8013fd4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8013f96:	7823      	ldrb	r3, [r4, #0]
 8013f98:	f3bf 8f5b 	dmb	ish
 8013f9c:	07db      	lsls	r3, r3, #31
 8013f9e:	d40b      	bmi.n	8013fb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8013fa0:	4620      	mov	r0, r4
 8013fa2:	f007 fc37 	bl	801b814 <__cxa_guard_acquire>
 8013fa6:	b138      	cbz	r0, 8013fb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8013fa8:	4620      	mov	r0, r4
 8013faa:	f007 fc3f 	bl	801b82c <__cxa_guard_release>
 8013fae:	4a06      	ldr	r2, [pc, #24]	@ (8013fc8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8013fb0:	4909      	ldr	r1, [pc, #36]	@ (8013fd8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8013fb2:	480a      	ldr	r0, [pc, #40]	@ (8013fdc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8013fb4:	f007 fc27 	bl	801b806 <__aeabi_atexit>
 8013fb8:	4b05      	ldr	r3, [pc, #20]	@ (8013fd0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8013fba:	65eb      	str	r3, [r5, #92]	@ 0x5c
 8013fbc:	4b07      	ldr	r3, [pc, #28]	@ (8013fdc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8013fbe:	662b      	str	r3, [r5, #96]	@ 0x60
 8013fc0:	bd38      	pop	{r3, r4, r5, pc}
 8013fc2:	bf00      	nop
 8013fc4:	200138a8 	.word	0x200138a8
 8013fc8:	20000000 	.word	0x20000000
 8013fcc:	080107ef 	.word	0x080107ef
 8013fd0:	200000a8 	.word	0x200000a8
 8013fd4:	200138ac 	.word	0x200138ac
 8013fd8:	080107ed 	.word	0x080107ed
 8013fdc:	200000ac 	.word	0x200000ac

08013fe0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8013fe0:	b510      	push	{r4, lr}
 8013fe2:	4604      	mov	r4, r0
 8013fe4:	f7ff ff88 	bl	8013ef8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8013fe8:	4620      	mov	r0, r4
 8013fea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013fee:	f7ff bfbd 	b.w	8013f6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08013ff4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8013ff4:	b538      	push	{r3, r4, r5, lr}
 8013ff6:	4c15      	ldr	r4, [pc, #84]	@ (801404c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8013ff8:	7823      	ldrb	r3, [r4, #0]
 8013ffa:	f3bf 8f5b 	dmb	ish
 8013ffe:	07da      	lsls	r2, r3, #31
 8014000:	4605      	mov	r5, r0
 8014002:	d40b      	bmi.n	801401c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8014004:	4620      	mov	r0, r4
 8014006:	f007 fc05 	bl	801b814 <__cxa_guard_acquire>
 801400a:	b138      	cbz	r0, 801401c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801400c:	4620      	mov	r0, r4
 801400e:	f007 fc0d 	bl	801b82c <__cxa_guard_release>
 8014012:	4a0f      	ldr	r2, [pc, #60]	@ (8014050 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8014014:	490f      	ldr	r1, [pc, #60]	@ (8014054 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8014016:	4810      	ldr	r0, [pc, #64]	@ (8014058 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8014018:	f007 fbf5 	bl	801b806 <__aeabi_atexit>
 801401c:	4c0f      	ldr	r4, [pc, #60]	@ (801405c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801401e:	7823      	ldrb	r3, [r4, #0]
 8014020:	f3bf 8f5b 	dmb	ish
 8014024:	07db      	lsls	r3, r3, #31
 8014026:	d40b      	bmi.n	8014040 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8014028:	4620      	mov	r0, r4
 801402a:	f007 fbf3 	bl	801b814 <__cxa_guard_acquire>
 801402e:	b138      	cbz	r0, 8014040 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8014030:	4620      	mov	r0, r4
 8014032:	f007 fbfb 	bl	801b82c <__cxa_guard_release>
 8014036:	4a06      	ldr	r2, [pc, #24]	@ (8014050 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8014038:	4909      	ldr	r1, [pc, #36]	@ (8014060 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801403a:	480a      	ldr	r0, [pc, #40]	@ (8014064 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801403c:	f007 fbe3 	bl	801b806 <__aeabi_atexit>
 8014040:	4b05      	ldr	r3, [pc, #20]	@ (8014058 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8014042:	676b      	str	r3, [r5, #116]	@ 0x74
 8014044:	4b07      	ldr	r3, [pc, #28]	@ (8014064 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8014046:	67ab      	str	r3, [r5, #120]	@ 0x78
 8014048:	bd38      	pop	{r3, r4, r5, pc}
 801404a:	bf00      	nop
 801404c:	200138a0 	.word	0x200138a0
 8014050:	20000000 	.word	0x20000000
 8014054:	080107e3 	.word	0x080107e3
 8014058:	200000a0 	.word	0x200000a0
 801405c:	200138a4 	.word	0x200138a4
 8014060:	080107e1 	.word	0x080107e1
 8014064:	200000a4 	.word	0x200000a4

08014068 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8014068:	b538      	push	{r3, r4, r5, lr}
 801406a:	4c15      	ldr	r4, [pc, #84]	@ (80140c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801406c:	7823      	ldrb	r3, [r4, #0]
 801406e:	f3bf 8f5b 	dmb	ish
 8014072:	07da      	lsls	r2, r3, #31
 8014074:	4605      	mov	r5, r0
 8014076:	d40b      	bmi.n	8014090 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8014078:	4620      	mov	r0, r4
 801407a:	f007 fbcb 	bl	801b814 <__cxa_guard_acquire>
 801407e:	b138      	cbz	r0, 8014090 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8014080:	4620      	mov	r0, r4
 8014082:	f007 fbd3 	bl	801b82c <__cxa_guard_release>
 8014086:	4a0f      	ldr	r2, [pc, #60]	@ (80140c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8014088:	490f      	ldr	r1, [pc, #60]	@ (80140c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801408a:	4810      	ldr	r0, [pc, #64]	@ (80140cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801408c:	f007 fbbb 	bl	801b806 <__aeabi_atexit>
 8014090:	4c0f      	ldr	r4, [pc, #60]	@ (80140d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8014092:	7823      	ldrb	r3, [r4, #0]
 8014094:	f3bf 8f5b 	dmb	ish
 8014098:	07db      	lsls	r3, r3, #31
 801409a:	d40b      	bmi.n	80140b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801409c:	4620      	mov	r0, r4
 801409e:	f007 fbb9 	bl	801b814 <__cxa_guard_acquire>
 80140a2:	b138      	cbz	r0, 80140b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80140a4:	4620      	mov	r0, r4
 80140a6:	f007 fbc1 	bl	801b82c <__cxa_guard_release>
 80140aa:	4a06      	ldr	r2, [pc, #24]	@ (80140c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80140ac:	4909      	ldr	r1, [pc, #36]	@ (80140d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80140ae:	480a      	ldr	r0, [pc, #40]	@ (80140d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80140b0:	f007 fba9 	bl	801b806 <__aeabi_atexit>
 80140b4:	4b05      	ldr	r3, [pc, #20]	@ (80140cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80140b6:	66eb      	str	r3, [r5, #108]	@ 0x6c
 80140b8:	4b07      	ldr	r3, [pc, #28]	@ (80140d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80140ba:	672b      	str	r3, [r5, #112]	@ 0x70
 80140bc:	bd38      	pop	{r3, r4, r5, pc}
 80140be:	bf00      	nop
 80140c0:	20013898 	.word	0x20013898
 80140c4:	20000000 	.word	0x20000000
 80140c8:	080107e7 	.word	0x080107e7
 80140cc:	20000098 	.word	0x20000098
 80140d0:	2001389c 	.word	0x2001389c
 80140d4:	080107e5 	.word	0x080107e5
 80140d8:	2000009c 	.word	0x2000009c

080140dc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80140dc:	b510      	push	{r4, lr}
 80140de:	4604      	mov	r4, r0
 80140e0:	f7ff ff88 	bl	8013ff4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80140e4:	4620      	mov	r0, r4
 80140e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80140ea:	f7ff bfbd 	b.w	8014068 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080140ee <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80140ee:	b510      	push	{r4, lr}
 80140f0:	4604      	mov	r4, r0
 80140f2:	f7ff fff3 	bl	80140dc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80140f6:	4620      	mov	r0, r4
 80140f8:	f7ff ff72 	bl	8013fe0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80140fc:	4620      	mov	r0, r4
 80140fe:	f7ff fdf9 	bl	8013cf4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8014102:	4620      	mov	r0, r4
 8014104:	f7ff fcfa 	bl	8013afc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8014108:	4620      	mov	r0, r4
 801410a:	f7ff fd75 	bl	8013bf8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801410e:	4620      	mov	r0, r4
 8014110:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014114:	f7ff bee0 	b.w	8013ed8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08014118 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8014118:	b538      	push	{r3, r4, r5, lr}
 801411a:	4c0b      	ldr	r4, [pc, #44]	@ (8014148 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801411c:	7823      	ldrb	r3, [r4, #0]
 801411e:	f3bf 8f5b 	dmb	ish
 8014122:	07db      	lsls	r3, r3, #31
 8014124:	4605      	mov	r5, r0
 8014126:	d40b      	bmi.n	8014140 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8014128:	4620      	mov	r0, r4
 801412a:	f007 fb73 	bl	801b814 <__cxa_guard_acquire>
 801412e:	b138      	cbz	r0, 8014140 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8014130:	4620      	mov	r0, r4
 8014132:	f007 fb7b 	bl	801b82c <__cxa_guard_release>
 8014136:	4a05      	ldr	r2, [pc, #20]	@ (801414c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8014138:	4905      	ldr	r1, [pc, #20]	@ (8014150 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801413a:	4806      	ldr	r0, [pc, #24]	@ (8014154 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801413c:	f007 fb63 	bl	801b806 <__aeabi_atexit>
 8014140:	4b04      	ldr	r3, [pc, #16]	@ (8014154 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8014142:	67eb      	str	r3, [r5, #124]	@ 0x7c
 8014144:	bd38      	pop	{r3, r4, r5, pc}
 8014146:	bf00      	nop
 8014148:	2001388c 	.word	0x2001388c
 801414c:	20000000 	.word	0x20000000
 8014150:	080107df 	.word	0x080107df
 8014154:	20000090 	.word	0x20000090

08014158 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8014158:	b538      	push	{r3, r4, r5, lr}
 801415a:	4c0b      	ldr	r4, [pc, #44]	@ (8014188 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801415c:	7823      	ldrb	r3, [r4, #0]
 801415e:	f3bf 8f5b 	dmb	ish
 8014162:	07db      	lsls	r3, r3, #31
 8014164:	4605      	mov	r5, r0
 8014166:	d40b      	bmi.n	8014180 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8014168:	4620      	mov	r0, r4
 801416a:	f007 fb53 	bl	801b814 <__cxa_guard_acquire>
 801416e:	b138      	cbz	r0, 8014180 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8014170:	4620      	mov	r0, r4
 8014172:	f007 fb5b 	bl	801b82c <__cxa_guard_release>
 8014176:	4a05      	ldr	r2, [pc, #20]	@ (801418c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8014178:	4905      	ldr	r1, [pc, #20]	@ (8014190 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801417a:	4806      	ldr	r0, [pc, #24]	@ (8014194 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801417c:	f007 fb43 	bl	801b806 <__aeabi_atexit>
 8014180:	4b04      	ldr	r3, [pc, #16]	@ (8014194 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8014182:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 8014186:	bd38      	pop	{r3, r4, r5, pc}
 8014188:	20013890 	.word	0x20013890
 801418c:	20000000 	.word	0x20000000
 8014190:	080107dd 	.word	0x080107dd
 8014194:	20000094 	.word	0x20000094

08014198 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8014198:	b570      	push	{r4, r5, r6, lr}
 801419a:	4d0d      	ldr	r5, [pc, #52]	@ (80141d0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801419c:	4c0d      	ldr	r4, [pc, #52]	@ (80141d4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801419e:	782b      	ldrb	r3, [r5, #0]
 80141a0:	f3bf 8f5b 	dmb	ish
 80141a4:	f013 0f01 	tst.w	r3, #1
 80141a8:	4606      	mov	r6, r0
 80141aa:	d10d      	bne.n	80141c8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80141ac:	4628      	mov	r0, r5
 80141ae:	f007 fb31 	bl	801b814 <__cxa_guard_acquire>
 80141b2:	b148      	cbz	r0, 80141c8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80141b4:	4b08      	ldr	r3, [pc, #32]	@ (80141d8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 80141b6:	6023      	str	r3, [r4, #0]
 80141b8:	4628      	mov	r0, r5
 80141ba:	f007 fb37 	bl	801b82c <__cxa_guard_release>
 80141be:	4a07      	ldr	r2, [pc, #28]	@ (80141dc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 80141c0:	4907      	ldr	r1, [pc, #28]	@ (80141e0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 80141c2:	4620      	mov	r0, r4
 80141c4:	f007 fb1f 	bl	801b806 <__aeabi_atexit>
 80141c8:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 80141cc:	bd70      	pop	{r4, r5, r6, pc}
 80141ce:	bf00      	nop
 80141d0:	20013894 	.word	0x20013894
 80141d4:	20013908 	.word	0x20013908
 80141d8:	0801df84 	.word	0x0801df84
 80141dc:	20000000 	.word	0x20000000
 80141e0:	080107db 	.word	0x080107db

080141e4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 80141e4:	b510      	push	{r4, lr}
 80141e6:	4604      	mov	r4, r0
 80141e8:	f7ff ff96 	bl	8014118 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 80141ec:	4620      	mov	r0, r4
 80141ee:	f7ff ffb3 	bl	8014158 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 80141f2:	4620      	mov	r0, r4
 80141f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80141f8:	f7ff bfce 	b.w	8014198 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

080141fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80141fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014200:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 8014204:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 8014208:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 801420c:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 8014210:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 8014214:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 8014218:	8808      	ldrh	r0, [r1, #0]
 801421a:	fb05 4c0e 	mla	ip, r5, lr, r4
 801421e:	2d00      	cmp	r5, #0
 8014220:	eb02 0a0c 	add.w	sl, r2, ip
 8014224:	f2c0 80b0 	blt.w	8014388 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8014228:	45ab      	cmp	fp, r5
 801422a:	f340 80ad 	ble.w	8014388 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801422e:	2c00      	cmp	r4, #0
 8014230:	f2c0 80a8 	blt.w	8014384 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8014234:	45a6      	cmp	lr, r4
 8014236:	f340 80a5 	ble.w	8014384 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801423a:	f812 200c 	ldrb.w	r2, [r2, ip]
 801423e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8014242:	1c62      	adds	r2, r4, #1
 8014244:	f100 80a3 	bmi.w	801438e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8014248:	4596      	cmp	lr, r2
 801424a:	f340 80a0 	ble.w	801438e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801424e:	f1b9 0f00 	cmp.w	r9, #0
 8014252:	f000 809c 	beq.w	801438e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8014256:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801425a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801425e:	3501      	adds	r5, #1
 8014260:	f100 8099 	bmi.w	8014396 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8014264:	45ab      	cmp	fp, r5
 8014266:	f340 8096 	ble.w	8014396 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801426a:	2f00      	cmp	r7, #0
 801426c:	f000 8093 	beq.w	8014396 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8014270:	2c00      	cmp	r4, #0
 8014272:	f2c0 808e 	blt.w	8014392 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8014276:	45a6      	cmp	lr, r4
 8014278:	f340 808b 	ble.w	8014392 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801427c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8014280:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8014284:	3401      	adds	r4, #1
 8014286:	f100 8089 	bmi.w	801439c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801428a:	45a6      	cmp	lr, r4
 801428c:	f340 8086 	ble.w	801439c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8014290:	f1b9 0f00 	cmp.w	r9, #0
 8014294:	f000 8082 	beq.w	801439c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8014298:	44d6      	add	lr, sl
 801429a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801429e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80142a2:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80142a6:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80142aa:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 80142ae:	fb19 fe07 	smulbb	lr, r9, r7
 80142b2:	ea44 0808 	orr.w	r8, r4, r8
 80142b6:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80142ba:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80142be:	f1c7 0210 	rsb	r2, r7, #16
 80142c2:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80142c6:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80142ca:	ea44 0c0c 	orr.w	ip, r4, ip
 80142ce:	eba2 0209 	sub.w	r2, r2, r9
 80142d2:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80142d6:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80142da:	fb04 f40c 	mul.w	r4, r4, ip
 80142de:	fb02 4808 	mla	r8, r2, r8, r4
 80142e2:	041a      	lsls	r2, r3, #16
 80142e4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80142e8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80142ec:	4313      	orrs	r3, r2
 80142ee:	042a      	lsls	r2, r5, #16
 80142f0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80142f4:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80142f8:	fb0e 8303 	mla	r3, lr, r3, r8
 80142fc:	432a      	orrs	r2, r5
 80142fe:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8014302:	fb07 3202 	mla	r2, r7, r2, r3
 8014306:	0d53      	lsrs	r3, r2, #21
 8014308:	0952      	lsrs	r2, r2, #5
 801430a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801430e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8014312:	431a      	orrs	r2, r3
 8014314:	b293      	uxth	r3, r2
 8014316:	b2b4      	uxth	r4, r6
 8014318:	1202      	asrs	r2, r0, #8
 801431a:	43f6      	mvns	r6, r6
 801431c:	b2f6      	uxtb	r6, r6
 801431e:	121d      	asrs	r5, r3, #8
 8014320:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8014324:	fb12 f206 	smulbb	r2, r2, r6
 8014328:	10c7      	asrs	r7, r0, #3
 801432a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801432e:	00c0      	lsls	r0, r0, #3
 8014330:	fb05 2504 	mla	r5, r5, r4, r2
 8014334:	b2c0      	uxtb	r0, r0
 8014336:	10da      	asrs	r2, r3, #3
 8014338:	00db      	lsls	r3, r3, #3
 801433a:	b2db      	uxtb	r3, r3
 801433c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014340:	fb10 f006 	smulbb	r0, r0, r6
 8014344:	b2ad      	uxth	r5, r5
 8014346:	fb03 0004 	mla	r0, r3, r4, r0
 801434a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801434e:	fb17 f706 	smulbb	r7, r7, r6
 8014352:	b280      	uxth	r0, r0
 8014354:	1c6b      	adds	r3, r5, #1
 8014356:	fb02 7204 	mla	r2, r2, r4, r7
 801435a:	b292      	uxth	r2, r2
 801435c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8014360:	1c43      	adds	r3, r0, #1
 8014362:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8014366:	1c50      	adds	r0, r2, #1
 8014368:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801436c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8014370:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8014374:	0952      	lsrs	r2, r2, #5
 8014376:	432b      	orrs	r3, r5
 8014378:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801437c:	4313      	orrs	r3, r2
 801437e:	800b      	strh	r3, [r1, #0]
 8014380:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014384:	4680      	mov	r8, r0
 8014386:	e75c      	b.n	8014242 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8014388:	4684      	mov	ip, r0
 801438a:	4680      	mov	r8, r0
 801438c:	e767      	b.n	801425e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801438e:	4684      	mov	ip, r0
 8014390:	e765      	b.n	801425e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8014392:	4605      	mov	r5, r0
 8014394:	e776      	b.n	8014284 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8014396:	4603      	mov	r3, r0
 8014398:	4605      	mov	r5, r0
 801439a:	e782      	b.n	80142a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801439c:	4603      	mov	r3, r0
 801439e:	e780      	b.n	80142a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

080143a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80143a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80143a4:	b099      	sub	sp, #100	@ 0x64
 80143a6:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 80143aa:	9215      	str	r2, [sp, #84]	@ 0x54
 80143ac:	9309      	str	r3, [sp, #36]	@ 0x24
 80143ae:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 80143b0:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 80143b4:	930d      	str	r3, [sp, #52]	@ 0x34
 80143b6:	910c      	str	r1, [sp, #48]	@ 0x30
 80143b8:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 80143bc:	9016      	str	r0, [sp, #88]	@ 0x58
 80143be:	6850      	ldr	r0, [r2, #4]
 80143c0:	6812      	ldr	r2, [r2, #0]
 80143c2:	fb00 1303 	mla	r3, r0, r3, r1
 80143c6:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80143ca:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80143cc:	681b      	ldr	r3, [r3, #0]
 80143ce:	930b      	str	r3, [sp, #44]	@ 0x2c
 80143d0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80143d2:	685e      	ldr	r6, [r3, #4]
 80143d4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80143d6:	43db      	mvns	r3, r3
 80143d8:	b2db      	uxtb	r3, r3
 80143da:	3604      	adds	r6, #4
 80143dc:	930a      	str	r3, [sp, #40]	@ 0x28
 80143de:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80143e0:	2b00      	cmp	r3, #0
 80143e2:	dc03      	bgt.n	80143ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80143e4:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80143e6:	2b00      	cmp	r3, #0
 80143e8:	f340 8225 	ble.w	8014836 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80143ec:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80143ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80143f2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80143f6:	1e48      	subs	r0, r1, #1
 80143f8:	1e57      	subs	r7, r2, #1
 80143fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80143fc:	2b00      	cmp	r3, #0
 80143fe:	f340 80e3 	ble.w	80145c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014402:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8014406:	ea4f 4325 	mov.w	r3, r5, asr #16
 801440a:	d406      	bmi.n	801441a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801440c:	4584      	cmp	ip, r0
 801440e:	da04      	bge.n	801441a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8014410:	2b00      	cmp	r3, #0
 8014412:	db02      	blt.n	801441a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8014414:	42bb      	cmp	r3, r7
 8014416:	f2c0 80d8 	blt.w	80145ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801441a:	f11c 0c01 	adds.w	ip, ip, #1
 801441e:	f100 80c9 	bmi.w	80145b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014422:	4561      	cmp	r1, ip
 8014424:	f2c0 80c6 	blt.w	80145b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014428:	3301      	adds	r3, #1
 801442a:	f100 80c3 	bmi.w	80145b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801442e:	429a      	cmp	r2, r3
 8014430:	f2c0 80c0 	blt.w	80145b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014434:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8014438:	4647      	mov	r7, r8
 801443a:	f1bb 0f00 	cmp.w	fp, #0
 801443e:	f340 80e3 	ble.w	8014608 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8014442:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8014444:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8014446:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801444a:	689b      	ldr	r3, [r3, #8]
 801444c:	ea5f 422a 	movs.w	r2, sl, asr #16
 8014450:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8014454:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8014458:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801445c:	f100 8121 	bmi.w	80146a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8014460:	f103 39ff 	add.w	r9, r3, #4294967295
 8014464:	454a      	cmp	r2, r9
 8014466:	f280 811c 	bge.w	80146a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801446a:	f1bc 0f00 	cmp.w	ip, #0
 801446e:	f2c0 8118 	blt.w	80146a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8014472:	f10e 39ff 	add.w	r9, lr, #4294967295
 8014476:	45cc      	cmp	ip, r9
 8014478:	f280 8113 	bge.w	80146a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801447c:	b21b      	sxth	r3, r3
 801447e:	fb0c 2203 	mla	r2, ip, r3, r2
 8014482:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8014484:	eb04 0902 	add.w	r9, r4, r2
 8014488:	5ca2      	ldrb	r2, [r4, r2]
 801448a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801448e:	2800      	cmp	r0, #0
 8014490:	f000 80fe 	beq.w	8014690 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8014494:	f899 2001 	ldrb.w	r2, [r9, #1]
 8014498:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801449c:	9211      	str	r2, [sp, #68]	@ 0x44
 801449e:	b151      	cbz	r1, 80144b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80144a0:	eb09 0203 	add.w	r2, r9, r3
 80144a4:	f819 3003 	ldrb.w	r3, [r9, r3]
 80144a8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80144ac:	930f      	str	r3, [sp, #60]	@ 0x3c
 80144ae:	7853      	ldrb	r3, [r2, #1]
 80144b0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80144b4:	9312      	str	r3, [sp, #72]	@ 0x48
 80144b6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80144b8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80144ba:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80144be:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80144c2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80144c6:	ea4c 0c03 	orr.w	ip, ip, r3
 80144ca:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80144cc:	041b      	lsls	r3, r3, #16
 80144ce:	fb10 f201 	smulbb	r2, r0, r1
 80144d2:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 80144d6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80144da:	10d2      	asrs	r2, r2, #3
 80144dc:	4323      	orrs	r3, r4
 80144de:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 80144e2:	4353      	muls	r3, r2
 80144e4:	fb09 330c 	mla	r3, r9, ip, r3
 80144e8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80144ec:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80144f0:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80144f4:	ea4c 0e0e 	orr.w	lr, ip, lr
 80144f8:	f1c1 0c10 	rsb	ip, r1, #16
 80144fc:	ebac 0c00 	sub.w	ip, ip, r0
 8014500:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014504:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8014508:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801450a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801450c:	0418      	lsls	r0, r3, #16
 801450e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8014512:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8014516:	4318      	orrs	r0, r3
 8014518:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801451c:	fb02 c200 	mla	r2, r2, r0, ip
 8014520:	0d53      	lsrs	r3, r2, #21
 8014522:	0952      	lsrs	r2, r2, #5
 8014524:	8838      	ldrh	r0, [r7, #0]
 8014526:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801452a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801452e:	431a      	orrs	r2, r3
 8014530:	b292      	uxth	r2, r2
 8014532:	1201      	asrs	r1, r0, #8
 8014534:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 8014538:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801453c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8014540:	fb11 f104 	smulbb	r1, r1, r4
 8014544:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8014548:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801454c:	00c0      	lsls	r0, r0, #3
 801454e:	fb0c 1c03 	mla	ip, ip, r3, r1
 8014552:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8014556:	10d1      	asrs	r1, r2, #3
 8014558:	b2c0      	uxtb	r0, r0
 801455a:	00d2      	lsls	r2, r2, #3
 801455c:	b2d2      	uxtb	r2, r2
 801455e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8014562:	fb1e fe04 	smulbb	lr, lr, r4
 8014566:	fb10 f004 	smulbb	r0, r0, r4
 801456a:	fa1f fc8c 	uxth.w	ip, ip
 801456e:	fb01 e103 	mla	r1, r1, r3, lr
 8014572:	fb02 0303 	mla	r3, r2, r3, r0
 8014576:	b29a      	uxth	r2, r3
 8014578:	f10c 0301 	add.w	r3, ip, #1
 801457c:	b289      	uxth	r1, r1
 801457e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8014582:	1c53      	adds	r3, r2, #1
 8014584:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8014588:	1c4a      	adds	r2, r1, #1
 801458a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801458e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014592:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8014596:	0949      	lsrs	r1, r1, #5
 8014598:	ea43 030c 	orr.w	r3, r3, ip
 801459c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80145a0:	430b      	orrs	r3, r1
 80145a2:	803b      	strh	r3, [r7, #0]
 80145a4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80145a6:	449a      	add	sl, r3
 80145a8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80145aa:	3702      	adds	r7, #2
 80145ac:	441d      	add	r5, r3
 80145ae:	f10b 3bff 	add.w	fp, fp, #4294967295
 80145b2:	e742      	b.n	801443a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80145b4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80145b6:	449a      	add	sl, r3
 80145b8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80145ba:	441d      	add	r5, r3
 80145bc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80145be:	3b01      	subs	r3, #1
 80145c0:	9309      	str	r3, [sp, #36]	@ 0x24
 80145c2:	f108 0802 	add.w	r8, r8, #2
 80145c6:	e718      	b.n	80143fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80145c8:	d023      	beq.n	8014612 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80145ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80145cc:	9825      	ldr	r0, [sp, #148]	@ 0x94
 80145ce:	3b01      	subs	r3, #1
 80145d0:	fb00 a003 	mla	r0, r0, r3, sl
 80145d4:	1400      	asrs	r0, r0, #16
 80145d6:	f53f af2d 	bmi.w	8014434 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80145da:	3901      	subs	r1, #1
 80145dc:	4288      	cmp	r0, r1
 80145de:	f6bf af29 	bge.w	8014434 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80145e2:	9926      	ldr	r1, [sp, #152]	@ 0x98
 80145e4:	fb01 5303 	mla	r3, r1, r3, r5
 80145e8:	141b      	asrs	r3, r3, #16
 80145ea:	f53f af23 	bmi.w	8014434 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80145ee:	3a01      	subs	r2, #1
 80145f0:	4293      	cmp	r3, r2
 80145f2:	f6bf af1f 	bge.w	8014434 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80145f6:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 80145fa:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 80145fe:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 8014602:	f1be 0f00 	cmp.w	lr, #0
 8014606:	dc6c      	bgt.n	80146e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8014608:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801460a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801460e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8014612:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8014614:	2b00      	cmp	r3, #0
 8014616:	f340 810e 	ble.w	8014836 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801461a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801461e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8014622:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014626:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8014628:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801462c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014630:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014634:	eef0 6a62 	vmov.f32	s13, s5
 8014638:	ee61 7a27 	vmul.f32	s15, s2, s15
 801463c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014640:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014644:	ee16 aa90 	vmov	sl, s13
 8014648:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801464c:	eef0 6a43 	vmov.f32	s13, s6
 8014650:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014654:	ee12 2a90 	vmov	r2, s5
 8014658:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801465c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014660:	ee13 2a10 	vmov	r2, s6
 8014664:	9325      	str	r3, [sp, #148]	@ 0x94
 8014666:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8014668:	fb92 f3f3 	sdiv	r3, r2, r3
 801466c:	9326      	str	r3, [sp, #152]	@ 0x98
 801466e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8014670:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8014672:	3b01      	subs	r3, #1
 8014674:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014678:	930c      	str	r3, [sp, #48]	@ 0x30
 801467a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801467c:	bf08      	it	eq
 801467e:	4613      	moveq	r3, r2
 8014680:	ee16 5a90 	vmov	r5, s13
 8014684:	9309      	str	r3, [sp, #36]	@ 0x24
 8014686:	eeb0 3a67 	vmov.f32	s6, s15
 801468a:	eef0 2a47 	vmov.f32	s5, s14
 801468e:	e6a6      	b.n	80143de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014690:	2900      	cmp	r1, #0
 8014692:	f43f af10 	beq.w	80144b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8014696:	f819 3003 	ldrb.w	r3, [r9, r3]
 801469a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801469e:	930f      	str	r3, [sp, #60]	@ 0x3c
 80146a0:	e709      	b.n	80144b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80146a2:	f112 0901 	adds.w	r9, r2, #1
 80146a6:	f53f af7d 	bmi.w	80145a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80146aa:	454b      	cmp	r3, r9
 80146ac:	f6ff af7a 	blt.w	80145a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80146b0:	f11c 0901 	adds.w	r9, ip, #1
 80146b4:	f53f af76 	bmi.w	80145a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80146b8:	45ce      	cmp	lr, r9
 80146ba:	f6ff af73 	blt.w	80145a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80146be:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80146c0:	9202      	str	r2, [sp, #8]
 80146c2:	b21b      	sxth	r3, r3
 80146c4:	fa0f f28e 	sxth.w	r2, lr
 80146c8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80146cc:	e9cd c003 	strd	ip, r0, [sp, #12]
 80146d0:	9201      	str	r2, [sp, #4]
 80146d2:	9300      	str	r3, [sp, #0]
 80146d4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80146d6:	9816      	ldr	r0, [sp, #88]	@ 0x58
 80146d8:	4633      	mov	r3, r6
 80146da:	4639      	mov	r1, r7
 80146dc:	f7ff fd8e 	bl	80141fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 80146e0:	e760      	b.n	80145a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80146e2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80146e4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80146e6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80146ea:	ea4f 422a 	mov.w	r2, sl, asr #16
 80146ee:	1429      	asrs	r1, r5, #16
 80146f0:	fb03 2101 	mla	r1, r3, r1, r2
 80146f4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80146f6:	440a      	add	r2, r1
 80146f8:	5c61      	ldrb	r1, [r4, r1]
 80146fa:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 80146fe:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8014702:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8014706:	f1bc 0f00 	cmp.w	ip, #0
 801470a:	f000 808c 	beq.w	8014826 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801470e:	7857      	ldrb	r7, [r2, #1]
 8014710:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8014714:	9413      	str	r4, [sp, #76]	@ 0x4c
 8014716:	b140      	cbz	r0, 801472a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8014718:	18d7      	adds	r7, r2, r3
 801471a:	5cd3      	ldrb	r3, [r2, r3]
 801471c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014720:	9310      	str	r3, [sp, #64]	@ 0x40
 8014722:	787b      	ldrb	r3, [r7, #1]
 8014724:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014728:	9314      	str	r3, [sp, #80]	@ 0x50
 801472a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801472c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801472e:	fb1c f200 	smulbb	r2, ip, r0
 8014732:	041f      	lsls	r7, r3, #16
 8014734:	10d2      	asrs	r2, r2, #3
 8014736:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801473a:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 801473e:	431f      	orrs	r7, r3
 8014740:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8014744:	9317      	str	r3, [sp, #92]	@ 0x5c
 8014746:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8014748:	041b      	lsls	r3, r3, #16
 801474a:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 801474e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8014752:	ea43 030b 	orr.w	r3, r3, fp
 8014756:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8014758:	4353      	muls	r3, r2
 801475a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801475e:	fb04 3707 	mla	r7, r4, r7, r3
 8014762:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8014766:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801476a:	ea43 0b01 	orr.w	fp, r3, r1
 801476e:	f1c0 0110 	rsb	r1, r0, #16
 8014772:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014774:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8014776:	eba1 0c0c 	sub.w	ip, r1, ip
 801477a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801477e:	fb0c 770b 	mla	r7, ip, fp, r7
 8014782:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014786:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801478a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801478e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8014792:	ea4c 0c0b 	orr.w	ip, ip, fp
 8014796:	fb02 770c 	mla	r7, r2, ip, r7
 801479a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801479c:	0d79      	lsrs	r1, r7, #21
 801479e:	097f      	lsrs	r7, r7, #5
 80147a0:	8812      	ldrh	r2, [r2, #0]
 80147a2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80147a6:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 80147aa:	430f      	orrs	r7, r1
 80147ac:	b2bb      	uxth	r3, r7
 80147ae:	1211      	asrs	r1, r2, #8
 80147b0:	1218      	asrs	r0, r3, #8
 80147b2:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80147b6:	fb11 f104 	smulbb	r1, r1, r4
 80147ba:	10d7      	asrs	r7, r2, #3
 80147bc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80147c0:	00d2      	lsls	r2, r2, #3
 80147c2:	fb00 1009 	mla	r0, r0, r9, r1
 80147c6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80147ca:	10d9      	asrs	r1, r3, #3
 80147cc:	b2d2      	uxtb	r2, r2
 80147ce:	00db      	lsls	r3, r3, #3
 80147d0:	fb17 f704 	smulbb	r7, r7, r4
 80147d4:	fb12 f204 	smulbb	r2, r2, r4
 80147d8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80147dc:	b2db      	uxtb	r3, r3
 80147de:	b280      	uxth	r0, r0
 80147e0:	fb01 7109 	mla	r1, r1, r9, r7
 80147e4:	fb03 2309 	mla	r3, r3, r9, r2
 80147e8:	b29b      	uxth	r3, r3
 80147ea:	b289      	uxth	r1, r1
 80147ec:	1c42      	adds	r2, r0, #1
 80147ee:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80147f2:	1c4f      	adds	r7, r1, #1
 80147f4:	1c5a      	adds	r2, r3, #1
 80147f6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80147fa:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80147fe:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8014802:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014806:	0949      	lsrs	r1, r1, #5
 8014808:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801480a:	4310      	orrs	r0, r2
 801480c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8014810:	4308      	orrs	r0, r1
 8014812:	f823 0b02 	strh.w	r0, [r3], #2
 8014816:	930e      	str	r3, [sp, #56]	@ 0x38
 8014818:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801481a:	449a      	add	sl, r3
 801481c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801481e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014822:	441d      	add	r5, r3
 8014824:	e6ed      	b.n	8014602 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8014826:	2800      	cmp	r0, #0
 8014828:	f43f af7f 	beq.w	801472a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801482c:	5cd3      	ldrb	r3, [r2, r3]
 801482e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014832:	9310      	str	r3, [sp, #64]	@ 0x40
 8014834:	e779      	b.n	801472a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8014836:	b019      	add	sp, #100	@ 0x64
 8014838:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801483c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801483c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014840:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 8014844:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8014848:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801484c:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 8014850:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 8014854:	8808      	ldrh	r0, [r1, #0]
 8014856:	fb08 470e 	mla	r7, r8, lr, r4
 801485a:	f1b8 0f00 	cmp.w	r8, #0
 801485e:	eb02 0907 	add.w	r9, r2, r7
 8014862:	db67      	blt.n	8014934 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8014864:	45c2      	cmp	sl, r8
 8014866:	dd65      	ble.n	8014934 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8014868:	2c00      	cmp	r4, #0
 801486a:	db61      	blt.n	8014930 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801486c:	45a6      	cmp	lr, r4
 801486e:	dd5f      	ble.n	8014930 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8014870:	5dd2      	ldrb	r2, [r2, r7]
 8014872:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8014876:	1c62      	adds	r2, r4, #1
 8014878:	d45f      	bmi.n	801493a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801487a:	4596      	cmp	lr, r2
 801487c:	dd5d      	ble.n	801493a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801487e:	2d00      	cmp	r5, #0
 8014880:	d05b      	beq.n	801493a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8014882:	f899 2001 	ldrb.w	r2, [r9, #1]
 8014886:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801488a:	f118 0801 	adds.w	r8, r8, #1
 801488e:	d458      	bmi.n	8014942 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8014890:	45c2      	cmp	sl, r8
 8014892:	dd56      	ble.n	8014942 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8014894:	2e00      	cmp	r6, #0
 8014896:	d054      	beq.n	8014942 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8014898:	2c00      	cmp	r4, #0
 801489a:	db50      	blt.n	801493e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801489c:	45a6      	cmp	lr, r4
 801489e:	dd4e      	ble.n	801493e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 80148a0:	f819 200e 	ldrb.w	r2, [r9, lr]
 80148a4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80148a8:	3401      	adds	r4, #1
 80148aa:	d407      	bmi.n	80148bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80148ac:	45a6      	cmp	lr, r4
 80148ae:	dd05      	ble.n	80148bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80148b0:	b125      	cbz	r5, 80148bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80148b2:	44ce      	add	lr, r9
 80148b4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80148b8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80148bc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 80148c0:	fb15 f406 	smulbb	r4, r5, r6
 80148c4:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80148c8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 80148cc:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80148d0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 80148d4:	ea43 0c0c 	orr.w	ip, r3, ip
 80148d8:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 80148dc:	f1c6 0310 	rsb	r3, r6, #16
 80148e0:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 80148e4:	1b5b      	subs	r3, r3, r5
 80148e6:	ea4e 0707 	orr.w	r7, lr, r7
 80148ea:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 80148ee:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80148f2:	437d      	muls	r5, r7
 80148f4:	fb03 5c0c 	mla	ip, r3, ip, r5
 80148f8:	0403      	lsls	r3, r0, #16
 80148fa:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80148fe:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8014902:	4318      	orrs	r0, r3
 8014904:	0413      	lsls	r3, r2, #16
 8014906:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801490a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801490e:	4313      	orrs	r3, r2
 8014910:	fb04 c000 	mla	r0, r4, r0, ip
 8014914:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8014918:	fb06 0003 	mla	r0, r6, r3, r0
 801491c:	0d43      	lsrs	r3, r0, #21
 801491e:	0940      	lsrs	r0, r0, #5
 8014920:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8014924:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8014928:	4318      	orrs	r0, r3
 801492a:	8008      	strh	r0, [r1, #0]
 801492c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014930:	4684      	mov	ip, r0
 8014932:	e7a0      	b.n	8014876 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8014934:	4607      	mov	r7, r0
 8014936:	4684      	mov	ip, r0
 8014938:	e7a7      	b.n	801488a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801493a:	4607      	mov	r7, r0
 801493c:	e7a5      	b.n	801488a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801493e:	4602      	mov	r2, r0
 8014940:	e7b2      	b.n	80148a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8014942:	4602      	mov	r2, r0
 8014944:	e7ba      	b.n	80148bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08014946 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014946:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801494a:	b093      	sub	sp, #76	@ 0x4c
 801494c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8014950:	920f      	str	r2, [sp, #60]	@ 0x3c
 8014952:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8014954:	9108      	str	r1, [sp, #32]
 8014956:	9306      	str	r3, [sp, #24]
 8014958:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801495c:	9010      	str	r0, [sp, #64]	@ 0x40
 801495e:	6850      	ldr	r0, [r2, #4]
 8014960:	6812      	ldr	r2, [r2, #0]
 8014962:	fb00 1303 	mla	r3, r0, r3, r1
 8014966:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801496a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801496c:	681b      	ldr	r3, [r3, #0]
 801496e:	9307      	str	r3, [sp, #28]
 8014970:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8014972:	685f      	ldr	r7, [r3, #4]
 8014974:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014978:	3704      	adds	r7, #4
 801497a:	9b08      	ldr	r3, [sp, #32]
 801497c:	2b00      	cmp	r3, #0
 801497e:	dc03      	bgt.n	8014988 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8014980:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8014982:	2b00      	cmp	r3, #0
 8014984:	f340 81b2 	ble.w	8014cec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8014988:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801498a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801498e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8014992:	1e48      	subs	r0, r1, #1
 8014994:	f102 3cff 	add.w	ip, r2, #4294967295
 8014998:	9b06      	ldr	r3, [sp, #24]
 801499a:	2b00      	cmp	r3, #0
 801499c:	f340 80a9 	ble.w	8014af2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 80149a0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80149a4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80149a8:	d406      	bmi.n	80149b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80149aa:	4586      	cmp	lr, r0
 80149ac:	da04      	bge.n	80149b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80149ae:	2b00      	cmp	r3, #0
 80149b0:	db02      	blt.n	80149b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80149b2:	4563      	cmp	r3, ip
 80149b4:	f2c0 809e 	blt.w	8014af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80149b8:	f11e 0e01 	adds.w	lr, lr, #1
 80149bc:	f100 808f 	bmi.w	8014ade <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80149c0:	4571      	cmp	r1, lr
 80149c2:	f2c0 808c 	blt.w	8014ade <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80149c6:	3301      	adds	r3, #1
 80149c8:	f100 8089 	bmi.w	8014ade <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80149cc:	429a      	cmp	r2, r3
 80149ce:	f2c0 8086 	blt.w	8014ade <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80149d2:	f8dd b018 	ldr.w	fp, [sp, #24]
 80149d6:	46c8      	mov	r8, r9
 80149d8:	f1bb 0f00 	cmp.w	fp, #0
 80149dc:	f340 80a6 	ble.w	8014b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80149e0:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80149e2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80149e4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80149e8:	689b      	ldr	r3, [r3, #8]
 80149ea:	1422      	asrs	r2, r4, #16
 80149ec:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80149f0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80149f4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80149f8:	f100 80e3 	bmi.w	8014bc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80149fc:	f103 3aff 	add.w	sl, r3, #4294967295
 8014a00:	4552      	cmp	r2, sl
 8014a02:	f280 80de 	bge.w	8014bc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8014a06:	f1bc 0f00 	cmp.w	ip, #0
 8014a0a:	f2c0 80da 	blt.w	8014bc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8014a0e:	f10e 3aff 	add.w	sl, lr, #4294967295
 8014a12:	45d4      	cmp	ip, sl
 8014a14:	f280 80d5 	bge.w	8014bc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8014a18:	b21b      	sxth	r3, r3
 8014a1a:	fb0c 2203 	mla	r2, ip, r3, r2
 8014a1e:	9d07      	ldr	r5, [sp, #28]
 8014a20:	eb05 0a02 	add.w	sl, r5, r2
 8014a24:	5caa      	ldrb	r2, [r5, r2]
 8014a26:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8014a2a:	2800      	cmp	r0, #0
 8014a2c:	f000 80c0 	beq.w	8014bb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8014a30:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8014a34:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8014a38:	920b      	str	r2, [sp, #44]	@ 0x2c
 8014a3a:	b151      	cbz	r1, 8014a52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8014a3c:	eb0a 0203 	add.w	r2, sl, r3
 8014a40:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8014a44:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014a48:	9309      	str	r3, [sp, #36]	@ 0x24
 8014a4a:	7853      	ldrb	r3, [r2, #1]
 8014a4c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014a50:	930c      	str	r3, [sp, #48]	@ 0x30
 8014a52:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8014a54:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8014a56:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014a5a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8014a5e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8014a62:	ea4c 0c03 	orr.w	ip, ip, r3
 8014a66:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8014a68:	041b      	lsls	r3, r3, #16
 8014a6a:	fb10 f201 	smulbb	r2, r0, r1
 8014a6e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8014a72:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8014a76:	10d2      	asrs	r2, r2, #3
 8014a78:	432b      	orrs	r3, r5
 8014a7a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8014a7e:	4353      	muls	r3, r2
 8014a80:	fb0a 330c 	mla	r3, sl, ip, r3
 8014a84:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8014a88:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8014a8c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8014a90:	ea4c 0e0e 	orr.w	lr, ip, lr
 8014a94:	f1c1 0c10 	rsb	ip, r1, #16
 8014a98:	ebac 0c00 	sub.w	ip, ip, r0
 8014a9c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014aa0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8014aa4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014aa6:	0418      	lsls	r0, r3, #16
 8014aa8:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8014aac:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8014ab0:	4318      	orrs	r0, r3
 8014ab2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8014ab6:	fb02 c200 	mla	r2, r2, r0, ip
 8014aba:	0d53      	lsrs	r3, r2, #21
 8014abc:	0952      	lsrs	r2, r2, #5
 8014abe:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8014ac2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8014ac6:	431a      	orrs	r2, r3
 8014ac8:	f8a8 2000 	strh.w	r2, [r8]
 8014acc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8014ace:	441c      	add	r4, r3
 8014ad0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8014ad2:	f108 0802 	add.w	r8, r8, #2
 8014ad6:	441e      	add	r6, r3
 8014ad8:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014adc:	e77c      	b.n	80149d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014ade:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8014ae0:	441c      	add	r4, r3
 8014ae2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8014ae4:	441e      	add	r6, r3
 8014ae6:	9b06      	ldr	r3, [sp, #24]
 8014ae8:	3b01      	subs	r3, #1
 8014aea:	9306      	str	r3, [sp, #24]
 8014aec:	f109 0902 	add.w	r9, r9, #2
 8014af0:	e752      	b.n	8014998 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014af2:	d020      	beq.n	8014b36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014af4:	9b06      	ldr	r3, [sp, #24]
 8014af6:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8014af8:	3b01      	subs	r3, #1
 8014afa:	fb00 4003 	mla	r0, r0, r3, r4
 8014afe:	1400      	asrs	r0, r0, #16
 8014b00:	f53f af67 	bmi.w	80149d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8014b04:	3901      	subs	r1, #1
 8014b06:	4288      	cmp	r0, r1
 8014b08:	f6bf af63 	bge.w	80149d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8014b0c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8014b0e:	fb01 6303 	mla	r3, r1, r3, r6
 8014b12:	141b      	asrs	r3, r3, #16
 8014b14:	f53f af5d 	bmi.w	80149d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8014b18:	3a01      	subs	r2, #1
 8014b1a:	4293      	cmp	r3, r2
 8014b1c:	f6bf af59 	bge.w	80149d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8014b20:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8014b24:	46ca      	mov	sl, r9
 8014b26:	f1b8 0f00 	cmp.w	r8, #0
 8014b2a:	dc67      	bgt.n	8014bfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8014b2c:	9b06      	ldr	r3, [sp, #24]
 8014b2e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8014b32:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8014b36:	9b08      	ldr	r3, [sp, #32]
 8014b38:	2b00      	cmp	r3, #0
 8014b3a:	f340 80d7 	ble.w	8014cec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8014b3e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014b42:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014b46:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014b4a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8014b4c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014b50:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014b54:	eeb0 6a62 	vmov.f32	s12, s5
 8014b58:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014b5c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014b60:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014b64:	ee16 4a10 	vmov	r4, s12
 8014b68:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014b6c:	eeb0 6a43 	vmov.f32	s12, s6
 8014b70:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014b74:	ee12 2a90 	vmov	r2, s5
 8014b78:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014b7c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b80:	ee13 2a10 	vmov	r2, s6
 8014b84:	931f      	str	r3, [sp, #124]	@ 0x7c
 8014b86:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8014b88:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b8c:	9320      	str	r3, [sp, #128]	@ 0x80
 8014b8e:	9b08      	ldr	r3, [sp, #32]
 8014b90:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014b92:	3b01      	subs	r3, #1
 8014b94:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014b98:	9308      	str	r3, [sp, #32]
 8014b9a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8014b9c:	bf08      	it	eq
 8014b9e:	4613      	moveq	r3, r2
 8014ba0:	ee16 6a10 	vmov	r6, s12
 8014ba4:	9306      	str	r3, [sp, #24]
 8014ba6:	eeb0 3a67 	vmov.f32	s6, s15
 8014baa:	eef0 2a47 	vmov.f32	s5, s14
 8014bae:	e6e4      	b.n	801497a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8014bb0:	2900      	cmp	r1, #0
 8014bb2:	f43f af4e 	beq.w	8014a52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8014bb6:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8014bba:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014bbe:	9309      	str	r3, [sp, #36]	@ 0x24
 8014bc0:	e747      	b.n	8014a52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8014bc2:	f112 0a01 	adds.w	sl, r2, #1
 8014bc6:	d481      	bmi.n	8014acc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8014bc8:	4553      	cmp	r3, sl
 8014bca:	f6ff af7f 	blt.w	8014acc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8014bce:	f11c 0a01 	adds.w	sl, ip, #1
 8014bd2:	f53f af7b 	bmi.w	8014acc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8014bd6:	45d6      	cmp	lr, sl
 8014bd8:	f6ff af78 	blt.w	8014acc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8014bdc:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8014be0:	b21b      	sxth	r3, r3
 8014be2:	fa0f f28e 	sxth.w	r2, lr
 8014be6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8014bea:	9201      	str	r2, [sp, #4]
 8014bec:	9300      	str	r3, [sp, #0]
 8014bee:	9a07      	ldr	r2, [sp, #28]
 8014bf0:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8014bf2:	463b      	mov	r3, r7
 8014bf4:	4641      	mov	r1, r8
 8014bf6:	f7ff fe21 	bl	801483c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8014bfa:	e767      	b.n	8014acc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8014bfc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8014bfe:	9d07      	ldr	r5, [sp, #28]
 8014c00:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8014c04:	1422      	asrs	r2, r4, #16
 8014c06:	1431      	asrs	r1, r6, #16
 8014c08:	fb03 2101 	mla	r1, r3, r1, r2
 8014c0c:	9a07      	ldr	r2, [sp, #28]
 8014c0e:	440a      	add	r2, r1
 8014c10:	5c69      	ldrb	r1, [r5, r1]
 8014c12:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8014c16:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8014c1a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8014c1e:	f1be 0f00 	cmp.w	lr, #0
 8014c22:	d05c      	beq.n	8014cde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8014c24:	f892 c001 	ldrb.w	ip, [r2, #1]
 8014c28:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8014c2c:	950d      	str	r5, [sp, #52]	@ 0x34
 8014c2e:	b150      	cbz	r0, 8014c46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8014c30:	eb02 0c03 	add.w	ip, r2, r3
 8014c34:	5cd3      	ldrb	r3, [r2, r3]
 8014c36:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014c3a:	930a      	str	r3, [sp, #40]	@ 0x28
 8014c3c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8014c40:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014c44:	930e      	str	r3, [sp, #56]	@ 0x38
 8014c46:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014c48:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8014c4a:	fb1e f200 	smulbb	r2, lr, r0
 8014c4e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014c52:	10d2      	asrs	r2, r2, #3
 8014c54:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8014c58:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8014c5c:	ea4c 0c03 	orr.w	ip, ip, r3
 8014c60:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8014c64:	9311      	str	r3, [sp, #68]	@ 0x44
 8014c66:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014c68:	041b      	lsls	r3, r3, #16
 8014c6a:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 8014c6e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8014c72:	ea43 030b 	orr.w	r3, r3, fp
 8014c76:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8014c78:	4353      	muls	r3, r2
 8014c7a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8014c7e:	fb05 3c0c 	mla	ip, r5, ip, r3
 8014c82:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8014c86:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8014c8a:	ea43 0b01 	orr.w	fp, r3, r1
 8014c8e:	f1c0 0110 	rsb	r1, r0, #16
 8014c92:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014c94:	eba1 0e0e 	sub.w	lr, r1, lr
 8014c98:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8014c9c:	fb0e cc0b 	mla	ip, lr, fp, ip
 8014ca0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8014ca4:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 8014ca8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8014cac:	ea4b 0e0e 	orr.w	lr, fp, lr
 8014cb0:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8014cb4:	fb02 cc0e 	mla	ip, r2, lr, ip
 8014cb8:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8014cbc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8014cc0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8014cc4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8014cc8:	ea43 0c0c 	orr.w	ip, r3, ip
 8014ccc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8014cce:	f82a cb02 	strh.w	ip, [sl], #2
 8014cd2:	441c      	add	r4, r3
 8014cd4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8014cd6:	f108 38ff 	add.w	r8, r8, #4294967295
 8014cda:	441e      	add	r6, r3
 8014cdc:	e723      	b.n	8014b26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014cde:	2800      	cmp	r0, #0
 8014ce0:	d0b1      	beq.n	8014c46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8014ce2:	5cd3      	ldrb	r3, [r2, r3]
 8014ce4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014ce8:	930a      	str	r3, [sp, #40]	@ 0x28
 8014cea:	e7ac      	b.n	8014c46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8014cec:	b013      	add	sp, #76	@ 0x4c
 8014cee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014cf2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8014cf2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014cf6:	880d      	ldrh	r5, [r1, #0]
 8014cf8:	b087      	sub	sp, #28
 8014cfa:	10ef      	asrs	r7, r5, #3
 8014cfc:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8014d00:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014d04:	00ed      	lsls	r5, r5, #3
 8014d06:	9701      	str	r7, [sp, #4]
 8014d08:	b2ed      	uxtb	r5, r5
 8014d0a:	9502      	str	r5, [sp, #8]
 8014d0c:	9d01      	ldr	r5, [sp, #4]
 8014d0e:	9103      	str	r1, [sp, #12]
 8014d10:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 8014d14:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 8014d18:	9902      	ldr	r1, [sp, #8]
 8014d1a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8014d1e:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 8014d22:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 8014d26:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 8014d2a:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 8014d2e:	022d      	lsls	r5, r5, #8
 8014d30:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8014d34:	fb06 0709 	mla	r7, r6, r9, r0
 8014d38:	430d      	orrs	r5, r1
 8014d3a:	2e00      	cmp	r6, #0
 8014d3c:	eb02 0c07 	add.w	ip, r2, r7
 8014d40:	9505      	str	r5, [sp, #20]
 8014d42:	f2c0 80b6 	blt.w	8014eb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8014d46:	45b3      	cmp	fp, r6
 8014d48:	f340 80b3 	ble.w	8014eb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8014d4c:	2800      	cmp	r0, #0
 8014d4e:	f2c0 80ae 	blt.w	8014eae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8014d52:	4581      	cmp	r9, r0
 8014d54:	f340 80ab 	ble.w	8014eae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8014d58:	5dd7      	ldrb	r7, [r2, r7]
 8014d5a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8014d5e:	441f      	add	r7, r3
 8014d60:	1c42      	adds	r2, r0, #1
 8014d62:	f100 80a9 	bmi.w	8014eb8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8014d66:	4591      	cmp	r9, r2
 8014d68:	f340 80a6 	ble.w	8014eb8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8014d6c:	2c00      	cmp	r4, #0
 8014d6e:	f000 80a3 	beq.w	8014eb8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8014d72:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8014d76:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8014d7a:	441d      	add	r5, r3
 8014d7c:	3601      	adds	r6, #1
 8014d7e:	f100 809f 	bmi.w	8014ec0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8014d82:	45b3      	cmp	fp, r6
 8014d84:	f340 809c 	ble.w	8014ec0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8014d88:	f1be 0f00 	cmp.w	lr, #0
 8014d8c:	f000 8098 	beq.w	8014ec0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8014d90:	2800      	cmp	r0, #0
 8014d92:	f2c0 8093 	blt.w	8014ebc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8014d96:	4581      	cmp	r9, r0
 8014d98:	f340 8090 	ble.w	8014ebc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8014d9c:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8014da0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8014da4:	441e      	add	r6, r3
 8014da6:	3001      	adds	r0, #1
 8014da8:	f100 808d 	bmi.w	8014ec6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8014dac:	4581      	cmp	r9, r0
 8014dae:	f340 808a 	ble.w	8014ec6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8014db2:	2c00      	cmp	r4, #0
 8014db4:	f000 8087 	beq.w	8014ec6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8014db8:	44e1      	add	r9, ip
 8014dba:	f899 2001 	ldrb.w	r2, [r9, #1]
 8014dbe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014dc2:	4413      	add	r3, r2
 8014dc4:	b2a4      	uxth	r4, r4
 8014dc6:	fa1f fe8e 	uxth.w	lr, lr
 8014dca:	fb04 fb0e 	mul.w	fp, r4, lr
 8014dce:	0124      	lsls	r4, r4, #4
 8014dd0:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8014dd4:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 8014dd8:	eba4 040b 	sub.w	r4, r4, fp
 8014ddc:	fa1f f08e 	uxth.w	r0, lr
 8014de0:	b2a2      	uxth	r2, r4
 8014de2:	78ac      	ldrb	r4, [r5, #2]
 8014de4:	f897 c002 	ldrb.w	ip, [r7, #2]
 8014de8:	9901      	ldr	r1, [sp, #4]
 8014dea:	eba9 0900 	sub.w	r9, r9, r0
 8014dee:	fa1f f989 	uxth.w	r9, r9
 8014df2:	4354      	muls	r4, r2
 8014df4:	fb09 440c 	mla	r4, r9, ip, r4
 8014df8:	f896 c002 	ldrb.w	ip, [r6, #2]
 8014dfc:	fb00 440c 	mla	r4, r0, ip, r4
 8014e00:	f893 c002 	ldrb.w	ip, [r3, #2]
 8014e04:	fa1f fe88 	uxth.w	lr, r8
 8014e08:	ea6f 0808 	mvn.w	r8, r8
 8014e0c:	fa5f f888 	uxtb.w	r8, r8
 8014e10:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8014e14:	fb1a fa08 	smulbb	sl, sl, r8
 8014e18:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8014e1c:	fb0c ac0e 	mla	ip, ip, lr, sl
 8014e20:	f895 a001 	ldrb.w	sl, [r5, #1]
 8014e24:	787c      	ldrb	r4, [r7, #1]
 8014e26:	782d      	ldrb	r5, [r5, #0]
 8014e28:	783f      	ldrb	r7, [r7, #0]
 8014e2a:	fb02 fa0a 	mul.w	sl, r2, sl
 8014e2e:	fb09 aa04 	mla	sl, r9, r4, sl
 8014e32:	7874      	ldrb	r4, [r6, #1]
 8014e34:	436a      	muls	r2, r5
 8014e36:	7835      	ldrb	r5, [r6, #0]
 8014e38:	fb00 aa04 	mla	sl, r0, r4, sl
 8014e3c:	fb09 2207 	mla	r2, r9, r7, r2
 8014e40:	785c      	ldrb	r4, [r3, #1]
 8014e42:	781b      	ldrb	r3, [r3, #0]
 8014e44:	fb00 2005 	mla	r0, r0, r5, r2
 8014e48:	fb0b a404 	mla	r4, fp, r4, sl
 8014e4c:	fb0b 0b03 	mla	fp, fp, r3, r0
 8014e50:	9b02      	ldr	r3, [sp, #8]
 8014e52:	fb11 fa08 	smulbb	sl, r1, r8
 8014e56:	fa1f fc8c 	uxth.w	ip, ip
 8014e5a:	fb13 f808 	smulbb	r8, r3, r8
 8014e5e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8014e62:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8014e66:	fb04 a40e 	mla	r4, r4, lr, sl
 8014e6a:	f10c 0301 	add.w	r3, ip, #1
 8014e6e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8014e72:	fa1f fe8e 	uxth.w	lr, lr
 8014e76:	b2a4      	uxth	r4, r4
 8014e78:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8014e7c:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 8014e80:	f104 0a01 	add.w	sl, r4, #1
 8014e84:	f10e 0c01 	add.w	ip, lr, #1
 8014e88:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8014e8c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8014e90:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8014e94:	0964      	lsrs	r4, r4, #5
 8014e96:	ea4c 0c03 	orr.w	ip, ip, r3
 8014e9a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8014e9e:	9b03      	ldr	r3, [sp, #12]
 8014ea0:	ea4c 0c04 	orr.w	ip, ip, r4
 8014ea4:	f8a3 c000 	strh.w	ip, [r3]
 8014ea8:	b007      	add	sp, #28
 8014eaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014eae:	af05      	add	r7, sp, #20
 8014eb0:	e756      	b.n	8014d60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8014eb2:	ad05      	add	r5, sp, #20
 8014eb4:	462f      	mov	r7, r5
 8014eb6:	e761      	b.n	8014d7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8014eb8:	ad05      	add	r5, sp, #20
 8014eba:	e75f      	b.n	8014d7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8014ebc:	ae05      	add	r6, sp, #20
 8014ebe:	e772      	b.n	8014da6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8014ec0:	ab05      	add	r3, sp, #20
 8014ec2:	461e      	mov	r6, r3
 8014ec4:	e77e      	b.n	8014dc4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8014ec6:	ab05      	add	r3, sp, #20
 8014ec8:	e77c      	b.n	8014dc4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08014eca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014eca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ece:	b095      	sub	sp, #84	@ 0x54
 8014ed0:	9212      	str	r2, [sp, #72]	@ 0x48
 8014ed2:	9309      	str	r3, [sp, #36]	@ 0x24
 8014ed4:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8014ed6:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 8014eda:	930f      	str	r3, [sp, #60]	@ 0x3c
 8014edc:	910e      	str	r1, [sp, #56]	@ 0x38
 8014ede:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 8014ee2:	9013      	str	r0, [sp, #76]	@ 0x4c
 8014ee4:	6850      	ldr	r0, [r2, #4]
 8014ee6:	6812      	ldr	r2, [r2, #0]
 8014ee8:	fb00 1303 	mla	r3, r0, r3, r1
 8014eec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014ef0:	930a      	str	r3, [sp, #40]	@ 0x28
 8014ef2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8014ef4:	681b      	ldr	r3, [r3, #0]
 8014ef6:	930d      	str	r3, [sp, #52]	@ 0x34
 8014ef8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8014efa:	685c      	ldr	r4, [r3, #4]
 8014efc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8014efe:	43db      	mvns	r3, r3
 8014f00:	b2db      	uxtb	r3, r3
 8014f02:	3404      	adds	r4, #4
 8014f04:	930b      	str	r3, [sp, #44]	@ 0x2c
 8014f06:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014f08:	2b00      	cmp	r3, #0
 8014f0a:	dc03      	bgt.n	8014f14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014f0c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8014f0e:	2b00      	cmp	r3, #0
 8014f10:	f340 8255 	ble.w	80153be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8014f14:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8014f16:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8014f1a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8014f1e:	1e48      	subs	r0, r1, #1
 8014f20:	1e55      	subs	r5, r2, #1
 8014f22:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014f24:	2b00      	cmp	r3, #0
 8014f26:	f340 80f9 	ble.w	801511c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8014f2a:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 8014f2c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8014f2e:	1436      	asrs	r6, r6, #16
 8014f30:	ea4f 4323 	mov.w	r3, r3, asr #16
 8014f34:	d406      	bmi.n	8014f44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8014f36:	4286      	cmp	r6, r0
 8014f38:	da04      	bge.n	8014f44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8014f3a:	2b00      	cmp	r3, #0
 8014f3c:	db02      	blt.n	8014f44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8014f3e:	42ab      	cmp	r3, r5
 8014f40:	f2c0 80ed 	blt.w	801511e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8014f44:	3601      	adds	r6, #1
 8014f46:	f100 80da 	bmi.w	80150fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8014f4a:	42b1      	cmp	r1, r6
 8014f4c:	f2c0 80d7 	blt.w	80150fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8014f50:	3301      	adds	r3, #1
 8014f52:	f100 80d4 	bmi.w	80150fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8014f56:	429a      	cmp	r2, r3
 8014f58:	f2c0 80d1 	blt.w	80150fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8014f5c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014f5e:	9311      	str	r3, [sp, #68]	@ 0x44
 8014f60:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014f62:	930c      	str	r3, [sp, #48]	@ 0x30
 8014f64:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8014f66:	2b00      	cmp	r3, #0
 8014f68:	f340 80fa 	ble.w	8015160 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8014f6c:	9826      	ldr	r0, [sp, #152]	@ 0x98
 8014f6e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8014f70:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8014f72:	68c6      	ldr	r6, [r0, #12]
 8014f74:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8014f76:	141d      	asrs	r5, r3, #16
 8014f78:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8014f7c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8014f7e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8014f80:	1400      	asrs	r0, r0, #16
 8014f82:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8014f86:	6892      	ldr	r2, [r2, #8]
 8014f88:	f100 813e 	bmi.w	8015208 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8014f8c:	1e57      	subs	r7, r2, #1
 8014f8e:	42b8      	cmp	r0, r7
 8014f90:	f280 813a 	bge.w	8015208 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8014f94:	2d00      	cmp	r5, #0
 8014f96:	f2c0 8137 	blt.w	8015208 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8014f9a:	1e77      	subs	r7, r6, #1
 8014f9c:	42bd      	cmp	r5, r7
 8014f9e:	f280 8133 	bge.w	8015208 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8014fa2:	b212      	sxth	r2, r2
 8014fa4:	fb05 0002 	mla	r0, r5, r2, r0
 8014fa8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8014faa:	f815 a000 	ldrb.w	sl, [r5, r0]
 8014fae:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8014fb2:	182e      	adds	r6, r5, r0
 8014fb4:	eb04 050a 	add.w	r5, r4, sl
 8014fb8:	2b00      	cmp	r3, #0
 8014fba:	f000 8117 	beq.w	80151ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8014fbe:	f896 c001 	ldrb.w	ip, [r6, #1]
 8014fc2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8014fc6:	44a4      	add	ip, r4
 8014fc8:	2900      	cmp	r1, #0
 8014fca:	f000 8117 	beq.w	80151fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8014fce:	18b0      	adds	r0, r6, r2
 8014fd0:	5cb2      	ldrb	r2, [r6, r2]
 8014fd2:	7840      	ldrb	r0, [r0, #1]
 8014fd4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014fd8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014fdc:	4422      	add	r2, r4
 8014fde:	4420      	add	r0, r4
 8014fe0:	b29b      	uxth	r3, r3
 8014fe2:	b289      	uxth	r1, r1
 8014fe4:	fb03 f901 	mul.w	r9, r3, r1
 8014fe8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8014fec:	011b      	lsls	r3, r3, #4
 8014fee:	b289      	uxth	r1, r1
 8014ff0:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8014ff4:	f895 b002 	ldrb.w	fp, [r5, #2]
 8014ff8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8014ffa:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8014ffe:	f8b6 e000 	ldrh.w	lr, [r6]
 8015002:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 8015006:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801500a:	eba3 0309 	sub.w	r3, r3, r9
 801500e:	b29b      	uxth	r3, r3
 8015010:	eba8 0801 	sub.w	r8, r8, r1
 8015014:	fa1f f888 	uxth.w	r8, r8
 8015018:	435f      	muls	r7, r3
 801501a:	fb08 770b 	mla	r7, r8, fp, r7
 801501e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8015022:	9310      	str	r3, [sp, #64]	@ 0x40
 8015024:	fb01 770b 	mla	r7, r1, fp, r7
 8015028:	f890 b002 	ldrb.w	fp, [r0, #2]
 801502c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801502e:	fb09 770b 	mla	r7, r9, fp, r7
 8015032:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8015036:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801503a:	fb1b fb03 	smulbb	fp, fp, r3
 801503e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8015042:	fb07 b706 	mla	r7, r7, r6, fp
 8015046:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015048:	f895 b001 	ldrb.w	fp, [r5, #1]
 801504c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8015050:	f89c c000 	ldrb.w	ip, [ip]
 8015054:	435d      	muls	r5, r3
 8015056:	fb08 550b 	mla	r5, r8, fp, r5
 801505a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801505e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8015060:	fb01 550b 	mla	r5, r1, fp, r5
 8015064:	f890 b001 	ldrb.w	fp, [r0, #1]
 8015068:	fb09 550b 	mla	r5, r9, fp, r5
 801506c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8015070:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8015074:	fb1b fb03 	smulbb	fp, fp, r3
 8015078:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801507a:	fb03 f30c 	mul.w	r3, r3, ip
 801507e:	f892 c000 	ldrb.w	ip, [r2]
 8015082:	fb08 330a 	mla	r3, r8, sl, r3
 8015086:	fb01 330c 	mla	r3, r1, ip, r3
 801508a:	f890 c000 	ldrb.w	ip, [r0]
 801508e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015092:	fb09 3c0c 	mla	ip, r9, ip, r3
 8015096:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8015098:	fa5f fe8e 	uxtb.w	lr, lr
 801509c:	b2bf      	uxth	r7, r7
 801509e:	fb1e fe03 	smulbb	lr, lr, r3
 80150a2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80150a6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80150aa:	fb05 b506 	mla	r5, r5, r6, fp
 80150ae:	1c7b      	adds	r3, r7, #1
 80150b0:	fb0c e606 	mla	r6, ip, r6, lr
 80150b4:	b2ad      	uxth	r5, r5
 80150b6:	b2b6      	uxth	r6, r6
 80150b8:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80150bc:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 80150c0:	f105 0b01 	add.w	fp, r5, #1
 80150c4:	1c77      	adds	r7, r6, #1
 80150c6:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80150ca:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80150ce:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80150d2:	096d      	lsrs	r5, r5, #5
 80150d4:	431f      	orrs	r7, r3
 80150d6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80150da:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80150dc:	433d      	orrs	r5, r7
 80150de:	801d      	strh	r5, [r3, #0]
 80150e0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80150e2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80150e4:	3302      	adds	r3, #2
 80150e6:	930c      	str	r3, [sp, #48]	@ 0x30
 80150e8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80150ea:	4413      	add	r3, r2
 80150ec:	931f      	str	r3, [sp, #124]	@ 0x7c
 80150ee:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80150f0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80150f2:	4413      	add	r3, r2
 80150f4:	9320      	str	r3, [sp, #128]	@ 0x80
 80150f6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80150f8:	3b01      	subs	r3, #1
 80150fa:	9311      	str	r3, [sp, #68]	@ 0x44
 80150fc:	e732      	b.n	8014f64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80150fe:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8015100:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 8015102:	4433      	add	r3, r6
 8015104:	931f      	str	r3, [sp, #124]	@ 0x7c
 8015106:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 8015108:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801510a:	4433      	add	r3, r6
 801510c:	9320      	str	r3, [sp, #128]	@ 0x80
 801510e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015110:	3b01      	subs	r3, #1
 8015112:	9309      	str	r3, [sp, #36]	@ 0x24
 8015114:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015116:	3302      	adds	r3, #2
 8015118:	930a      	str	r3, [sp, #40]	@ 0x28
 801511a:	e702      	b.n	8014f22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801511c:	d027      	beq.n	801516e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801511e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015120:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8015122:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 8015124:	3b01      	subs	r3, #1
 8015126:	fb00 5003 	mla	r0, r0, r3, r5
 801512a:	1400      	asrs	r0, r0, #16
 801512c:	f53f af16 	bmi.w	8014f5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015130:	3901      	subs	r1, #1
 8015132:	4288      	cmp	r0, r1
 8015134:	f6bf af12 	bge.w	8014f5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015138:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801513a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801513c:	fb01 0303 	mla	r3, r1, r3, r0
 8015140:	141b      	asrs	r3, r3, #16
 8015142:	f53f af0b 	bmi.w	8014f5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015146:	3a01      	subs	r2, #1
 8015148:	4293      	cmp	r3, r2
 801514a:	f6bf af07 	bge.w	8014f5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801514e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015150:	9311      	str	r3, [sp, #68]	@ 0x44
 8015152:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 8015156:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015158:	930c      	str	r3, [sp, #48]	@ 0x30
 801515a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801515c:	2b00      	cmp	r3, #0
 801515e:	dc70      	bgt.n	8015242 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8015160:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015162:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8015164:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015168:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801516c:	930a      	str	r3, [sp, #40]	@ 0x28
 801516e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015170:	2b00      	cmp	r3, #0
 8015172:	f340 8124 	ble.w	80153be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8015176:	ee30 0a04 	vadd.f32	s0, s0, s8
 801517a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801517e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015182:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8015184:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015188:	ee31 1a05 	vadd.f32	s2, s2, s10
 801518c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015190:	eef0 6a62 	vmov.f32	s13, s5
 8015194:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015198:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801519c:	ee77 2a62 	vsub.f32	s5, s14, s5
 80151a0:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 80151a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80151a8:	eef0 6a43 	vmov.f32	s13, s6
 80151ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80151b0:	ee12 2a90 	vmov	r2, s5
 80151b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80151b8:	fb92 f3f3 	sdiv	r3, r2, r3
 80151bc:	ee13 2a10 	vmov	r2, s6
 80151c0:	9321      	str	r3, [sp, #132]	@ 0x84
 80151c2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80151c4:	fb92 f3f3 	sdiv	r3, r2, r3
 80151c8:	9322      	str	r3, [sp, #136]	@ 0x88
 80151ca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80151cc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80151ce:	3b01      	subs	r3, #1
 80151d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80151d4:	930e      	str	r3, [sp, #56]	@ 0x38
 80151d6:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80151d8:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 80151dc:	bf08      	it	eq
 80151de:	4613      	moveq	r3, r2
 80151e0:	9309      	str	r3, [sp, #36]	@ 0x24
 80151e2:	eeb0 3a67 	vmov.f32	s6, s15
 80151e6:	eef0 2a47 	vmov.f32	s5, s14
 80151ea:	e68c      	b.n	8014f06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80151ec:	b149      	cbz	r1, 8015202 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 80151ee:	5cb2      	ldrb	r2, [r6, r2]
 80151f0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80151f4:	4422      	add	r2, r4
 80151f6:	4628      	mov	r0, r5
 80151f8:	46ac      	mov	ip, r5
 80151fa:	e6f1      	b.n	8014fe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80151fc:	4628      	mov	r0, r5
 80151fe:	462a      	mov	r2, r5
 8015200:	e6ee      	b.n	8014fe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8015202:	4628      	mov	r0, r5
 8015204:	462a      	mov	r2, r5
 8015206:	e7f7      	b.n	80151f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8015208:	1c47      	adds	r7, r0, #1
 801520a:	f53f af69 	bmi.w	80150e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801520e:	42ba      	cmp	r2, r7
 8015210:	f6ff af66 	blt.w	80150e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8015214:	1c6f      	adds	r7, r5, #1
 8015216:	f53f af63 	bmi.w	80150e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801521a:	42be      	cmp	r6, r7
 801521c:	f6ff af60 	blt.w	80150e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8015220:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8015222:	9002      	str	r0, [sp, #8]
 8015224:	b236      	sxth	r6, r6
 8015226:	b212      	sxth	r2, r2
 8015228:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801522c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8015230:	9200      	str	r2, [sp, #0]
 8015232:	9601      	str	r6, [sp, #4]
 8015234:	4623      	mov	r3, r4
 8015236:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801523a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801523c:	f7ff fd59 	bl	8014cf2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8015240:	e74e      	b.n	80150e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8015242:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8015244:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8015246:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 8015248:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801524a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801524e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8015250:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8015254:	142d      	asrs	r5, r5, #16
 8015256:	1400      	asrs	r0, r0, #16
 8015258:	fb02 5000 	mla	r0, r2, r0, r5
 801525c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801525e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8015262:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015266:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801526a:	182e      	adds	r6, r5, r0
 801526c:	eb04 0509 	add.w	r5, r4, r9
 8015270:	2b00      	cmp	r3, #0
 8015272:	f000 8096 	beq.w	80153a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8015276:	7877      	ldrb	r7, [r6, #1]
 8015278:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801527c:	4427      	add	r7, r4
 801527e:	2900      	cmp	r1, #0
 8015280:	f000 8097 	beq.w	80153b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8015284:	18b0      	adds	r0, r6, r2
 8015286:	5cb2      	ldrb	r2, [r6, r2]
 8015288:	7840      	ldrb	r0, [r0, #1]
 801528a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801528e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015292:	4422      	add	r2, r4
 8015294:	4420      	add	r0, r4
 8015296:	b29b      	uxth	r3, r3
 8015298:	b289      	uxth	r1, r1
 801529a:	fb03 f801 	mul.w	r8, r3, r1
 801529e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80152a0:	f895 b002 	ldrb.w	fp, [r5, #2]
 80152a4:	f8b6 c000 	ldrh.w	ip, [r6]
 80152a8:	78be      	ldrb	r6, [r7, #2]
 80152aa:	f814 9009 	ldrb.w	r9, [r4, r9]
 80152ae:	011b      	lsls	r3, r3, #4
 80152b0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80152b4:	b289      	uxth	r1, r1
 80152b6:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 80152ba:	eba3 0308 	sub.w	r3, r3, r8
 80152be:	b29b      	uxth	r3, r3
 80152c0:	ebae 0e01 	sub.w	lr, lr, r1
 80152c4:	fa1f fe8e 	uxth.w	lr, lr
 80152c8:	435e      	muls	r6, r3
 80152ca:	fb0e 660b 	mla	r6, lr, fp, r6
 80152ce:	f892 b002 	ldrb.w	fp, [r2, #2]
 80152d2:	9310      	str	r3, [sp, #64]	@ 0x40
 80152d4:	fb01 660b 	mla	r6, r1, fp, r6
 80152d8:	f890 b002 	ldrb.w	fp, [r0, #2]
 80152dc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80152de:	fb08 660b 	mla	r6, r8, fp, r6
 80152e2:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 80152e6:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 80152ea:	fb1b fb03 	smulbb	fp, fp, r3
 80152ee:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80152f2:	fb06 b60a 	mla	r6, r6, sl, fp
 80152f6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80152f8:	f895 b001 	ldrb.w	fp, [r5, #1]
 80152fc:	787d      	ldrb	r5, [r7, #1]
 80152fe:	783f      	ldrb	r7, [r7, #0]
 8015300:	435d      	muls	r5, r3
 8015302:	fb0e 550b 	mla	r5, lr, fp, r5
 8015306:	f892 b001 	ldrb.w	fp, [r2, #1]
 801530a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801530c:	fb01 550b 	mla	r5, r1, fp, r5
 8015310:	f890 b001 	ldrb.w	fp, [r0, #1]
 8015314:	fb08 550b 	mla	r5, r8, fp, r5
 8015318:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801531c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8015320:	fb1b fb03 	smulbb	fp, fp, r3
 8015324:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015326:	437b      	muls	r3, r7
 8015328:	7817      	ldrb	r7, [r2, #0]
 801532a:	fb0e 3309 	mla	r3, lr, r9, r3
 801532e:	fb01 3307 	mla	r3, r1, r7, r3
 8015332:	7807      	ldrb	r7, [r0, #0]
 8015334:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015338:	fb08 3707 	mla	r7, r8, r7, r3
 801533c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801533e:	fa5f fc8c 	uxtb.w	ip, ip
 8015342:	fb1c fc03 	smulbb	ip, ip, r3
 8015346:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801534a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801534e:	fb05 b50a 	mla	r5, r5, sl, fp
 8015352:	fb07 c70a 	mla	r7, r7, sl, ip
 8015356:	b2b6      	uxth	r6, r6
 8015358:	b2ad      	uxth	r5, r5
 801535a:	b2bf      	uxth	r7, r7
 801535c:	1c73      	adds	r3, r6, #1
 801535e:	1c7a      	adds	r2, r7, #1
 8015360:	f105 0b01 	add.w	fp, r5, #1
 8015364:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8015368:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801536c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8015370:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015374:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8015378:	096d      	lsrs	r5, r5, #5
 801537a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801537c:	4316      	orrs	r6, r2
 801537e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015382:	432e      	orrs	r6, r5
 8015384:	f823 6b02 	strh.w	r6, [r3], #2
 8015388:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801538a:	930c      	str	r3, [sp, #48]	@ 0x30
 801538c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801538e:	4413      	add	r3, r2
 8015390:	931f      	str	r3, [sp, #124]	@ 0x7c
 8015392:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8015394:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8015396:	4413      	add	r3, r2
 8015398:	9320      	str	r3, [sp, #128]	@ 0x80
 801539a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801539c:	3b01      	subs	r3, #1
 801539e:	9311      	str	r3, [sp, #68]	@ 0x44
 80153a0:	e6db      	b.n	801515a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 80153a2:	b149      	cbz	r1, 80153b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80153a4:	5cb2      	ldrb	r2, [r6, r2]
 80153a6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80153aa:	4422      	add	r2, r4
 80153ac:	4628      	mov	r0, r5
 80153ae:	462f      	mov	r7, r5
 80153b0:	e771      	b.n	8015296 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80153b2:	4628      	mov	r0, r5
 80153b4:	462a      	mov	r2, r5
 80153b6:	e76e      	b.n	8015296 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80153b8:	4628      	mov	r0, r5
 80153ba:	462a      	mov	r2, r5
 80153bc:	e7f7      	b.n	80153ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80153be:	b015      	add	sp, #84	@ 0x54
 80153c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080153c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80153c4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80153c8:	880f      	ldrh	r7, [r1, #0]
 80153ca:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 80153ce:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 80153d2:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 80153d6:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 80153da:	023c      	lsls	r4, r7, #8
 80153dc:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 80153e0:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 80153e4:	017c      	lsls	r4, r7, #5
 80153e6:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 80153ea:	00ff      	lsls	r7, r7, #3
 80153ec:	ea4b 0404 	orr.w	r4, fp, r4
 80153f0:	b2ff      	uxtb	r7, r7
 80153f2:	fb05 ca0e 	mla	sl, r5, lr, ip
 80153f6:	4327      	orrs	r7, r4
 80153f8:	2d00      	cmp	r5, #0
 80153fa:	eb02 080a 	add.w	r8, r2, sl
 80153fe:	9701      	str	r7, [sp, #4]
 8015400:	db7e      	blt.n	8015500 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8015402:	45a9      	cmp	r9, r5
 8015404:	dd7c      	ble.n	8015500 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8015406:	f1bc 0f00 	cmp.w	ip, #0
 801540a:	db77      	blt.n	80154fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801540c:	45e6      	cmp	lr, ip
 801540e:	dd75      	ble.n	80154fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8015410:	f812 700a 	ldrb.w	r7, [r2, sl]
 8015414:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015418:	441f      	add	r7, r3
 801541a:	f11c 0201 	adds.w	r2, ip, #1
 801541e:	d472      	bmi.n	8015506 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8015420:	4596      	cmp	lr, r2
 8015422:	dd70      	ble.n	8015506 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8015424:	2800      	cmp	r0, #0
 8015426:	d06e      	beq.n	8015506 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8015428:	f898 4001 	ldrb.w	r4, [r8, #1]
 801542c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8015430:	441c      	add	r4, r3
 8015432:	3501      	adds	r5, #1
 8015434:	d46b      	bmi.n	801550e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8015436:	45a9      	cmp	r9, r5
 8015438:	dd69      	ble.n	801550e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801543a:	2e00      	cmp	r6, #0
 801543c:	d067      	beq.n	801550e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801543e:	f1bc 0f00 	cmp.w	ip, #0
 8015442:	db62      	blt.n	801550a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8015444:	45e6      	cmp	lr, ip
 8015446:	dd60      	ble.n	801550a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8015448:	f818 500e 	ldrb.w	r5, [r8, lr]
 801544c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015450:	441d      	add	r5, r3
 8015452:	f11c 0201 	adds.w	r2, ip, #1
 8015456:	d45d      	bmi.n	8015514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8015458:	4596      	cmp	lr, r2
 801545a:	dd5b      	ble.n	8015514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801545c:	2800      	cmp	r0, #0
 801545e:	d059      	beq.n	8015514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8015460:	44c6      	add	lr, r8
 8015462:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8015466:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801546a:	4413      	add	r3, r2
 801546c:	b280      	uxth	r0, r0
 801546e:	b2b2      	uxth	r2, r6
 8015470:	fb00 f602 	mul.w	r6, r0, r2
 8015474:	0100      	lsls	r0, r0, #4
 8015476:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801547a:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801547e:	1b80      	subs	r0, r0, r6
 8015480:	fa1f fc82 	uxth.w	ip, r2
 8015484:	b282      	uxth	r2, r0
 8015486:	78a0      	ldrb	r0, [r4, #2]
 8015488:	f897 e002 	ldrb.w	lr, [r7, #2]
 801548c:	f897 9000 	ldrb.w	r9, [r7]
 8015490:	787f      	ldrb	r7, [r7, #1]
 8015492:	eba8 080c 	sub.w	r8, r8, ip
 8015496:	fa1f f888 	uxth.w	r8, r8
 801549a:	4350      	muls	r0, r2
 801549c:	fb08 0e0e 	mla	lr, r8, lr, r0
 80154a0:	78a8      	ldrb	r0, [r5, #2]
 80154a2:	fb0c e000 	mla	r0, ip, r0, lr
 80154a6:	f893 e002 	ldrb.w	lr, [r3, #2]
 80154aa:	fb06 0e0e 	mla	lr, r6, lr, r0
 80154ae:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 80154b2:	f894 e000 	ldrb.w	lr, [r4]
 80154b6:	fb02 fe0e 	mul.w	lr, r2, lr
 80154ba:	fb08 e909 	mla	r9, r8, r9, lr
 80154be:	f895 e000 	ldrb.w	lr, [r5]
 80154c2:	fb0c 990e 	mla	r9, ip, lr, r9
 80154c6:	f893 e000 	ldrb.w	lr, [r3]
 80154ca:	785b      	ldrb	r3, [r3, #1]
 80154cc:	fb06 9e0e 	mla	lr, r6, lr, r9
 80154d0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80154d4:	ea4e 0e00 	orr.w	lr, lr, r0
 80154d8:	7860      	ldrb	r0, [r4, #1]
 80154da:	4350      	muls	r0, r2
 80154dc:	786a      	ldrb	r2, [r5, #1]
 80154de:	fb08 0007 	mla	r0, r8, r7, r0
 80154e2:	fb0c 0202 	mla	r2, ip, r2, r0
 80154e6:	fb06 2303 	mla	r3, r6, r3, r2
 80154ea:	095b      	lsrs	r3, r3, #5
 80154ec:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80154f0:	ea4e 0303 	orr.w	r3, lr, r3
 80154f4:	800b      	strh	r3, [r1, #0]
 80154f6:	b003      	add	sp, #12
 80154f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80154fc:	af01      	add	r7, sp, #4
 80154fe:	e78c      	b.n	801541a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8015500:	ac01      	add	r4, sp, #4
 8015502:	4627      	mov	r7, r4
 8015504:	e795      	b.n	8015432 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8015506:	ac01      	add	r4, sp, #4
 8015508:	e793      	b.n	8015432 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801550a:	ad01      	add	r5, sp, #4
 801550c:	e7a1      	b.n	8015452 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801550e:	ab01      	add	r3, sp, #4
 8015510:	461d      	mov	r5, r3
 8015512:	e7ab      	b.n	801546c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8015514:	ab01      	add	r3, sp, #4
 8015516:	e7a9      	b.n	801546c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08015518 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015518:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801551c:	b08f      	sub	sp, #60	@ 0x3c
 801551e:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 8015522:	920c      	str	r2, [sp, #48]	@ 0x30
 8015524:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 8015526:	910a      	str	r1, [sp, #40]	@ 0x28
 8015528:	9306      	str	r3, [sp, #24]
 801552a:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801552e:	900d      	str	r0, [sp, #52]	@ 0x34
 8015530:	6850      	ldr	r0, [r2, #4]
 8015532:	6812      	ldr	r2, [r2, #0]
 8015534:	fb00 1303 	mla	r3, r0, r3, r1
 8015538:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801553c:	9307      	str	r3, [sp, #28]
 801553e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8015540:	681b      	ldr	r3, [r3, #0]
 8015542:	9308      	str	r3, [sp, #32]
 8015544:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8015546:	685c      	ldr	r4, [r3, #4]
 8015548:	3404      	adds	r4, #4
 801554a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801554c:	2b00      	cmp	r3, #0
 801554e:	dc03      	bgt.n	8015558 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015550:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8015552:	2b00      	cmp	r3, #0
 8015554:	f340 81d6 	ble.w	8015904 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8015558:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801555a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801555e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015562:	1e48      	subs	r0, r1, #1
 8015564:	1e56      	subs	r6, r2, #1
 8015566:	9b06      	ldr	r3, [sp, #24]
 8015568:	2b00      	cmp	r3, #0
 801556a:	f340 80b7 	ble.w	80156dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801556e:	ea5f 472b 	movs.w	r7, fp, asr #16
 8015572:	ea4f 4325 	mov.w	r3, r5, asr #16
 8015576:	d406      	bmi.n	8015586 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015578:	4287      	cmp	r7, r0
 801557a:	da04      	bge.n	8015586 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801557c:	2b00      	cmp	r3, #0
 801557e:	db02      	blt.n	8015586 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015580:	42b3      	cmp	r3, r6
 8015582:	f2c0 80ac 	blt.w	80156de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8015586:	3701      	adds	r7, #1
 8015588:	f100 809d 	bmi.w	80156c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801558c:	42b9      	cmp	r1, r7
 801558e:	f2c0 809a 	blt.w	80156c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8015592:	3301      	adds	r3, #1
 8015594:	f100 8097 	bmi.w	80156c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8015598:	429a      	cmp	r2, r3
 801559a:	f2c0 8094 	blt.w	80156c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801559e:	9b06      	ldr	r3, [sp, #24]
 80155a0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80155a2:	9b07      	ldr	r3, [sp, #28]
 80155a4:	9309      	str	r3, [sp, #36]	@ 0x24
 80155a6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80155a8:	2b00      	cmp	r3, #0
 80155aa:	f340 80b5 	ble.w	8015718 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80155ae:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80155b0:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80155b2:	68c7      	ldr	r7, [r0, #12]
 80155b4:	6892      	ldr	r2, [r2, #8]
 80155b6:	ea5f 402b 	movs.w	r0, fp, asr #16
 80155ba:	ea4f 4625 	mov.w	r6, r5, asr #16
 80155be:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80155c2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80155c6:	f100 80fb 	bmi.w	80157c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80155ca:	f102 3cff 	add.w	ip, r2, #4294967295
 80155ce:	4560      	cmp	r0, ip
 80155d0:	f280 80f6 	bge.w	80157c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80155d4:	2e00      	cmp	r6, #0
 80155d6:	f2c0 80f3 	blt.w	80157c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80155da:	f107 3cff 	add.w	ip, r7, #4294967295
 80155de:	4566      	cmp	r6, ip
 80155e0:	f280 80ee 	bge.w	80157c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80155e4:	b212      	sxth	r2, r2
 80155e6:	fb06 0002 	mla	r0, r6, r2, r0
 80155ea:	9e08      	ldr	r6, [sp, #32]
 80155ec:	1837      	adds	r7, r6, r0
 80155ee:	5c30      	ldrb	r0, [r6, r0]
 80155f0:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 80155f4:	eb04 0c08 	add.w	ip, r4, r8
 80155f8:	2b00      	cmp	r3, #0
 80155fa:	f000 80d3 	beq.w	80157a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80155fe:	787e      	ldrb	r6, [r7, #1]
 8015600:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015604:	4426      	add	r6, r4
 8015606:	2900      	cmp	r1, #0
 8015608:	f000 80d4 	beq.w	80157b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801560c:	18b8      	adds	r0, r7, r2
 801560e:	5cba      	ldrb	r2, [r7, r2]
 8015610:	7840      	ldrb	r0, [r0, #1]
 8015612:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015616:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801561a:	4422      	add	r2, r4
 801561c:	4420      	add	r0, r4
 801561e:	b29b      	uxth	r3, r3
 8015620:	b289      	uxth	r1, r1
 8015622:	fb03 f901 	mul.w	r9, r3, r1
 8015626:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801562a:	011b      	lsls	r3, r3, #4
 801562c:	b289      	uxth	r1, r1
 801562e:	78b7      	ldrb	r7, [r6, #2]
 8015630:	f89c a002 	ldrb.w	sl, [ip, #2]
 8015634:	f89c c001 	ldrb.w	ip, [ip, #1]
 8015638:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801563c:	eba3 0309 	sub.w	r3, r3, r9
 8015640:	b29b      	uxth	r3, r3
 8015642:	ebae 0e01 	sub.w	lr, lr, r1
 8015646:	fa1f fe8e 	uxth.w	lr, lr
 801564a:	435f      	muls	r7, r3
 801564c:	fb0e 770a 	mla	r7, lr, sl, r7
 8015650:	f892 a002 	ldrb.w	sl, [r2, #2]
 8015654:	fb01 770a 	mla	r7, r1, sl, r7
 8015658:	f890 a002 	ldrb.w	sl, [r0, #2]
 801565c:	fb09 7a0a 	mla	sl, r9, sl, r7
 8015660:	f814 7008 	ldrb.w	r7, [r4, r8]
 8015664:	f896 8000 	ldrb.w	r8, [r6]
 8015668:	7876      	ldrb	r6, [r6, #1]
 801566a:	fb03 f808 	mul.w	r8, r3, r8
 801566e:	fb0e 8807 	mla	r8, lr, r7, r8
 8015672:	7817      	ldrb	r7, [r2, #0]
 8015674:	fb01 8807 	mla	r8, r1, r7, r8
 8015678:	7807      	ldrb	r7, [r0, #0]
 801567a:	fb09 8707 	mla	r7, r9, r7, r8
 801567e:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 8015682:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015686:	ea47 070a 	orr.w	r7, r7, sl
 801568a:	4373      	muls	r3, r6
 801568c:	f892 a001 	ldrb.w	sl, [r2, #1]
 8015690:	fb0e 330c 	mla	r3, lr, ip, r3
 8015694:	fb01 310a 	mla	r1, r1, sl, r3
 8015698:	f890 a001 	ldrb.w	sl, [r0, #1]
 801569c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801569e:	fb09 1a0a 	mla	sl, r9, sl, r1
 80156a2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80156a6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80156aa:	ea47 070a 	orr.w	r7, r7, sl
 80156ae:	801f      	strh	r7, [r3, #0]
 80156b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80156b2:	3302      	adds	r3, #2
 80156b4:	9309      	str	r3, [sp, #36]	@ 0x24
 80156b6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80156b8:	449b      	add	fp, r3
 80156ba:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80156bc:	441d      	add	r5, r3
 80156be:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80156c0:	3b01      	subs	r3, #1
 80156c2:	930b      	str	r3, [sp, #44]	@ 0x2c
 80156c4:	e76f      	b.n	80155a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80156c6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80156c8:	449b      	add	fp, r3
 80156ca:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80156cc:	441d      	add	r5, r3
 80156ce:	9b06      	ldr	r3, [sp, #24]
 80156d0:	3b01      	subs	r3, #1
 80156d2:	9306      	str	r3, [sp, #24]
 80156d4:	9b07      	ldr	r3, [sp, #28]
 80156d6:	3302      	adds	r3, #2
 80156d8:	9307      	str	r3, [sp, #28]
 80156da:	e744      	b.n	8015566 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 80156dc:	d023      	beq.n	8015726 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80156de:	9b06      	ldr	r3, [sp, #24]
 80156e0:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 80156e2:	3b01      	subs	r3, #1
 80156e4:	fb00 b003 	mla	r0, r0, r3, fp
 80156e8:	1400      	asrs	r0, r0, #16
 80156ea:	f53f af58 	bmi.w	801559e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80156ee:	3901      	subs	r1, #1
 80156f0:	4288      	cmp	r0, r1
 80156f2:	f6bf af54 	bge.w	801559e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80156f6:	991c      	ldr	r1, [sp, #112]	@ 0x70
 80156f8:	fb01 5303 	mla	r3, r1, r3, r5
 80156fc:	141b      	asrs	r3, r3, #16
 80156fe:	f53f af4e 	bmi.w	801559e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8015702:	3a01      	subs	r2, #1
 8015704:	4293      	cmp	r3, r2
 8015706:	f6bf af4a 	bge.w	801559e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801570a:	9b06      	ldr	r3, [sp, #24]
 801570c:	9309      	str	r3, [sp, #36]	@ 0x24
 801570e:	9b07      	ldr	r3, [sp, #28]
 8015710:	930b      	str	r3, [sp, #44]	@ 0x2c
 8015712:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015714:	2b00      	cmp	r3, #0
 8015716:	dc70      	bgt.n	80157fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8015718:	9b06      	ldr	r3, [sp, #24]
 801571a:	9a07      	ldr	r2, [sp, #28]
 801571c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015720:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015724:	9307      	str	r3, [sp, #28]
 8015726:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015728:	2b00      	cmp	r3, #0
 801572a:	f340 80eb 	ble.w	8015904 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801572e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015732:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8015736:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801573a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801573c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015740:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015744:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015748:	eef0 6a62 	vmov.f32	s13, s5
 801574c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015750:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015754:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015758:	ee16 ba90 	vmov	fp, s13
 801575c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015760:	eef0 6a43 	vmov.f32	s13, s6
 8015764:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015768:	ee12 2a90 	vmov	r2, s5
 801576c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015770:	fb92 f3f3 	sdiv	r3, r2, r3
 8015774:	ee13 2a10 	vmov	r2, s6
 8015778:	931b      	str	r3, [sp, #108]	@ 0x6c
 801577a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801577c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015780:	931c      	str	r3, [sp, #112]	@ 0x70
 8015782:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015784:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8015786:	3b01      	subs	r3, #1
 8015788:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801578c:	930a      	str	r3, [sp, #40]	@ 0x28
 801578e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8015790:	bf08      	it	eq
 8015792:	4613      	moveq	r3, r2
 8015794:	ee16 5a90 	vmov	r5, s13
 8015798:	9306      	str	r3, [sp, #24]
 801579a:	eeb0 3a67 	vmov.f32	s6, s15
 801579e:	eef0 2a47 	vmov.f32	s5, s14
 80157a2:	e6d2      	b.n	801554a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80157a4:	b149      	cbz	r1, 80157ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80157a6:	5cba      	ldrb	r2, [r7, r2]
 80157a8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80157ac:	4422      	add	r2, r4
 80157ae:	4660      	mov	r0, ip
 80157b0:	4666      	mov	r6, ip
 80157b2:	e734      	b.n	801561e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80157b4:	4660      	mov	r0, ip
 80157b6:	4662      	mov	r2, ip
 80157b8:	e731      	b.n	801561e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80157ba:	4660      	mov	r0, ip
 80157bc:	4662      	mov	r2, ip
 80157be:	e7f7      	b.n	80157b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 80157c0:	f110 0c01 	adds.w	ip, r0, #1
 80157c4:	f53f af74 	bmi.w	80156b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80157c8:	4562      	cmp	r2, ip
 80157ca:	f6ff af71 	blt.w	80156b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80157ce:	f116 0c01 	adds.w	ip, r6, #1
 80157d2:	f53f af6d 	bmi.w	80156b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80157d6:	4567      	cmp	r7, ip
 80157d8:	f6ff af6a 	blt.w	80156b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80157dc:	b23f      	sxth	r7, r7
 80157de:	b212      	sxth	r2, r2
 80157e0:	e9cd 3104 	strd	r3, r1, [sp, #16]
 80157e4:	e9cd 0602 	strd	r0, r6, [sp, #8]
 80157e8:	9200      	str	r2, [sp, #0]
 80157ea:	9701      	str	r7, [sp, #4]
 80157ec:	4623      	mov	r3, r4
 80157ee:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80157f2:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80157f4:	f7ff fde6 	bl	80153c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 80157f8:	e75a      	b.n	80156b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80157fa:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80157fc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8015800:	ea4f 462b 	mov.w	r6, fp, asr #16
 8015804:	1428      	asrs	r0, r5, #16
 8015806:	fb02 6000 	mla	r0, r2, r0, r6
 801580a:	9e08      	ldr	r6, [sp, #32]
 801580c:	f816 8000 	ldrb.w	r8, [r6, r0]
 8015810:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8015814:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8015818:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801581c:	1837      	adds	r7, r6, r0
 801581e:	eb04 0c08 	add.w	ip, r4, r8
 8015822:	2b00      	cmp	r3, #0
 8015824:	d060      	beq.n	80158e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8015826:	787e      	ldrb	r6, [r7, #1]
 8015828:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801582c:	4426      	add	r6, r4
 801582e:	2900      	cmp	r1, #0
 8015830:	d062      	beq.n	80158f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8015832:	18b8      	adds	r0, r7, r2
 8015834:	5cba      	ldrb	r2, [r7, r2]
 8015836:	7840      	ldrb	r0, [r0, #1]
 8015838:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801583c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015840:	4422      	add	r2, r4
 8015842:	4420      	add	r0, r4
 8015844:	b29b      	uxth	r3, r3
 8015846:	b289      	uxth	r1, r1
 8015848:	fb03 f901 	mul.w	r9, r3, r1
 801584c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015850:	011b      	lsls	r3, r3, #4
 8015852:	b289      	uxth	r1, r1
 8015854:	78b7      	ldrb	r7, [r6, #2]
 8015856:	f89c a002 	ldrb.w	sl, [ip, #2]
 801585a:	f89c c001 	ldrb.w	ip, [ip, #1]
 801585e:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8015862:	eba3 0309 	sub.w	r3, r3, r9
 8015866:	b29b      	uxth	r3, r3
 8015868:	ebae 0e01 	sub.w	lr, lr, r1
 801586c:	fa1f fe8e 	uxth.w	lr, lr
 8015870:	435f      	muls	r7, r3
 8015872:	fb0e 770a 	mla	r7, lr, sl, r7
 8015876:	f892 a002 	ldrb.w	sl, [r2, #2]
 801587a:	fb01 770a 	mla	r7, r1, sl, r7
 801587e:	f890 a002 	ldrb.w	sl, [r0, #2]
 8015882:	fb09 7a0a 	mla	sl, r9, sl, r7
 8015886:	f814 7008 	ldrb.w	r7, [r4, r8]
 801588a:	f896 8000 	ldrb.w	r8, [r6]
 801588e:	7876      	ldrb	r6, [r6, #1]
 8015890:	fb03 f808 	mul.w	r8, r3, r8
 8015894:	fb0e 8807 	mla	r8, lr, r7, r8
 8015898:	7817      	ldrb	r7, [r2, #0]
 801589a:	fb01 8807 	mla	r8, r1, r7, r8
 801589e:	7807      	ldrb	r7, [r0, #0]
 80158a0:	fb09 8707 	mla	r7, r9, r7, r8
 80158a4:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 80158a8:	4373      	muls	r3, r6
 80158aa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80158ae:	7856      	ldrb	r6, [r2, #1]
 80158b0:	ea47 070a 	orr.w	r7, r7, sl
 80158b4:	fb0e 330c 	mla	r3, lr, ip, r3
 80158b8:	f890 a001 	ldrb.w	sl, [r0, #1]
 80158bc:	fb01 3306 	mla	r3, r1, r6, r3
 80158c0:	fb09 3a0a 	mla	sl, r9, sl, r3
 80158c4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80158c8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80158ca:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80158ce:	ea47 070a 	orr.w	r7, r7, sl
 80158d2:	f823 7b02 	strh.w	r7, [r3], #2
 80158d6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80158d8:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80158da:	449b      	add	fp, r3
 80158dc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80158de:	441d      	add	r5, r3
 80158e0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80158e2:	3b01      	subs	r3, #1
 80158e4:	9309      	str	r3, [sp, #36]	@ 0x24
 80158e6:	e714      	b.n	8015712 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80158e8:	b149      	cbz	r1, 80158fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80158ea:	5cba      	ldrb	r2, [r7, r2]
 80158ec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80158f0:	4422      	add	r2, r4
 80158f2:	4660      	mov	r0, ip
 80158f4:	4666      	mov	r6, ip
 80158f6:	e7a5      	b.n	8015844 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 80158f8:	4660      	mov	r0, ip
 80158fa:	4662      	mov	r2, ip
 80158fc:	e7a2      	b.n	8015844 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 80158fe:	4660      	mov	r0, ip
 8015900:	4662      	mov	r2, ip
 8015902:	e7f7      	b.n	80158f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8015904:	b00f      	add	sp, #60	@ 0x3c
 8015906:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801590a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801590a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801590e:	b085      	sub	sp, #20
 8015910:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 8015914:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 8015918:	9102      	str	r1, [sp, #8]
 801591a:	2c00      	cmp	r4, #0
 801591c:	fb04 710c 	mla	r1, r4, ip, r7
 8015920:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 8015924:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 8015928:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801592c:	eb02 0e01 	add.w	lr, r2, r1
 8015930:	f2c0 8122 	blt.w	8015b78 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8015934:	45a0      	cmp	r8, r4
 8015936:	f340 811f 	ble.w	8015b78 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801593a:	2f00      	cmp	r7, #0
 801593c:	f2c0 811a 	blt.w	8015b74 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8015940:	45bc      	cmp	ip, r7
 8015942:	f340 8117 	ble.w	8015b74 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8015946:	5c52      	ldrb	r2, [r2, r1]
 8015948:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801594c:	1c7a      	adds	r2, r7, #1
 801594e:	f100 8116 	bmi.w	8015b7e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8015952:	4594      	cmp	ip, r2
 8015954:	f340 8113 	ble.w	8015b7e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8015958:	2e00      	cmp	r6, #0
 801595a:	f000 8112 	beq.w	8015b82 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801595e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8015962:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8015966:	3401      	adds	r4, #1
 8015968:	f100 810f 	bmi.w	8015b8a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801596c:	45a0      	cmp	r8, r4
 801596e:	f340 810c 	ble.w	8015b8a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8015972:	2800      	cmp	r0, #0
 8015974:	f000 810c 	beq.w	8015b90 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8015978:	2f00      	cmp	r7, #0
 801597a:	f2c0 8104 	blt.w	8015b86 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801597e:	45bc      	cmp	ip, r7
 8015980:	f340 8101 	ble.w	8015b86 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8015984:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8015988:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801598c:	3701      	adds	r7, #1
 801598e:	f100 8102 	bmi.w	8015b96 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8015992:	45bc      	cmp	ip, r7
 8015994:	f340 80ff 	ble.w	8015b96 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8015998:	2e00      	cmp	r6, #0
 801599a:	f000 80fe 	beq.w	8015b9a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801599e:	44f4      	add	ip, lr
 80159a0:	f89c 2001 	ldrb.w	r2, [ip, #1]
 80159a4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80159a8:	b2b6      	uxth	r6, r6
 80159aa:	b280      	uxth	r0, r0
 80159ac:	fb00 fe06 	mul.w	lr, r0, r6
 80159b0:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80159b4:	0136      	lsls	r6, r6, #4
 80159b6:	eba6 070e 	sub.w	r7, r6, lr
 80159ba:	b280      	uxth	r0, r0
 80159bc:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 80159c0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80159c4:	b2bf      	uxth	r7, r7
 80159c6:	1a1b      	subs	r3, r3, r0
 80159c8:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80159cc:	b29b      	uxth	r3, r3
 80159ce:	fb0a f607 	mul.w	r6, sl, r7
 80159d2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80159d6:	fb0b 6603 	mla	r6, fp, r3, r6
 80159da:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80159de:	fb00 6609 	mla	r6, r0, r9, r6
 80159e2:	fb0e 6608 	mla	r6, lr, r8, r6
 80159e6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80159ea:	9600      	str	r6, [sp, #0]
 80159ec:	2e00      	cmp	r6, #0
 80159ee:	f000 80be 	beq.w	8015b6e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 80159f2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80159f6:	fb0b fc0c 	mul.w	ip, fp, ip
 80159fa:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 80159fe:	fb0b f505 	mul.w	r5, fp, r5
 8015a02:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8015a06:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8015a0a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8015a0e:	44dc      	add	ip, fp
 8015a10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015a14:	9501      	str	r5, [sp, #4]
 8015a16:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8015a1a:	9503      	str	r5, [sp, #12]
 8015a1c:	9d01      	ldr	r5, [sp, #4]
 8015a1e:	9e02      	ldr	r6, [sp, #8]
 8015a20:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8015a24:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8015a28:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8015a2c:	fb0a fc0c 	mul.w	ip, sl, ip
 8015a30:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8015a34:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8015a38:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8015a3c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8015a40:	4465      	add	r5, ip
 8015a42:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8015a46:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8015a4a:	fb09 fc0c 	mul.w	ip, r9, ip
 8015a4e:	fb09 f904 	mul.w	r9, r9, r4
 8015a52:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8015a56:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8015a5a:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8015a5e:	fb08 f404 	mul.w	r4, r8, r4
 8015a62:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8015a66:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8015a6a:	fb08 f802 	mul.w	r8, r8, r2
 8015a6e:	fb0a fa01 	mul.w	sl, sl, r1
 8015a72:	0a22      	lsrs	r2, r4, #8
 8015a74:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8015a78:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8015a7c:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8015a80:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8015a84:	4414      	add	r4, r2
 8015a86:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8015a8a:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8015a8e:	0a2d      	lsrs	r5, r5, #8
 8015a90:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8015a94:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8015a98:	9a03      	ldr	r2, [sp, #12]
 8015a9a:	8836      	ldrh	r6, [r6, #0]
 8015a9c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8015aa0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8015aa4:	437d      	muls	r5, r7
 8015aa6:	4461      	add	r1, ip
 8015aa8:	0a24      	lsrs	r4, r4, #8
 8015aaa:	fb02 5503 	mla	r5, r2, r3, r5
 8015aae:	0a09      	lsrs	r1, r1, #8
 8015ab0:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8015ab4:	fb04 540e 	mla	r4, r4, lr, r5
 8015ab8:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8015abc:	fb01 4100 	mla	r1, r1, r0, r4
 8015ac0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015ac4:	0a09      	lsrs	r1, r1, #8
 8015ac6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8015aca:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8015ace:	fb07 f70a 	mul.w	r7, r7, sl
 8015ad2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8015ad6:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8015ada:	fb03 7101 	mla	r1, r3, r1, r7
 8015ade:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8015ae2:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8015ae6:	fb0e 1e08 	mla	lr, lr, r8, r1
 8015aea:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8015aee:	fb00 e101 	mla	r1, r0, r1, lr
 8015af2:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 8015af6:	9a00      	ldr	r2, [sp, #0]
 8015af8:	b287      	uxth	r7, r0
 8015afa:	437a      	muls	r2, r7
 8015afc:	0a09      	lsrs	r1, r1, #8
 8015afe:	1c53      	adds	r3, r2, #1
 8015b00:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8015b04:	4321      	orrs	r1, r4
 8015b06:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8015b0a:	1235      	asrs	r5, r6, #8
 8015b0c:	0c0a      	lsrs	r2, r1, #16
 8015b0e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8015b12:	b2db      	uxtb	r3, r3
 8015b14:	fb12 f207 	smulbb	r2, r2, r7
 8015b18:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8015b1c:	fb05 2503 	mla	r5, r5, r3, r2
 8015b20:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8015b24:	10f2      	asrs	r2, r6, #3
 8015b26:	b2c8      	uxtb	r0, r1
 8015b28:	00f6      	lsls	r6, r6, #3
 8015b2a:	fb14 f407 	smulbb	r4, r4, r7
 8015b2e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8015b32:	b2f6      	uxtb	r6, r6
 8015b34:	fb10 f007 	smulbb	r0, r0, r7
 8015b38:	fb02 4203 	mla	r2, r2, r3, r4
 8015b3c:	b2ad      	uxth	r5, r5
 8015b3e:	fb06 0303 	mla	r3, r6, r3, r0
 8015b42:	b299      	uxth	r1, r3
 8015b44:	b294      	uxth	r4, r2
 8015b46:	1c6b      	adds	r3, r5, #1
 8015b48:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8015b4c:	1c62      	adds	r2, r4, #1
 8015b4e:	1c4b      	adds	r3, r1, #1
 8015b50:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8015b54:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8015b58:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8015b5c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8015b60:	0952      	lsrs	r2, r2, #5
 8015b62:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8015b66:	432b      	orrs	r3, r5
 8015b68:	4313      	orrs	r3, r2
 8015b6a:	9a02      	ldr	r2, [sp, #8]
 8015b6c:	8013      	strh	r3, [r2, #0]
 8015b6e:	b005      	add	sp, #20
 8015b70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015b74:	2500      	movs	r5, #0
 8015b76:	e6e9      	b.n	801594c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8015b78:	2100      	movs	r1, #0
 8015b7a:	460d      	mov	r5, r1
 8015b7c:	e6f3      	b.n	8015966 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8015b7e:	2100      	movs	r1, #0
 8015b80:	e6f1      	b.n	8015966 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8015b82:	4631      	mov	r1, r6
 8015b84:	e6ef      	b.n	8015966 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8015b86:	2400      	movs	r4, #0
 8015b88:	e700      	b.n	801598c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8015b8a:	2200      	movs	r2, #0
 8015b8c:	4614      	mov	r4, r2
 8015b8e:	e70b      	b.n	80159a8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8015b90:	4602      	mov	r2, r0
 8015b92:	4604      	mov	r4, r0
 8015b94:	e708      	b.n	80159a8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8015b96:	2200      	movs	r2, #0
 8015b98:	e706      	b.n	80159a8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8015b9a:	4632      	mov	r2, r6
 8015b9c:	e704      	b.n	80159a8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08015b9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015b9e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ba2:	b09f      	sub	sp, #124	@ 0x7c
 8015ba4:	921b      	str	r2, [sp, #108]	@ 0x6c
 8015ba6:	9309      	str	r3, [sp, #36]	@ 0x24
 8015ba8:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 8015baa:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 8015bae:	931c      	str	r3, [sp, #112]	@ 0x70
 8015bb0:	9119      	str	r1, [sp, #100]	@ 0x64
 8015bb2:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 8015bb6:	901d      	str	r0, [sp, #116]	@ 0x74
 8015bb8:	6850      	ldr	r0, [r2, #4]
 8015bba:	6812      	ldr	r2, [r2, #0]
 8015bbc:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8015bbe:	fb00 1303 	mla	r3, r0, r3, r1
 8015bc2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015bc6:	930c      	str	r3, [sp, #48]	@ 0x30
 8015bc8:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8015bca:	681b      	ldr	r3, [r3, #0]
 8015bcc:	9312      	str	r3, [sp, #72]	@ 0x48
 8015bce:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8015bd0:	685e      	ldr	r6, [r3, #4]
 8015bd2:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8015bd6:	930d      	str	r3, [sp, #52]	@ 0x34
 8015bd8:	3604      	adds	r6, #4
 8015bda:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8015bdc:	2b00      	cmp	r3, #0
 8015bde:	dc03      	bgt.n	8015be8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8015be0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8015be2:	2b00      	cmp	r3, #0
 8015be4:	f340 8388 	ble.w	80162f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8015be8:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8015bea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015bee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015bf2:	1e48      	subs	r0, r1, #1
 8015bf4:	1e57      	subs	r7, r2, #1
 8015bf6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015bf8:	2b00      	cmp	r3, #0
 8015bfa:	f340 8195 	ble.w	8015f28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8015bfe:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8015c00:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8015c04:	ea4f 4325 	mov.w	r3, r5, asr #16
 8015c08:	d406      	bmi.n	8015c18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015c0a:	4584      	cmp	ip, r0
 8015c0c:	da04      	bge.n	8015c18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015c0e:	2b00      	cmp	r3, #0
 8015c10:	db02      	blt.n	8015c18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015c12:	42bb      	cmp	r3, r7
 8015c14:	f2c0 8189 	blt.w	8015f2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8015c18:	f11c 0c01 	adds.w	ip, ip, #1
 8015c1c:	f100 8177 	bmi.w	8015f0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8015c20:	4561      	cmp	r1, ip
 8015c22:	f2c0 8174 	blt.w	8015f0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8015c26:	3301      	adds	r3, #1
 8015c28:	f100 8171 	bmi.w	8015f0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8015c2c:	429a      	cmp	r2, r3
 8015c2e:	f2c0 816e 	blt.w	8015f0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8015c32:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015c34:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8015c36:	931a      	str	r3, [sp, #104]	@ 0x68
 8015c38:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8015c3a:	2b00      	cmp	r3, #0
 8015c3c:	f340 8193 	ble.w	8015f66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8015c40:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8015c42:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8015c46:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8015c48:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8015c4c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8015c4e:	141b      	asrs	r3, r3, #16
 8015c50:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8015c54:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8015c58:	f100 81d6 	bmi.w	8016008 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8015c5c:	f100 38ff 	add.w	r8, r0, #4294967295
 8015c60:	4543      	cmp	r3, r8
 8015c62:	f280 81d1 	bge.w	8016008 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8015c66:	f1bc 0f00 	cmp.w	ip, #0
 8015c6a:	f2c0 81cd 	blt.w	8016008 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8015c6e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8015c72:	45c4      	cmp	ip, r8
 8015c74:	f280 81c8 	bge.w	8016008 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8015c78:	b200      	sxth	r0, r0
 8015c7a:	fb0c 3300 	mla	r3, ip, r0, r3
 8015c7e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8015c80:	eb04 0803 	add.w	r8, r4, r3
 8015c84:	5ce3      	ldrb	r3, [r4, r3]
 8015c86:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8015c8a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8015c8e:	2a00      	cmp	r2, #0
 8015c90:	f000 81af 	beq.w	8015ff2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8015c94:	f898 c001 	ldrb.w	ip, [r8, #1]
 8015c98:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8015c9c:	940e      	str	r4, [sp, #56]	@ 0x38
 8015c9e:	0e24      	lsrs	r4, r4, #24
 8015ca0:	9415      	str	r4, [sp, #84]	@ 0x54
 8015ca2:	b179      	cbz	r1, 8015cc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8015ca4:	eb08 0c00 	add.w	ip, r8, r0
 8015ca8:	f818 0000 	ldrb.w	r0, [r8, r0]
 8015cac:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8015cb0:	900a      	str	r0, [sp, #40]	@ 0x28
 8015cb2:	0e00      	lsrs	r0, r0, #24
 8015cb4:	9013      	str	r0, [sp, #76]	@ 0x4c
 8015cb6:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8015cba:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8015cbe:	900f      	str	r0, [sp, #60]	@ 0x3c
 8015cc0:	0e00      	lsrs	r0, r0, #24
 8015cc2:	9016      	str	r0, [sp, #88]	@ 0x58
 8015cc4:	b292      	uxth	r2, r2
 8015cc6:	b289      	uxth	r1, r1
 8015cc8:	fb02 f901 	mul.w	r9, r2, r1
 8015ccc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015cd0:	0112      	lsls	r2, r2, #4
 8015cd2:	eba2 0809 	sub.w	r8, r2, r9
 8015cd6:	b289      	uxth	r1, r1
 8015cd8:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8015cdc:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8015cde:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8015ce0:	fa1f f888 	uxth.w	r8, r8
 8015ce4:	1a52      	subs	r2, r2, r1
 8015ce6:	b292      	uxth	r2, r2
 8015ce8:	fb08 f000 	mul.w	r0, r8, r0
 8015cec:	fb02 000e 	mla	r0, r2, lr, r0
 8015cf0:	fb01 0004 	mla	r0, r1, r4, r0
 8015cf4:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8015cf6:	fb09 0004 	mla	r0, r9, r4, r0
 8015cfa:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8015cfe:	2800      	cmp	r0, #0
 8015d00:	f000 80fa 	beq.w	8015ef8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8015d04:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8015d08:	d01b      	beq.n	8015d42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8015d0a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8015d0e:	fb0e fa0a 	mul.w	sl, lr, sl
 8015d12:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8015d16:	fb0e fe03 	mul.w	lr, lr, r3
 8015d1a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8015d1e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8015d22:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8015d26:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8015d2a:	4453      	add	r3, sl
 8015d2c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8015d30:	0a1b      	lsrs	r3, r3, #8
 8015d32:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015d36:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8015d3a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8015d3e:	ea43 030c 	orr.w	r3, r3, ip
 8015d42:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8015d44:	2cff      	cmp	r4, #255	@ 0xff
 8015d46:	d021      	beq.n	8015d8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8015d48:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8015d4a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8015d4e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8015d50:	fb04 fb0b 	mul.w	fp, r4, fp
 8015d54:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8015d56:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8015d5a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8015d5c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8015d60:	fb04 fa0a 	mul.w	sl, r4, sl
 8015d64:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8015d68:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8015d6c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8015d70:	44de      	add	lr, fp
 8015d72:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8015d76:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015d7a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015d7e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8015d82:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8015d86:	ea4e 040a 	orr.w	r4, lr, sl
 8015d8a:	940e      	str	r4, [sp, #56]	@ 0x38
 8015d8c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8015d8e:	2cff      	cmp	r4, #255	@ 0xff
 8015d90:	d021      	beq.n	8015dd6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8015d92:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8015d94:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8015d98:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8015d9a:	fb04 fb0b 	mul.w	fp, r4, fp
 8015d9e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8015da0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8015da4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8015da6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8015daa:	fb04 fa0a 	mul.w	sl, r4, sl
 8015dae:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8015db2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8015db6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8015dba:	44de      	add	lr, fp
 8015dbc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8015dc0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015dc4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015dc8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8015dcc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8015dd0:	ea4e 040a 	orr.w	r4, lr, sl
 8015dd4:	940a      	str	r4, [sp, #40]	@ 0x28
 8015dd6:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8015dd8:	2cff      	cmp	r4, #255	@ 0xff
 8015dda:	d021      	beq.n	8015e20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8015ddc:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8015dde:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8015de2:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8015de4:	fb04 fb0b 	mul.w	fp, r4, fp
 8015de8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8015dea:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8015dee:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8015df0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8015df4:	fb04 fa0a 	mul.w	sl, r4, sl
 8015df8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8015dfc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8015e00:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8015e04:	44de      	add	lr, fp
 8015e06:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8015e0a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015e0e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015e12:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8015e16:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8015e1a:	ea4e 040a 	orr.w	r4, lr, sl
 8015e1e:	940f      	str	r4, [sp, #60]	@ 0x3c
 8015e20:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8015e22:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8015e26:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8015e28:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 8015e2c:	fb08 fc0c 	mul.w	ip, r8, ip
 8015e30:	fb02 cc0e 	mla	ip, r2, lr, ip
 8015e34:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8015e38:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8015e3a:	fb01 cc0e 	mla	ip, r1, lr, ip
 8015e3e:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8015e42:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8015e44:	fb09 cc0e 	mla	ip, r9, lr, ip
 8015e48:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 8015e4c:	fb08 f80e 	mul.w	r8, r8, lr
 8015e50:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8015e54:	fb02 8303 	mla	r3, r2, r3, r8
 8015e58:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8015e5a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8015e5c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8015e60:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8015e62:	fb01 330a 	mla	r3, r1, sl, r3
 8015e66:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 8015e6a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015e6c:	fb09 3901 	mla	r9, r9, r1, r3
 8015e70:	4342      	muls	r2, r0
 8015e72:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015e76:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8015e7a:	883b      	ldrh	r3, [r7, #0]
 8015e7c:	1c50      	adds	r0, r2, #1
 8015e7e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8015e82:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8015e86:	ea4c 0c09 	orr.w	ip, ip, r9
 8015e8a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8015e8e:	1219      	asrs	r1, r3, #8
 8015e90:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8015e94:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8015e98:	b2c0      	uxtb	r0, r0
 8015e9a:	fb12 f204 	smulbb	r2, r2, r4
 8015e9e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8015ea2:	fb01 2100 	mla	r1, r1, r0, r2
 8015ea6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8015eaa:	10da      	asrs	r2, r3, #3
 8015eac:	fa5f fc8c 	uxtb.w	ip, ip
 8015eb0:	00db      	lsls	r3, r3, #3
 8015eb2:	fb1c fc04 	smulbb	ip, ip, r4
 8015eb6:	b2db      	uxtb	r3, r3
 8015eb8:	b289      	uxth	r1, r1
 8015eba:	fb03 c300 	mla	r3, r3, r0, ip
 8015ebe:	fa1f fc83 	uxth.w	ip, r3
 8015ec2:	1c4b      	adds	r3, r1, #1
 8015ec4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8015ec8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8015ecc:	fb1e fe04 	smulbb	lr, lr, r4
 8015ed0:	f10c 0301 	add.w	r3, ip, #1
 8015ed4:	fb02 e200 	mla	r2, r2, r0, lr
 8015ed8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8015edc:	b292      	uxth	r2, r2
 8015ede:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8015ee2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8015ee6:	430b      	orrs	r3, r1
 8015ee8:	1c51      	adds	r1, r2, #1
 8015eea:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8015eee:	0952      	lsrs	r2, r2, #5
 8015ef0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8015ef4:	4313      	orrs	r3, r2
 8015ef6:	803b      	strh	r3, [r7, #0]
 8015ef8:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8015efa:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8015efc:	441a      	add	r2, r3
 8015efe:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8015f00:	9229      	str	r2, [sp, #164]	@ 0xa4
 8015f02:	441d      	add	r5, r3
 8015f04:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8015f06:	3b01      	subs	r3, #1
 8015f08:	3702      	adds	r7, #2
 8015f0a:	931a      	str	r3, [sp, #104]	@ 0x68
 8015f0c:	e694      	b.n	8015c38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8015f0e:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8015f10:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8015f12:	441c      	add	r4, r3
 8015f14:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8015f16:	9429      	str	r4, [sp, #164]	@ 0xa4
 8015f18:	441d      	add	r5, r3
 8015f1a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015f1c:	3b01      	subs	r3, #1
 8015f1e:	9309      	str	r3, [sp, #36]	@ 0x24
 8015f20:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8015f22:	3302      	adds	r3, #2
 8015f24:	930c      	str	r3, [sp, #48]	@ 0x30
 8015f26:	e666      	b.n	8015bf6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8015f28:	d024      	beq.n	8015f74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8015f2a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015f2c:	982b      	ldr	r0, [sp, #172]	@ 0xac
 8015f2e:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8015f30:	3b01      	subs	r3, #1
 8015f32:	fb00 4003 	mla	r0, r0, r3, r4
 8015f36:	1400      	asrs	r0, r0, #16
 8015f38:	f53f ae7b 	bmi.w	8015c32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8015f3c:	3901      	subs	r1, #1
 8015f3e:	4288      	cmp	r0, r1
 8015f40:	f6bf ae77 	bge.w	8015c32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8015f44:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 8015f46:	fb01 5303 	mla	r3, r1, r3, r5
 8015f4a:	141b      	asrs	r3, r3, #16
 8015f4c:	f53f ae71 	bmi.w	8015c32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8015f50:	3a01      	subs	r2, #1
 8015f52:	4293      	cmp	r3, r2
 8015f54:	f6bf ae6d 	bge.w	8015c32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8015f58:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8015f5c:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 8015f60:	f1bb 0f00 	cmp.w	fp, #0
 8015f64:	dc70      	bgt.n	8016048 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8015f66:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015f68:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8015f6c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8015f6e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8015f72:	930c      	str	r3, [sp, #48]	@ 0x30
 8015f74:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8015f76:	2b00      	cmp	r3, #0
 8015f78:	f340 81be 	ble.w	80162f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8015f7c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015f80:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8015f84:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015f88:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8015f8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015f8e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015f92:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015f96:	eef0 6a62 	vmov.f32	s13, s5
 8015f9a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015f9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015fa2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015fa6:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 8015faa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015fae:	eef0 6a43 	vmov.f32	s13, s6
 8015fb2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015fb6:	ee12 2a90 	vmov	r2, s5
 8015fba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015fbe:	fb92 f3f3 	sdiv	r3, r2, r3
 8015fc2:	ee13 2a10 	vmov	r2, s6
 8015fc6:	932b      	str	r3, [sp, #172]	@ 0xac
 8015fc8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8015fca:	fb92 f3f3 	sdiv	r3, r2, r3
 8015fce:	932c      	str	r3, [sp, #176]	@ 0xb0
 8015fd0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8015fd2:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8015fd4:	3b01      	subs	r3, #1
 8015fd6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015fda:	9319      	str	r3, [sp, #100]	@ 0x64
 8015fdc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8015fde:	bf08      	it	eq
 8015fe0:	4613      	moveq	r3, r2
 8015fe2:	ee16 5a90 	vmov	r5, s13
 8015fe6:	9309      	str	r3, [sp, #36]	@ 0x24
 8015fe8:	eeb0 3a67 	vmov.f32	s6, s15
 8015fec:	eef0 2a47 	vmov.f32	s5, s14
 8015ff0:	e5f3      	b.n	8015bda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015ff2:	2900      	cmp	r1, #0
 8015ff4:	f43f ae66 	beq.w	8015cc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8015ff8:	f818 0000 	ldrb.w	r0, [r8, r0]
 8015ffc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8016000:	900a      	str	r0, [sp, #40]	@ 0x28
 8016002:	0e00      	lsrs	r0, r0, #24
 8016004:	9013      	str	r0, [sp, #76]	@ 0x4c
 8016006:	e65d      	b.n	8015cc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8016008:	f113 0801 	adds.w	r8, r3, #1
 801600c:	f53f af74 	bmi.w	8015ef8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016010:	4540      	cmp	r0, r8
 8016012:	f6ff af71 	blt.w	8015ef8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016016:	f11c 0801 	adds.w	r8, ip, #1
 801601a:	f53f af6d 	bmi.w	8015ef8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801601e:	45c6      	cmp	lr, r8
 8016020:	f6ff af6a 	blt.w	8015ef8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016024:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 8016026:	9302      	str	r3, [sp, #8]
 8016028:	b200      	sxth	r0, r0
 801602a:	fa0f f38e 	sxth.w	r3, lr
 801602e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8016032:	e9cd c203 	strd	ip, r2, [sp, #12]
 8016036:	9301      	str	r3, [sp, #4]
 8016038:	9000      	str	r0, [sp, #0]
 801603a:	4633      	mov	r3, r6
 801603c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801603e:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8016040:	4639      	mov	r1, r7
 8016042:	f7ff fc62 	bl	801590a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8016046:	e757      	b.n	8015ef8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016048:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801604a:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801604c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016050:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8016052:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016056:	1427      	asrs	r7, r4, #16
 8016058:	142b      	asrs	r3, r5, #16
 801605a:	fb01 7303 	mla	r3, r1, r3, r7
 801605e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8016060:	18e7      	adds	r7, r4, r3
 8016062:	5ce3      	ldrb	r3, [r4, r3]
 8016064:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016068:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801606c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8016070:	2a00      	cmp	r2, #0
 8016072:	f000 8137 	beq.w	80162e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8016076:	f897 e001 	ldrb.w	lr, [r7, #1]
 801607a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801607e:	9410      	str	r4, [sp, #64]	@ 0x40
 8016080:	0e24      	lsrs	r4, r4, #24
 8016082:	9417      	str	r4, [sp, #92]	@ 0x5c
 8016084:	b170      	cbz	r0, 80160a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8016086:	eb07 0e01 	add.w	lr, r7, r1
 801608a:	5c79      	ldrb	r1, [r7, r1]
 801608c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016090:	910b      	str	r1, [sp, #44]	@ 0x2c
 8016092:	0e09      	lsrs	r1, r1, #24
 8016094:	9114      	str	r1, [sp, #80]	@ 0x50
 8016096:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801609a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801609e:	9111      	str	r1, [sp, #68]	@ 0x44
 80160a0:	0e09      	lsrs	r1, r1, #24
 80160a2:	9118      	str	r1, [sp, #96]	@ 0x60
 80160a4:	b292      	uxth	r2, r2
 80160a6:	b280      	uxth	r0, r0
 80160a8:	fb02 f800 	mul.w	r8, r2, r0
 80160ac:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80160b0:	0112      	lsls	r2, r2, #4
 80160b2:	eba2 0e08 	sub.w	lr, r2, r8
 80160b6:	b280      	uxth	r0, r0
 80160b8:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 80160bc:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 80160be:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80160c0:	fa1f fe8e 	uxth.w	lr, lr
 80160c4:	1a12      	subs	r2, r2, r0
 80160c6:	b292      	uxth	r2, r2
 80160c8:	fb0e f101 	mul.w	r1, lr, r1
 80160cc:	fb02 110c 	mla	r1, r2, ip, r1
 80160d0:	fb00 1104 	mla	r1, r0, r4, r1
 80160d4:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80160d6:	fb08 1104 	mla	r1, r8, r4, r1
 80160da:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80160de:	2900      	cmp	r1, #0
 80160e0:	f000 80f5 	beq.w	80162ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80160e4:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 80160e8:	d019      	beq.n	801611e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 80160ea:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80160ee:	fb0c fa0a 	mul.w	sl, ip, sl
 80160f2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80160f6:	fb0c fc03 	mul.w	ip, ip, r3
 80160fa:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80160fe:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8016102:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8016106:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801610a:	4453      	add	r3, sl
 801610c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8016110:	0a1b      	lsrs	r3, r3, #8
 8016112:	0a3f      	lsrs	r7, r7, #8
 8016114:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8016118:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801611c:	433b      	orrs	r3, r7
 801611e:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8016120:	2cff      	cmp	r4, #255	@ 0xff
 8016122:	d020      	beq.n	8016166 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8016124:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8016126:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801612a:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801612c:	4367      	muls	r7, r4
 801612e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8016130:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8016134:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8016136:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801613a:	fb04 fa0a 	mul.w	sl, r4, sl
 801613e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8016142:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8016146:	44bc      	add	ip, r7
 8016148:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801614c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016150:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016154:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016158:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801615c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8016160:	ea4c 040a 	orr.w	r4, ip, sl
 8016164:	9410      	str	r4, [sp, #64]	@ 0x40
 8016166:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8016168:	2cff      	cmp	r4, #255	@ 0xff
 801616a:	d020      	beq.n	80161ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801616c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801616e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8016172:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8016174:	4367      	muls	r7, r4
 8016176:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8016178:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801617c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801617e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016182:	fb04 fa0a 	mul.w	sl, r4, sl
 8016186:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801618a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801618e:	44bc      	add	ip, r7
 8016190:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8016194:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016198:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801619c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80161a0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80161a4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80161a8:	ea4c 040a 	orr.w	r4, ip, sl
 80161ac:	940b      	str	r4, [sp, #44]	@ 0x2c
 80161ae:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80161b0:	2cff      	cmp	r4, #255	@ 0xff
 80161b2:	d020      	beq.n	80161f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80161b4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80161b6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80161ba:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80161bc:	4367      	muls	r7, r4
 80161be:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80161c0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80161c4:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80161c6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80161ca:	fb04 fa0a 	mul.w	sl, r4, sl
 80161ce:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80161d2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80161d6:	44bc      	add	ip, r7
 80161d8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80161dc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80161e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80161e4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80161e8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80161ec:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80161f0:	ea4c 040a 	orr.w	r4, ip, sl
 80161f4:	9411      	str	r4, [sp, #68]	@ 0x44
 80161f6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80161f8:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80161fc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80161fe:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8016202:	fb0e f707 	mul.w	r7, lr, r7
 8016206:	fb02 770c 	mla	r7, r2, ip, r7
 801620a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801620e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8016210:	fb00 770c 	mla	r7, r0, ip, r7
 8016214:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8016218:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801621a:	fb08 770c 	mla	r7, r8, ip, r7
 801621e:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 8016222:	fb0e fe0c 	mul.w	lr, lr, ip
 8016226:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801622a:	fb02 e303 	mla	r3, r2, r3, lr
 801622e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8016230:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8016232:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8016236:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8016238:	fb00 330a 	mla	r3, r0, sl, r3
 801623c:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8016240:	fb08 3c0c 	mla	ip, r8, ip, r3
 8016244:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016246:	f8b9 0000 	ldrh.w	r0, [r9]
 801624a:	434b      	muls	r3, r1
 801624c:	0a3f      	lsrs	r7, r7, #8
 801624e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016252:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8016256:	1c59      	adds	r1, r3, #1
 8016258:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801625c:	ea47 070c 	orr.w	r7, r7, ip
 8016260:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8016264:	1202      	asrs	r2, r0, #8
 8016266:	0c3b      	lsrs	r3, r7, #16
 8016268:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801626c:	b2c9      	uxtb	r1, r1
 801626e:	fb13 f304 	smulbb	r3, r3, r4
 8016272:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8016276:	fb02 3201 	mla	r2, r2, r1, r3
 801627a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801627e:	10c3      	asrs	r3, r0, #3
 8016280:	b2ff      	uxtb	r7, r7
 8016282:	00c0      	lsls	r0, r0, #3
 8016284:	b292      	uxth	r2, r2
 8016286:	fb1c fc04 	smulbb	ip, ip, r4
 801628a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801628e:	b2c0      	uxtb	r0, r0
 8016290:	fb17 f704 	smulbb	r7, r7, r4
 8016294:	fb03 c301 	mla	r3, r3, r1, ip
 8016298:	fb00 7001 	mla	r0, r0, r1, r7
 801629c:	f102 0c01 	add.w	ip, r2, #1
 80162a0:	b280      	uxth	r0, r0
 80162a2:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80162a6:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 80162aa:	1c42      	adds	r2, r0, #1
 80162ac:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80162b0:	b29b      	uxth	r3, r3
 80162b2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80162b6:	ea42 020c 	orr.w	r2, r2, ip
 80162ba:	f103 0c01 	add.w	ip, r3, #1
 80162be:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80162c2:	095b      	lsrs	r3, r3, #5
 80162c4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80162c8:	431a      	orrs	r2, r3
 80162ca:	f8a9 2000 	strh.w	r2, [r9]
 80162ce:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 80162d0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80162d2:	441a      	add	r2, r3
 80162d4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80162d6:	9229      	str	r2, [sp, #164]	@ 0xa4
 80162d8:	f109 0902 	add.w	r9, r9, #2
 80162dc:	441d      	add	r5, r3
 80162de:	f10b 3bff 	add.w	fp, fp, #4294967295
 80162e2:	e63d      	b.n	8015f60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80162e4:	2800      	cmp	r0, #0
 80162e6:	f43f aedd 	beq.w	80160a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80162ea:	5c79      	ldrb	r1, [r7, r1]
 80162ec:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80162f0:	910b      	str	r1, [sp, #44]	@ 0x2c
 80162f2:	0e09      	lsrs	r1, r1, #24
 80162f4:	9114      	str	r1, [sp, #80]	@ 0x50
 80162f6:	e6d5      	b.n	80160a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80162f8:	b01f      	add	sp, #124	@ 0x7c
 80162fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080162fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80162fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016302:	b089      	sub	sp, #36	@ 0x24
 8016304:	9101      	str	r1, [sp, #4]
 8016306:	9801      	ldr	r0, [sp, #4]
 8016308:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 801630c:	8800      	ldrh	r0, [r0, #0]
 801630e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 8016312:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8016316:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 801631a:	1206      	asrs	r6, r0, #8
 801631c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 8016320:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8016324:	9602      	str	r6, [sp, #8]
 8016326:	10c6      	asrs	r6, r0, #3
 8016328:	00c0      	lsls	r0, r0, #3
 801632a:	b2c0      	uxtb	r0, r0
 801632c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8016330:	9004      	str	r0, [sp, #16]
 8016332:	2f00      	cmp	r7, #0
 8016334:	fb07 100c 	mla	r0, r7, ip, r1
 8016338:	9603      	str	r6, [sp, #12]
 801633a:	eb02 0e00 	add.w	lr, r2, r0
 801633e:	f2c0 810a 	blt.w	8016556 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8016342:	45b8      	cmp	r8, r7
 8016344:	f340 8107 	ble.w	8016556 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8016348:	2900      	cmp	r1, #0
 801634a:	f2c0 8102 	blt.w	8016552 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801634e:	458c      	cmp	ip, r1
 8016350:	f340 80ff 	ble.w	8016552 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8016354:	5c12      	ldrb	r2, [r2, r0]
 8016356:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801635a:	1c4a      	adds	r2, r1, #1
 801635c:	f100 80fe 	bmi.w	801655c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8016360:	4594      	cmp	ip, r2
 8016362:	f340 80fb 	ble.w	801655c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8016366:	2d00      	cmp	r5, #0
 8016368:	f000 80fa 	beq.w	8016560 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801636c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8016370:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8016374:	3701      	adds	r7, #1
 8016376:	f100 80f7 	bmi.w	8016568 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801637a:	45b8      	cmp	r8, r7
 801637c:	f340 80f4 	ble.w	8016568 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8016380:	2c00      	cmp	r4, #0
 8016382:	f000 80f4 	beq.w	801656e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8016386:	2900      	cmp	r1, #0
 8016388:	eb0e 020c 	add.w	r2, lr, ip
 801638c:	f2c0 80ea 	blt.w	8016564 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8016390:	458c      	cmp	ip, r1
 8016392:	f340 80e7 	ble.w	8016564 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8016396:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801639a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801639e:	3101      	adds	r1, #1
 80163a0:	f100 80e8 	bmi.w	8016574 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80163a4:	458c      	cmp	ip, r1
 80163a6:	f340 80e5 	ble.w	8016574 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80163aa:	2d00      	cmp	r5, #0
 80163ac:	f000 80e4 	beq.w	8016578 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80163b0:	7852      	ldrb	r2, [r2, #1]
 80163b2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80163b6:	0e0b      	lsrs	r3, r1, #24
 80163b8:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80163bc:	9300      	str	r3, [sp, #0]
 80163be:	b2a4      	uxth	r4, r4
 80163c0:	b2ab      	uxth	r3, r5
 80163c2:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 80163c6:	fb03 f904 	mul.w	r9, r3, r4
 80163ca:	fb0a f505 	mul.w	r5, sl, r5
 80163ce:	011b      	lsls	r3, r3, #4
 80163d0:	eba3 0e09 	sub.w	lr, r3, r9
 80163d4:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 80163d8:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 80163dc:	0a28      	lsrs	r0, r5, #8
 80163de:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80163e2:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 80163e6:	4405      	add	r5, r0
 80163e8:	0a2d      	lsrs	r5, r5, #8
 80163ea:	fb0a f303 	mul.w	r3, sl, r3
 80163ee:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 80163f2:	9005      	str	r0, [sp, #20]
 80163f4:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 80163f8:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80163fc:	0a1b      	lsrs	r3, r3, #8
 80163fe:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8016402:	9306      	str	r3, [sp, #24]
 8016404:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 8016408:	fb0b f303 	mul.w	r3, fp, r3
 801640c:	0a1d      	lsrs	r5, r3, #8
 801640e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8016412:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8016416:	fb0b f606 	mul.w	r6, fp, r6
 801641a:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801641e:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 8016422:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8016426:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801642a:	fb08 f707 	mul.w	r7, r8, r7
 801642e:	441d      	add	r5, r3
 8016430:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 8016434:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8016438:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801643c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8016440:	fb08 fc0c 	mul.w	ip, r8, ip
 8016444:	0a1b      	lsrs	r3, r3, #8
 8016446:	9307      	str	r3, [sp, #28]
 8016448:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801644c:	0e0b      	lsrs	r3, r1, #24
 801644e:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 8016452:	435f      	muls	r7, r3
 8016454:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8016458:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801645c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8016460:	4460      	add	r0, ip
 8016462:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016466:	b2a4      	uxth	r4, r4
 8016468:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801646c:	0a2d      	lsrs	r5, r5, #8
 801646e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8016472:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8016476:	fa1f fe8e 	uxth.w	lr, lr
 801647a:	4359      	muls	r1, r3
 801647c:	1b12      	subs	r2, r2, r4
 801647e:	9b05      	ldr	r3, [sp, #20]
 8016480:	44bc      	add	ip, r7
 8016482:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8016486:	b292      	uxth	r2, r2
 8016488:	fb05 f50e 	mul.w	r5, r5, lr
 801648c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016490:	fb03 5502 	mla	r5, r3, r2, r5
 8016494:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8016498:	9b06      	ldr	r3, [sp, #24]
 801649a:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801649e:	0a36      	lsrs	r6, r6, #8
 80164a0:	0a00      	lsrs	r0, r0, #8
 80164a2:	fb0c 5509 	mla	r5, ip, r9, r5
 80164a6:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80164aa:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80164ae:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 80164b2:	fb00 5504 	mla	r5, r0, r4, r5
 80164b6:	fb0e f606 	mul.w	r6, lr, r6
 80164ba:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 80164be:	0a09      	lsrs	r1, r1, #8
 80164c0:	9b07      	ldr	r3, [sp, #28]
 80164c2:	fb02 6000 	mla	r0, r2, r0, r6
 80164c6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80164ca:	fb09 0001 	mla	r0, r9, r1, r0
 80164ce:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80164d2:	fb0e fe0b 	mul.w	lr, lr, fp
 80164d6:	fb04 0003 	mla	r0, r4, r3, r0
 80164da:	fb02 e20a 	mla	r2, r2, sl, lr
 80164de:	9b00      	ldr	r3, [sp, #0]
 80164e0:	fb04 2408 	mla	r4, r4, r8, r2
 80164e4:	fb09 4903 	mla	r9, r9, r3, r4
 80164e8:	ea6f 2929 	mvn.w	r9, r9, asr #8
 80164ec:	9b02      	ldr	r3, [sp, #8]
 80164ee:	9a04      	ldr	r2, [sp, #16]
 80164f0:	fa5f f989 	uxtb.w	r9, r9
 80164f4:	fb03 f109 	mul.w	r1, r3, r9
 80164f8:	9b03      	ldr	r3, [sp, #12]
 80164fa:	0a2d      	lsrs	r5, r5, #8
 80164fc:	0a00      	lsrs	r0, r0, #8
 80164fe:	fb03 f309 	mul.w	r3, r3, r9
 8016502:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 8016506:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801650a:	4305      	orrs	r5, r0
 801650c:	fb02 f909 	mul.w	r9, r2, r9
 8016510:	1c58      	adds	r0, r3, #1
 8016512:	1c4a      	adds	r2, r1, #1
 8016514:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8016518:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801651c:	0a2b      	lsrs	r3, r5, #8
 801651e:	0c2a      	lsrs	r2, r5, #16
 8016520:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8016524:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8016528:	00db      	lsls	r3, r3, #3
 801652a:	0212      	lsls	r2, r2, #8
 801652c:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8016530:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8016534:	4313      	orrs	r3, r2
 8016536:	f109 0201 	add.w	r2, r9, #1
 801653a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801653e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8016542:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016546:	431d      	orrs	r5, r3
 8016548:	9b01      	ldr	r3, [sp, #4]
 801654a:	801d      	strh	r5, [r3, #0]
 801654c:	b009      	add	sp, #36	@ 0x24
 801654e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016552:	2000      	movs	r0, #0
 8016554:	e701      	b.n	801635a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8016556:	2600      	movs	r6, #0
 8016558:	4630      	mov	r0, r6
 801655a:	e70b      	b.n	8016374 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801655c:	2600      	movs	r6, #0
 801655e:	e709      	b.n	8016374 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8016560:	462e      	mov	r6, r5
 8016562:	e707      	b.n	8016374 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8016564:	2700      	movs	r7, #0
 8016566:	e71a      	b.n	801639e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8016568:	2100      	movs	r1, #0
 801656a:	460f      	mov	r7, r1
 801656c:	e723      	b.n	80163b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801656e:	4621      	mov	r1, r4
 8016570:	4627      	mov	r7, r4
 8016572:	e720      	b.n	80163b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8016574:	2100      	movs	r1, #0
 8016576:	e71e      	b.n	80163b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8016578:	4629      	mov	r1, r5
 801657a:	e71c      	b.n	80163b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801657c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801657c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016580:	b09b      	sub	sp, #108	@ 0x6c
 8016582:	9218      	str	r2, [sp, #96]	@ 0x60
 8016584:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8016586:	9116      	str	r1, [sp, #88]	@ 0x58
 8016588:	9307      	str	r3, [sp, #28]
 801658a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801658e:	9019      	str	r0, [sp, #100]	@ 0x64
 8016590:	6850      	ldr	r0, [r2, #4]
 8016592:	6812      	ldr	r2, [r2, #0]
 8016594:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 8016596:	fb00 1303 	mla	r3, r0, r3, r1
 801659a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801659e:	930a      	str	r3, [sp, #40]	@ 0x28
 80165a0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80165a2:	681b      	ldr	r3, [r3, #0]
 80165a4:	930f      	str	r3, [sp, #60]	@ 0x3c
 80165a6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80165a8:	685e      	ldr	r6, [r3, #4]
 80165aa:	3604      	adds	r6, #4
 80165ac:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80165ae:	2b00      	cmp	r3, #0
 80165b0:	dc03      	bgt.n	80165ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80165b2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80165b4:	2b00      	cmp	r3, #0
 80165b6:	f340 8373 	ble.w	8016ca0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80165ba:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80165bc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80165c0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80165c4:	1e48      	subs	r0, r1, #1
 80165c6:	1e57      	subs	r7, r2, #1
 80165c8:	9b07      	ldr	r3, [sp, #28]
 80165ca:	2b00      	cmp	r3, #0
 80165cc:	f340 8190 	ble.w	80168f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80165d0:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 80165d2:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80165d6:	ea4f 4325 	mov.w	r3, r5, asr #16
 80165da:	d406      	bmi.n	80165ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80165dc:	4584      	cmp	ip, r0
 80165de:	da04      	bge.n	80165ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80165e0:	2b00      	cmp	r3, #0
 80165e2:	db02      	blt.n	80165ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80165e4:	42bb      	cmp	r3, r7
 80165e6:	f2c0 8184 	blt.w	80168f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 80165ea:	f11c 0c01 	adds.w	ip, ip, #1
 80165ee:	f100 8172 	bmi.w	80168d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80165f2:	4561      	cmp	r1, ip
 80165f4:	f2c0 816f 	blt.w	80168d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80165f8:	3301      	adds	r3, #1
 80165fa:	f100 816c 	bmi.w	80168d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80165fe:	429a      	cmp	r2, r3
 8016600:	f2c0 8169 	blt.w	80168d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016604:	9b07      	ldr	r3, [sp, #28]
 8016606:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8016608:	9317      	str	r3, [sp, #92]	@ 0x5c
 801660a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801660c:	2b00      	cmp	r3, #0
 801660e:	f340 818e 	ble.w	801692e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8016612:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8016614:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016618:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801661a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801661e:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8016620:	141b      	asrs	r3, r3, #16
 8016622:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8016626:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801662a:	f100 81d1 	bmi.w	80169d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801662e:	f101 38ff 	add.w	r8, r1, #4294967295
 8016632:	4543      	cmp	r3, r8
 8016634:	f280 81cc 	bge.w	80169d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8016638:	f1bc 0f00 	cmp.w	ip, #0
 801663c:	f2c0 81c8 	blt.w	80169d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8016640:	f10e 38ff 	add.w	r8, lr, #4294967295
 8016644:	45c4      	cmp	ip, r8
 8016646:	f280 81c3 	bge.w	80169d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801664a:	b209      	sxth	r1, r1
 801664c:	fb0c 3301 	mla	r3, ip, r1, r3
 8016650:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8016652:	eb04 0803 	add.w	r8, r4, r3
 8016656:	5ce3      	ldrb	r3, [r4, r3]
 8016658:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801665c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8016660:	2a00      	cmp	r2, #0
 8016662:	f000 81aa 	beq.w	80169ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8016666:	f898 c001 	ldrb.w	ip, [r8, #1]
 801666a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801666e:	940b      	str	r4, [sp, #44]	@ 0x2c
 8016670:	0e24      	lsrs	r4, r4, #24
 8016672:	9412      	str	r4, [sp, #72]	@ 0x48
 8016674:	b178      	cbz	r0, 8016696 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8016676:	eb08 0c01 	add.w	ip, r8, r1
 801667a:	f818 1001 	ldrb.w	r1, [r8, r1]
 801667e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016682:	9108      	str	r1, [sp, #32]
 8016684:	0e09      	lsrs	r1, r1, #24
 8016686:	9110      	str	r1, [sp, #64]	@ 0x40
 8016688:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801668c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016690:	910c      	str	r1, [sp, #48]	@ 0x30
 8016692:	0e09      	lsrs	r1, r1, #24
 8016694:	9113      	str	r1, [sp, #76]	@ 0x4c
 8016696:	b292      	uxth	r2, r2
 8016698:	b280      	uxth	r0, r0
 801669a:	fb02 f900 	mul.w	r9, r2, r0
 801669e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80166a2:	0112      	lsls	r2, r2, #4
 80166a4:	eba2 0809 	sub.w	r8, r2, r9
 80166a8:	b280      	uxth	r0, r0
 80166aa:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 80166ae:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80166b0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80166b2:	fa1f f888 	uxth.w	r8, r8
 80166b6:	1a12      	subs	r2, r2, r0
 80166b8:	b292      	uxth	r2, r2
 80166ba:	fb08 f101 	mul.w	r1, r8, r1
 80166be:	fb02 110e 	mla	r1, r2, lr, r1
 80166c2:	fb00 1104 	mla	r1, r0, r4, r1
 80166c6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80166c8:	fb09 1104 	mla	r1, r9, r4, r1
 80166cc:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80166d0:	2900      	cmp	r1, #0
 80166d2:	f000 80f5 	beq.w	80168c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80166d6:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 80166da:	d01b      	beq.n	8016714 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80166dc:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80166e0:	fb0e fa0a 	mul.w	sl, lr, sl
 80166e4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80166e8:	fb0e fe03 	mul.w	lr, lr, r3
 80166ec:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80166f0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80166f4:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80166f8:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 80166fc:	4453      	add	r3, sl
 80166fe:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8016702:	0a1b      	lsrs	r3, r3, #8
 8016704:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016708:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801670c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8016710:	ea43 030c 	orr.w	r3, r3, ip
 8016714:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8016716:	2cff      	cmp	r4, #255	@ 0xff
 8016718:	d021      	beq.n	801675e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801671a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801671c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8016720:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8016722:	fb04 fb0b 	mul.w	fp, r4, fp
 8016726:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8016728:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801672c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801672e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016732:	fb04 fa0a 	mul.w	sl, r4, sl
 8016736:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801673a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801673e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8016742:	44de      	add	lr, fp
 8016744:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016748:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801674c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016750:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8016754:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8016758:	ea4e 040a 	orr.w	r4, lr, sl
 801675c:	940b      	str	r4, [sp, #44]	@ 0x2c
 801675e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8016760:	2cff      	cmp	r4, #255	@ 0xff
 8016762:	d021      	beq.n	80167a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8016764:	9c08      	ldr	r4, [sp, #32]
 8016766:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801676a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801676c:	fb04 fb0b 	mul.w	fp, r4, fp
 8016770:	9c08      	ldr	r4, [sp, #32]
 8016772:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8016776:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8016778:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801677c:	fb04 fa0a 	mul.w	sl, r4, sl
 8016780:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8016784:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8016788:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801678c:	44de      	add	lr, fp
 801678e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016792:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016796:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801679a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801679e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80167a2:	ea4e 040a 	orr.w	r4, lr, sl
 80167a6:	9408      	str	r4, [sp, #32]
 80167a8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80167aa:	2cff      	cmp	r4, #255	@ 0xff
 80167ac:	d021      	beq.n	80167f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80167ae:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80167b0:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80167b4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80167b6:	fb04 fb0b 	mul.w	fp, r4, fp
 80167ba:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80167bc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80167c0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80167c2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80167c6:	fb04 fa0a 	mul.w	sl, r4, sl
 80167ca:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80167ce:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80167d2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80167d6:	44de      	add	lr, fp
 80167d8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80167dc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80167e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80167e4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80167e8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80167ec:	ea4e 040a 	orr.w	r4, lr, sl
 80167f0:	940c      	str	r4, [sp, #48]	@ 0x30
 80167f2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80167f4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80167f8:	9c08      	ldr	r4, [sp, #32]
 80167fa:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 80167fe:	fb08 fc0c 	mul.w	ip, r8, ip
 8016802:	fb02 cc0e 	mla	ip, r2, lr, ip
 8016806:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801680a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801680c:	fb00 cc0e 	mla	ip, r0, lr, ip
 8016810:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8016814:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8016816:	fb09 cc0e 	mla	ip, r9, lr, ip
 801681a:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801681e:	fb08 f80e 	mul.w	r8, r8, lr
 8016822:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8016826:	fb02 8303 	mla	r3, r2, r3, r8
 801682a:	9a08      	ldr	r2, [sp, #32]
 801682c:	f8b7 8000 	ldrh.w	r8, [r7]
 8016830:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8016834:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8016836:	fb00 330a 	mla	r3, r0, sl, r3
 801683a:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 801683e:	fb09 3900 	mla	r9, r9, r0, r3
 8016842:	43c9      	mvns	r1, r1
 8016844:	ea4f 2228 	mov.w	r2, r8, asr #8
 8016848:	fa5f fe81 	uxtb.w	lr, r1
 801684c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016850:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016854:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8016858:	fb02 f20e 	mul.w	r2, r2, lr
 801685c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8016860:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8016864:	ea4c 0c09 	orr.w	ip, ip, r9
 8016868:	1c53      	adds	r3, r2, #1
 801686a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801686e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8016872:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8016876:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801687a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801687e:	4a63      	ldr	r2, [pc, #396]	@ (8016a0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8016880:	fb00 f00e 	mul.w	r0, r0, lr
 8016884:	b2db      	uxtb	r3, r3
 8016886:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801688a:	1c43      	adds	r3, r0, #1
 801688c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8016890:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8016894:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8016898:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801689c:	b2c9      	uxtb	r1, r1
 801689e:	00db      	lsls	r3, r3, #3
 80168a0:	fb01 f10e 	mul.w	r1, r1, lr
 80168a4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80168a8:	4313      	orrs	r3, r2
 80168aa:	1c4a      	adds	r2, r1, #1
 80168ac:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80168b0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80168b4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80168b8:	ea4c 0c03 	orr.w	ip, ip, r3
 80168bc:	f8a7 c000 	strh.w	ip, [r7]
 80168c0:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80168c2:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 80168c4:	441a      	add	r2, r3
 80168c6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80168c8:	9225      	str	r2, [sp, #148]	@ 0x94
 80168ca:	441d      	add	r5, r3
 80168cc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80168ce:	3b01      	subs	r3, #1
 80168d0:	3702      	adds	r7, #2
 80168d2:	9317      	str	r3, [sp, #92]	@ 0x5c
 80168d4:	e699      	b.n	801660a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80168d6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80168d8:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 80168da:	441c      	add	r4, r3
 80168dc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80168de:	9425      	str	r4, [sp, #148]	@ 0x94
 80168e0:	441d      	add	r5, r3
 80168e2:	9b07      	ldr	r3, [sp, #28]
 80168e4:	3b01      	subs	r3, #1
 80168e6:	9307      	str	r3, [sp, #28]
 80168e8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80168ea:	3302      	adds	r3, #2
 80168ec:	930a      	str	r3, [sp, #40]	@ 0x28
 80168ee:	e66b      	b.n	80165c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80168f0:	d024      	beq.n	801693c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 80168f2:	9b07      	ldr	r3, [sp, #28]
 80168f4:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 80168f6:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 80168f8:	3b01      	subs	r3, #1
 80168fa:	fb00 4003 	mla	r0, r0, r3, r4
 80168fe:	1400      	asrs	r0, r0, #16
 8016900:	f53f ae80 	bmi.w	8016604 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8016904:	3901      	subs	r1, #1
 8016906:	4288      	cmp	r0, r1
 8016908:	f6bf ae7c 	bge.w	8016604 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801690c:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801690e:	fb01 5303 	mla	r3, r1, r3, r5
 8016912:	141b      	asrs	r3, r3, #16
 8016914:	f53f ae76 	bmi.w	8016604 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8016918:	3a01      	subs	r2, #1
 801691a:	4293      	cmp	r3, r2
 801691c:	f6bf ae72 	bge.w	8016604 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8016920:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8016924:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8016928:	f1bb 0f00 	cmp.w	fp, #0
 801692c:	dc70      	bgt.n	8016a10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801692e:	9b07      	ldr	r3, [sp, #28]
 8016930:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8016934:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016936:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801693a:	930a      	str	r3, [sp, #40]	@ 0x28
 801693c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801693e:	2b00      	cmp	r3, #0
 8016940:	f340 81ae 	ble.w	8016ca0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8016944:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016948:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801694c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8016950:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8016952:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016956:	ee31 1a05 	vadd.f32	s2, s2, s10
 801695a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801695e:	eef0 6a62 	vmov.f32	s13, s5
 8016962:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016966:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801696a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801696e:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 8016972:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016976:	eef0 6a43 	vmov.f32	s13, s6
 801697a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801697e:	ee12 2a90 	vmov	r2, s5
 8016982:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016986:	fb92 f3f3 	sdiv	r3, r2, r3
 801698a:	ee13 2a10 	vmov	r2, s6
 801698e:	9327      	str	r3, [sp, #156]	@ 0x9c
 8016990:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8016992:	fb92 f3f3 	sdiv	r3, r2, r3
 8016996:	9328      	str	r3, [sp, #160]	@ 0xa0
 8016998:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801699a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801699c:	3b01      	subs	r3, #1
 801699e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80169a2:	9316      	str	r3, [sp, #88]	@ 0x58
 80169a4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80169a6:	bf08      	it	eq
 80169a8:	4613      	moveq	r3, r2
 80169aa:	ee16 5a90 	vmov	r5, s13
 80169ae:	9307      	str	r3, [sp, #28]
 80169b0:	eeb0 3a67 	vmov.f32	s6, s15
 80169b4:	eef0 2a47 	vmov.f32	s5, s14
 80169b8:	e5f8      	b.n	80165ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80169ba:	2800      	cmp	r0, #0
 80169bc:	f43f ae6b 	beq.w	8016696 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80169c0:	f818 1001 	ldrb.w	r1, [r8, r1]
 80169c4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80169c8:	9108      	str	r1, [sp, #32]
 80169ca:	0e09      	lsrs	r1, r1, #24
 80169cc:	9110      	str	r1, [sp, #64]	@ 0x40
 80169ce:	e662      	b.n	8016696 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80169d0:	f113 0801 	adds.w	r8, r3, #1
 80169d4:	f53f af74 	bmi.w	80168c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80169d8:	4541      	cmp	r1, r8
 80169da:	f6ff af71 	blt.w	80168c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80169de:	f11c 0801 	adds.w	r8, ip, #1
 80169e2:	f53f af6d 	bmi.w	80168c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80169e6:	45c6      	cmp	lr, r8
 80169e8:	f6ff af6a 	blt.w	80168c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80169ec:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 80169f0:	b209      	sxth	r1, r1
 80169f2:	fa0f f38e 	sxth.w	r3, lr
 80169f6:	e9cd 2004 	strd	r2, r0, [sp, #16]
 80169fa:	9301      	str	r3, [sp, #4]
 80169fc:	9100      	str	r1, [sp, #0]
 80169fe:	4633      	mov	r3, r6
 8016a00:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8016a02:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8016a04:	4639      	mov	r1, r7
 8016a06:	f7ff fc7a 	bl	80162fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8016a0a:	e759      	b.n	80168c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8016a0c:	fffff800 	.word	0xfffff800
 8016a10:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8016a12:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8016a14:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016a18:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8016a1a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016a1e:	1427      	asrs	r7, r4, #16
 8016a20:	142b      	asrs	r3, r5, #16
 8016a22:	fb01 7303 	mla	r3, r1, r3, r7
 8016a26:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8016a28:	18e7      	adds	r7, r4, r3
 8016a2a:	5ce3      	ldrb	r3, [r4, r3]
 8016a2c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016a30:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8016a34:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8016a38:	2a00      	cmp	r2, #0
 8016a3a:	f000 8127 	beq.w	8016c8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8016a3e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8016a42:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8016a46:	940d      	str	r4, [sp, #52]	@ 0x34
 8016a48:	0e24      	lsrs	r4, r4, #24
 8016a4a:	9414      	str	r4, [sp, #80]	@ 0x50
 8016a4c:	b170      	cbz	r0, 8016a6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8016a4e:	eb07 0e01 	add.w	lr, r7, r1
 8016a52:	5c79      	ldrb	r1, [r7, r1]
 8016a54:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016a58:	9109      	str	r1, [sp, #36]	@ 0x24
 8016a5a:	0e09      	lsrs	r1, r1, #24
 8016a5c:	9111      	str	r1, [sp, #68]	@ 0x44
 8016a5e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8016a62:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016a66:	910e      	str	r1, [sp, #56]	@ 0x38
 8016a68:	0e09      	lsrs	r1, r1, #24
 8016a6a:	9115      	str	r1, [sp, #84]	@ 0x54
 8016a6c:	b292      	uxth	r2, r2
 8016a6e:	b280      	uxth	r0, r0
 8016a70:	fb02 f800 	mul.w	r8, r2, r0
 8016a74:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8016a78:	0112      	lsls	r2, r2, #4
 8016a7a:	eba2 0e08 	sub.w	lr, r2, r8
 8016a7e:	b280      	uxth	r0, r0
 8016a80:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 8016a84:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016a86:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8016a88:	fa1f fe8e 	uxth.w	lr, lr
 8016a8c:	1a09      	subs	r1, r1, r0
 8016a8e:	b289      	uxth	r1, r1
 8016a90:	fb0e f202 	mul.w	r2, lr, r2
 8016a94:	fb01 220c 	mla	r2, r1, ip, r2
 8016a98:	fb00 2204 	mla	r2, r0, r4, r2
 8016a9c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8016a9e:	fb08 2204 	mla	r2, r8, r4, r2
 8016aa2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8016aa6:	2a00      	cmp	r2, #0
 8016aa8:	f000 80e5 	beq.w	8016c76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8016aac:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8016ab0:	d019      	beq.n	8016ae6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8016ab2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8016ab6:	fb0c fa0a 	mul.w	sl, ip, sl
 8016aba:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8016abe:	fb0c fc03 	mul.w	ip, ip, r3
 8016ac2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8016ac6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8016aca:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8016ace:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8016ad2:	4453      	add	r3, sl
 8016ad4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8016ad8:	0a1b      	lsrs	r3, r3, #8
 8016ada:	0a3f      	lsrs	r7, r7, #8
 8016adc:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8016ae0:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8016ae4:	433b      	orrs	r3, r7
 8016ae6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8016ae8:	2cff      	cmp	r4, #255	@ 0xff
 8016aea:	d020      	beq.n	8016b2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8016aec:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8016aee:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8016af2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8016af4:	4367      	muls	r7, r4
 8016af6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8016af8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8016afc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8016afe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016b02:	fb04 fa0a 	mul.w	sl, r4, sl
 8016b06:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8016b0a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8016b0e:	44bc      	add	ip, r7
 8016b10:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8016b14:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016b18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016b1c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016b20:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8016b24:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8016b28:	ea4c 040a 	orr.w	r4, ip, sl
 8016b2c:	940d      	str	r4, [sp, #52]	@ 0x34
 8016b2e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8016b30:	2cff      	cmp	r4, #255	@ 0xff
 8016b32:	d020      	beq.n	8016b76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8016b34:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8016b36:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8016b3a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8016b3c:	4367      	muls	r7, r4
 8016b3e:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8016b40:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8016b44:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8016b46:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016b4a:	fb04 fa0a 	mul.w	sl, r4, sl
 8016b4e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8016b52:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8016b56:	44bc      	add	ip, r7
 8016b58:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8016b5c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016b60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016b64:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016b68:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8016b6c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8016b70:	ea4c 040a 	orr.w	r4, ip, sl
 8016b74:	9409      	str	r4, [sp, #36]	@ 0x24
 8016b76:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8016b78:	2cff      	cmp	r4, #255	@ 0xff
 8016b7a:	d020      	beq.n	8016bbe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8016b7c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8016b7e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8016b82:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8016b84:	4367      	muls	r7, r4
 8016b86:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8016b88:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8016b8c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8016b8e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016b92:	fb04 fa0a 	mul.w	sl, r4, sl
 8016b96:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8016b9a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8016b9e:	44bc      	add	ip, r7
 8016ba0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8016ba4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016ba8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016bac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016bb0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8016bb4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8016bb8:	ea4c 040a 	orr.w	r4, ip, sl
 8016bbc:	940e      	str	r4, [sp, #56]	@ 0x38
 8016bbe:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8016bc0:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8016bc4:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8016bc6:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8016bca:	fb0e f707 	mul.w	r7, lr, r7
 8016bce:	fb01 770c 	mla	r7, r1, ip, r7
 8016bd2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8016bd6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8016bd8:	fb00 770c 	mla	r7, r0, ip, r7
 8016bdc:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8016be0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8016be2:	fb08 770c 	mla	r7, r8, ip, r7
 8016be6:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 8016bea:	fb0e fe0c 	mul.w	lr, lr, ip
 8016bee:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8016bf2:	fb01 e303 	mla	r3, r1, r3, lr
 8016bf6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8016bf8:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8016bfc:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8016bfe:	fb00 330a 	mla	r3, r0, sl, r3
 8016c02:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8016c06:	fb08 3c0c 	mla	ip, r8, ip, r3
 8016c0a:	f8b9 3000 	ldrh.w	r3, [r9]
 8016c0e:	43d2      	mvns	r2, r2
 8016c10:	1218      	asrs	r0, r3, #8
 8016c12:	b2d2      	uxtb	r2, r2
 8016c14:	10d9      	asrs	r1, r3, #3
 8016c16:	0a3f      	lsrs	r7, r7, #8
 8016c18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016c1c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8016c20:	00db      	lsls	r3, r3, #3
 8016c22:	4350      	muls	r0, r2
 8016c24:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8016c28:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8016c2c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8016c30:	b2db      	uxtb	r3, r3
 8016c32:	ea47 070c 	orr.w	r7, r7, ip
 8016c36:	4351      	muls	r1, r2
 8016c38:	4353      	muls	r3, r2
 8016c3a:	1c42      	adds	r2, r0, #1
 8016c3c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8016c40:	0c3a      	lsrs	r2, r7, #16
 8016c42:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8016c46:	4a18      	ldr	r2, [pc, #96]	@ (8016ca8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8016c48:	b2c0      	uxtb	r0, r0
 8016c4a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8016c4e:	1c4a      	adds	r2, r1, #1
 8016c50:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016c54:	0a3a      	lsrs	r2, r7, #8
 8016c56:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016c5a:	00c9      	lsls	r1, r1, #3
 8016c5c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8016c60:	4301      	orrs	r1, r0
 8016c62:	1c58      	adds	r0, r3, #1
 8016c64:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8016c68:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8016c6c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8016c70:	4308      	orrs	r0, r1
 8016c72:	f8a9 0000 	strh.w	r0, [r9]
 8016c76:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8016c78:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8016c7a:	441a      	add	r2, r3
 8016c7c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8016c7e:	9225      	str	r2, [sp, #148]	@ 0x94
 8016c80:	f109 0902 	add.w	r9, r9, #2
 8016c84:	441d      	add	r5, r3
 8016c86:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016c8a:	e64d      	b.n	8016928 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8016c8c:	2800      	cmp	r0, #0
 8016c8e:	f43f aeed 	beq.w	8016a6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8016c92:	5c79      	ldrb	r1, [r7, r1]
 8016c94:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016c98:	9109      	str	r1, [sp, #36]	@ 0x24
 8016c9a:	0e09      	lsrs	r1, r1, #24
 8016c9c:	9111      	str	r1, [sp, #68]	@ 0x44
 8016c9e:	e6e5      	b.n	8016a6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8016ca0:	b01b      	add	sp, #108	@ 0x6c
 8016ca2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016ca6:	bf00      	nop
 8016ca8:	fffff800 	.word	0xfffff800

08016cac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8016cac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016cb0:	b085      	sub	sp, #20
 8016cb2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8016cb6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8016cba:	9103      	str	r1, [sp, #12]
 8016cbc:	fb00 7406 	mla	r4, r0, r6, r7
 8016cc0:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8016cc4:	2800      	cmp	r0, #0
 8016cc6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 8016cca:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 8016cce:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 8016cd2:	9501      	str	r5, [sp, #4]
 8016cd4:	eb03 0904 	add.w	r9, r3, r4
 8016cd8:	f2c0 8150 	blt.w	8016f7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8016cdc:	4583      	cmp	fp, r0
 8016cde:	f340 814d 	ble.w	8016f7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8016ce2:	2f00      	cmp	r7, #0
 8016ce4:	f2c0 8146 	blt.w	8016f74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8016ce8:	42be      	cmp	r6, r7
 8016cea:	f340 8143 	ble.w	8016f74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8016cee:	f813 c004 	ldrb.w	ip, [r3, r4]
 8016cf2:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8016cf6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8016cfa:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 8016cfe:	4355      	muls	r5, r2
 8016d00:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8016d04:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8016d08:	fb0c f203 	mul.w	r2, ip, r3
 8016d0c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8016d10:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8016d14:	441d      	add	r5, r3
 8016d16:	f102 0320 	add.w	r3, r2, #32
 8016d1a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8016d1e:	0a1b      	lsrs	r3, r3, #8
 8016d20:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8016d24:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8016d28:	431c      	orrs	r4, r3
 8016d2a:	1c7b      	adds	r3, r7, #1
 8016d2c:	f100 812b 	bmi.w	8016f86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8016d30:	429e      	cmp	r6, r3
 8016d32:	f340 8128 	ble.w	8016f86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8016d36:	2900      	cmp	r1, #0
 8016d38:	f000 8128 	beq.w	8016f8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8016d3c:	9a01      	ldr	r2, [sp, #4]
 8016d3e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8016d42:	8855      	ldrh	r5, [r2, #2]
 8016d44:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8016d48:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 8016d4c:	fb08 f802 	mul.w	r8, r8, r2
 8016d50:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016d54:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8016d58:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8016d5c:	435d      	muls	r5, r3
 8016d5e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8016d62:	44d0      	add	r8, sl
 8016d64:	f105 0a20 	add.w	sl, r5, #32
 8016d68:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8016d6c:	0a2d      	lsrs	r5, r5, #8
 8016d6e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8016d72:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016d76:	432a      	orrs	r2, r5
 8016d78:	3001      	adds	r0, #1
 8016d7a:	f100 810d 	bmi.w	8016f98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8016d7e:	4583      	cmp	fp, r0
 8016d80:	f340 810a 	ble.w	8016f98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8016d84:	f1be 0f00 	cmp.w	lr, #0
 8016d88:	f000 810b 	beq.w	8016fa2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8016d8c:	2f00      	cmp	r7, #0
 8016d8e:	f2c0 8100 	blt.w	8016f92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8016d92:	42be      	cmp	r6, r7
 8016d94:	f340 80fd 	ble.w	8016f92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8016d98:	9801      	ldr	r0, [sp, #4]
 8016d9a:	f819 5006 	ldrb.w	r5, [r9, r6]
 8016d9e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8016da2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8016da6:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 8016daa:	fb0a fa00 	mul.w	sl, sl, r0
 8016dae:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 8016db2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8016db6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8016dba:	fb05 f808 	mul.w	r8, r5, r8
 8016dbe:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 8016dc2:	4482      	add	sl, r0
 8016dc4:	f108 0020 	add.w	r0, r8, #32
 8016dc8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8016dcc:	0a00      	lsrs	r0, r0, #8
 8016dce:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8016dd2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8016dd6:	ea4b 0b00 	orr.w	fp, fp, r0
 8016dda:	3701      	adds	r7, #1
 8016ddc:	f100 80e6 	bmi.w	8016fac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8016de0:	42be      	cmp	r6, r7
 8016de2:	f340 80e3 	ble.w	8016fac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8016de6:	2900      	cmp	r1, #0
 8016de8:	f000 80e3 	beq.w	8016fb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8016dec:	3601      	adds	r6, #1
 8016dee:	9801      	ldr	r0, [sp, #4]
 8016df0:	f819 7006 	ldrb.w	r7, [r9, r6]
 8016df4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8016df8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8016dfc:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8016e00:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8016e04:	fb09 f906 	mul.w	r9, r9, r6
 8016e08:	fb07 f800 	mul.w	r8, r7, r0
 8016e0c:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8016e10:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8016e14:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8016e18:	44d1      	add	r9, sl
 8016e1a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8016e1e:	f108 0020 	add.w	r0, r8, #32
 8016e22:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8016e26:	0a00      	lsrs	r0, r0, #8
 8016e28:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8016e2c:	4330      	orrs	r0, r6
 8016e2e:	b28e      	uxth	r6, r1
 8016e30:	fa1f f98e 	uxth.w	r9, lr
 8016e34:	fb06 f809 	mul.w	r8, r6, r9
 8016e38:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8016e3c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8016e40:	0136      	lsls	r6, r6, #4
 8016e42:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8016e46:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8016e4a:	9601      	str	r6, [sp, #4]
 8016e4c:	ea4a 0404 	orr.w	r4, sl, r4
 8016e50:	fa1f f689 	uxth.w	r6, r9
 8016e54:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8016e58:	fb11 f90e 	smulbb	r9, r1, lr
 8016e5c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8016e60:	9602      	str	r6, [sp, #8]
 8016e62:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8016e66:	4626      	mov	r6, r4
 8016e68:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8016e6c:	f1ce 0410 	rsb	r4, lr, #16
 8016e70:	1a64      	subs	r4, r4, r1
 8016e72:	ea4a 0202 	orr.w	r2, sl, r2
 8016e76:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8016e7a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8016e7e:	434a      	muls	r2, r1
 8016e80:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8016e84:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8016e88:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8016e8c:	fb04 2406 	mla	r4, r4, r6, r2
 8016e90:	ea4a 0000 	orr.w	r0, sl, r0
 8016e94:	fb09 4200 	mla	r2, r9, r0, r4
 8016e98:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8016e9c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8016ea0:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8016ea4:	ea44 0b0b 	orr.w	fp, r4, fp
 8016ea8:	9c01      	ldr	r4, [sp, #4]
 8016eaa:	9e02      	ldr	r6, [sp, #8]
 8016eac:	9903      	ldr	r1, [sp, #12]
 8016eae:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 8016eb2:	1ba4      	subs	r4, r4, r6
 8016eb4:	9e01      	ldr	r6, [sp, #4]
 8016eb6:	8808      	ldrh	r0, [r1, #0]
 8016eb8:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 8016ebc:	eba6 0608 	sub.w	r6, r6, r8
 8016ec0:	b2b6      	uxth	r6, r6
 8016ec2:	b2a4      	uxth	r4, r4
 8016ec4:	4373      	muls	r3, r6
 8016ec6:	fb0c 3304 	mla	r3, ip, r4, r3
 8016eca:	9c02      	ldr	r4, [sp, #8]
 8016ecc:	fb04 3505 	mla	r5, r4, r5, r3
 8016ed0:	fb08 5707 	mla	r7, r8, r7, r5
 8016ed4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8016ed8:	b289      	uxth	r1, r1
 8016eda:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8016ede:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8016ee2:	434f      	muls	r7, r1
 8016ee4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8016ee8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8016eec:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016ef0:	1c7b      	adds	r3, r7, #1
 8016ef2:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8016ef6:	ea42 0e0e 	orr.w	lr, r2, lr
 8016efa:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8016efe:	fa1f f28e 	uxth.w	r2, lr
 8016f02:	1203      	asrs	r3, r0, #8
 8016f04:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8016f08:	b2ff      	uxtb	r7, r7
 8016f0a:	1215      	asrs	r5, r2, #8
 8016f0c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8016f10:	fb13 f307 	smulbb	r3, r3, r7
 8016f14:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8016f18:	fb05 3501 	mla	r5, r5, r1, r3
 8016f1c:	10c3      	asrs	r3, r0, #3
 8016f1e:	10d4      	asrs	r4, r2, #3
 8016f20:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8016f24:	fb13 f307 	smulbb	r3, r3, r7
 8016f28:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8016f2c:	fb04 3401 	mla	r4, r4, r1, r3
 8016f30:	00c3      	lsls	r3, r0, #3
 8016f32:	00d2      	lsls	r2, r2, #3
 8016f34:	b2db      	uxtb	r3, r3
 8016f36:	fb13 f307 	smulbb	r3, r3, r7
 8016f3a:	b2d2      	uxtb	r2, r2
 8016f3c:	fb02 3101 	mla	r1, r2, r1, r3
 8016f40:	b2ad      	uxth	r5, r5
 8016f42:	b289      	uxth	r1, r1
 8016f44:	b2a4      	uxth	r4, r4
 8016f46:	1c6b      	adds	r3, r5, #1
 8016f48:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8016f4c:	1c62      	adds	r2, r4, #1
 8016f4e:	1c4b      	adds	r3, r1, #1
 8016f50:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8016f54:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8016f58:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8016f5c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8016f60:	0964      	lsrs	r4, r4, #5
 8016f62:	432b      	orrs	r3, r5
 8016f64:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8016f68:	9a03      	ldr	r2, [sp, #12]
 8016f6a:	4323      	orrs	r3, r4
 8016f6c:	8013      	strh	r3, [r2, #0]
 8016f6e:	b005      	add	sp, #20
 8016f70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016f74:	f04f 0c00 	mov.w	ip, #0
 8016f78:	4664      	mov	r4, ip
 8016f7a:	e6d6      	b.n	8016d2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8016f7c:	2300      	movs	r3, #0
 8016f7e:	469c      	mov	ip, r3
 8016f80:	461a      	mov	r2, r3
 8016f82:	461c      	mov	r4, r3
 8016f84:	e6f8      	b.n	8016d78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8016f86:	2300      	movs	r3, #0
 8016f88:	461a      	mov	r2, r3
 8016f8a:	e6f5      	b.n	8016d78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8016f8c:	460b      	mov	r3, r1
 8016f8e:	460a      	mov	r2, r1
 8016f90:	e6f2      	b.n	8016d78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8016f92:	2500      	movs	r5, #0
 8016f94:	46ab      	mov	fp, r5
 8016f96:	e720      	b.n	8016dda <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8016f98:	2700      	movs	r7, #0
 8016f9a:	463d      	mov	r5, r7
 8016f9c:	4638      	mov	r0, r7
 8016f9e:	46bb      	mov	fp, r7
 8016fa0:	e745      	b.n	8016e2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8016fa2:	4677      	mov	r7, lr
 8016fa4:	4675      	mov	r5, lr
 8016fa6:	4670      	mov	r0, lr
 8016fa8:	46f3      	mov	fp, lr
 8016faa:	e740      	b.n	8016e2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8016fac:	2700      	movs	r7, #0
 8016fae:	4638      	mov	r0, r7
 8016fb0:	e73d      	b.n	8016e2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8016fb2:	460f      	mov	r7, r1
 8016fb4:	4608      	mov	r0, r1
 8016fb6:	e73a      	b.n	8016e2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08016fb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016fb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016fbc:	b097      	sub	sp, #92	@ 0x5c
 8016fbe:	9214      	str	r2, [sp, #80]	@ 0x50
 8016fc0:	9308      	str	r3, [sp, #32]
 8016fc2:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8016fc4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8016fc8:	9312      	str	r3, [sp, #72]	@ 0x48
 8016fca:	9111      	str	r1, [sp, #68]	@ 0x44
 8016fcc:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8016fd0:	9015      	str	r0, [sp, #84]	@ 0x54
 8016fd2:	6850      	ldr	r0, [r2, #4]
 8016fd4:	6812      	ldr	r2, [r2, #0]
 8016fd6:	fb00 1303 	mla	r3, r0, r3, r1
 8016fda:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016fde:	9309      	str	r3, [sp, #36]	@ 0x24
 8016fe0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8016fe2:	681b      	ldr	r3, [r3, #0]
 8016fe4:	930b      	str	r3, [sp, #44]	@ 0x2c
 8016fe6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8016fe8:	685b      	ldr	r3, [r3, #4]
 8016fea:	930c      	str	r3, [sp, #48]	@ 0x30
 8016fec:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8016ff0:	930a      	str	r3, [sp, #40]	@ 0x28
 8016ff2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8016ff4:	2b00      	cmp	r3, #0
 8016ff6:	dc03      	bgt.n	8017000 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8016ff8:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8016ffa:	2b00      	cmp	r3, #0
 8016ffc:	f340 83cb 	ble.w	8017796 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8017000:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8017002:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017006:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801700a:	1e48      	subs	r0, r1, #1
 801700c:	1e55      	subs	r5, r2, #1
 801700e:	9b08      	ldr	r3, [sp, #32]
 8017010:	2b00      	cmp	r3, #0
 8017012:	f340 81a3 	ble.w	801735c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8017016:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 8017018:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801701a:	1436      	asrs	r6, r6, #16
 801701c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8017020:	d406      	bmi.n	8017030 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8017022:	4286      	cmp	r6, r0
 8017024:	da04      	bge.n	8017030 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8017026:	2b00      	cmp	r3, #0
 8017028:	db02      	blt.n	8017030 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801702a:	42ab      	cmp	r3, r5
 801702c:	f2c0 8197 	blt.w	801735e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8017030:	3601      	adds	r6, #1
 8017032:	f100 8184 	bmi.w	801733e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8017036:	42b1      	cmp	r1, r6
 8017038:	f2c0 8181 	blt.w	801733e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801703c:	3301      	adds	r3, #1
 801703e:	f100 817e 	bmi.w	801733e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8017042:	429a      	cmp	r2, r3
 8017044:	f2c0 817b 	blt.w	801733e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8017048:	9b08      	ldr	r3, [sp, #32]
 801704a:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801704c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801704e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8017052:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8017054:	2b00      	cmp	r3, #0
 8017056:	f340 81a4 	ble.w	80173a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801705a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801705c:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801705e:	1418      	asrs	r0, r3, #16
 8017060:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8017062:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8017066:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8017068:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801706c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801706e:	142d      	asrs	r5, r5, #16
 8017070:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8017074:	f100 81f8 	bmi.w	8017468 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8017078:	f102 3eff 	add.w	lr, r2, #4294967295
 801707c:	4575      	cmp	r5, lr
 801707e:	f280 81f3 	bge.w	8017468 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8017082:	2800      	cmp	r0, #0
 8017084:	f2c0 81f0 	blt.w	8017468 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8017088:	f103 3eff 	add.w	lr, r3, #4294967295
 801708c:	4570      	cmp	r0, lr
 801708e:	f280 81eb 	bge.w	8017468 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8017092:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017094:	b212      	sxth	r2, r2
 8017096:	fb00 5002 	mla	r0, r0, r2, r5
 801709a:	fa1f fe81 	uxth.w	lr, r1
 801709e:	eb03 0a00 	add.w	sl, r3, r0
 80170a2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80170a6:	f813 9000 	ldrb.w	r9, [r3, r0]
 80170aa:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80170ae:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 80170b2:	b29b      	uxth	r3, r3
 80170b4:	f1bc 0f00 	cmp.w	ip, #0
 80170b8:	f000 81b9 	beq.w	801742e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80170bc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80170c0:	940d      	str	r4, [sp, #52]	@ 0x34
 80170c2:	eb0a 0b02 	add.w	fp, sl, r2
 80170c6:	fa1f fa8c 	uxth.w	sl, ip
 80170ca:	fb0a fe0e 	mul.w	lr, sl, lr
 80170ce:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80170d2:	fa1f fa8a 	uxth.w	sl, sl
 80170d6:	eba5 050e 	sub.w	r5, r5, lr
 80170da:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80170de:	940e      	str	r4, [sp, #56]	@ 0x38
 80170e0:	eba3 030a 	sub.w	r3, r3, sl
 80170e4:	b2ad      	uxth	r5, r5
 80170e6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80170e8:	b29b      	uxth	r3, r3
 80170ea:	fb08 f505 	mul.w	r5, r8, r5
 80170ee:	fb09 5303 	mla	r3, r9, r3, r5
 80170f2:	fb0a 3304 	mla	r3, sl, r4, r3
 80170f6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80170f8:	fb0e 3304 	mla	r3, lr, r4, r3
 80170fc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017100:	2b00      	cmp	r3, #0
 8017102:	f000 810f 	beq.w	8017324 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8017106:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8017108:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801710c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8017110:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8017114:	f000 8190 	beq.w	8017438 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8017118:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801711c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017120:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8017124:	fb09 f000 	mul.w	r0, r9, r0
 8017128:	fb0a fe0e 	mul.w	lr, sl, lr
 801712c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8017130:	f100 0b20 	add.w	fp, r0, #32
 8017134:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8017138:	44ce      	add	lr, r9
 801713a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801713e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017142:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017146:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801714a:	ea4e 0909 	orr.w	r9, lr, r9
 801714e:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8017152:	8868      	ldrh	r0, [r5, #2]
 8017154:	d019      	beq.n	801718a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8017156:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801715a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801715e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8017162:	fb08 f800 	mul.w	r8, r8, r0
 8017166:	fb0a fe0e 	mul.w	lr, sl, lr
 801716a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801716e:	f108 0b20 	add.w	fp, r8, #32
 8017172:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8017176:	4486      	add	lr, r0
 8017178:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801717c:	0a00      	lsrs	r0, r0, #8
 801717e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017182:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8017186:	ea4e 0000 	orr.w	r0, lr, r0
 801718a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801718e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8017192:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8017196:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801719a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801719e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80171a2:	ea4e 0909 	orr.w	r9, lr, r9
 80171a6:	ea4a 0000 	orr.w	r0, sl, r0
 80171aa:	f1bc 0f00 	cmp.w	ip, #0
 80171ae:	f000 8145 	beq.w	801743c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80171b2:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 80171b6:	3a01      	subs	r2, #1
 80171b8:	0052      	lsls	r2, r2, #1
 80171ba:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80171bc:	3202      	adds	r2, #2
 80171be:	2cff      	cmp	r4, #255	@ 0xff
 80171c0:	eb05 0e02 	add.w	lr, r5, r2
 80171c4:	5aaa      	ldrh	r2, [r5, r2]
 80171c6:	d018      	beq.n	80171fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80171c8:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 80171cc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80171d0:	fb04 fa02 	mul.w	sl, r4, r2
 80171d4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80171d8:	fb08 f805 	mul.w	r8, r8, r5
 80171dc:	f10a 0520 	add.w	r5, sl, #32
 80171e0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80171e4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80171e8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80171ec:	4442      	add	r2, r8
 80171ee:	0a2d      	lsrs	r5, r5, #8
 80171f0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80171f4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80171f8:	432a      	orrs	r2, r5
 80171fa:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80171fc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8017200:	2cff      	cmp	r4, #255	@ 0xff
 8017202:	d01a      	beq.n	801723a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8017204:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8017208:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801720c:	fb04 fa05 	mul.w	sl, r4, r5
 8017210:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017214:	fb08 f80e 	mul.w	r8, r8, lr
 8017218:	f10a 0e20 	add.w	lr, sl, #32
 801721c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8017220:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8017224:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8017228:	4445      	add	r5, r8
 801722a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801722e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8017232:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8017236:	ea45 050e 	orr.w	r5, r5, lr
 801723a:	fb1c fe01 	smulbb	lr, ip, r1
 801723e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8017242:	f1cc 0810 	rsb	r8, ip, #16
 8017246:	eba8 0801 	sub.w	r8, r8, r1
 801724a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801724e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8017252:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8017256:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801725a:	4341      	muls	r1, r0
 801725c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8017260:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8017264:	ea4a 0202 	orr.w	r2, sl, r2
 8017268:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801726c:	fb09 1108 	mla	r1, r9, r8, r1
 8017270:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8017274:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8017278:	fb0c 1102 	mla	r1, ip, r2, r1
 801727c:	ea4b 0505 	orr.w	r5, fp, r5
 8017280:	fb0e 1e05 	mla	lr, lr, r5, r1
 8017284:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8017288:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801728c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017290:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8017294:	ea42 0e0e 	orr.w	lr, r2, lr
 8017298:	fa1f f28e 	uxth.w	r2, lr
 801729c:	2bff      	cmp	r3, #255	@ 0xff
 801729e:	d103      	bne.n	80172a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80172a0:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80172a2:	29ff      	cmp	r1, #255	@ 0xff
 80172a4:	f000 80de 	beq.w	8017464 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80172a8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80172aa:	8838      	ldrh	r0, [r7, #0]
 80172ac:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80172ae:	434b      	muls	r3, r1
 80172b0:	f103 0c01 	add.w	ip, r3, #1
 80172b4:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80172b8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80172bc:	fa5f fc83 	uxtb.w	ip, r3
 80172c0:	1203      	asrs	r3, r0, #8
 80172c2:	1215      	asrs	r5, r2, #8
 80172c4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80172c8:	fb13 f30c 	smulbb	r3, r3, ip
 80172cc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80172d0:	fb05 3501 	mla	r5, r5, r1, r3
 80172d4:	10c3      	asrs	r3, r0, #3
 80172d6:	10d1      	asrs	r1, r2, #3
 80172d8:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80172dc:	fb13 f30c 	smulbb	r3, r3, ip
 80172e0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80172e4:	fb01 3104 	mla	r1, r1, r4, r3
 80172e8:	00c3      	lsls	r3, r0, #3
 80172ea:	00d2      	lsls	r2, r2, #3
 80172ec:	b2db      	uxtb	r3, r3
 80172ee:	b2d2      	uxtb	r2, r2
 80172f0:	fb13 f30c 	smulbb	r3, r3, ip
 80172f4:	b2ad      	uxth	r5, r5
 80172f6:	fb02 3304 	mla	r3, r2, r4, r3
 80172fa:	b29a      	uxth	r2, r3
 80172fc:	1c6b      	adds	r3, r5, #1
 80172fe:	b289      	uxth	r1, r1
 8017300:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017304:	1c53      	adds	r3, r2, #1
 8017306:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801730a:	1c4a      	adds	r2, r1, #1
 801730c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017310:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8017314:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017318:	0949      	lsrs	r1, r1, #5
 801731a:	432b      	orrs	r3, r5
 801731c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8017320:	430b      	orrs	r3, r1
 8017322:	803b      	strh	r3, [r7, #0]
 8017324:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8017326:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8017328:	4413      	add	r3, r2
 801732a:	9321      	str	r3, [sp, #132]	@ 0x84
 801732c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801732e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8017330:	441a      	add	r2, r3
 8017332:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8017334:	9222      	str	r2, [sp, #136]	@ 0x88
 8017336:	3b01      	subs	r3, #1
 8017338:	3702      	adds	r7, #2
 801733a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801733c:	e689      	b.n	8017052 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801733e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8017340:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 8017342:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 8017344:	4433      	add	r3, r6
 8017346:	9321      	str	r3, [sp, #132]	@ 0x84
 8017348:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801734a:	441c      	add	r4, r3
 801734c:	9b08      	ldr	r3, [sp, #32]
 801734e:	9422      	str	r4, [sp, #136]	@ 0x88
 8017350:	3b01      	subs	r3, #1
 8017352:	9308      	str	r3, [sp, #32]
 8017354:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017356:	3302      	adds	r3, #2
 8017358:	9309      	str	r3, [sp, #36]	@ 0x24
 801735a:	e658      	b.n	801700e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801735c:	d028      	beq.n	80173b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801735e:	9b08      	ldr	r3, [sp, #32]
 8017360:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8017362:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 8017364:	3b01      	subs	r3, #1
 8017366:	fb00 5003 	mla	r0, r0, r3, r5
 801736a:	1400      	asrs	r0, r0, #16
 801736c:	f53f ae6c 	bmi.w	8017048 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017370:	3901      	subs	r1, #1
 8017372:	4288      	cmp	r0, r1
 8017374:	f6bf ae68 	bge.w	8017048 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017378:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801737a:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801737c:	fb01 0303 	mla	r3, r1, r3, r0
 8017380:	141b      	asrs	r3, r3, #16
 8017382:	f53f ae61 	bmi.w	8017048 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017386:	3a01      	subs	r2, #1
 8017388:	4293      	cmp	r3, r2
 801738a:	f6bf ae5d 	bge.w	8017048 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801738e:	9b08      	ldr	r3, [sp, #32]
 8017390:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8017394:	9313      	str	r3, [sp, #76]	@ 0x4c
 8017396:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801739a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801739c:	2b00      	cmp	r3, #0
 801739e:	f300 8082 	bgt.w	80174a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80173a2:	9b08      	ldr	r3, [sp, #32]
 80173a4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80173a8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80173aa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80173ae:	9309      	str	r3, [sp, #36]	@ 0x24
 80173b0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80173b2:	2b00      	cmp	r3, #0
 80173b4:	f340 81ef 	ble.w	8017796 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80173b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80173bc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80173c0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80173c4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80173c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80173ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 80173ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80173d2:	eef0 6a62 	vmov.f32	s13, s5
 80173d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80173da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80173de:	ee77 2a62 	vsub.f32	s5, s14, s5
 80173e2:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 80173e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80173ea:	eef0 6a43 	vmov.f32	s13, s6
 80173ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80173f2:	ee12 2a90 	vmov	r2, s5
 80173f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80173fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80173fe:	ee13 2a10 	vmov	r2, s6
 8017402:	9323      	str	r3, [sp, #140]	@ 0x8c
 8017404:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8017406:	fb92 f3f3 	sdiv	r3, r2, r3
 801740a:	9324      	str	r3, [sp, #144]	@ 0x90
 801740c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801740e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017410:	3b01      	subs	r3, #1
 8017412:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017416:	9311      	str	r3, [sp, #68]	@ 0x44
 8017418:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801741a:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801741e:	bf08      	it	eq
 8017420:	4613      	moveq	r3, r2
 8017422:	9308      	str	r3, [sp, #32]
 8017424:	eeb0 3a67 	vmov.f32	s6, s15
 8017428:	eef0 2a47 	vmov.f32	s5, s14
 801742c:	e5e1      	b.n	8016ff2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801742e:	fb08 f505 	mul.w	r5, r8, r5
 8017432:	fb09 5303 	mla	r3, r9, r3, r5
 8017436:	e661      	b.n	80170fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8017438:	4681      	mov	r9, r0
 801743a:	e688      	b.n	801714e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801743c:	f1c1 0210 	rsb	r2, r1, #16
 8017440:	4341      	muls	r1, r0
 8017442:	fb09 1902 	mla	r9, r9, r2, r1
 8017446:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801744a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801744e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017452:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017456:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801745a:	ea42 0909 	orr.w	r9, r2, r9
 801745e:	fa1f f289 	uxth.w	r2, r9
 8017462:	e71b      	b.n	801729c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8017464:	803a      	strh	r2, [r7, #0]
 8017466:	e75d      	b.n	8017324 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8017468:	f115 0e01 	adds.w	lr, r5, #1
 801746c:	f53f af5a 	bmi.w	8017324 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8017470:	4572      	cmp	r2, lr
 8017472:	f6ff af57 	blt.w	8017324 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8017476:	f110 0e01 	adds.w	lr, r0, #1
 801747a:	f53f af53 	bmi.w	8017324 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801747e:	4573      	cmp	r3, lr
 8017480:	f6ff af50 	blt.w	8017324 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8017484:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8017486:	9502      	str	r5, [sp, #8]
 8017488:	b21b      	sxth	r3, r3
 801748a:	b212      	sxth	r2, r2
 801748c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8017490:	9301      	str	r3, [sp, #4]
 8017492:	9200      	str	r2, [sp, #0]
 8017494:	e9cd c405 	strd	ip, r4, [sp, #20]
 8017498:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801749c:	4639      	mov	r1, r7
 801749e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80174a0:	f7ff fc04 	bl	8016cac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80174a4:	e73e      	b.n	8017324 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80174a6:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80174a8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80174ac:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80174ae:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80174b2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80174b4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80174b8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80174ba:	141f      	asrs	r7, r3, #16
 80174bc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80174be:	141b      	asrs	r3, r3, #16
 80174c0:	fb01 3707 	mla	r7, r1, r7, r3
 80174c4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80174c6:	fa1f fc82 	uxth.w	ip, r2
 80174ca:	eb03 0a07 	add.w	sl, r3, r7
 80174ce:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80174d2:	f813 9007 	ldrb.w	r9, [r3, r7]
 80174d6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80174da:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 80174de:	b29b      	uxth	r3, r3
 80174e0:	2d00      	cmp	r5, #0
 80174e2:	f000 813d 	beq.w	8017760 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 80174e6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80174ea:	940f      	str	r4, [sp, #60]	@ 0x3c
 80174ec:	eb0a 0b01 	add.w	fp, sl, r1
 80174f0:	fa1f fa85 	uxth.w	sl, r5
 80174f4:	fb0a fc0c 	mul.w	ip, sl, ip
 80174f8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80174fc:	fa1f fa8a 	uxth.w	sl, sl
 8017500:	eba0 000c 	sub.w	r0, r0, ip
 8017504:	eba3 030a 	sub.w	r3, r3, sl
 8017508:	b280      	uxth	r0, r0
 801750a:	fb08 f000 	mul.w	r0, r8, r0
 801750e:	b29b      	uxth	r3, r3
 8017510:	fb09 0303 	mla	r3, r9, r3, r0
 8017514:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8017516:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801751a:	9410      	str	r4, [sp, #64]	@ 0x40
 801751c:	fb0a 3300 	mla	r3, sl, r0, r3
 8017520:	fb0c 3304 	mla	r3, ip, r4, r3
 8017524:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017528:	2b00      	cmp	r3, #0
 801752a:	f000 810b 	beq.w	8017744 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801752e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8017530:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8017532:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8017536:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801753a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801753e:	f000 8114 	beq.w	801776a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8017542:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8017546:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801754a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801754e:	fb09 f707 	mul.w	r7, r9, r7
 8017552:	fb0a fc0c 	mul.w	ip, sl, ip
 8017556:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801755a:	f107 0b20 	add.w	fp, r7, #32
 801755e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8017562:	44cc      	add	ip, r9
 8017564:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8017568:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801756c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017570:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8017574:	ea4c 0909 	orr.w	r9, ip, r9
 8017578:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801757c:	8847      	ldrh	r7, [r0, #2]
 801757e:	d019      	beq.n	80175b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8017580:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8017584:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017588:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801758c:	fb08 f807 	mul.w	r8, r8, r7
 8017590:	fb0a fc0c 	mul.w	ip, sl, ip
 8017594:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8017598:	f108 0b20 	add.w	fp, r8, #32
 801759c:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 80175a0:	44bc      	add	ip, r7
 80175a2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80175a6:	0a3f      	lsrs	r7, r7, #8
 80175a8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80175ac:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80175b0:	ea4c 0707 	orr.w	r7, ip, r7
 80175b4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80175b8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80175bc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80175c0:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80175c4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80175c8:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 80175cc:	ea4c 0909 	orr.w	r9, ip, r9
 80175d0:	ea4a 0707 	orr.w	r7, sl, r7
 80175d4:	2d00      	cmp	r5, #0
 80175d6:	f000 80ca 	beq.w	801776e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 80175da:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 80175de:	3901      	subs	r1, #1
 80175e0:	0049      	lsls	r1, r1, #1
 80175e2:	3102      	adds	r1, #2
 80175e4:	eb00 0c01 	add.w	ip, r0, r1
 80175e8:	5a41      	ldrh	r1, [r0, r1]
 80175ea:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80175ec:	28ff      	cmp	r0, #255	@ 0xff
 80175ee:	d019      	beq.n	8017624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 80175f0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80175f2:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 80175f6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80175fa:	fb04 fa01 	mul.w	sl, r4, r1
 80175fe:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017602:	fb08 f800 	mul.w	r8, r8, r0
 8017606:	f10a 0020 	add.w	r0, sl, #32
 801760a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801760e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8017612:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8017616:	4441      	add	r1, r8
 8017618:	0a00      	lsrs	r0, r0, #8
 801761a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801761e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8017622:	4301      	orrs	r1, r0
 8017624:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8017626:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801762a:	2cff      	cmp	r4, #255	@ 0xff
 801762c:	d01a      	beq.n	8017664 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801762e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 8017632:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8017636:	fb04 fa00 	mul.w	sl, r4, r0
 801763a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801763e:	fb08 f80c 	mul.w	r8, r8, ip
 8017642:	f10a 0c20 	add.w	ip, sl, #32
 8017646:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801764a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801764e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8017652:	4440      	add	r0, r8
 8017654:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017658:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801765c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8017660:	ea40 000c 	orr.w	r0, r0, ip
 8017664:	fb15 fc02 	smulbb	ip, r5, r2
 8017668:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801766c:	f1c5 0810 	rsb	r8, r5, #16
 8017670:	eba8 0802 	sub.w	r8, r8, r2
 8017674:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017678:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801767c:	437a      	muls	r2, r7
 801767e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8017682:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8017686:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801768a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801768e:	fb09 2208 	mla	r2, r9, r8, r2
 8017692:	ea4a 0101 	orr.w	r1, sl, r1
 8017696:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801769a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801769e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80176a2:	fb05 2201 	mla	r2, r5, r1, r2
 80176a6:	ea4b 0000 	orr.w	r0, fp, r0
 80176aa:	fb0c 2200 	mla	r2, ip, r0, r2
 80176ae:	0d57      	lsrs	r7, r2, #21
 80176b0:	0952      	lsrs	r2, r2, #5
 80176b2:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80176b6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80176ba:	433a      	orrs	r2, r7
 80176bc:	2bff      	cmp	r3, #255	@ 0xff
 80176be:	b292      	uxth	r2, r2
 80176c0:	d102      	bne.n	80176c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80176c2:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80176c4:	29ff      	cmp	r1, #255	@ 0xff
 80176c6:	d063      	beq.n	8017790 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 80176c8:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80176ca:	f8be 1000 	ldrh.w	r1, [lr]
 80176ce:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80176d0:	4343      	muls	r3, r0
 80176d2:	1c58      	adds	r0, r3, #1
 80176d4:	eb00 2323 	add.w	r3, r0, r3, asr #8
 80176d8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80176dc:	1208      	asrs	r0, r1, #8
 80176de:	b2db      	uxtb	r3, r3
 80176e0:	1215      	asrs	r5, r2, #8
 80176e2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80176e6:	fb10 f003 	smulbb	r0, r0, r3
 80176ea:	10cf      	asrs	r7, r1, #3
 80176ec:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80176f0:	00c9      	lsls	r1, r1, #3
 80176f2:	fb05 0504 	mla	r5, r5, r4, r0
 80176f6:	b2c9      	uxtb	r1, r1
 80176f8:	10d0      	asrs	r0, r2, #3
 80176fa:	00d2      	lsls	r2, r2, #3
 80176fc:	fb11 f103 	smulbb	r1, r1, r3
 8017700:	b2d2      	uxtb	r2, r2
 8017702:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8017706:	fb02 1204 	mla	r2, r2, r4, r1
 801770a:	fb17 f703 	smulbb	r7, r7, r3
 801770e:	b2ad      	uxth	r5, r5
 8017710:	b292      	uxth	r2, r2
 8017712:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8017716:	fb00 7004 	mla	r0, r0, r4, r7
 801771a:	1c6b      	adds	r3, r5, #1
 801771c:	1c57      	adds	r7, r2, #1
 801771e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017722:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017726:	b280      	uxth	r0, r0
 8017728:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801772c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8017730:	433d      	orrs	r5, r7
 8017732:	1c47      	adds	r7, r0, #1
 8017734:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8017738:	097f      	lsrs	r7, r7, #5
 801773a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801773e:	433d      	orrs	r5, r7
 8017740:	f8ae 5000 	strh.w	r5, [lr]
 8017744:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8017746:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8017748:	4413      	add	r3, r2
 801774a:	9321      	str	r3, [sp, #132]	@ 0x84
 801774c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801774e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8017750:	441a      	add	r2, r3
 8017752:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8017754:	9222      	str	r2, [sp, #136]	@ 0x88
 8017756:	3b01      	subs	r3, #1
 8017758:	f10e 0e02 	add.w	lr, lr, #2
 801775c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801775e:	e61c      	b.n	801739a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8017760:	fb08 f000 	mul.w	r0, r8, r0
 8017764:	fb09 0303 	mla	r3, r9, r3, r0
 8017768:	e6dc      	b.n	8017524 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801776a:	46b9      	mov	r9, r7
 801776c:	e704      	b.n	8017578 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801776e:	f1c2 0110 	rsb	r1, r2, #16
 8017772:	437a      	muls	r2, r7
 8017774:	fb09 2901 	mla	r9, r9, r1, r2
 8017778:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801777c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8017780:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8017784:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8017788:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801778c:	4302      	orrs	r2, r0
 801778e:	e795      	b.n	80176bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8017790:	f8ae 2000 	strh.w	r2, [lr]
 8017794:	e7d6      	b.n	8017744 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8017796:	b017      	add	sp, #92	@ 0x5c
 8017798:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801779c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801779c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80177a0:	b085      	sub	sp, #20
 80177a2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 80177a6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 80177aa:	9103      	str	r1, [sp, #12]
 80177ac:	fb00 7406 	mla	r4, r0, r6, r7
 80177b0:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 80177b4:	2800      	cmp	r0, #0
 80177b6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 80177ba:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 80177be:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 80177c2:	9501      	str	r5, [sp, #4]
 80177c4:	eb02 0904 	add.w	r9, r2, r4
 80177c8:	f2c0 8141 	blt.w	8017a4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 80177cc:	4583      	cmp	fp, r0
 80177ce:	f340 813e 	ble.w	8017a4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 80177d2:	2f00      	cmp	r7, #0
 80177d4:	f2c0 8137 	blt.w	8017a46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 80177d8:	42be      	cmp	r6, r7
 80177da:	f340 8134 	ble.w	8017a46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 80177de:	f812 c004 	ldrb.w	ip, [r2, r4]
 80177e2:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 80177e6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80177ea:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 80177ee:	4355      	muls	r5, r2
 80177f0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80177f4:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 80177f8:	fb0c f203 	mul.w	r2, ip, r3
 80177fc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8017800:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8017804:	441d      	add	r5, r3
 8017806:	f102 0320 	add.w	r3, r2, #32
 801780a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801780e:	0a1b      	lsrs	r3, r3, #8
 8017810:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8017814:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017818:	431c      	orrs	r4, r3
 801781a:	1c7b      	adds	r3, r7, #1
 801781c:	f100 811c 	bmi.w	8017a58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8017820:	429e      	cmp	r6, r3
 8017822:	f340 8119 	ble.w	8017a58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8017826:	2900      	cmp	r1, #0
 8017828:	f000 8119 	beq.w	8017a5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801782c:	9a01      	ldr	r2, [sp, #4]
 801782e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8017832:	8855      	ldrh	r5, [r2, #2]
 8017834:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8017838:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801783c:	fb08 f802 	mul.w	r8, r8, r2
 8017840:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017844:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8017848:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801784c:	435d      	muls	r5, r3
 801784e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8017852:	44d0      	add	r8, sl
 8017854:	f105 0a20 	add.w	sl, r5, #32
 8017858:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801785c:	0a2d      	lsrs	r5, r5, #8
 801785e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8017862:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017866:	432a      	orrs	r2, r5
 8017868:	3001      	adds	r0, #1
 801786a:	f100 80fe 	bmi.w	8017a6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801786e:	4583      	cmp	fp, r0
 8017870:	f340 80fb 	ble.w	8017a6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8017874:	f1be 0f00 	cmp.w	lr, #0
 8017878:	f000 80fc 	beq.w	8017a74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801787c:	2f00      	cmp	r7, #0
 801787e:	f2c0 80f1 	blt.w	8017a64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8017882:	42be      	cmp	r6, r7
 8017884:	f340 80ee 	ble.w	8017a64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8017888:	9801      	ldr	r0, [sp, #4]
 801788a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801788e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8017892:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8017896:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801789a:	fb0a fa00 	mul.w	sl, sl, r0
 801789e:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 80178a2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80178a6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80178aa:	fb05 f808 	mul.w	r8, r5, r8
 80178ae:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 80178b2:	4482      	add	sl, r0
 80178b4:	f108 0020 	add.w	r0, r8, #32
 80178b8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80178bc:	0a00      	lsrs	r0, r0, #8
 80178be:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80178c2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80178c6:	ea4b 0b00 	orr.w	fp, fp, r0
 80178ca:	3701      	adds	r7, #1
 80178cc:	f100 80d7 	bmi.w	8017a7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 80178d0:	42be      	cmp	r6, r7
 80178d2:	f340 80d4 	ble.w	8017a7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 80178d6:	2900      	cmp	r1, #0
 80178d8:	f000 80d4 	beq.w	8017a84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 80178dc:	3601      	adds	r6, #1
 80178de:	9801      	ldr	r0, [sp, #4]
 80178e0:	f819 7006 	ldrb.w	r7, [r9, r6]
 80178e4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80178e8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80178ec:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 80178f0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80178f4:	fb09 f906 	mul.w	r9, r9, r6
 80178f8:	fb07 f800 	mul.w	r8, r7, r0
 80178fc:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8017900:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8017904:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8017908:	44d1      	add	r9, sl
 801790a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801790e:	f108 0020 	add.w	r0, r8, #32
 8017912:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8017916:	0a00      	lsrs	r0, r0, #8
 8017918:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801791c:	4330      	orrs	r0, r6
 801791e:	b28e      	uxth	r6, r1
 8017920:	fa1f f98e 	uxth.w	r9, lr
 8017924:	fb06 f809 	mul.w	r8, r6, r9
 8017928:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801792c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8017930:	0136      	lsls	r6, r6, #4
 8017932:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8017936:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801793a:	9601      	str	r6, [sp, #4]
 801793c:	ea4a 0404 	orr.w	r4, sl, r4
 8017940:	fa1f f689 	uxth.w	r6, r9
 8017944:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8017948:	fb11 f90e 	smulbb	r9, r1, lr
 801794c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8017950:	9602      	str	r6, [sp, #8]
 8017952:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8017956:	4626      	mov	r6, r4
 8017958:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801795c:	f1ce 0410 	rsb	r4, lr, #16
 8017960:	1a64      	subs	r4, r4, r1
 8017962:	ea4a 0202 	orr.w	r2, sl, r2
 8017966:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801796a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801796e:	434a      	muls	r2, r1
 8017970:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8017974:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8017978:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801797c:	fb04 2406 	mla	r4, r4, r6, r2
 8017980:	ea4a 0000 	orr.w	r0, sl, r0
 8017984:	fb09 4200 	mla	r2, r9, r0, r4
 8017988:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801798c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8017990:	9801      	ldr	r0, [sp, #4]
 8017992:	9903      	ldr	r1, [sp, #12]
 8017994:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8017998:	ea44 0b0b 	orr.w	fp, r4, fp
 801799c:	9c02      	ldr	r4, [sp, #8]
 801799e:	8809      	ldrh	r1, [r1, #0]
 80179a0:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 80179a4:	1b00      	subs	r0, r0, r4
 80179a6:	9c01      	ldr	r4, [sp, #4]
 80179a8:	eba4 0608 	sub.w	r6, r4, r8
 80179ac:	b2b6      	uxth	r6, r6
 80179ae:	b280      	uxth	r0, r0
 80179b0:	4373      	muls	r3, r6
 80179b2:	fb0c 3300 	mla	r3, ip, r0, r3
 80179b6:	9802      	ldr	r0, [sp, #8]
 80179b8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80179bc:	fb00 3505 	mla	r5, r0, r5, r3
 80179c0:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80179c4:	fb08 5707 	mla	r7, r8, r7, r5
 80179c8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80179cc:	120b      	asrs	r3, r1, #8
 80179ce:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80179d2:	ea6f 2727 	mvn.w	r7, r7, asr #8
 80179d6:	b2ff      	uxtb	r7, r7
 80179d8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80179dc:	10c8      	asrs	r0, r1, #3
 80179de:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80179e2:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80179e6:	00c9      	lsls	r1, r1, #3
 80179e8:	437b      	muls	r3, r7
 80179ea:	ea42 0e0e 	orr.w	lr, r2, lr
 80179ee:	b2c9      	uxtb	r1, r1
 80179f0:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80179f4:	fa1f f28e 	uxth.w	r2, lr
 80179f8:	4378      	muls	r0, r7
 80179fa:	434f      	muls	r7, r1
 80179fc:	1c59      	adds	r1, r3, #1
 80179fe:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8017a02:	1213      	asrs	r3, r2, #8
 8017a04:	f023 0307 	bic.w	r3, r3, #7
 8017a08:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8017a0c:	1c41      	adds	r1, r0, #1
 8017a0e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8017a12:	10d1      	asrs	r1, r2, #3
 8017a14:	f021 0103 	bic.w	r1, r1, #3
 8017a18:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8017a1c:	021b      	lsls	r3, r3, #8
 8017a1e:	00c9      	lsls	r1, r1, #3
 8017a20:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8017a24:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8017a28:	430b      	orrs	r3, r1
 8017a2a:	1c79      	adds	r1, r7, #1
 8017a2c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8017a30:	00d2      	lsls	r2, r2, #3
 8017a32:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8017a36:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017a3a:	431a      	orrs	r2, r3
 8017a3c:	9b03      	ldr	r3, [sp, #12]
 8017a3e:	801a      	strh	r2, [r3, #0]
 8017a40:	b005      	add	sp, #20
 8017a42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017a46:	f04f 0c00 	mov.w	ip, #0
 8017a4a:	4664      	mov	r4, ip
 8017a4c:	e6e5      	b.n	801781a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8017a4e:	2300      	movs	r3, #0
 8017a50:	469c      	mov	ip, r3
 8017a52:	461a      	mov	r2, r3
 8017a54:	461c      	mov	r4, r3
 8017a56:	e707      	b.n	8017868 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8017a58:	2300      	movs	r3, #0
 8017a5a:	461a      	mov	r2, r3
 8017a5c:	e704      	b.n	8017868 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8017a5e:	460b      	mov	r3, r1
 8017a60:	460a      	mov	r2, r1
 8017a62:	e701      	b.n	8017868 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8017a64:	2500      	movs	r5, #0
 8017a66:	46ab      	mov	fp, r5
 8017a68:	e72f      	b.n	80178ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8017a6a:	2700      	movs	r7, #0
 8017a6c:	463d      	mov	r5, r7
 8017a6e:	4638      	mov	r0, r7
 8017a70:	46bb      	mov	fp, r7
 8017a72:	e754      	b.n	801791e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8017a74:	4677      	mov	r7, lr
 8017a76:	4675      	mov	r5, lr
 8017a78:	4670      	mov	r0, lr
 8017a7a:	46f3      	mov	fp, lr
 8017a7c:	e74f      	b.n	801791e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8017a7e:	2700      	movs	r7, #0
 8017a80:	4638      	mov	r0, r7
 8017a82:	e74c      	b.n	801791e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8017a84:	460f      	mov	r7, r1
 8017a86:	4608      	mov	r0, r1
 8017a88:	e749      	b.n	801791e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08017a8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017a8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a90:	b093      	sub	sp, #76	@ 0x4c
 8017a92:	9210      	str	r2, [sp, #64]	@ 0x40
 8017a94:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8017a96:	910e      	str	r1, [sp, #56]	@ 0x38
 8017a98:	9306      	str	r3, [sp, #24]
 8017a9a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8017a9e:	9011      	str	r0, [sp, #68]	@ 0x44
 8017aa0:	6850      	ldr	r0, [r2, #4]
 8017aa2:	6812      	ldr	r2, [r2, #0]
 8017aa4:	fb00 1303 	mla	r3, r0, r3, r1
 8017aa8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017aac:	9307      	str	r3, [sp, #28]
 8017aae:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8017ab0:	681b      	ldr	r3, [r3, #0]
 8017ab2:	9308      	str	r3, [sp, #32]
 8017ab4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8017ab6:	685b      	ldr	r3, [r3, #4]
 8017ab8:	9309      	str	r3, [sp, #36]	@ 0x24
 8017aba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017abc:	2b00      	cmp	r3, #0
 8017abe:	dc03      	bgt.n	8017ac8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8017ac0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017ac2:	2b00      	cmp	r3, #0
 8017ac4:	f340 83b4 	ble.w	8018230 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8017ac8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8017aca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017ace:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017ad2:	1e48      	subs	r0, r1, #1
 8017ad4:	1e55      	subs	r5, r2, #1
 8017ad6:	9b06      	ldr	r3, [sp, #24]
 8017ad8:	2b00      	cmp	r3, #0
 8017ada:	f340 8163 	ble.w	8017da4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8017ade:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 8017ae0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8017ae2:	1436      	asrs	r6, r6, #16
 8017ae4:	ea4f 4323 	mov.w	r3, r3, asr #16
 8017ae8:	d406      	bmi.n	8017af8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8017aea:	4286      	cmp	r6, r0
 8017aec:	da04      	bge.n	8017af8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8017aee:	2b00      	cmp	r3, #0
 8017af0:	db02      	blt.n	8017af8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8017af2:	42ab      	cmp	r3, r5
 8017af4:	f2c0 8157 	blt.w	8017da6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8017af8:	3601      	adds	r6, #1
 8017afa:	f100 8144 	bmi.w	8017d86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8017afe:	42b1      	cmp	r1, r6
 8017b00:	f2c0 8141 	blt.w	8017d86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8017b04:	3301      	adds	r3, #1
 8017b06:	f100 813e 	bmi.w	8017d86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8017b0a:	429a      	cmp	r2, r3
 8017b0c:	f2c0 813b 	blt.w	8017d86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8017b10:	9b06      	ldr	r3, [sp, #24]
 8017b12:	9f07      	ldr	r7, [sp, #28]
 8017b14:	930f      	str	r3, [sp, #60]	@ 0x3c
 8017b16:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8017b1a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8017b1c:	2b00      	cmp	r3, #0
 8017b1e:	f340 8164 	ble.w	8017dea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8017b22:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8017b24:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8017b26:	1418      	asrs	r0, r3, #16
 8017b28:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8017b2a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8017b2e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8017b30:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8017b34:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8017b36:	142d      	asrs	r5, r5, #16
 8017b38:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8017b3c:	f100 81ee 	bmi.w	8017f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8017b40:	f102 3eff 	add.w	lr, r2, #4294967295
 8017b44:	4575      	cmp	r5, lr
 8017b46:	f280 81e9 	bge.w	8017f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8017b4a:	2800      	cmp	r0, #0
 8017b4c:	f2c0 81e6 	blt.w	8017f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8017b50:	f103 3eff 	add.w	lr, r3, #4294967295
 8017b54:	4570      	cmp	r0, lr
 8017b56:	f280 81e1 	bge.w	8017f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8017b5a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017b5c:	b212      	sxth	r2, r2
 8017b5e:	fb00 5002 	mla	r0, r0, r2, r5
 8017b62:	fa1f fe81 	uxth.w	lr, r1
 8017b66:	eb03 0a00 	add.w	sl, r3, r0
 8017b6a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8017b6e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8017b72:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017b76:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 8017b7a:	b29b      	uxth	r3, r3
 8017b7c:	f1bc 0f00 	cmp.w	ip, #0
 8017b80:	f000 8179 	beq.w	8017e76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8017b84:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8017b88:	940a      	str	r4, [sp, #40]	@ 0x28
 8017b8a:	eb0a 0b02 	add.w	fp, sl, r2
 8017b8e:	fa1f fa8c 	uxth.w	sl, ip
 8017b92:	fb0a fe0e 	mul.w	lr, sl, lr
 8017b96:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8017b9a:	fa1f fa8a 	uxth.w	sl, sl
 8017b9e:	eba5 050e 	sub.w	r5, r5, lr
 8017ba2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017ba6:	940b      	str	r4, [sp, #44]	@ 0x2c
 8017ba8:	eba3 030a 	sub.w	r3, r3, sl
 8017bac:	b2ad      	uxth	r5, r5
 8017bae:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8017bb0:	b29b      	uxth	r3, r3
 8017bb2:	fb08 f505 	mul.w	r5, r8, r5
 8017bb6:	fb09 5303 	mla	r3, r9, r3, r5
 8017bba:	fb0a 3304 	mla	r3, sl, r4, r3
 8017bbe:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8017bc0:	fb0e 3304 	mla	r3, lr, r4, r3
 8017bc4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017bc8:	2b00      	cmp	r3, #0
 8017bca:	f000 80cf 	beq.w	8017d6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8017bce:	9c08      	ldr	r4, [sp, #32]
 8017bd0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8017bd4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8017bd8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8017bdc:	f000 8150 	beq.w	8017e80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8017be0:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8017be4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017be8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8017bec:	fb09 f000 	mul.w	r0, r9, r0
 8017bf0:	fb0a fe0e 	mul.w	lr, sl, lr
 8017bf4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8017bf8:	f100 0b20 	add.w	fp, r0, #32
 8017bfc:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8017c00:	44ce      	add	lr, r9
 8017c02:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8017c06:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017c0a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017c0e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8017c12:	ea4e 0909 	orr.w	r9, lr, r9
 8017c16:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8017c1a:	8868      	ldrh	r0, [r5, #2]
 8017c1c:	d019      	beq.n	8017c52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8017c1e:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8017c22:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017c26:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8017c2a:	fb08 f800 	mul.w	r8, r8, r0
 8017c2e:	fb0a fe0e 	mul.w	lr, sl, lr
 8017c32:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8017c36:	f108 0b20 	add.w	fp, r8, #32
 8017c3a:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8017c3e:	4486      	add	lr, r0
 8017c40:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8017c44:	0a00      	lsrs	r0, r0, #8
 8017c46:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017c4a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8017c4e:	ea4e 0000 	orr.w	r0, lr, r0
 8017c52:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8017c56:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8017c5a:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8017c5e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8017c62:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8017c66:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8017c6a:	ea4e 0909 	orr.w	r9, lr, r9
 8017c6e:	ea4a 0000 	orr.w	r0, sl, r0
 8017c72:	f1bc 0f00 	cmp.w	ip, #0
 8017c76:	f000 8105 	beq.w	8017e84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8017c7a:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 8017c7e:	3a01      	subs	r2, #1
 8017c80:	0052      	lsls	r2, r2, #1
 8017c82:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8017c84:	3202      	adds	r2, #2
 8017c86:	2cff      	cmp	r4, #255	@ 0xff
 8017c88:	eb05 0e02 	add.w	lr, r5, r2
 8017c8c:	5aaa      	ldrh	r2, [r5, r2]
 8017c8e:	d018      	beq.n	8017cc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8017c90:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8017c94:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017c98:	fb04 fa02 	mul.w	sl, r4, r2
 8017c9c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017ca0:	fb08 f805 	mul.w	r8, r8, r5
 8017ca4:	f10a 0520 	add.w	r5, sl, #32
 8017ca8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8017cac:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8017cb0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8017cb4:	4442      	add	r2, r8
 8017cb6:	0a2d      	lsrs	r5, r5, #8
 8017cb8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8017cbc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017cc0:	432a      	orrs	r2, r5
 8017cc2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8017cc4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8017cc8:	2cff      	cmp	r4, #255	@ 0xff
 8017cca:	d01a      	beq.n	8017d02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8017ccc:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8017cd0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017cd4:	fb04 fa05 	mul.w	sl, r4, r5
 8017cd8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017cdc:	fb08 f80e 	mul.w	r8, r8, lr
 8017ce0:	f10a 0e20 	add.w	lr, sl, #32
 8017ce4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8017ce8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8017cec:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8017cf0:	4445      	add	r5, r8
 8017cf2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017cf6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8017cfa:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8017cfe:	ea45 050e 	orr.w	r5, r5, lr
 8017d02:	fb1c fe01 	smulbb	lr, ip, r1
 8017d06:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8017d0a:	f1cc 0810 	rsb	r8, ip, #16
 8017d0e:	eba8 0801 	sub.w	r8, r8, r1
 8017d12:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8017d16:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8017d1a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8017d1e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8017d22:	4341      	muls	r1, r0
 8017d24:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8017d28:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8017d2c:	ea4a 0202 	orr.w	r2, sl, r2
 8017d30:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8017d34:	fb09 1108 	mla	r1, r9, r8, r1
 8017d38:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8017d3c:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8017d40:	fb0c 1102 	mla	r1, ip, r2, r1
 8017d44:	ea4b 0505 	orr.w	r5, fp, r5
 8017d48:	fb0e 1e05 	mla	lr, lr, r5, r1
 8017d4c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8017d50:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017d54:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017d58:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8017d5c:	ea42 0e0e 	orr.w	lr, r2, lr
 8017d60:	fa1f f28e 	uxth.w	r2, lr
 8017d64:	2bff      	cmp	r3, #255	@ 0xff
 8017d66:	f040 80a1 	bne.w	8017eac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8017d6a:	803a      	strh	r2, [r7, #0]
 8017d6c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8017d6e:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8017d70:	4413      	add	r3, r2
 8017d72:	931d      	str	r3, [sp, #116]	@ 0x74
 8017d74:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8017d76:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8017d78:	441a      	add	r2, r3
 8017d7a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8017d7c:	921e      	str	r2, [sp, #120]	@ 0x78
 8017d7e:	3b01      	subs	r3, #1
 8017d80:	3702      	adds	r7, #2
 8017d82:	930f      	str	r3, [sp, #60]	@ 0x3c
 8017d84:	e6c9      	b.n	8017b1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8017d86:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8017d88:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 8017d8a:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 8017d8c:	4433      	add	r3, r6
 8017d8e:	931d      	str	r3, [sp, #116]	@ 0x74
 8017d90:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8017d92:	441c      	add	r4, r3
 8017d94:	9b06      	ldr	r3, [sp, #24]
 8017d96:	941e      	str	r4, [sp, #120]	@ 0x78
 8017d98:	3b01      	subs	r3, #1
 8017d9a:	9306      	str	r3, [sp, #24]
 8017d9c:	9b07      	ldr	r3, [sp, #28]
 8017d9e:	3302      	adds	r3, #2
 8017da0:	9307      	str	r3, [sp, #28]
 8017da2:	e698      	b.n	8017ad6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8017da4:	d028      	beq.n	8017df8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8017da6:	9b06      	ldr	r3, [sp, #24]
 8017da8:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8017daa:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8017dac:	3b01      	subs	r3, #1
 8017dae:	fb00 5003 	mla	r0, r0, r3, r5
 8017db2:	1400      	asrs	r0, r0, #16
 8017db4:	f53f aeac 	bmi.w	8017b10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8017db8:	3901      	subs	r1, #1
 8017dba:	4288      	cmp	r0, r1
 8017dbc:	f6bf aea8 	bge.w	8017b10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8017dc0:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8017dc2:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8017dc4:	fb01 0303 	mla	r3, r1, r3, r0
 8017dc8:	141b      	asrs	r3, r3, #16
 8017dca:	f53f aea1 	bmi.w	8017b10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8017dce:	3a01      	subs	r2, #1
 8017dd0:	4293      	cmp	r3, r2
 8017dd2:	f6bf ae9d 	bge.w	8017b10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8017dd6:	9b06      	ldr	r3, [sp, #24]
 8017dd8:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8017ddc:	930f      	str	r3, [sp, #60]	@ 0x3c
 8017dde:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8017de2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8017de4:	2b00      	cmp	r3, #0
 8017de6:	f300 80b6 	bgt.w	8017f56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8017dea:	9b06      	ldr	r3, [sp, #24]
 8017dec:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017df0:	9b07      	ldr	r3, [sp, #28]
 8017df2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017df6:	9307      	str	r3, [sp, #28]
 8017df8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017dfa:	2b00      	cmp	r3, #0
 8017dfc:	f340 8218 	ble.w	8018230 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8017e00:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017e04:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8017e08:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017e0c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8017e0e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017e12:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017e16:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017e1a:	eef0 6a62 	vmov.f32	s13, s5
 8017e1e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017e22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017e26:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017e2a:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 8017e2e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017e32:	eef0 6a43 	vmov.f32	s13, s6
 8017e36:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017e3a:	ee12 2a90 	vmov	r2, s5
 8017e3e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017e42:	fb92 f3f3 	sdiv	r3, r2, r3
 8017e46:	ee13 2a10 	vmov	r2, s6
 8017e4a:	931f      	str	r3, [sp, #124]	@ 0x7c
 8017e4c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8017e4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017e52:	9320      	str	r3, [sp, #128]	@ 0x80
 8017e54:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017e56:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8017e58:	3b01      	subs	r3, #1
 8017e5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017e5e:	930e      	str	r3, [sp, #56]	@ 0x38
 8017e60:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8017e62:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 8017e66:	bf08      	it	eq
 8017e68:	4613      	moveq	r3, r2
 8017e6a:	9306      	str	r3, [sp, #24]
 8017e6c:	eeb0 3a67 	vmov.f32	s6, s15
 8017e70:	eef0 2a47 	vmov.f32	s5, s14
 8017e74:	e621      	b.n	8017aba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8017e76:	fb08 f505 	mul.w	r5, r8, r5
 8017e7a:	fb09 5303 	mla	r3, r9, r3, r5
 8017e7e:	e6a1      	b.n	8017bc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8017e80:	4681      	mov	r9, r0
 8017e82:	e6c8      	b.n	8017c16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8017e84:	f1c1 0210 	rsb	r2, r1, #16
 8017e88:	4341      	muls	r1, r0
 8017e8a:	fb09 1902 	mla	r9, r9, r2, r1
 8017e8e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017e92:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8017e96:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017e9a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017e9e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8017ea2:	ea42 0909 	orr.w	r9, r2, r9
 8017ea6:	fa1f f289 	uxth.w	r2, r9
 8017eaa:	e75b      	b.n	8017d64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8017eac:	f8b7 c000 	ldrh.w	ip, [r7]
 8017eb0:	43db      	mvns	r3, r3
 8017eb2:	ea4f 202c 	mov.w	r0, ip, asr #8
 8017eb6:	fa5f fe83 	uxtb.w	lr, r3
 8017eba:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8017ebe:	fb00 f00e 	mul.w	r0, r0, lr
 8017ec2:	1c41      	adds	r1, r0, #1
 8017ec4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8017ec8:	1211      	asrs	r1, r2, #8
 8017eca:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8017ece:	f021 0107 	bic.w	r1, r1, #7
 8017ed2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8017ed6:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8017eda:	48d7      	ldr	r0, [pc, #860]	@ (8018238 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8017edc:	fb05 f50e 	mul.w	r5, r5, lr
 8017ee0:	b2c9      	uxtb	r1, r1
 8017ee2:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8017ee6:	1c69      	adds	r1, r5, #1
 8017ee8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8017eec:	10d1      	asrs	r1, r2, #3
 8017eee:	f021 0103 	bic.w	r1, r1, #3
 8017ef2:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8017ef6:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8017efa:	b2db      	uxtb	r3, r3
 8017efc:	00c9      	lsls	r1, r1, #3
 8017efe:	fb03 f30e 	mul.w	r3, r3, lr
 8017f02:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8017f06:	4301      	orrs	r1, r0
 8017f08:	1c58      	adds	r0, r3, #1
 8017f0a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8017f0e:	00d2      	lsls	r2, r2, #3
 8017f10:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8017f14:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017f18:	430a      	orrs	r2, r1
 8017f1a:	e726      	b.n	8017d6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8017f1c:	f115 0e01 	adds.w	lr, r5, #1
 8017f20:	f53f af24 	bmi.w	8017d6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8017f24:	4572      	cmp	r2, lr
 8017f26:	f6ff af21 	blt.w	8017d6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8017f2a:	f110 0e01 	adds.w	lr, r0, #1
 8017f2e:	f53f af1d 	bmi.w	8017d6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8017f32:	4573      	cmp	r3, lr
 8017f34:	f6ff af1a 	blt.w	8017d6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8017f38:	b21b      	sxth	r3, r3
 8017f3a:	b212      	sxth	r2, r2
 8017f3c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8017f40:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8017f44:	9301      	str	r3, [sp, #4]
 8017f46:	9200      	str	r2, [sp, #0]
 8017f48:	4639      	mov	r1, r7
 8017f4a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8017f4e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8017f50:	f7ff fc24 	bl	801779c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8017f54:	e70a      	b.n	8017d6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8017f56:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8017f58:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017f5c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8017f5e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8017f62:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8017f64:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017f68:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8017f6a:	141f      	asrs	r7, r3, #16
 8017f6c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8017f6e:	141b      	asrs	r3, r3, #16
 8017f70:	fb01 3707 	mla	r7, r1, r7, r3
 8017f74:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017f76:	fa1f fc82 	uxth.w	ip, r2
 8017f7a:	eb03 0a07 	add.w	sl, r3, r7
 8017f7e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8017f82:	f813 9007 	ldrb.w	r9, [r3, r7]
 8017f86:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017f8a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 8017f8e:	b29b      	uxth	r3, r3
 8017f90:	2d00      	cmp	r5, #0
 8017f92:	f000 80fe 	beq.w	8018192 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8017f96:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8017f9a:	940c      	str	r4, [sp, #48]	@ 0x30
 8017f9c:	eb0a 0b01 	add.w	fp, sl, r1
 8017fa0:	fa1f fa85 	uxth.w	sl, r5
 8017fa4:	fb0a fc0c 	mul.w	ip, sl, ip
 8017fa8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8017fac:	fa1f fa8a 	uxth.w	sl, sl
 8017fb0:	eba0 000c 	sub.w	r0, r0, ip
 8017fb4:	eba3 030a 	sub.w	r3, r3, sl
 8017fb8:	b280      	uxth	r0, r0
 8017fba:	fb08 f000 	mul.w	r0, r8, r0
 8017fbe:	b29b      	uxth	r3, r3
 8017fc0:	fb09 0303 	mla	r3, r9, r3, r0
 8017fc4:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8017fc6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017fca:	940d      	str	r4, [sp, #52]	@ 0x34
 8017fcc:	fb0a 3300 	mla	r3, sl, r0, r3
 8017fd0:	fb0c 3304 	mla	r3, ip, r4, r3
 8017fd4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017fd8:	2b00      	cmp	r3, #0
 8017fda:	f000 80cc 	beq.w	8018176 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8017fde:	9808      	ldr	r0, [sp, #32]
 8017fe0:	9c08      	ldr	r4, [sp, #32]
 8017fe2:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8017fe6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8017fea:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8017fee:	f000 80d5 	beq.w	801819c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8017ff2:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8017ff6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017ffa:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8017ffe:	fb09 f707 	mul.w	r7, r9, r7
 8018002:	fb0a fc0c 	mul.w	ip, sl, ip
 8018006:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801800a:	f107 0b20 	add.w	fp, r7, #32
 801800e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8018012:	44cc      	add	ip, r9
 8018014:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8018018:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801801c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018020:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8018024:	ea4c 0909 	orr.w	r9, ip, r9
 8018028:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801802c:	8847      	ldrh	r7, [r0, #2]
 801802e:	d019      	beq.n	8018064 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8018030:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8018034:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8018038:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801803c:	fb08 f807 	mul.w	r8, r8, r7
 8018040:	fb0a fc0c 	mul.w	ip, sl, ip
 8018044:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8018048:	f108 0b20 	add.w	fp, r8, #32
 801804c:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8018050:	44bc      	add	ip, r7
 8018052:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8018056:	0a3f      	lsrs	r7, r7, #8
 8018058:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801805c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8018060:	ea4c 0707 	orr.w	r7, ip, r7
 8018064:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8018068:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801806c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8018070:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8018074:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8018078:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801807c:	ea4c 0909 	orr.w	r9, ip, r9
 8018080:	ea4a 0707 	orr.w	r7, sl, r7
 8018084:	2d00      	cmp	r5, #0
 8018086:	f000 808b 	beq.w	80181a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801808a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801808e:	3901      	subs	r1, #1
 8018090:	0049      	lsls	r1, r1, #1
 8018092:	3102      	adds	r1, #2
 8018094:	eb00 0c01 	add.w	ip, r0, r1
 8018098:	5a41      	ldrh	r1, [r0, r1]
 801809a:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801809c:	28ff      	cmp	r0, #255	@ 0xff
 801809e:	d019      	beq.n	80180d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 80180a0:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80180a2:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 80180a6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80180aa:	fb04 fa01 	mul.w	sl, r4, r1
 80180ae:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80180b2:	fb08 f800 	mul.w	r8, r8, r0
 80180b6:	f10a 0020 	add.w	r0, sl, #32
 80180ba:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80180be:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80180c2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80180c6:	4441      	add	r1, r8
 80180c8:	0a00      	lsrs	r0, r0, #8
 80180ca:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80180ce:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80180d2:	4301      	orrs	r1, r0
 80180d4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80180d6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80180da:	2cff      	cmp	r4, #255	@ 0xff
 80180dc:	d01a      	beq.n	8018114 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 80180de:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 80180e2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80180e6:	fb04 fa00 	mul.w	sl, r4, r0
 80180ea:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80180ee:	fb08 f80c 	mul.w	r8, r8, ip
 80180f2:	f10a 0c20 	add.w	ip, sl, #32
 80180f6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80180fa:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80180fe:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8018102:	4440      	add	r0, r8
 8018104:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018108:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801810c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8018110:	ea40 000c 	orr.w	r0, r0, ip
 8018114:	fb15 fc02 	smulbb	ip, r5, r2
 8018118:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801811c:	f1c5 0810 	rsb	r8, r5, #16
 8018120:	eba8 0802 	sub.w	r8, r8, r2
 8018124:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018128:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801812c:	437a      	muls	r2, r7
 801812e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8018132:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8018136:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801813a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801813e:	fb09 2208 	mla	r2, r9, r8, r2
 8018142:	ea4a 0101 	orr.w	r1, sl, r1
 8018146:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801814a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801814e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8018152:	fb05 2201 	mla	r2, r5, r1, r2
 8018156:	ea4b 0000 	orr.w	r0, fp, r0
 801815a:	fb0c 2200 	mla	r2, ip, r0, r2
 801815e:	0d57      	lsrs	r7, r2, #21
 8018160:	0952      	lsrs	r2, r2, #5
 8018162:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8018166:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801816a:	433a      	orrs	r2, r7
 801816c:	2bff      	cmp	r3, #255	@ 0xff
 801816e:	b292      	uxth	r2, r2
 8018170:	d127      	bne.n	80181c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8018172:	f8ae 2000 	strh.w	r2, [lr]
 8018176:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8018178:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801817a:	4413      	add	r3, r2
 801817c:	931d      	str	r3, [sp, #116]	@ 0x74
 801817e:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8018180:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8018182:	441a      	add	r2, r3
 8018184:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8018186:	921e      	str	r2, [sp, #120]	@ 0x78
 8018188:	3b01      	subs	r3, #1
 801818a:	f10e 0e02 	add.w	lr, lr, #2
 801818e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8018190:	e627      	b.n	8017de2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8018192:	fb08 f000 	mul.w	r0, r8, r0
 8018196:	fb09 0303 	mla	r3, r9, r3, r0
 801819a:	e71b      	b.n	8017fd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801819c:	46b9      	mov	r9, r7
 801819e:	e743      	b.n	8018028 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80181a0:	f1c2 0110 	rsb	r1, r2, #16
 80181a4:	437a      	muls	r2, r7
 80181a6:	fb09 2901 	mla	r9, r9, r1, r2
 80181aa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80181ae:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80181b2:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80181b6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80181ba:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80181be:	4302      	orrs	r2, r0
 80181c0:	e7d4      	b.n	801816c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 80181c2:	f8be 7000 	ldrh.w	r7, [lr]
 80181c6:	4c1c      	ldr	r4, [pc, #112]	@ (8018238 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80181c8:	43db      	mvns	r3, r3
 80181ca:	1238      	asrs	r0, r7, #8
 80181cc:	fa5f fc83 	uxtb.w	ip, r3
 80181d0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80181d4:	10fd      	asrs	r5, r7, #3
 80181d6:	fb00 f00c 	mul.w	r0, r0, ip
 80181da:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80181de:	fb05 f10c 	mul.w	r1, r5, ip
 80181e2:	1c45      	adds	r5, r0, #1
 80181e4:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80181e8:	1215      	asrs	r5, r2, #8
 80181ea:	f025 0507 	bic.w	r5, r5, #7
 80181ee:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80181f2:	1c4d      	adds	r5, r1, #1
 80181f4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80181f8:	10d1      	asrs	r1, r2, #3
 80181fa:	f021 0103 	bic.w	r1, r1, #3
 80181fe:	00fb      	lsls	r3, r7, #3
 8018200:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8018204:	b2db      	uxtb	r3, r3
 8018206:	b2c0      	uxtb	r0, r0
 8018208:	00c9      	lsls	r1, r1, #3
 801820a:	fb03 f30c 	mul.w	r3, r3, ip
 801820e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8018212:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8018216:	4308      	orrs	r0, r1
 8018218:	1c59      	adds	r1, r3, #1
 801821a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801821e:	00d2      	lsls	r2, r2, #3
 8018220:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8018224:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8018228:	4318      	orrs	r0, r3
 801822a:	f8ae 0000 	strh.w	r0, [lr]
 801822e:	e7a2      	b.n	8018176 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8018230:	b013      	add	sp, #76	@ 0x4c
 8018232:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018236:	bf00      	nop
 8018238:	fffff800 	.word	0xfffff800

0801823c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801823c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018240:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 8018244:	fb05 4c03 	mla	ip, r5, r3, r4
 8018248:	2d00      	cmp	r5, #0
 801824a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801824e:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 8018252:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8018256:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801825a:	8808      	ldrh	r0, [r1, #0]
 801825c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8018260:	f2c0 80a7 	blt.w	80183b2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8018264:	45aa      	cmp	sl, r5
 8018266:	f340 80a4 	ble.w	80183b2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801826a:	2c00      	cmp	r4, #0
 801826c:	f2c0 809f 	blt.w	80183ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8018270:	42a3      	cmp	r3, r4
 8018272:	f340 809c 	ble.w	80183ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8018276:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801827a:	1c62      	adds	r2, r4, #1
 801827c:	f100 809c 	bmi.w	80183b8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8018280:	4293      	cmp	r3, r2
 8018282:	f340 8099 	ble.w	80183b8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8018286:	f1b9 0f00 	cmp.w	r9, #0
 801828a:	f000 8095 	beq.w	80183b8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801828e:	f8be c002 	ldrh.w	ip, [lr, #2]
 8018292:	3501      	adds	r5, #1
 8018294:	f100 8094 	bmi.w	80183c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8018298:	45aa      	cmp	sl, r5
 801829a:	f340 8091 	ble.w	80183c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801829e:	2f00      	cmp	r7, #0
 80182a0:	f000 808e 	beq.w	80183c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80182a4:	2c00      	cmp	r4, #0
 80182a6:	f2c0 8089 	blt.w	80183bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80182aa:	42a3      	cmp	r3, r4
 80182ac:	f340 8086 	ble.w	80183bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80182b0:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80182b4:	3401      	adds	r4, #1
 80182b6:	f100 8086 	bmi.w	80183c6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80182ba:	42a3      	cmp	r3, r4
 80182bc:	f340 8083 	ble.w	80183c6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80182c0:	f1b9 0f00 	cmp.w	r9, #0
 80182c4:	d07f      	beq.n	80183c6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80182c6:	3301      	adds	r3, #1
 80182c8:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 80182cc:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80182d0:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80182d4:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 80182d8:	fb19 fe07 	smulbb	lr, r9, r7
 80182dc:	ea44 0808 	orr.w	r8, r4, r8
 80182e0:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80182e4:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80182e8:	f1c7 0210 	rsb	r2, r7, #16
 80182ec:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80182f0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80182f4:	ea44 0c0c 	orr.w	ip, r4, ip
 80182f8:	eba2 0209 	sub.w	r2, r2, r9
 80182fc:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8018300:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8018304:	fb04 f40c 	mul.w	r4, r4, ip
 8018308:	fb02 4808 	mla	r8, r2, r8, r4
 801830c:	041a      	lsls	r2, r3, #16
 801830e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8018312:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8018316:	4313      	orrs	r3, r2
 8018318:	042a      	lsls	r2, r5, #16
 801831a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801831e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8018322:	fb0e 8303 	mla	r3, lr, r3, r8
 8018326:	432a      	orrs	r2, r5
 8018328:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801832c:	fb07 3202 	mla	r2, r7, r2, r3
 8018330:	0d53      	lsrs	r3, r2, #21
 8018332:	0952      	lsrs	r2, r2, #5
 8018334:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018338:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801833c:	431a      	orrs	r2, r3
 801833e:	b293      	uxth	r3, r2
 8018340:	b2b4      	uxth	r4, r6
 8018342:	1202      	asrs	r2, r0, #8
 8018344:	43f6      	mvns	r6, r6
 8018346:	b2f6      	uxtb	r6, r6
 8018348:	121d      	asrs	r5, r3, #8
 801834a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801834e:	fb12 f206 	smulbb	r2, r2, r6
 8018352:	10c7      	asrs	r7, r0, #3
 8018354:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8018358:	00c0      	lsls	r0, r0, #3
 801835a:	fb05 2504 	mla	r5, r5, r4, r2
 801835e:	b2c0      	uxtb	r0, r0
 8018360:	10da      	asrs	r2, r3, #3
 8018362:	00db      	lsls	r3, r3, #3
 8018364:	b2db      	uxtb	r3, r3
 8018366:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801836a:	fb10 f006 	smulbb	r0, r0, r6
 801836e:	b2ad      	uxth	r5, r5
 8018370:	fb03 0004 	mla	r0, r3, r4, r0
 8018374:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8018378:	fb17 f706 	smulbb	r7, r7, r6
 801837c:	b280      	uxth	r0, r0
 801837e:	1c6b      	adds	r3, r5, #1
 8018380:	fb02 7204 	mla	r2, r2, r4, r7
 8018384:	b292      	uxth	r2, r2
 8018386:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801838a:	1c43      	adds	r3, r0, #1
 801838c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018390:	1c50      	adds	r0, r2, #1
 8018392:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8018396:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801839a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801839e:	0952      	lsrs	r2, r2, #5
 80183a0:	432b      	orrs	r3, r5
 80183a2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80183a6:	4313      	orrs	r3, r2
 80183a8:	800b      	strh	r3, [r1, #0]
 80183aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80183ae:	4680      	mov	r8, r0
 80183b0:	e763      	b.n	801827a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80183b2:	4684      	mov	ip, r0
 80183b4:	4680      	mov	r8, r0
 80183b6:	e76c      	b.n	8018292 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80183b8:	4684      	mov	ip, r0
 80183ba:	e76a      	b.n	8018292 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80183bc:	4605      	mov	r5, r0
 80183be:	e779      	b.n	80182b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 80183c0:	4603      	mov	r3, r0
 80183c2:	4605      	mov	r5, r0
 80183c4:	e782      	b.n	80182cc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 80183c6:	4603      	mov	r3, r0
 80183c8:	e780      	b.n	80182cc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

080183ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80183ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183ce:	b093      	sub	sp, #76	@ 0x4c
 80183d0:	461d      	mov	r5, r3
 80183d2:	9210      	str	r2, [sp, #64]	@ 0x40
 80183d4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80183d6:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 80183da:	920b      	str	r2, [sp, #44]	@ 0x2c
 80183dc:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 80183e0:	910a      	str	r1, [sp, #40]	@ 0x28
 80183e2:	6859      	ldr	r1, [r3, #4]
 80183e4:	681b      	ldr	r3, [r3, #0]
 80183e6:	9011      	str	r0, [sp, #68]	@ 0x44
 80183e8:	fb01 2707 	mla	r7, r1, r7, r2
 80183ec:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80183f0:	9307      	str	r3, [sp, #28]
 80183f2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80183f4:	681b      	ldr	r3, [r3, #0]
 80183f6:	9309      	str	r3, [sp, #36]	@ 0x24
 80183f8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80183fa:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 80183fe:	43db      	mvns	r3, r3
 8018400:	b2db      	uxtb	r3, r3
 8018402:	9308      	str	r3, [sp, #32]
 8018404:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018406:	2b00      	cmp	r3, #0
 8018408:	dc03      	bgt.n	8018412 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801840a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801840c:	2b00      	cmp	r3, #0
 801840e:	f340 8203 	ble.w	8018818 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8018412:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8018414:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018418:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801841c:	1e48      	subs	r0, r1, #1
 801841e:	f102 3cff 	add.w	ip, r2, #4294967295
 8018422:	2d00      	cmp	r5, #0
 8018424:	f340 80da 	ble.w	80185dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018428:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801842c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018430:	d406      	bmi.n	8018440 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018432:	4586      	cmp	lr, r0
 8018434:	da04      	bge.n	8018440 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018436:	2b00      	cmp	r3, #0
 8018438:	db02      	blt.n	8018440 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801843a:	4563      	cmp	r3, ip
 801843c:	f2c0 80cf 	blt.w	80185de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018440:	f11e 0e01 	adds.w	lr, lr, #1
 8018444:	f100 80c1 	bmi.w	80185ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8018448:	4571      	cmp	r1, lr
 801844a:	f2c0 80be 	blt.w	80185ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801844e:	3301      	adds	r3, #1
 8018450:	f100 80bb 	bmi.w	80185ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8018454:	429a      	cmp	r2, r3
 8018456:	f2c0 80b8 	blt.w	80185ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801845a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801845e:	46a9      	mov	r9, r5
 8018460:	f1b9 0f00 	cmp.w	r9, #0
 8018464:	f340 80d8 	ble.w	8018618 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8018468:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801846a:	1421      	asrs	r1, r4, #16
 801846c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8018470:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018474:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8018478:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801847c:	f100 8111 	bmi.w	80186a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8018480:	f10e 3aff 	add.w	sl, lr, #4294967295
 8018484:	4551      	cmp	r1, sl
 8018486:	f280 810c 	bge.w	80186a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801848a:	2800      	cmp	r0, #0
 801848c:	f2c0 8109 	blt.w	80186a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8018490:	f103 3aff 	add.w	sl, r3, #4294967295
 8018494:	4550      	cmp	r0, sl
 8018496:	f280 8104 	bge.w	80186a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801849a:	fa0f f38e 	sxth.w	r3, lr
 801849e:	fb00 1103 	mla	r1, r0, r3, r1
 80184a2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80184a4:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80184a8:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80184ac:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80184b0:	f1bc 0f00 	cmp.w	ip, #0
 80184b4:	d007      	beq.n	80184c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80184b6:	005b      	lsls	r3, r3, #1
 80184b8:	eb0a 0003 	add.w	r0, sl, r3
 80184bc:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80184c0:	930c      	str	r3, [sp, #48]	@ 0x30
 80184c2:	8843      	ldrh	r3, [r0, #2]
 80184c4:	930d      	str	r3, [sp, #52]	@ 0x34
 80184c6:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80184ca:	fb12 f30c 	smulbb	r3, r2, ip
 80184ce:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80184d2:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80184d6:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 80184da:	10db      	asrs	r3, r3, #3
 80184dc:	ea40 000e 	orr.w	r0, r0, lr
 80184e0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80184e4:	f1cc 0e10 	rsb	lr, ip, #16
 80184e8:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80184ec:	ebae 0e02 	sub.w	lr, lr, r2
 80184f0:	ea4a 0101 	orr.w	r1, sl, r1
 80184f4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80184f8:	4351      	muls	r1, r2
 80184fa:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80184fc:	9f08      	ldr	r7, [sp, #32]
 80184fe:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8018502:	fb0e 1e00 	mla	lr, lr, r0, r1
 8018506:	0410      	lsls	r0, r2, #16
 8018508:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801850c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8018510:	4310      	orrs	r0, r2
 8018512:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8018514:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8018516:	0412      	lsls	r2, r2, #16
 8018518:	fb03 e000 	mla	r0, r3, r0, lr
 801851c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8018520:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 8018524:	ea42 020e 	orr.w	r2, r2, lr
 8018528:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801852c:	fb03 0302 	mla	r3, r3, r2, r0
 8018530:	0d5a      	lsrs	r2, r3, #21
 8018532:	095b      	lsrs	r3, r3, #5
 8018534:	f8b8 0000 	ldrh.w	r0, [r8]
 8018538:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801853c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8018540:	4313      	orrs	r3, r2
 8018542:	b29b      	uxth	r3, r3
 8018544:	1201      	asrs	r1, r0, #8
 8018546:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801854a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801854e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8018552:	fb11 f107 	smulbb	r1, r1, r7
 8018556:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801855a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801855e:	00c0      	lsls	r0, r0, #3
 8018560:	fb0c 1c02 	mla	ip, ip, r2, r1
 8018564:	b2c0      	uxtb	r0, r0
 8018566:	10d9      	asrs	r1, r3, #3
 8018568:	00db      	lsls	r3, r3, #3
 801856a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801856e:	b2db      	uxtb	r3, r3
 8018570:	fb10 f007 	smulbb	r0, r0, r7
 8018574:	fa1f fc8c 	uxth.w	ip, ip
 8018578:	fb03 0302 	mla	r3, r3, r2, r0
 801857c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8018580:	fb1e fe07 	smulbb	lr, lr, r7
 8018584:	fb01 e102 	mla	r1, r1, r2, lr
 8018588:	b29a      	uxth	r2, r3
 801858a:	f10c 0301 	add.w	r3, ip, #1
 801858e:	b289      	uxth	r1, r1
 8018590:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8018594:	1c53      	adds	r3, r2, #1
 8018596:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801859a:	1c4a      	adds	r2, r1, #1
 801859c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80185a0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80185a4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80185a8:	0949      	lsrs	r1, r1, #5
 80185aa:	ea43 030c 	orr.w	r3, r3, ip
 80185ae:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80185b2:	430b      	orrs	r3, r1
 80185b4:	f8a8 3000 	strh.w	r3, [r8]
 80185b8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80185ba:	441c      	add	r4, r3
 80185bc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80185be:	f108 0802 	add.w	r8, r8, #2
 80185c2:	441e      	add	r6, r3
 80185c4:	f109 39ff 	add.w	r9, r9, #4294967295
 80185c8:	e74a      	b.n	8018460 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80185ca:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80185cc:	441c      	add	r4, r3
 80185ce:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80185d0:	441e      	add	r6, r3
 80185d2:	9b07      	ldr	r3, [sp, #28]
 80185d4:	3302      	adds	r3, #2
 80185d6:	3d01      	subs	r5, #1
 80185d8:	9307      	str	r3, [sp, #28]
 80185da:	e722      	b.n	8018422 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80185dc:	d022      	beq.n	8018624 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 80185de:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80185e0:	1e6b      	subs	r3, r5, #1
 80185e2:	fb00 4003 	mla	r0, r0, r3, r4
 80185e6:	1400      	asrs	r0, r0, #16
 80185e8:	f53f af37 	bmi.w	801845a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80185ec:	3901      	subs	r1, #1
 80185ee:	4288      	cmp	r0, r1
 80185f0:	f6bf af33 	bge.w	801845a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80185f4:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80185f6:	fb01 6303 	mla	r3, r1, r3, r6
 80185fa:	141b      	asrs	r3, r3, #16
 80185fc:	f53f af2d 	bmi.w	801845a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8018600:	3a01      	subs	r2, #1
 8018602:	4293      	cmp	r3, r2
 8018604:	f6bf af29 	bge.w	801845a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8018608:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801860c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 8018610:	46a8      	mov	r8, r5
 8018612:	f1b8 0f00 	cmp.w	r8, #0
 8018616:	dc5e      	bgt.n	80186d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8018618:	9b07      	ldr	r3, [sp, #28]
 801861a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801861e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8018622:	9307      	str	r3, [sp, #28]
 8018624:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018626:	2b00      	cmp	r3, #0
 8018628:	f340 80f6 	ble.w	8018818 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801862c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018630:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8018634:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018638:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801863a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801863e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018642:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018646:	eef0 6a62 	vmov.f32	s13, s5
 801864a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801864e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018652:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018656:	ee16 4a90 	vmov	r4, s13
 801865a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801865e:	eef0 6a43 	vmov.f32	s13, s6
 8018662:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018666:	ee12 2a90 	vmov	r2, s5
 801866a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801866e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018672:	ee13 2a10 	vmov	r2, s6
 8018676:	931f      	str	r3, [sp, #124]	@ 0x7c
 8018678:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801867a:	fb92 f3f3 	sdiv	r3, r2, r3
 801867e:	9320      	str	r3, [sp, #128]	@ 0x80
 8018680:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018682:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8018684:	3b01      	subs	r3, #1
 8018686:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801868a:	930a      	str	r3, [sp, #40]	@ 0x28
 801868c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801868e:	ee16 6a90 	vmov	r6, s13
 8018692:	bf14      	ite	ne
 8018694:	461d      	movne	r5, r3
 8018696:	4615      	moveq	r5, r2
 8018698:	eeb0 3a67 	vmov.f32	s6, s15
 801869c:	eef0 2a47 	vmov.f32	s5, s14
 80186a0:	e6b0      	b.n	8018404 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80186a2:	f111 0a01 	adds.w	sl, r1, #1
 80186a6:	d487      	bmi.n	80185b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80186a8:	45d6      	cmp	lr, sl
 80186aa:	db85      	blt.n	80185b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80186ac:	f110 0a01 	adds.w	sl, r0, #1
 80186b0:	d482      	bmi.n	80185b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80186b2:	4553      	cmp	r3, sl
 80186b4:	db80      	blt.n	80185b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80186b6:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80186b8:	9101      	str	r1, [sp, #4]
 80186ba:	b21b      	sxth	r3, r3
 80186bc:	e9cd 0202 	strd	r0, r2, [sp, #8]
 80186c0:	9300      	str	r3, [sp, #0]
 80186c2:	e9cd c704 	strd	ip, r7, [sp, #16]
 80186c6:	fa0f f38e 	sxth.w	r3, lr
 80186ca:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80186cc:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80186ce:	4641      	mov	r1, r8
 80186d0:	f7ff fdb4 	bl	801823c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 80186d4:	e770      	b.n	80185b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80186d6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80186d8:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 80186da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80186de:	1430      	asrs	r0, r6, #16
 80186e0:	1423      	asrs	r3, r4, #16
 80186e2:	fb01 3000 	mla	r0, r1, r0, r3
 80186e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80186e8:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 80186ec:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80186f0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80186f4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80186f8:	8858      	ldrh	r0, [r3, #2]
 80186fa:	f1be 0f00 	cmp.w	lr, #0
 80186fe:	d00b      	beq.n	8018718 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8018700:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8018704:	3901      	subs	r1, #1
 8018706:	0049      	lsls	r1, r1, #1
 8018708:	3102      	adds	r1, #2
 801870a:	eb03 0b01 	add.w	fp, r3, r1
 801870e:	5a5b      	ldrh	r3, [r3, r1]
 8018710:	930e      	str	r3, [sp, #56]	@ 0x38
 8018712:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8018716:	930f      	str	r3, [sp, #60]	@ 0x3c
 8018718:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801871c:	fb12 f30e 	smulbb	r3, r2, lr
 8018720:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8018724:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8018728:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801872c:	10db      	asrs	r3, r3, #3
 801872e:	ea41 010c 	orr.w	r1, r1, ip
 8018732:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8018736:	f1ce 0c10 	rsb	ip, lr, #16
 801873a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801873e:	ebac 0c02 	sub.w	ip, ip, r2
 8018742:	ea4b 0000 	orr.w	r0, fp, r0
 8018746:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801874a:	4350      	muls	r0, r2
 801874c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801874e:	9f08      	ldr	r7, [sp, #32]
 8018750:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8018754:	fb0c 0c01 	mla	ip, ip, r1, r0
 8018758:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801875c:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 8018760:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8018762:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8018764:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8018768:	0412      	lsls	r2, r2, #16
 801876a:	ea4b 0101 	orr.w	r1, fp, r1
 801876e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8018772:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8018776:	fb03 c101 	mla	r1, r3, r1, ip
 801877a:	4302      	orrs	r2, r0
 801877c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8018780:	fb03 1202 	mla	r2, r3, r2, r1
 8018784:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8018788:	0952      	lsrs	r2, r2, #5
 801878a:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801878e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8018792:	f8b9 2000 	ldrh.w	r2, [r9]
 8018796:	ea4b 0303 	orr.w	r3, fp, r3
 801879a:	b29b      	uxth	r3, r3
 801879c:	1211      	asrs	r1, r2, #8
 801879e:	1218      	asrs	r0, r3, #8
 80187a0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80187a4:	fb11 f107 	smulbb	r1, r1, r7
 80187a8:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80187ac:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80187b0:	00d2      	lsls	r2, r2, #3
 80187b2:	fb00 100a 	mla	r0, r0, sl, r1
 80187b6:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 80187ba:	10d9      	asrs	r1, r3, #3
 80187bc:	b2d2      	uxtb	r2, r2
 80187be:	00db      	lsls	r3, r3, #3
 80187c0:	fb1c fc07 	smulbb	ip, ip, r7
 80187c4:	fb12 f207 	smulbb	r2, r2, r7
 80187c8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80187cc:	b2db      	uxtb	r3, r3
 80187ce:	b280      	uxth	r0, r0
 80187d0:	fb01 c10a 	mla	r1, r1, sl, ip
 80187d4:	fb03 230a 	mla	r3, r3, sl, r2
 80187d8:	b29b      	uxth	r3, r3
 80187da:	b289      	uxth	r1, r1
 80187dc:	1c42      	adds	r2, r0, #1
 80187de:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80187e2:	f101 0c01 	add.w	ip, r1, #1
 80187e6:	1c5a      	adds	r2, r3, #1
 80187e8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80187ec:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80187f0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80187f2:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80187f6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80187fa:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80187fe:	4310      	orrs	r0, r2
 8018800:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8018804:	441c      	add	r4, r3
 8018806:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8018808:	ea40 000c 	orr.w	r0, r0, ip
 801880c:	f829 0b02 	strh.w	r0, [r9], #2
 8018810:	441e      	add	r6, r3
 8018812:	f108 38ff 	add.w	r8, r8, #4294967295
 8018816:	e6fc      	b.n	8018612 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8018818:	b013      	add	sp, #76	@ 0x4c
 801881a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801881e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801881e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018822:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8018826:	fb0e 4703 	mla	r7, lr, r3, r4
 801882a:	f1be 0f00 	cmp.w	lr, #0
 801882e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8018832:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 8018836:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801883a:	8808      	ldrh	r0, [r1, #0]
 801883c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8018840:	db60      	blt.n	8018904 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8018842:	45f1      	cmp	r9, lr
 8018844:	dd5e      	ble.n	8018904 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8018846:	2c00      	cmp	r4, #0
 8018848:	db5a      	blt.n	8018900 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801884a:	42a3      	cmp	r3, r4
 801884c:	dd58      	ble.n	8018900 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801884e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8018852:	1c62      	adds	r2, r4, #1
 8018854:	d459      	bmi.n	801890a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8018856:	4293      	cmp	r3, r2
 8018858:	dd57      	ble.n	801890a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801885a:	2d00      	cmp	r5, #0
 801885c:	d055      	beq.n	801890a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801885e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8018862:	f11e 0e01 	adds.w	lr, lr, #1
 8018866:	d454      	bmi.n	8018912 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8018868:	45f1      	cmp	r9, lr
 801886a:	dd52      	ble.n	8018912 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801886c:	2e00      	cmp	r6, #0
 801886e:	d050      	beq.n	8018912 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8018870:	2c00      	cmp	r4, #0
 8018872:	db4c      	blt.n	801890e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8018874:	42a3      	cmp	r3, r4
 8018876:	dd4a      	ble.n	801890e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8018878:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801887c:	3401      	adds	r4, #1
 801887e:	d405      	bmi.n	801888c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8018880:	42a3      	cmp	r3, r4
 8018882:	dd03      	ble.n	801888c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8018884:	b115      	cbz	r5, 801888c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8018886:	3301      	adds	r3, #1
 8018888:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801888c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8018890:	fb15 f406 	smulbb	r4, r5, r6
 8018894:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8018898:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801889c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80188a0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 80188a4:	ea43 0c0c 	orr.w	ip, r3, ip
 80188a8:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 80188ac:	f1c6 0310 	rsb	r3, r6, #16
 80188b0:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 80188b4:	1b5b      	subs	r3, r3, r5
 80188b6:	ea4e 0707 	orr.w	r7, lr, r7
 80188ba:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 80188be:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80188c2:	437d      	muls	r5, r7
 80188c4:	fb03 5c0c 	mla	ip, r3, ip, r5
 80188c8:	0403      	lsls	r3, r0, #16
 80188ca:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80188ce:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80188d2:	4318      	orrs	r0, r3
 80188d4:	0413      	lsls	r3, r2, #16
 80188d6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80188da:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80188de:	4313      	orrs	r3, r2
 80188e0:	fb04 c000 	mla	r0, r4, r0, ip
 80188e4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80188e8:	fb06 0003 	mla	r0, r6, r3, r0
 80188ec:	0d43      	lsrs	r3, r0, #21
 80188ee:	0940      	lsrs	r0, r0, #5
 80188f0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80188f4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80188f8:	4318      	orrs	r0, r3
 80188fa:	8008      	strh	r0, [r1, #0]
 80188fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018900:	4684      	mov	ip, r0
 8018902:	e7a6      	b.n	8018852 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8018904:	4607      	mov	r7, r0
 8018906:	4684      	mov	ip, r0
 8018908:	e7ab      	b.n	8018862 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801890a:	4607      	mov	r7, r0
 801890c:	e7a9      	b.n	8018862 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801890e:	4602      	mov	r2, r0
 8018910:	e7b4      	b.n	801887c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8018912:	4602      	mov	r2, r0
 8018914:	e7ba      	b.n	801888c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08018916 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018916:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801891a:	b08f      	sub	sp, #60	@ 0x3c
 801891c:	461d      	mov	r5, r3
 801891e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8018920:	920c      	str	r2, [sp, #48]	@ 0x30
 8018922:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 8018926:	9107      	str	r1, [sp, #28]
 8018928:	6859      	ldr	r1, [r3, #4]
 801892a:	681b      	ldr	r3, [r3, #0]
 801892c:	900d      	str	r0, [sp, #52]	@ 0x34
 801892e:	fb01 2707 	mla	r7, r1, r7, r2
 8018932:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8018936:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8018938:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801893c:	f8d3 8000 	ldr.w	r8, [r3]
 8018940:	9b07      	ldr	r3, [sp, #28]
 8018942:	2b00      	cmp	r3, #0
 8018944:	dc03      	bgt.n	801894e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8018946:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018948:	2b00      	cmp	r3, #0
 801894a:	f340 8181 	ble.w	8018c50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801894e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8018950:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018954:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018958:	1e48      	subs	r0, r1, #1
 801895a:	f102 3cff 	add.w	ip, r2, #4294967295
 801895e:	2d00      	cmp	r5, #0
 8018960:	f340 809b 	ble.w	8018a9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8018964:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8018968:	ea4f 4326 	mov.w	r3, r6, asr #16
 801896c:	d406      	bmi.n	801897c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801896e:	4586      	cmp	lr, r0
 8018970:	da04      	bge.n	801897c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018972:	2b00      	cmp	r3, #0
 8018974:	db02      	blt.n	801897c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018976:	4563      	cmp	r3, ip
 8018978:	f2c0 8090 	blt.w	8018a9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801897c:	f11e 0e01 	adds.w	lr, lr, #1
 8018980:	f100 8084 	bmi.w	8018a8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8018984:	4571      	cmp	r1, lr
 8018986:	f2c0 8081 	blt.w	8018a8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801898a:	3301      	adds	r3, #1
 801898c:	d47e      	bmi.n	8018a8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801898e:	429a      	cmp	r2, r3
 8018990:	db7c      	blt.n	8018a8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8018992:	46aa      	mov	sl, r5
 8018994:	46b9      	mov	r9, r7
 8018996:	f1ba 0f00 	cmp.w	sl, #0
 801899a:	f340 8099 	ble.w	8018ad0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801899e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80189a0:	1421      	asrs	r1, r4, #16
 80189a2:	ea4f 4026 	mov.w	r0, r6, asr #16
 80189a6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80189aa:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80189ae:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80189b2:	f100 80d0 	bmi.w	8018b56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80189b6:	f10e 3bff 	add.w	fp, lr, #4294967295
 80189ba:	4559      	cmp	r1, fp
 80189bc:	f280 80cb 	bge.w	8018b56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80189c0:	2800      	cmp	r0, #0
 80189c2:	f2c0 80c8 	blt.w	8018b56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80189c6:	f103 3bff 	add.w	fp, r3, #4294967295
 80189ca:	4558      	cmp	r0, fp
 80189cc:	f280 80c3 	bge.w	8018b56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80189d0:	fa0f fe8e 	sxth.w	lr, lr
 80189d4:	fb00 110e 	mla	r1, r0, lr, r1
 80189d8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80189dc:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 80189e0:	8841      	ldrh	r1, [r0, #2]
 80189e2:	f1bc 0f00 	cmp.w	ip, #0
 80189e6:	d00b      	beq.n	8018a00 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 80189e8:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 80189ec:	3b01      	subs	r3, #1
 80189ee:	005b      	lsls	r3, r3, #1
 80189f0:	3302      	adds	r3, #2
 80189f2:	eb00 0e03 	add.w	lr, r0, r3
 80189f6:	5ac3      	ldrh	r3, [r0, r3]
 80189f8:	9308      	str	r3, [sp, #32]
 80189fa:	f8be 3002 	ldrh.w	r3, [lr, #2]
 80189fe:	9309      	str	r3, [sp, #36]	@ 0x24
 8018a00:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8018a04:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8018a08:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8018a0c:	ea40 000b 	orr.w	r0, r0, fp
 8018a10:	fb12 f30c 	smulbb	r3, r2, ip
 8018a14:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018a18:	10db      	asrs	r3, r3, #3
 8018a1a:	f1cc 0e10 	rsb	lr, ip, #16
 8018a1e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8018a22:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8018a26:	ebae 0e02 	sub.w	lr, lr, r2
 8018a2a:	ea4b 0101 	orr.w	r1, fp, r1
 8018a2e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8018a32:	4351      	muls	r1, r2
 8018a34:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8018a36:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8018a3a:	fb0e 1e00 	mla	lr, lr, r0, r1
 8018a3e:	0410      	lsls	r0, r2, #16
 8018a40:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8018a44:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8018a48:	4310      	orrs	r0, r2
 8018a4a:	9a08      	ldr	r2, [sp, #32]
 8018a4c:	9908      	ldr	r1, [sp, #32]
 8018a4e:	0412      	lsls	r2, r2, #16
 8018a50:	fb03 e000 	mla	r0, r3, r0, lr
 8018a54:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8018a58:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 8018a5c:	ea42 020e 	orr.w	r2, r2, lr
 8018a60:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8018a64:	fb03 0302 	mla	r3, r3, r2, r0
 8018a68:	0d5a      	lsrs	r2, r3, #21
 8018a6a:	095b      	lsrs	r3, r3, #5
 8018a6c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8018a70:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8018a74:	4313      	orrs	r3, r2
 8018a76:	f8a9 3000 	strh.w	r3, [r9]
 8018a7a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8018a7c:	441c      	add	r4, r3
 8018a7e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8018a80:	f109 0902 	add.w	r9, r9, #2
 8018a84:	441e      	add	r6, r3
 8018a86:	f10a 3aff 	add.w	sl, sl, #4294967295
 8018a8a:	e784      	b.n	8018996 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8018a8c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8018a8e:	441c      	add	r4, r3
 8018a90:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8018a92:	3d01      	subs	r5, #1
 8018a94:	441e      	add	r6, r3
 8018a96:	3702      	adds	r7, #2
 8018a98:	e761      	b.n	801895e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8018a9a:	d01d      	beq.n	8018ad8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8018a9c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8018a9e:	1e6b      	subs	r3, r5, #1
 8018aa0:	fb00 4003 	mla	r0, r0, r3, r4
 8018aa4:	1400      	asrs	r0, r0, #16
 8018aa6:	f53f af74 	bmi.w	8018992 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018aaa:	3901      	subs	r1, #1
 8018aac:	4288      	cmp	r0, r1
 8018aae:	f6bf af70 	bge.w	8018992 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018ab2:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8018ab4:	fb01 6303 	mla	r3, r1, r3, r6
 8018ab8:	141b      	asrs	r3, r3, #16
 8018aba:	f53f af6a 	bmi.w	8018992 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018abe:	3a01      	subs	r2, #1
 8018ac0:	4293      	cmp	r3, r2
 8018ac2:	f6bf af66 	bge.w	8018992 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018ac6:	46a9      	mov	r9, r5
 8018ac8:	46ba      	mov	sl, r7
 8018aca:	f1b9 0f00 	cmp.w	r9, #0
 8018ace:	dc5a      	bgt.n	8018b86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8018ad0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8018ad4:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8018ad8:	9b07      	ldr	r3, [sp, #28]
 8018ada:	2b00      	cmp	r3, #0
 8018adc:	f340 80b8 	ble.w	8018c50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8018ae0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018ae4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8018ae8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018aec:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8018aee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018af2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018af6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018afa:	eef0 6a62 	vmov.f32	s13, s5
 8018afe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018b02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018b06:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018b0a:	ee16 4a90 	vmov	r4, s13
 8018b0e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018b12:	eef0 6a43 	vmov.f32	s13, s6
 8018b16:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018b1a:	ee12 2a90 	vmov	r2, s5
 8018b1e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018b22:	fb92 f3f3 	sdiv	r3, r2, r3
 8018b26:	ee13 2a10 	vmov	r2, s6
 8018b2a:	931b      	str	r3, [sp, #108]	@ 0x6c
 8018b2c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8018b2e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018b32:	931c      	str	r3, [sp, #112]	@ 0x70
 8018b34:	9b07      	ldr	r3, [sp, #28]
 8018b36:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8018b38:	3b01      	subs	r3, #1
 8018b3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018b3e:	9307      	str	r3, [sp, #28]
 8018b40:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8018b42:	ee16 6a90 	vmov	r6, s13
 8018b46:	bf14      	ite	ne
 8018b48:	461d      	movne	r5, r3
 8018b4a:	4615      	moveq	r5, r2
 8018b4c:	eeb0 3a67 	vmov.f32	s6, s15
 8018b50:	eef0 2a47 	vmov.f32	s5, s14
 8018b54:	e6f4      	b.n	8018940 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8018b56:	f111 0b01 	adds.w	fp, r1, #1
 8018b5a:	d48e      	bmi.n	8018a7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018b5c:	45de      	cmp	lr, fp
 8018b5e:	db8c      	blt.n	8018a7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018b60:	f110 0b01 	adds.w	fp, r0, #1
 8018b64:	d489      	bmi.n	8018a7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018b66:	455b      	cmp	r3, fp
 8018b68:	db87      	blt.n	8018a7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018b6a:	b21b      	sxth	r3, r3
 8018b6c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8018b70:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8018b74:	9300      	str	r3, [sp, #0]
 8018b76:	4642      	mov	r2, r8
 8018b78:	fa0f f38e 	sxth.w	r3, lr
 8018b7c:	4649      	mov	r1, r9
 8018b7e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8018b80:	f7ff fe4d 	bl	801881e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8018b84:	e779      	b.n	8018a7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018b86:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8018b88:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8018b8c:	1420      	asrs	r0, r4, #16
 8018b8e:	1431      	asrs	r1, r6, #16
 8018b90:	fb03 0101 	mla	r1, r3, r1, r0
 8018b94:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8018b98:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8018b9c:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8018ba0:	8841      	ldrh	r1, [r0, #2]
 8018ba2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018ba6:	f1be 0f00 	cmp.w	lr, #0
 8018baa:	d00b      	beq.n	8018bc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8018bac:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8018bb0:	3b01      	subs	r3, #1
 8018bb2:	005b      	lsls	r3, r3, #1
 8018bb4:	3302      	adds	r3, #2
 8018bb6:	eb00 0b03 	add.w	fp, r0, r3
 8018bba:	5ac3      	ldrh	r3, [r0, r3]
 8018bbc:	930a      	str	r3, [sp, #40]	@ 0x28
 8018bbe:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8018bc2:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018bc4:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8018bc8:	fb12 f30e 	smulbb	r3, r2, lr
 8018bcc:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8018bd0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018bd4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8018bd8:	10db      	asrs	r3, r3, #3
 8018bda:	ea40 000c 	orr.w	r0, r0, ip
 8018bde:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8018be2:	f1ce 0c10 	rsb	ip, lr, #16
 8018be6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8018bea:	ebac 0c02 	sub.w	ip, ip, r2
 8018bee:	ea4b 0101 	orr.w	r1, fp, r1
 8018bf2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8018bf6:	4351      	muls	r1, r2
 8018bf8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8018bfa:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8018bfe:	fb0c 1c00 	mla	ip, ip, r0, r1
 8018c02:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8018c06:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 8018c0a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8018c0c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8018c0e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8018c12:	0412      	lsls	r2, r2, #16
 8018c14:	ea4b 0000 	orr.w	r0, fp, r0
 8018c18:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8018c1c:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 8018c20:	fb03 c000 	mla	r0, r3, r0, ip
 8018c24:	ea42 0b0b 	orr.w	fp, r2, fp
 8018c28:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8018c2c:	fb03 000b 	mla	r0, r3, fp, r0
 8018c30:	0d43      	lsrs	r3, r0, #21
 8018c32:	0940      	lsrs	r0, r0, #5
 8018c34:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018c38:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8018c3c:	4318      	orrs	r0, r3
 8018c3e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8018c40:	f82a 0b02 	strh.w	r0, [sl], #2
 8018c44:	441c      	add	r4, r3
 8018c46:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8018c48:	f109 39ff 	add.w	r9, r9, #4294967295
 8018c4c:	441e      	add	r6, r3
 8018c4e:	e73c      	b.n	8018aca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8018c50:	b00f      	add	sp, #60	@ 0x3c
 8018c52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018c56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8018c56:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c5a:	b085      	sub	sp, #20
 8018c5c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 8018c60:	9102      	str	r1, [sp, #8]
 8018c62:	2c00      	cmp	r4, #0
 8018c64:	fb04 7103 	mla	r1, r4, r3, r7
 8018c68:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8018c6c:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8018c70:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 8018c74:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8018c78:	f2c0 811b 	blt.w	8018eb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8018c7c:	45a6      	cmp	lr, r4
 8018c7e:	f340 8118 	ble.w	8018eb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8018c82:	2f00      	cmp	r7, #0
 8018c84:	f2c0 8113 	blt.w	8018eae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8018c88:	42bb      	cmp	r3, r7
 8018c8a:	f340 8110 	ble.w	8018eae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8018c8e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8018c92:	1c7a      	adds	r2, r7, #1
 8018c94:	f100 8110 	bmi.w	8018eb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8018c98:	4293      	cmp	r3, r2
 8018c9a:	f340 810d 	ble.w	8018eb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8018c9e:	2e00      	cmp	r6, #0
 8018ca0:	f000 810c 	beq.w	8018ebc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8018ca4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8018ca8:	3401      	adds	r4, #1
 8018caa:	f100 810b 	bmi.w	8018ec4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8018cae:	45a6      	cmp	lr, r4
 8018cb0:	f340 8108 	ble.w	8018ec4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8018cb4:	2800      	cmp	r0, #0
 8018cb6:	f000 8108 	beq.w	8018eca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8018cba:	2f00      	cmp	r7, #0
 8018cbc:	f2c0 8100 	blt.w	8018ec0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8018cc0:	42bb      	cmp	r3, r7
 8018cc2:	f340 80fd 	ble.w	8018ec0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8018cc6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8018cca:	3701      	adds	r7, #1
 8018ccc:	f100 8100 	bmi.w	8018ed0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8018cd0:	42bb      	cmp	r3, r7
 8018cd2:	f340 80fd 	ble.w	8018ed0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8018cd6:	2e00      	cmp	r6, #0
 8018cd8:	f000 80fc 	beq.w	8018ed4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8018cdc:	3301      	adds	r3, #1
 8018cde:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8018ce2:	b2b6      	uxth	r6, r6
 8018ce4:	b280      	uxth	r0, r0
 8018ce6:	fb00 fe06 	mul.w	lr, r0, r6
 8018cea:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8018cee:	0136      	lsls	r6, r6, #4
 8018cf0:	eba6 070e 	sub.w	r7, r6, lr
 8018cf4:	b280      	uxth	r0, r0
 8018cf6:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8018cfa:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8018cfe:	b2bf      	uxth	r7, r7
 8018d00:	1a1b      	subs	r3, r3, r0
 8018d02:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8018d06:	b29b      	uxth	r3, r3
 8018d08:	fb0a f607 	mul.w	r6, sl, r7
 8018d0c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8018d10:	fb0b 6603 	mla	r6, fp, r3, r6
 8018d14:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8018d18:	fb00 6609 	mla	r6, r0, r9, r6
 8018d1c:	fb0e 6608 	mla	r6, lr, r8, r6
 8018d20:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8018d24:	9600      	str	r6, [sp, #0]
 8018d26:	2e00      	cmp	r6, #0
 8018d28:	f000 80be 	beq.w	8018ea8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8018d2c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8018d30:	fb0b fc0c 	mul.w	ip, fp, ip
 8018d34:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8018d38:	fb0b f505 	mul.w	r5, fp, r5
 8018d3c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8018d40:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8018d44:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8018d48:	44dc      	add	ip, fp
 8018d4a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018d4e:	9501      	str	r5, [sp, #4]
 8018d50:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8018d54:	9503      	str	r5, [sp, #12]
 8018d56:	9d01      	ldr	r5, [sp, #4]
 8018d58:	9e02      	ldr	r6, [sp, #8]
 8018d5a:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8018d5e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018d62:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8018d66:	fb0a fc0c 	mul.w	ip, sl, ip
 8018d6a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8018d6e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8018d72:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8018d76:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8018d7a:	4465      	add	r5, ip
 8018d7c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8018d80:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8018d84:	fb09 fc0c 	mul.w	ip, r9, ip
 8018d88:	fb09 f904 	mul.w	r9, r9, r4
 8018d8c:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8018d90:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8018d94:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8018d98:	fb08 f404 	mul.w	r4, r8, r4
 8018d9c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8018da0:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8018da4:	fb08 f802 	mul.w	r8, r8, r2
 8018da8:	fb0a fa01 	mul.w	sl, sl, r1
 8018dac:	0a22      	lsrs	r2, r4, #8
 8018dae:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8018db2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8018db6:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8018dba:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8018dbe:	4414      	add	r4, r2
 8018dc0:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8018dc4:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8018dc8:	0a2d      	lsrs	r5, r5, #8
 8018dca:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8018dce:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8018dd2:	9a03      	ldr	r2, [sp, #12]
 8018dd4:	8836      	ldrh	r6, [r6, #0]
 8018dd6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8018dda:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8018dde:	437d      	muls	r5, r7
 8018de0:	4461      	add	r1, ip
 8018de2:	0a24      	lsrs	r4, r4, #8
 8018de4:	fb02 5503 	mla	r5, r2, r3, r5
 8018de8:	0a09      	lsrs	r1, r1, #8
 8018dea:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8018dee:	fb04 540e 	mla	r4, r4, lr, r5
 8018df2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8018df6:	fb01 4100 	mla	r1, r1, r0, r4
 8018dfa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018dfe:	0a09      	lsrs	r1, r1, #8
 8018e00:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018e04:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8018e08:	fb07 f70a 	mul.w	r7, r7, sl
 8018e0c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8018e10:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8018e14:	fb03 7101 	mla	r1, r3, r1, r7
 8018e18:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018e1c:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8018e20:	fb0e 1e08 	mla	lr, lr, r8, r1
 8018e24:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8018e28:	fb00 e101 	mla	r1, r0, r1, lr
 8018e2c:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 8018e30:	9a00      	ldr	r2, [sp, #0]
 8018e32:	b287      	uxth	r7, r0
 8018e34:	437a      	muls	r2, r7
 8018e36:	0a09      	lsrs	r1, r1, #8
 8018e38:	1c53      	adds	r3, r2, #1
 8018e3a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8018e3e:	4321      	orrs	r1, r4
 8018e40:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018e44:	1235      	asrs	r5, r6, #8
 8018e46:	0c0a      	lsrs	r2, r1, #16
 8018e48:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8018e4c:	b2db      	uxtb	r3, r3
 8018e4e:	fb12 f207 	smulbb	r2, r2, r7
 8018e52:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8018e56:	fb05 2503 	mla	r5, r5, r3, r2
 8018e5a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8018e5e:	10f2      	asrs	r2, r6, #3
 8018e60:	b2c8      	uxtb	r0, r1
 8018e62:	00f6      	lsls	r6, r6, #3
 8018e64:	fb14 f407 	smulbb	r4, r4, r7
 8018e68:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8018e6c:	b2f6      	uxtb	r6, r6
 8018e6e:	fb10 f007 	smulbb	r0, r0, r7
 8018e72:	fb02 4203 	mla	r2, r2, r3, r4
 8018e76:	b2ad      	uxth	r5, r5
 8018e78:	fb06 0303 	mla	r3, r6, r3, r0
 8018e7c:	b299      	uxth	r1, r3
 8018e7e:	b294      	uxth	r4, r2
 8018e80:	1c6b      	adds	r3, r5, #1
 8018e82:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8018e86:	1c62      	adds	r2, r4, #1
 8018e88:	1c4b      	adds	r3, r1, #1
 8018e8a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8018e8e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8018e92:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8018e96:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018e9a:	0952      	lsrs	r2, r2, #5
 8018e9c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8018ea0:	432b      	orrs	r3, r5
 8018ea2:	4313      	orrs	r3, r2
 8018ea4:	9a02      	ldr	r2, [sp, #8]
 8018ea6:	8013      	strh	r3, [r2, #0]
 8018ea8:	b005      	add	sp, #20
 8018eaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018eae:	2500      	movs	r5, #0
 8018eb0:	e6ef      	b.n	8018c92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8018eb2:	2100      	movs	r1, #0
 8018eb4:	460d      	mov	r5, r1
 8018eb6:	e6f7      	b.n	8018ca8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8018eb8:	2100      	movs	r1, #0
 8018eba:	e6f5      	b.n	8018ca8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8018ebc:	4631      	mov	r1, r6
 8018ebe:	e6f3      	b.n	8018ca8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8018ec0:	2400      	movs	r4, #0
 8018ec2:	e702      	b.n	8018cca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8018ec4:	2200      	movs	r2, #0
 8018ec6:	4614      	mov	r4, r2
 8018ec8:	e70b      	b.n	8018ce2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8018eca:	4602      	mov	r2, r0
 8018ecc:	4604      	mov	r4, r0
 8018ece:	e708      	b.n	8018ce2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8018ed0:	2200      	movs	r2, #0
 8018ed2:	e706      	b.n	8018ce2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8018ed4:	4632      	mov	r2, r6
 8018ed6:	e704      	b.n	8018ce2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08018ed8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018ed8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018edc:	b09d      	sub	sp, #116	@ 0x74
 8018ede:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 8018ee2:	9219      	str	r2, [sp, #100]	@ 0x64
 8018ee4:	9307      	str	r3, [sp, #28]
 8018ee6:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 8018ee8:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 8018eec:	931a      	str	r3, [sp, #104]	@ 0x68
 8018eee:	9117      	str	r1, [sp, #92]	@ 0x5c
 8018ef0:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 8018ef4:	901b      	str	r0, [sp, #108]	@ 0x6c
 8018ef6:	6850      	ldr	r0, [r2, #4]
 8018ef8:	6812      	ldr	r2, [r2, #0]
 8018efa:	fb00 1303 	mla	r3, r0, r3, r1
 8018efe:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018f02:	930a      	str	r3, [sp, #40]	@ 0x28
 8018f04:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8018f06:	681b      	ldr	r3, [r3, #0]
 8018f08:	9310      	str	r3, [sp, #64]	@ 0x40
 8018f0a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8018f0e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018f10:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8018f12:	2b00      	cmp	r3, #0
 8018f14:	dc03      	bgt.n	8018f1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8018f16:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8018f18:	2b00      	cmp	r3, #0
 8018f1a:	f340 8375 	ble.w	8019608 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8018f1e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8018f20:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018f24:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018f28:	1e48      	subs	r0, r1, #1
 8018f2a:	1e57      	subs	r7, r2, #1
 8018f2c:	9b07      	ldr	r3, [sp, #28]
 8018f2e:	2b00      	cmp	r3, #0
 8018f30:	f340 818e 	ble.w	8019250 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8018f34:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8018f38:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018f3c:	d406      	bmi.n	8018f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8018f3e:	4584      	cmp	ip, r0
 8018f40:	da04      	bge.n	8018f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8018f42:	2b00      	cmp	r3, #0
 8018f44:	db02      	blt.n	8018f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8018f46:	42bb      	cmp	r3, r7
 8018f48:	f2c0 8183 	blt.w	8019252 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8018f4c:	f11c 0c01 	adds.w	ip, ip, #1
 8018f50:	f100 8173 	bmi.w	801923a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8018f54:	4561      	cmp	r1, ip
 8018f56:	f2c0 8170 	blt.w	801923a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8018f5a:	3301      	adds	r3, #1
 8018f5c:	f100 816d 	bmi.w	801923a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8018f60:	429a      	cmp	r2, r3
 8018f62:	f2c0 816a 	blt.w	801923a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8018f66:	9b07      	ldr	r3, [sp, #28]
 8018f68:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8018f6a:	9318      	str	r3, [sp, #96]	@ 0x60
 8018f6c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8018f6e:	2b00      	cmp	r3, #0
 8018f70:	f340 818c 	ble.w	801928c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8018f74:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 8018f76:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8018f78:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8018f7c:	689b      	ldr	r3, [r3, #8]
 8018f7e:	1422      	asrs	r2, r4, #16
 8018f80:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8018f84:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8018f88:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8018f8c:	f100 81cd 	bmi.w	801932a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8018f90:	f103 38ff 	add.w	r8, r3, #4294967295
 8018f94:	4542      	cmp	r2, r8
 8018f96:	f280 81c8 	bge.w	801932a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8018f9a:	f1bc 0f00 	cmp.w	ip, #0
 8018f9e:	f2c0 81c4 	blt.w	801932a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8018fa2:	f10e 38ff 	add.w	r8, lr, #4294967295
 8018fa6:	45c4      	cmp	ip, r8
 8018fa8:	f280 81bf 	bge.w	801932a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8018fac:	b21b      	sxth	r3, r3
 8018fae:	fb0c 2203 	mla	r2, ip, r3, r2
 8018fb2:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8018fb4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8018fb8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8018fbc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8018fc0:	2800      	cmp	r0, #0
 8018fc2:	f000 81a9 	beq.w	8019318 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8018fc6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8018fca:	950c      	str	r5, [sp, #48]	@ 0x30
 8018fcc:	0e2d      	lsrs	r5, r5, #24
 8018fce:	9513      	str	r5, [sp, #76]	@ 0x4c
 8018fd0:	b181      	cbz	r1, 8018ff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8018fd2:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8018fd6:	3b01      	subs	r3, #1
 8018fd8:	009b      	lsls	r3, r3, #2
 8018fda:	3304      	adds	r3, #4
 8018fdc:	eb08 0c03 	add.w	ip, r8, r3
 8018fe0:	f858 3003 	ldr.w	r3, [r8, r3]
 8018fe4:	9308      	str	r3, [sp, #32]
 8018fe6:	0e1b      	lsrs	r3, r3, #24
 8018fe8:	9311      	str	r3, [sp, #68]	@ 0x44
 8018fea:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8018fee:	930d      	str	r3, [sp, #52]	@ 0x34
 8018ff0:	0e1b      	lsrs	r3, r3, #24
 8018ff2:	9314      	str	r3, [sp, #80]	@ 0x50
 8018ff4:	b280      	uxth	r0, r0
 8018ff6:	b289      	uxth	r1, r1
 8018ff8:	fb00 f901 	mul.w	r9, r0, r1
 8018ffc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019000:	0100      	lsls	r0, r0, #4
 8019002:	eba0 0809 	sub.w	r8, r0, r9
 8019006:	b289      	uxth	r1, r1
 8019008:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801900c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801900e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8019010:	fa1f f888 	uxth.w	r8, r8
 8019014:	1a5b      	subs	r3, r3, r1
 8019016:	b29b      	uxth	r3, r3
 8019018:	fb08 f000 	mul.w	r0, r8, r0
 801901c:	fb03 000e 	mla	r0, r3, lr, r0
 8019020:	fb01 0005 	mla	r0, r1, r5, r0
 8019024:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8019026:	fb09 0005 	mla	r0, r9, r5, r0
 801902a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801902e:	2800      	cmp	r0, #0
 8019030:	f000 80fa 	beq.w	8019228 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8019034:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8019038:	d01b      	beq.n	8019072 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801903a:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801903e:	fb0e fa0a 	mul.w	sl, lr, sl
 8019042:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8019046:	fb0e fe02 	mul.w	lr, lr, r2
 801904a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801904e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8019052:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8019056:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801905a:	4452      	add	r2, sl
 801905c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019060:	0a12      	lsrs	r2, r2, #8
 8019062:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019066:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801906a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801906e:	ea42 020c 	orr.w	r2, r2, ip
 8019072:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8019074:	2dff      	cmp	r5, #255	@ 0xff
 8019076:	d021      	beq.n	80190bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8019078:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801907a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801907e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8019080:	fb05 fb0b 	mul.w	fp, r5, fp
 8019084:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8019086:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801908a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801908c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019090:	fb05 fa0a 	mul.w	sl, r5, sl
 8019094:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8019098:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801909c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80190a0:	44de      	add	lr, fp
 80190a2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80190a6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80190aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80190ae:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80190b2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80190b6:	ea4e 050a 	orr.w	r5, lr, sl
 80190ba:	950c      	str	r5, [sp, #48]	@ 0x30
 80190bc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80190be:	2dff      	cmp	r5, #255	@ 0xff
 80190c0:	d021      	beq.n	8019106 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 80190c2:	9d08      	ldr	r5, [sp, #32]
 80190c4:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 80190c8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80190ca:	fb05 fb0b 	mul.w	fp, r5, fp
 80190ce:	9d08      	ldr	r5, [sp, #32]
 80190d0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80190d4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80190d6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80190da:	fb05 fa0a 	mul.w	sl, r5, sl
 80190de:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80190e2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80190e6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80190ea:	44de      	add	lr, fp
 80190ec:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80190f0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80190f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80190f8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80190fc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019100:	ea4e 050a 	orr.w	r5, lr, sl
 8019104:	9508      	str	r5, [sp, #32]
 8019106:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8019108:	2dff      	cmp	r5, #255	@ 0xff
 801910a:	d021      	beq.n	8019150 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801910c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801910e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8019112:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8019114:	fb05 fb0b 	mul.w	fp, r5, fp
 8019118:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801911a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801911e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8019120:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019124:	fb05 fa0a 	mul.w	sl, r5, sl
 8019128:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801912c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8019130:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8019134:	44de      	add	lr, fp
 8019136:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801913a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801913e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019142:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8019146:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801914a:	ea4e 050a 	orr.w	r5, lr, sl
 801914e:	950d      	str	r5, [sp, #52]	@ 0x34
 8019150:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8019152:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8019156:	9d08      	ldr	r5, [sp, #32]
 8019158:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801915c:	fb08 fc0c 	mul.w	ip, r8, ip
 8019160:	fb03 cc0e 	mla	ip, r3, lr, ip
 8019164:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8019168:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801916a:	fb01 cc0e 	mla	ip, r1, lr, ip
 801916e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8019172:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8019174:	fb09 cc0e 	mla	ip, r9, lr, ip
 8019178:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801917c:	fb08 f80e 	mul.w	r8, r8, lr
 8019180:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8019184:	fb03 8202 	mla	r2, r3, r2, r8
 8019188:	9b08      	ldr	r3, [sp, #32]
 801918a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801918c:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 8019190:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019192:	fb01 220a 	mla	r2, r1, sl, r2
 8019196:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 801919a:	fb09 2901 	mla	r9, r9, r1, r2
 801919e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80191a0:	883b      	ldrh	r3, [r7, #0]
 80191a2:	4342      	muls	r2, r0
 80191a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80191a8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80191ac:	1c50      	adds	r0, r2, #1
 80191ae:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80191b2:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 80191b6:	ea4c 0c09 	orr.w	ip, ip, r9
 80191ba:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80191be:	1219      	asrs	r1, r3, #8
 80191c0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80191c4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80191c8:	b2c0      	uxtb	r0, r0
 80191ca:	fb12 f205 	smulbb	r2, r2, r5
 80191ce:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80191d2:	fb01 2100 	mla	r1, r1, r0, r2
 80191d6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80191da:	10da      	asrs	r2, r3, #3
 80191dc:	fa5f fc8c 	uxtb.w	ip, ip
 80191e0:	00db      	lsls	r3, r3, #3
 80191e2:	fb1c fc05 	smulbb	ip, ip, r5
 80191e6:	b2db      	uxtb	r3, r3
 80191e8:	b289      	uxth	r1, r1
 80191ea:	fb03 c300 	mla	r3, r3, r0, ip
 80191ee:	fa1f fc83 	uxth.w	ip, r3
 80191f2:	1c4b      	adds	r3, r1, #1
 80191f4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80191f8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80191fc:	fb1e fe05 	smulbb	lr, lr, r5
 8019200:	f10c 0301 	add.w	r3, ip, #1
 8019204:	fb02 e200 	mla	r2, r2, r0, lr
 8019208:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801920c:	b292      	uxth	r2, r2
 801920e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8019212:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019216:	430b      	orrs	r3, r1
 8019218:	1c51      	adds	r1, r2, #1
 801921a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801921e:	0952      	lsrs	r2, r2, #5
 8019220:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019224:	4313      	orrs	r3, r2
 8019226:	803b      	strh	r3, [r7, #0]
 8019228:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801922a:	441c      	add	r4, r3
 801922c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801922e:	441e      	add	r6, r3
 8019230:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8019232:	3b01      	subs	r3, #1
 8019234:	3702      	adds	r7, #2
 8019236:	9318      	str	r3, [sp, #96]	@ 0x60
 8019238:	e698      	b.n	8018f6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801923a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801923c:	441c      	add	r4, r3
 801923e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019240:	441e      	add	r6, r3
 8019242:	9b07      	ldr	r3, [sp, #28]
 8019244:	3b01      	subs	r3, #1
 8019246:	9307      	str	r3, [sp, #28]
 8019248:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801924a:	3302      	adds	r3, #2
 801924c:	930a      	str	r3, [sp, #40]	@ 0x28
 801924e:	e66d      	b.n	8018f2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019250:	d023      	beq.n	801929a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8019252:	9b07      	ldr	r3, [sp, #28]
 8019254:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 8019256:	3b01      	subs	r3, #1
 8019258:	fb00 4003 	mla	r0, r0, r3, r4
 801925c:	1400      	asrs	r0, r0, #16
 801925e:	f53f ae82 	bmi.w	8018f66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8019262:	3901      	subs	r1, #1
 8019264:	4288      	cmp	r0, r1
 8019266:	f6bf ae7e 	bge.w	8018f66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801926a:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801926c:	fb01 6303 	mla	r3, r1, r3, r6
 8019270:	141b      	asrs	r3, r3, #16
 8019272:	f53f ae78 	bmi.w	8018f66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8019276:	3a01      	subs	r2, #1
 8019278:	4293      	cmp	r3, r2
 801927a:	f6bf ae74 	bge.w	8018f66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801927e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8019282:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8019286:	f1bb 0f00 	cmp.w	fp, #0
 801928a:	dc6c      	bgt.n	8019366 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801928c:	9b07      	ldr	r3, [sp, #28]
 801928e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019292:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019294:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8019298:	930a      	str	r3, [sp, #40]	@ 0x28
 801929a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801929c:	2b00      	cmp	r3, #0
 801929e:	f340 81b3 	ble.w	8019608 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80192a2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80192a6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80192aa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80192ae:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80192b0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80192b4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80192b8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80192bc:	eef0 6a62 	vmov.f32	s13, s5
 80192c0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80192c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80192c8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80192cc:	ee16 4a90 	vmov	r4, s13
 80192d0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80192d4:	eef0 6a43 	vmov.f32	s13, s6
 80192d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80192dc:	ee12 2a90 	vmov	r2, s5
 80192e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80192e4:	fb92 f3f3 	sdiv	r3, r2, r3
 80192e8:	ee13 2a10 	vmov	r2, s6
 80192ec:	9329      	str	r3, [sp, #164]	@ 0xa4
 80192ee:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80192f0:	fb92 f3f3 	sdiv	r3, r2, r3
 80192f4:	932a      	str	r3, [sp, #168]	@ 0xa8
 80192f6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80192f8:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80192fa:	3b01      	subs	r3, #1
 80192fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019300:	9317      	str	r3, [sp, #92]	@ 0x5c
 8019302:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8019304:	bf08      	it	eq
 8019306:	4613      	moveq	r3, r2
 8019308:	ee16 6a90 	vmov	r6, s13
 801930c:	9307      	str	r3, [sp, #28]
 801930e:	eeb0 3a67 	vmov.f32	s6, s15
 8019312:	eef0 2a47 	vmov.f32	s5, s14
 8019316:	e5fb      	b.n	8018f10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019318:	2900      	cmp	r1, #0
 801931a:	f43f ae6b 	beq.w	8018ff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801931e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8019322:	9308      	str	r3, [sp, #32]
 8019324:	0e1b      	lsrs	r3, r3, #24
 8019326:	9311      	str	r3, [sp, #68]	@ 0x44
 8019328:	e664      	b.n	8018ff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801932a:	f112 0801 	adds.w	r8, r2, #1
 801932e:	f53f af7b 	bmi.w	8019228 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8019332:	4543      	cmp	r3, r8
 8019334:	f6ff af78 	blt.w	8019228 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8019338:	f11c 0801 	adds.w	r8, ip, #1
 801933c:	f53f af74 	bmi.w	8019228 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8019340:	45c6      	cmp	lr, r8
 8019342:	f6ff af71 	blt.w	8019228 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8019346:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8019348:	9201      	str	r2, [sp, #4]
 801934a:	fa0f f28e 	sxth.w	r2, lr
 801934e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8019352:	e9cd c002 	strd	ip, r0, [sp, #8]
 8019356:	9200      	str	r2, [sp, #0]
 8019358:	b21b      	sxth	r3, r3
 801935a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801935c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801935e:	4639      	mov	r1, r7
 8019360:	f7ff fc79 	bl	8018c56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8019364:	e760      	b.n	8019228 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8019366:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8019368:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801936a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801936e:	1427      	asrs	r7, r4, #16
 8019370:	1433      	asrs	r3, r6, #16
 8019372:	fb01 7303 	mla	r3, r1, r3, r7
 8019376:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801937a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801937e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019382:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019386:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801938a:	2a00      	cmp	r2, #0
 801938c:	f000 8133 	beq.w	80195f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8019390:	687d      	ldr	r5, [r7, #4]
 8019392:	950e      	str	r5, [sp, #56]	@ 0x38
 8019394:	0e2d      	lsrs	r5, r5, #24
 8019396:	9515      	str	r5, [sp, #84]	@ 0x54
 8019398:	b178      	cbz	r0, 80193ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801939a:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801939e:	3901      	subs	r1, #1
 80193a0:	0089      	lsls	r1, r1, #2
 80193a2:	3104      	adds	r1, #4
 80193a4:	eb07 0e01 	add.w	lr, r7, r1
 80193a8:	5879      	ldr	r1, [r7, r1]
 80193aa:	9109      	str	r1, [sp, #36]	@ 0x24
 80193ac:	0e09      	lsrs	r1, r1, #24
 80193ae:	9112      	str	r1, [sp, #72]	@ 0x48
 80193b0:	f8de 1004 	ldr.w	r1, [lr, #4]
 80193b4:	910f      	str	r1, [sp, #60]	@ 0x3c
 80193b6:	0e09      	lsrs	r1, r1, #24
 80193b8:	9116      	str	r1, [sp, #88]	@ 0x58
 80193ba:	b292      	uxth	r2, r2
 80193bc:	b280      	uxth	r0, r0
 80193be:	fb02 f800 	mul.w	r8, r2, r0
 80193c2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80193c6:	0112      	lsls	r2, r2, #4
 80193c8:	eba2 0e08 	sub.w	lr, r2, r8
 80193cc:	b280      	uxth	r0, r0
 80193ce:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 80193d2:	9915      	ldr	r1, [sp, #84]	@ 0x54
 80193d4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80193d6:	fa1f fe8e 	uxth.w	lr, lr
 80193da:	1a12      	subs	r2, r2, r0
 80193dc:	b292      	uxth	r2, r2
 80193de:	fb0e f101 	mul.w	r1, lr, r1
 80193e2:	fb02 110c 	mla	r1, r2, ip, r1
 80193e6:	fb00 1105 	mla	r1, r0, r5, r1
 80193ea:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80193ec:	fb08 1105 	mla	r1, r8, r5, r1
 80193f0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80193f4:	2900      	cmp	r1, #0
 80193f6:	f000 80f5 	beq.w	80195e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 80193fa:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 80193fe:	d019      	beq.n	8019434 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8019400:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8019404:	fb0c fa0a 	mul.w	sl, ip, sl
 8019408:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801940c:	fb0c fc03 	mul.w	ip, ip, r3
 8019410:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8019414:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8019418:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801941c:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8019420:	4453      	add	r3, sl
 8019422:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8019426:	0a1b      	lsrs	r3, r3, #8
 8019428:	0a3f      	lsrs	r7, r7, #8
 801942a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801942e:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8019432:	433b      	orrs	r3, r7
 8019434:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8019436:	2dff      	cmp	r5, #255	@ 0xff
 8019438:	d020      	beq.n	801947c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801943a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801943c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8019440:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8019442:	436f      	muls	r7, r5
 8019444:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8019446:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801944a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801944c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019450:	fb05 fa0a 	mul.w	sl, r5, sl
 8019454:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8019458:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801945c:	44bc      	add	ip, r7
 801945e:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8019462:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019466:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801946a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801946e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019472:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019476:	ea4c 050a 	orr.w	r5, ip, sl
 801947a:	950e      	str	r5, [sp, #56]	@ 0x38
 801947c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801947e:	2dff      	cmp	r5, #255	@ 0xff
 8019480:	d020      	beq.n	80194c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8019482:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8019484:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8019488:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801948a:	436f      	muls	r7, r5
 801948c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801948e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8019492:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8019494:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019498:	fb05 fa0a 	mul.w	sl, r5, sl
 801949c:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80194a0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80194a4:	44bc      	add	ip, r7
 80194a6:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80194aa:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80194ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80194b2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80194b6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80194ba:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80194be:	ea4c 050a 	orr.w	r5, ip, sl
 80194c2:	9509      	str	r5, [sp, #36]	@ 0x24
 80194c4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80194c6:	2dff      	cmp	r5, #255	@ 0xff
 80194c8:	d020      	beq.n	801950c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80194ca:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80194cc:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80194d0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80194d2:	436f      	muls	r7, r5
 80194d4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80194d6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80194da:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80194dc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80194e0:	fb05 fa0a 	mul.w	sl, r5, sl
 80194e4:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80194e8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80194ec:	44bc      	add	ip, r7
 80194ee:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80194f2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80194f6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80194fa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80194fe:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019502:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019506:	ea4c 050a 	orr.w	r5, ip, sl
 801950a:	950f      	str	r5, [sp, #60]	@ 0x3c
 801950c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801950e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8019512:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8019514:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8019518:	fb0e f707 	mul.w	r7, lr, r7
 801951c:	fb02 770c 	mla	r7, r2, ip, r7
 8019520:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8019524:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8019526:	fb00 770c 	mla	r7, r0, ip, r7
 801952a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801952e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8019530:	fb08 770c 	mla	r7, r8, ip, r7
 8019534:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8019538:	fb0e fe0c 	mul.w	lr, lr, ip
 801953c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8019540:	fb02 e303 	mla	r3, r2, r3, lr
 8019544:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8019546:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8019548:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801954c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801954e:	fb00 330a 	mla	r3, r0, sl, r3
 8019552:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8019556:	fb08 3c0c 	mla	ip, r8, ip, r3
 801955a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801955c:	f8b9 0000 	ldrh.w	r0, [r9]
 8019560:	4359      	muls	r1, r3
 8019562:	0a3f      	lsrs	r7, r7, #8
 8019564:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019568:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801956c:	1c4b      	adds	r3, r1, #1
 801956e:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8019572:	ea47 070c 	orr.w	r7, r7, ip
 8019576:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801957a:	1202      	asrs	r2, r0, #8
 801957c:	0c3b      	lsrs	r3, r7, #16
 801957e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8019582:	b2c9      	uxtb	r1, r1
 8019584:	fb13 f305 	smulbb	r3, r3, r5
 8019588:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801958c:	fb02 3201 	mla	r2, r2, r1, r3
 8019590:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8019594:	10c3      	asrs	r3, r0, #3
 8019596:	b2ff      	uxtb	r7, r7
 8019598:	00c0      	lsls	r0, r0, #3
 801959a:	b2c0      	uxtb	r0, r0
 801959c:	fb17 f705 	smulbb	r7, r7, r5
 80195a0:	fb00 7001 	mla	r0, r0, r1, r7
 80195a4:	b292      	uxth	r2, r2
 80195a6:	fb1c fc05 	smulbb	ip, ip, r5
 80195aa:	b280      	uxth	r0, r0
 80195ac:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80195b0:	fb03 c301 	mla	r3, r3, r1, ip
 80195b4:	1c51      	adds	r1, r2, #1
 80195b6:	f100 0c01 	add.w	ip, r0, #1
 80195ba:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80195be:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80195c2:	b29b      	uxth	r3, r3
 80195c4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80195c8:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 80195cc:	ea4c 0202 	orr.w	r2, ip, r2
 80195d0:	f103 0c01 	add.w	ip, r3, #1
 80195d4:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80195d8:	095b      	lsrs	r3, r3, #5
 80195da:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80195de:	431a      	orrs	r2, r3
 80195e0:	f8a9 2000 	strh.w	r2, [r9]
 80195e4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80195e6:	441c      	add	r4, r3
 80195e8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80195ea:	f109 0902 	add.w	r9, r9, #2
 80195ee:	441e      	add	r6, r3
 80195f0:	f10b 3bff 	add.w	fp, fp, #4294967295
 80195f4:	e647      	b.n	8019286 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80195f6:	2800      	cmp	r0, #0
 80195f8:	f43f aedf 	beq.w	80193ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80195fc:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8019600:	9109      	str	r1, [sp, #36]	@ 0x24
 8019602:	0e09      	lsrs	r1, r1, #24
 8019604:	9112      	str	r1, [sp, #72]	@ 0x48
 8019606:	e6d8      	b.n	80193ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8019608:	b01d      	add	sp, #116	@ 0x74
 801960a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801960e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801960e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019612:	b085      	sub	sp, #20
 8019614:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 8019618:	9102      	str	r1, [sp, #8]
 801961a:	2c00      	cmp	r4, #0
 801961c:	fb04 7103 	mla	r1, r4, r3, r7
 8019620:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8019624:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8019628:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801962c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8019630:	f2c0 810c 	blt.w	801984c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8019634:	45a6      	cmp	lr, r4
 8019636:	f340 8109 	ble.w	801984c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801963a:	2f00      	cmp	r7, #0
 801963c:	f2c0 8104 	blt.w	8019848 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8019640:	42bb      	cmp	r3, r7
 8019642:	f340 8101 	ble.w	8019848 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8019646:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801964a:	1c7a      	adds	r2, r7, #1
 801964c:	f100 8101 	bmi.w	8019852 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8019650:	4293      	cmp	r3, r2
 8019652:	f340 80fe 	ble.w	8019852 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8019656:	2e00      	cmp	r6, #0
 8019658:	f000 80fd 	beq.w	8019856 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801965c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8019660:	3401      	adds	r4, #1
 8019662:	f100 80fc 	bmi.w	801985e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8019666:	45a6      	cmp	lr, r4
 8019668:	f340 80f9 	ble.w	801985e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801966c:	2800      	cmp	r0, #0
 801966e:	f000 80f9 	beq.w	8019864 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8019672:	2f00      	cmp	r7, #0
 8019674:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8019678:	f2c0 80ef 	blt.w	801985a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801967c:	42bb      	cmp	r3, r7
 801967e:	f340 80ec 	ble.w	801985a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8019682:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8019686:	3701      	adds	r7, #1
 8019688:	f100 80ef 	bmi.w	801986a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801968c:	42bb      	cmp	r3, r7
 801968e:	f340 80ec 	ble.w	801986a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8019692:	2e00      	cmp	r6, #0
 8019694:	f000 80eb 	beq.w	801986e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8019698:	6852      	ldr	r2, [r2, #4]
 801969a:	b2b6      	uxth	r6, r6
 801969c:	b280      	uxth	r0, r0
 801969e:	fb00 fe06 	mul.w	lr, r0, r6
 80196a2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80196a6:	0136      	lsls	r6, r6, #4
 80196a8:	eba6 070e 	sub.w	r7, r6, lr
 80196ac:	b280      	uxth	r0, r0
 80196ae:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 80196b2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80196b6:	b2bf      	uxth	r7, r7
 80196b8:	1a1b      	subs	r3, r3, r0
 80196ba:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80196be:	b29b      	uxth	r3, r3
 80196c0:	fb07 f60a 	mul.w	r6, r7, sl
 80196c4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80196c8:	fb0b 6603 	mla	r6, fp, r3, r6
 80196cc:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80196d0:	fb00 6609 	mla	r6, r0, r9, r6
 80196d4:	fb0e 6608 	mla	r6, lr, r8, r6
 80196d8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80196dc:	9600      	str	r6, [sp, #0]
 80196de:	2e00      	cmp	r6, #0
 80196e0:	f000 80af 	beq.w	8019842 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 80196e4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80196e8:	fb0b fc0c 	mul.w	ip, fp, ip
 80196ec:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 80196f0:	fb0b f505 	mul.w	r5, fp, r5
 80196f4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80196f8:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 80196fc:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8019700:	44dc      	add	ip, fp
 8019702:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019706:	9501      	str	r5, [sp, #4]
 8019708:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801970c:	9503      	str	r5, [sp, #12]
 801970e:	9d01      	ldr	r5, [sp, #4]
 8019710:	9e02      	ldr	r6, [sp, #8]
 8019712:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8019716:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801971a:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801971e:	fb0a fc0c 	mul.w	ip, sl, ip
 8019722:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8019726:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801972a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801972e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8019732:	4465      	add	r5, ip
 8019734:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8019738:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801973c:	fb09 fc0c 	mul.w	ip, r9, ip
 8019740:	fb09 f904 	mul.w	r9, r9, r4
 8019744:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8019748:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801974c:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8019750:	fb08 f404 	mul.w	r4, r8, r4
 8019754:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8019758:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801975c:	fb08 f802 	mul.w	r8, r8, r2
 8019760:	fb0a fa01 	mul.w	sl, sl, r1
 8019764:	0a22      	lsrs	r2, r4, #8
 8019766:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801976a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801976e:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8019772:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8019776:	4414      	add	r4, r2
 8019778:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801977c:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8019780:	0a2d      	lsrs	r5, r5, #8
 8019782:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8019786:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801978a:	9a03      	ldr	r2, [sp, #12]
 801978c:	8836      	ldrh	r6, [r6, #0]
 801978e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8019792:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8019796:	437d      	muls	r5, r7
 8019798:	4461      	add	r1, ip
 801979a:	0a24      	lsrs	r4, r4, #8
 801979c:	fb02 5503 	mla	r5, r2, r3, r5
 80197a0:	0a09      	lsrs	r1, r1, #8
 80197a2:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 80197a6:	fb04 540e 	mla	r4, r4, lr, r5
 80197aa:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80197ae:	fb01 4100 	mla	r1, r1, r0, r4
 80197b2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80197b6:	0a09      	lsrs	r1, r1, #8
 80197b8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80197bc:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 80197c0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80197c4:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 80197c8:	fb07 f70a 	mul.w	r7, r7, sl
 80197cc:	fb03 7101 	mla	r1, r3, r1, r7
 80197d0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80197d4:	9b00      	ldr	r3, [sp, #0]
 80197d6:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 80197da:	fb0e 1e08 	mla	lr, lr, r8, r1
 80197de:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 80197e2:	fb00 e101 	mla	r1, r0, r1, lr
 80197e6:	43da      	mvns	r2, r3
 80197e8:	1233      	asrs	r3, r6, #8
 80197ea:	b2d2      	uxtb	r2, r2
 80197ec:	10f0      	asrs	r0, r6, #3
 80197ee:	0a09      	lsrs	r1, r1, #8
 80197f0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80197f4:	00f6      	lsls	r6, r6, #3
 80197f6:	4353      	muls	r3, r2
 80197f8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80197fc:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8019800:	b2f6      	uxtb	r6, r6
 8019802:	4321      	orrs	r1, r4
 8019804:	4350      	muls	r0, r2
 8019806:	4356      	muls	r6, r2
 8019808:	1c5a      	adds	r2, r3, #1
 801980a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801980e:	0c0b      	lsrs	r3, r1, #16
 8019810:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019814:	1c42      	adds	r2, r0, #1
 8019816:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801981a:	0a0a      	lsrs	r2, r1, #8
 801981c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8019820:	021b      	lsls	r3, r3, #8
 8019822:	00d2      	lsls	r2, r2, #3
 8019824:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019828:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801982c:	4313      	orrs	r3, r2
 801982e:	1c72      	adds	r2, r6, #1
 8019830:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8019834:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8019838:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801983c:	4319      	orrs	r1, r3
 801983e:	9b02      	ldr	r3, [sp, #8]
 8019840:	8019      	strh	r1, [r3, #0]
 8019842:	b005      	add	sp, #20
 8019844:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019848:	2500      	movs	r5, #0
 801984a:	e6fe      	b.n	801964a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801984c:	2100      	movs	r1, #0
 801984e:	460d      	mov	r5, r1
 8019850:	e706      	b.n	8019660 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8019852:	2100      	movs	r1, #0
 8019854:	e704      	b.n	8019660 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8019856:	4631      	mov	r1, r6
 8019858:	e702      	b.n	8019660 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801985a:	2400      	movs	r4, #0
 801985c:	e713      	b.n	8019686 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801985e:	2200      	movs	r2, #0
 8019860:	4614      	mov	r4, r2
 8019862:	e71a      	b.n	801969a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8019864:	4602      	mov	r2, r0
 8019866:	4604      	mov	r4, r0
 8019868:	e717      	b.n	801969a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801986a:	2200      	movs	r2, #0
 801986c:	e715      	b.n	801969a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801986e:	4632      	mov	r2, r6
 8019870:	e713      	b.n	801969a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08019874 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019874:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019878:	b09b      	sub	sp, #108	@ 0x6c
 801987a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 801987e:	9218      	str	r2, [sp, #96]	@ 0x60
 8019880:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8019882:	9116      	str	r1, [sp, #88]	@ 0x58
 8019884:	9307      	str	r3, [sp, #28]
 8019886:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801988a:	9019      	str	r0, [sp, #100]	@ 0x64
 801988c:	6850      	ldr	r0, [r2, #4]
 801988e:	6812      	ldr	r2, [r2, #0]
 8019890:	fb00 1303 	mla	r3, r0, r3, r1
 8019894:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019898:	930a      	str	r3, [sp, #40]	@ 0x28
 801989a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801989c:	681b      	ldr	r3, [r3, #0]
 801989e:	930f      	str	r3, [sp, #60]	@ 0x3c
 80198a0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80198a2:	2b00      	cmp	r3, #0
 80198a4:	dc03      	bgt.n	80198ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80198a6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80198a8:	2b00      	cmp	r3, #0
 80198aa:	f340 8386 	ble.w	8019fba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80198ae:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80198b0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80198b4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80198b8:	1e48      	subs	r0, r1, #1
 80198ba:	1e57      	subs	r7, r2, #1
 80198bc:	9b07      	ldr	r3, [sp, #28]
 80198be:	2b00      	cmp	r3, #0
 80198c0:	f340 8166 	ble.w	8019b90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80198c4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80198c8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80198cc:	d406      	bmi.n	80198dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80198ce:	4584      	cmp	ip, r0
 80198d0:	da04      	bge.n	80198dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80198d2:	2b00      	cmp	r3, #0
 80198d4:	db02      	blt.n	80198dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80198d6:	42bb      	cmp	r3, r7
 80198d8:	f2c0 815b 	blt.w	8019b92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80198dc:	f11c 0c01 	adds.w	ip, ip, #1
 80198e0:	f100 814b 	bmi.w	8019b7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80198e4:	4561      	cmp	r1, ip
 80198e6:	f2c0 8148 	blt.w	8019b7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80198ea:	3301      	adds	r3, #1
 80198ec:	f100 8145 	bmi.w	8019b7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80198f0:	429a      	cmp	r2, r3
 80198f2:	f2c0 8142 	blt.w	8019b7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80198f6:	9b07      	ldr	r3, [sp, #28]
 80198f8:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80198fa:	9317      	str	r3, [sp, #92]	@ 0x5c
 80198fc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80198fe:	2b00      	cmp	r3, #0
 8019900:	f340 8165 	ble.w	8019bce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8019904:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 8019906:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8019908:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801990c:	689b      	ldr	r3, [r3, #8]
 801990e:	1422      	asrs	r2, r4, #16
 8019910:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019914:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8019918:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801991c:	f100 81d5 	bmi.w	8019cca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8019920:	f103 38ff 	add.w	r8, r3, #4294967295
 8019924:	4542      	cmp	r2, r8
 8019926:	f280 81d0 	bge.w	8019cca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801992a:	f1bc 0f00 	cmp.w	ip, #0
 801992e:	f2c0 81cc 	blt.w	8019cca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8019932:	f10e 38ff 	add.w	r8, lr, #4294967295
 8019936:	45c4      	cmp	ip, r8
 8019938:	f280 81c7 	bge.w	8019cca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801993c:	b21b      	sxth	r3, r3
 801993e:	fb0c 2203 	mla	r2, ip, r3, r2
 8019942:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8019944:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8019948:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801994c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8019950:	2900      	cmp	r1, #0
 8019952:	f000 8182 	beq.w	8019c5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8019956:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801995a:	950b      	str	r5, [sp, #44]	@ 0x2c
 801995c:	0e2d      	lsrs	r5, r5, #24
 801995e:	9512      	str	r5, [sp, #72]	@ 0x48
 8019960:	b180      	cbz	r0, 8019984 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8019962:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8019966:	3b01      	subs	r3, #1
 8019968:	009b      	lsls	r3, r3, #2
 801996a:	3304      	adds	r3, #4
 801996c:	eb08 0c03 	add.w	ip, r8, r3
 8019970:	f858 3003 	ldr.w	r3, [r8, r3]
 8019974:	9308      	str	r3, [sp, #32]
 8019976:	0e1b      	lsrs	r3, r3, #24
 8019978:	9310      	str	r3, [sp, #64]	@ 0x40
 801997a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801997e:	930c      	str	r3, [sp, #48]	@ 0x30
 8019980:	0e1b      	lsrs	r3, r3, #24
 8019982:	9313      	str	r3, [sp, #76]	@ 0x4c
 8019984:	b289      	uxth	r1, r1
 8019986:	b280      	uxth	r0, r0
 8019988:	fb01 f900 	mul.w	r9, r1, r0
 801998c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8019990:	0109      	lsls	r1, r1, #4
 8019992:	eba1 0809 	sub.w	r8, r1, r9
 8019996:	b280      	uxth	r0, r0
 8019998:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 801999c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801999e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80199a0:	fa1f f888 	uxth.w	r8, r8
 80199a4:	1a09      	subs	r1, r1, r0
 80199a6:	b289      	uxth	r1, r1
 80199a8:	fb08 f303 	mul.w	r3, r8, r3
 80199ac:	fb01 330e 	mla	r3, r1, lr, r3
 80199b0:	fb00 3305 	mla	r3, r0, r5, r3
 80199b4:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80199b6:	fb09 3305 	mla	r3, r9, r5, r3
 80199ba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80199be:	2b00      	cmp	r3, #0
 80199c0:	f000 80d2 	beq.w	8019b68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80199c4:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 80199c8:	d01b      	beq.n	8019a02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 80199ca:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 80199ce:	fb0e fa0a 	mul.w	sl, lr, sl
 80199d2:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80199d6:	fb0e fe02 	mul.w	lr, lr, r2
 80199da:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80199de:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80199e2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80199e6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 80199ea:	4452      	add	r2, sl
 80199ec:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80199f0:	0a12      	lsrs	r2, r2, #8
 80199f2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80199f6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80199fa:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80199fe:	ea42 020c 	orr.w	r2, r2, ip
 8019a02:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8019a04:	2dff      	cmp	r5, #255	@ 0xff
 8019a06:	d021      	beq.n	8019a4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8019a08:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8019a0a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8019a0e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8019a10:	fb05 fb0b 	mul.w	fp, r5, fp
 8019a14:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8019a16:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8019a1a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8019a1c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019a20:	fb05 fa0a 	mul.w	sl, r5, sl
 8019a24:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8019a28:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8019a2c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8019a30:	44de      	add	lr, fp
 8019a32:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019a36:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019a3a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019a3e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8019a42:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019a46:	ea4e 050a 	orr.w	r5, lr, sl
 8019a4a:	950b      	str	r5, [sp, #44]	@ 0x2c
 8019a4c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8019a4e:	2dff      	cmp	r5, #255	@ 0xff
 8019a50:	d021      	beq.n	8019a96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8019a52:	9d08      	ldr	r5, [sp, #32]
 8019a54:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8019a58:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8019a5a:	fb05 fb0b 	mul.w	fp, r5, fp
 8019a5e:	9d08      	ldr	r5, [sp, #32]
 8019a60:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8019a64:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8019a66:	fb05 fa0e 	mul.w	sl, r5, lr
 8019a6a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019a6e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8019a72:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8019a76:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8019a7a:	44de      	add	lr, fp
 8019a7c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019a80:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019a84:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019a88:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8019a8c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019a90:	ea4e 050a 	orr.w	r5, lr, sl
 8019a94:	9508      	str	r5, [sp, #32]
 8019a96:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8019a98:	2dff      	cmp	r5, #255	@ 0xff
 8019a9a:	d021      	beq.n	8019ae0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8019a9c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8019a9e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8019aa2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8019aa4:	fb05 fb0b 	mul.w	fp, r5, fp
 8019aa8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8019aaa:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8019aae:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8019ab0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019ab4:	fb05 fa0a 	mul.w	sl, r5, sl
 8019ab8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8019abc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8019ac0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8019ac4:	44de      	add	lr, fp
 8019ac6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019aca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019ace:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019ad2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8019ad6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019ada:	ea4e 050a 	orr.w	r5, lr, sl
 8019ade:	950c      	str	r5, [sp, #48]	@ 0x30
 8019ae0:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8019ae2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8019ae6:	9d08      	ldr	r5, [sp, #32]
 8019ae8:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 8019aec:	fb08 fc0c 	mul.w	ip, r8, ip
 8019af0:	fb01 cc0e 	mla	ip, r1, lr, ip
 8019af4:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8019af8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8019afa:	fb00 cc0e 	mla	ip, r0, lr, ip
 8019afe:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8019b02:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8019b04:	fb09 cc0e 	mla	ip, r9, lr, ip
 8019b08:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8019b0c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8019b10:	fb08 f80e 	mul.w	r8, r8, lr
 8019b14:	fb01 8202 	mla	r2, r1, r2, r8
 8019b18:	9908      	ldr	r1, [sp, #32]
 8019b1a:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8019b1e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8019b20:	fb00 220a 	mla	r2, r0, sl, r2
 8019b24:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 8019b28:	fb09 2900 	mla	r9, r9, r0, r2
 8019b2c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019b30:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019b34:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019b38:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8019b3c:	ea4c 0c09 	orr.w	ip, ip, r9
 8019b40:	2bff      	cmp	r3, #255	@ 0xff
 8019b42:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8019b46:	f040 8091 	bne.w	8019c6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8019b4a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8019b4e:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 8019b52:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019b56:	f022 0207 	bic.w	r2, r2, #7
 8019b5a:	431a      	orrs	r2, r3
 8019b5c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8019b60:	ea4c 0c02 	orr.w	ip, ip, r2
 8019b64:	f8a7 c000 	strh.w	ip, [r7]
 8019b68:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8019b6a:	441c      	add	r4, r3
 8019b6c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8019b6e:	441e      	add	r6, r3
 8019b70:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8019b72:	3b01      	subs	r3, #1
 8019b74:	3702      	adds	r7, #2
 8019b76:	9317      	str	r3, [sp, #92]	@ 0x5c
 8019b78:	e6c0      	b.n	80198fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8019b7a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8019b7c:	441c      	add	r4, r3
 8019b7e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8019b80:	441e      	add	r6, r3
 8019b82:	9b07      	ldr	r3, [sp, #28]
 8019b84:	3b01      	subs	r3, #1
 8019b86:	9307      	str	r3, [sp, #28]
 8019b88:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019b8a:	3302      	adds	r3, #2
 8019b8c:	930a      	str	r3, [sp, #40]	@ 0x28
 8019b8e:	e695      	b.n	80198bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019b90:	d024      	beq.n	8019bdc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8019b92:	9b07      	ldr	r3, [sp, #28]
 8019b94:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8019b96:	3b01      	subs	r3, #1
 8019b98:	fb00 4003 	mla	r0, r0, r3, r4
 8019b9c:	1400      	asrs	r0, r0, #16
 8019b9e:	f53f aeaa 	bmi.w	80198f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8019ba2:	3901      	subs	r1, #1
 8019ba4:	4288      	cmp	r0, r1
 8019ba6:	f6bf aea6 	bge.w	80198f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8019baa:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8019bac:	fb01 6303 	mla	r3, r1, r3, r6
 8019bb0:	141b      	asrs	r3, r3, #16
 8019bb2:	f53f aea0 	bmi.w	80198f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8019bb6:	3a01      	subs	r2, #1
 8019bb8:	4293      	cmp	r3, r2
 8019bba:	f6bf ae9c 	bge.w	80198f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8019bbe:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8019bc2:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8019bc6:	f1bb 0f00 	cmp.w	fp, #0
 8019bca:	f300 809a 	bgt.w	8019d02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8019bce:	9b07      	ldr	r3, [sp, #28]
 8019bd0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019bd4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019bd6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8019bda:	930a      	str	r3, [sp, #40]	@ 0x28
 8019bdc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8019bde:	2b00      	cmp	r3, #0
 8019be0:	f340 81eb 	ble.w	8019fba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8019be4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019be8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019bec:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019bf0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019bf2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019bf6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019bfa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019bfe:	eef0 6a62 	vmov.f32	s13, s5
 8019c02:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019c06:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019c0a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019c0e:	ee16 4a90 	vmov	r4, s13
 8019c12:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019c16:	eef0 6a43 	vmov.f32	s13, s6
 8019c1a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019c1e:	ee12 2a90 	vmov	r2, s5
 8019c22:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019c26:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c2a:	ee13 2a10 	vmov	r2, s6
 8019c2e:	9327      	str	r3, [sp, #156]	@ 0x9c
 8019c30:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019c32:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c36:	9328      	str	r3, [sp, #160]	@ 0xa0
 8019c38:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8019c3a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8019c3c:	3b01      	subs	r3, #1
 8019c3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019c42:	9316      	str	r3, [sp, #88]	@ 0x58
 8019c44:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019c46:	bf08      	it	eq
 8019c48:	4613      	moveq	r3, r2
 8019c4a:	ee16 6a90 	vmov	r6, s13
 8019c4e:	9307      	str	r3, [sp, #28]
 8019c50:	eeb0 3a67 	vmov.f32	s6, s15
 8019c54:	eef0 2a47 	vmov.f32	s5, s14
 8019c58:	e622      	b.n	80198a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8019c5a:	2800      	cmp	r0, #0
 8019c5c:	f43f ae92 	beq.w	8019984 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8019c60:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8019c64:	9308      	str	r3, [sp, #32]
 8019c66:	0e1b      	lsrs	r3, r3, #24
 8019c68:	9310      	str	r3, [sp, #64]	@ 0x40
 8019c6a:	e68b      	b.n	8019984 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8019c6c:	8839      	ldrh	r1, [r7, #0]
 8019c6e:	4dd4      	ldr	r5, [pc, #848]	@ (8019fc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8019c70:	43db      	mvns	r3, r3
 8019c72:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8019c76:	fa5f f883 	uxtb.w	r8, r3
 8019c7a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8019c7e:	fb0e fe08 	mul.w	lr, lr, r8
 8019c82:	10c8      	asrs	r0, r1, #3
 8019c84:	00cb      	lsls	r3, r1, #3
 8019c86:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8019c8a:	f10e 0101 	add.w	r1, lr, #1
 8019c8e:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8019c92:	fb00 f008 	mul.w	r0, r0, r8
 8019c96:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8019c9a:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8019c9e:	f100 0e01 	add.w	lr, r0, #1
 8019ca2:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8019ca6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8019caa:	b2db      	uxtb	r3, r3
 8019cac:	b2c9      	uxtb	r1, r1
 8019cae:	00d2      	lsls	r2, r2, #3
 8019cb0:	fb03 f308 	mul.w	r3, r3, r8
 8019cb4:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8019cb8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019cbc:	430a      	orrs	r2, r1
 8019cbe:	1c59      	adds	r1, r3, #1
 8019cc0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019cc4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8019cc8:	e748      	b.n	8019b5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8019cca:	f112 0801 	adds.w	r8, r2, #1
 8019cce:	f53f af4b 	bmi.w	8019b68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8019cd2:	4543      	cmp	r3, r8
 8019cd4:	f6ff af48 	blt.w	8019b68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8019cd8:	f11c 0801 	adds.w	r8, ip, #1
 8019cdc:	f53f af44 	bmi.w	8019b68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8019ce0:	45c6      	cmp	lr, r8
 8019ce2:	f6ff af41 	blt.w	8019b68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8019ce6:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8019cea:	fa0f f28e 	sxth.w	r2, lr
 8019cee:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8019cf2:	9200      	str	r2, [sp, #0]
 8019cf4:	b21b      	sxth	r3, r3
 8019cf6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8019cf8:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8019cfa:	4639      	mov	r1, r7
 8019cfc:	f7ff fc87 	bl	801960e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8019d00:	e732      	b.n	8019b68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8019d02:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8019d04:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8019d06:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8019d0a:	1421      	asrs	r1, r4, #16
 8019d0c:	1433      	asrs	r3, r6, #16
 8019d0e:	fb07 1303 	mla	r3, r7, r3, r1
 8019d12:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8019d14:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8019d18:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8019d1c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019d20:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019d24:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019d28:	2a00      	cmp	r2, #0
 8019d2a:	f000 8107 	beq.w	8019f3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8019d2e:	684d      	ldr	r5, [r1, #4]
 8019d30:	950d      	str	r5, [sp, #52]	@ 0x34
 8019d32:	0e2d      	lsrs	r5, r5, #24
 8019d34:	9514      	str	r5, [sp, #80]	@ 0x50
 8019d36:	b178      	cbz	r0, 8019d58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8019d38:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 8019d3c:	3f01      	subs	r7, #1
 8019d3e:	00bf      	lsls	r7, r7, #2
 8019d40:	3704      	adds	r7, #4
 8019d42:	eb01 0e07 	add.w	lr, r1, r7
 8019d46:	59c9      	ldr	r1, [r1, r7]
 8019d48:	9109      	str	r1, [sp, #36]	@ 0x24
 8019d4a:	0e09      	lsrs	r1, r1, #24
 8019d4c:	9111      	str	r1, [sp, #68]	@ 0x44
 8019d4e:	f8de 1004 	ldr.w	r1, [lr, #4]
 8019d52:	910e      	str	r1, [sp, #56]	@ 0x38
 8019d54:	0e09      	lsrs	r1, r1, #24
 8019d56:	9115      	str	r1, [sp, #84]	@ 0x54
 8019d58:	b292      	uxth	r2, r2
 8019d5a:	b280      	uxth	r0, r0
 8019d5c:	fb02 f900 	mul.w	r9, r2, r0
 8019d60:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8019d64:	0112      	lsls	r2, r2, #4
 8019d66:	eba2 0e09 	sub.w	lr, r2, r9
 8019d6a:	b280      	uxth	r0, r0
 8019d6c:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 8019d70:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019d72:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8019d74:	fa1f fe8e 	uxth.w	lr, lr
 8019d78:	1a09      	subs	r1, r1, r0
 8019d7a:	b289      	uxth	r1, r1
 8019d7c:	fb0e f202 	mul.w	r2, lr, r2
 8019d80:	fb01 220c 	mla	r2, r1, ip, r2
 8019d84:	fb00 2205 	mla	r2, r0, r5, r2
 8019d88:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8019d8a:	fb09 2205 	mla	r2, r9, r5, r2
 8019d8e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8019d92:	2a00      	cmp	r2, #0
 8019d94:	f000 80c9 	beq.w	8019f2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8019d98:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8019d9c:	d019      	beq.n	8019dd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8019d9e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8019da2:	fb0c fa0a 	mul.w	sl, ip, sl
 8019da6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8019daa:	fb0c fc03 	mul.w	ip, ip, r3
 8019dae:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8019db2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8019db6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8019dba:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8019dbe:	4453      	add	r3, sl
 8019dc0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8019dc4:	0a1b      	lsrs	r3, r3, #8
 8019dc6:	0a3f      	lsrs	r7, r7, #8
 8019dc8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8019dcc:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8019dd0:	433b      	orrs	r3, r7
 8019dd2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8019dd4:	2dff      	cmp	r5, #255	@ 0xff
 8019dd6:	d020      	beq.n	8019e1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8019dd8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8019dda:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8019dde:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8019de0:	436f      	muls	r7, r5
 8019de2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8019de4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8019de8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8019dea:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019dee:	fb05 fa0a 	mul.w	sl, r5, sl
 8019df2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8019df6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019dfa:	44bc      	add	ip, r7
 8019dfc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8019e00:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019e04:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019e08:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019e0c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019e10:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019e14:	ea4c 050a 	orr.w	r5, ip, sl
 8019e18:	950d      	str	r5, [sp, #52]	@ 0x34
 8019e1a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8019e1c:	2dff      	cmp	r5, #255	@ 0xff
 8019e1e:	d020      	beq.n	8019e62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8019e20:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8019e22:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8019e26:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8019e28:	436f      	muls	r7, r5
 8019e2a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8019e2c:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8019e30:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8019e32:	fb05 fa0c 	mul.w	sl, r5, ip
 8019e36:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019e3a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019e3e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8019e42:	44bc      	add	ip, r7
 8019e44:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8019e48:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019e4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019e50:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019e54:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019e58:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019e5c:	ea4c 050a 	orr.w	r5, ip, sl
 8019e60:	9509      	str	r5, [sp, #36]	@ 0x24
 8019e62:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8019e64:	2dff      	cmp	r5, #255	@ 0xff
 8019e66:	d020      	beq.n	8019eaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8019e68:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8019e6a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8019e6e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8019e70:	436f      	muls	r7, r5
 8019e72:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8019e74:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8019e78:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8019e7a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019e7e:	fb05 fa0a 	mul.w	sl, r5, sl
 8019e82:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8019e86:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019e8a:	44bc      	add	ip, r7
 8019e8c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8019e90:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019e94:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019e98:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019e9c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019ea0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019ea4:	ea4c 050a 	orr.w	r5, ip, sl
 8019ea8:	950e      	str	r5, [sp, #56]	@ 0x38
 8019eaa:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8019eac:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8019eb0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8019eb2:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8019eb6:	fb0e f707 	mul.w	r7, lr, r7
 8019eba:	fb01 770c 	mla	r7, r1, ip, r7
 8019ebe:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8019ec2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8019ec4:	fb00 770c 	mla	r7, r0, ip, r7
 8019ec8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8019ecc:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8019ece:	fb09 770c 	mla	r7, r9, ip, r7
 8019ed2:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8019ed6:	fb0e fe0c 	mul.w	lr, lr, ip
 8019eda:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8019ede:	fb01 e303 	mla	r3, r1, r3, lr
 8019ee2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8019ee4:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8019ee8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8019eea:	fb00 330a 	mla	r3, r0, sl, r3
 8019eee:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8019ef2:	fb09 3c0c 	mla	ip, r9, ip, r3
 8019ef6:	0a3f      	lsrs	r7, r7, #8
 8019ef8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019efc:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8019f00:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8019f04:	ea47 070c 	orr.w	r7, r7, ip
 8019f08:	2aff      	cmp	r2, #255	@ 0xff
 8019f0a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8019f0e:	d11e      	bne.n	8019f4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8019f10:	097a      	lsrs	r2, r7, #5
 8019f12:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8019f16:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019f1a:	f023 0307 	bic.w	r3, r3, #7
 8019f1e:	4313      	orrs	r3, r2
 8019f20:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8019f24:	431f      	orrs	r7, r3
 8019f26:	f8a8 7000 	strh.w	r7, [r8]
 8019f2a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8019f2c:	441c      	add	r4, r3
 8019f2e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8019f30:	f108 0802 	add.w	r8, r8, #2
 8019f34:	441e      	add	r6, r3
 8019f36:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019f3a:	e644      	b.n	8019bc6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8019f3c:	2800      	cmp	r0, #0
 8019f3e:	f43f af0b 	beq.w	8019d58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8019f42:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8019f46:	9109      	str	r1, [sp, #36]	@ 0x24
 8019f48:	0e09      	lsrs	r1, r1, #24
 8019f4a:	9111      	str	r1, [sp, #68]	@ 0x44
 8019f4c:	e704      	b.n	8019d58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8019f4e:	f8b8 1000 	ldrh.w	r1, [r8]
 8019f52:	43d2      	mvns	r2, r2
 8019f54:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8019f58:	fa5f fe82 	uxtb.w	lr, r2
 8019f5c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019f60:	fb0c fc0e 	mul.w	ip, ip, lr
 8019f64:	10c8      	asrs	r0, r1, #3
 8019f66:	00ca      	lsls	r2, r1, #3
 8019f68:	f10c 0101 	add.w	r1, ip, #1
 8019f6c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8019f70:	0c39      	lsrs	r1, r7, #16
 8019f72:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8019f76:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8019f7a:	4911      	ldr	r1, [pc, #68]	@ (8019fc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8019f7c:	fb00 f00e 	mul.w	r0, r0, lr
 8019f80:	fa5f fc8c 	uxtb.w	ip, ip
 8019f84:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8019f88:	b2d2      	uxtb	r2, r2
 8019f8a:	1c41      	adds	r1, r0, #1
 8019f8c:	fb02 f20e 	mul.w	r2, r2, lr
 8019f90:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8019f94:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8019f98:	1c51      	adds	r1, r2, #1
 8019f9a:	00c0      	lsls	r0, r0, #3
 8019f9c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019fa0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019fa4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8019fa8:	ea4c 0c00 	orr.w	ip, ip, r0
 8019fac:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8019fb0:	ea47 0c0c 	orr.w	ip, r7, ip
 8019fb4:	f8a8 c000 	strh.w	ip, [r8]
 8019fb8:	e7b7      	b.n	8019f2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8019fba:	b01b      	add	sp, #108	@ 0x6c
 8019fbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019fc0:	fffff800 	.word	0xfffff800

08019fc4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8019fc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019fc8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8019fcc:	2d00      	cmp	r5, #0
 8019fce:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8019fd2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8019fd6:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8019fda:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 8019fde:	fb05 0e03 	mla	lr, r5, r3, r0
 8019fe2:	f2c0 808c 	blt.w	801a0fe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8019fe6:	45a9      	cmp	r9, r5
 8019fe8:	f340 8089 	ble.w	801a0fe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8019fec:	2800      	cmp	r0, #0
 8019fee:	f2c0 8084 	blt.w	801a0fa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8019ff2:	4580      	cmp	r8, r0
 8019ff4:	f340 8081 	ble.w	801a0fa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8019ff8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8019ffc:	f01e 0f01 	tst.w	lr, #1
 801a000:	5d16      	ldrb	r6, [r2, r4]
 801a002:	bf0c      	ite	eq
 801a004:	f006 060f 	andeq.w	r6, r6, #15
 801a008:	1136      	asrne	r6, r6, #4
 801a00a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801a00e:	b2f6      	uxtb	r6, r6
 801a010:	1c44      	adds	r4, r0, #1
 801a012:	d477      	bmi.n	801a104 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801a014:	45a0      	cmp	r8, r4
 801a016:	dd75      	ble.n	801a104 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801a018:	2f00      	cmp	r7, #0
 801a01a:	d075      	beq.n	801a108 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801a01c:	f10e 0a01 	add.w	sl, lr, #1
 801a020:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801a024:	f01a 0f01 	tst.w	sl, #1
 801a028:	5d14      	ldrb	r4, [r2, r4]
 801a02a:	bf0c      	ite	eq
 801a02c:	f004 040f 	andeq.w	r4, r4, #15
 801a030:	1124      	asrne	r4, r4, #4
 801a032:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801a036:	b2e4      	uxtb	r4, r4
 801a038:	3501      	adds	r5, #1
 801a03a:	d469      	bmi.n	801a110 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801a03c:	45a9      	cmp	r9, r5
 801a03e:	dd67      	ble.n	801a110 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801a040:	f1bc 0f00 	cmp.w	ip, #0
 801a044:	d067      	beq.n	801a116 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801a046:	2800      	cmp	r0, #0
 801a048:	db60      	blt.n	801a10c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801a04a:	4580      	cmp	r8, r0
 801a04c:	dd5e      	ble.n	801a10c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801a04e:	eb03 090e 	add.w	r9, r3, lr
 801a052:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801a056:	f019 0f01 	tst.w	r9, #1
 801a05a:	5d55      	ldrb	r5, [r2, r5]
 801a05c:	bf0c      	ite	eq
 801a05e:	f005 050f 	andeq.w	r5, r5, #15
 801a062:	112d      	asrne	r5, r5, #4
 801a064:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801a068:	b2ed      	uxtb	r5, r5
 801a06a:	3001      	adds	r0, #1
 801a06c:	d456      	bmi.n	801a11c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801a06e:	4580      	cmp	r8, r0
 801a070:	dd54      	ble.n	801a11c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801a072:	2f00      	cmp	r7, #0
 801a074:	d054      	beq.n	801a120 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801a076:	3301      	adds	r3, #1
 801a078:	449e      	add	lr, r3
 801a07a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801a07e:	f01e 0f01 	tst.w	lr, #1
 801a082:	5cd0      	ldrb	r0, [r2, r3]
 801a084:	bf0c      	ite	eq
 801a086:	f000 000f 	andeq.w	r0, r0, #15
 801a08a:	1100      	asrne	r0, r0, #4
 801a08c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a090:	b2c3      	uxtb	r3, r0
 801a092:	b2ba      	uxth	r2, r7
 801a094:	fa1f fc8c 	uxth.w	ip, ip
 801a098:	fb02 f00c 	mul.w	r0, r2, ip
 801a09c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801a0a0:	0112      	lsls	r2, r2, #4
 801a0a2:	fa1f fc8c 	uxth.w	ip, ip
 801a0a6:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801a0aa:	1a12      	subs	r2, r2, r0
 801a0ac:	eba7 070c 	sub.w	r7, r7, ip
 801a0b0:	b292      	uxth	r2, r2
 801a0b2:	b2bf      	uxth	r7, r7
 801a0b4:	4362      	muls	r2, r4
 801a0b6:	fb06 2207 	mla	r2, r6, r7, r2
 801a0ba:	fb0c 2505 	mla	r5, ip, r5, r2
 801a0be:	fb00 5303 	mla	r3, r0, r3, r5
 801a0c2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a0c6:	b1b3      	cbz	r3, 801a0f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801a0c8:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801a0cc:	435a      	muls	r2, r3
 801a0ce:	1c53      	adds	r3, r2, #1
 801a0d0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a0d4:	4a2d      	ldr	r2, [pc, #180]	@ (801a18c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801a0d6:	121b      	asrs	r3, r3, #8
 801a0d8:	6812      	ldr	r2, [r2, #0]
 801a0da:	2bff      	cmp	r3, #255	@ 0xff
 801a0dc:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801a0e0:	d120      	bne.n	801a124 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801a0e2:	4b2b      	ldr	r3, [pc, #172]	@ (801a190 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801a0e4:	0950      	lsrs	r0, r2, #5
 801a0e6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a0ea:	4033      	ands	r3, r6
 801a0ec:	4318      	orrs	r0, r3
 801a0ee:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a0f2:	4302      	orrs	r2, r0
 801a0f4:	800a      	strh	r2, [r1, #0]
 801a0f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a0fa:	2600      	movs	r6, #0
 801a0fc:	e788      	b.n	801a010 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801a0fe:	2400      	movs	r4, #0
 801a100:	4626      	mov	r6, r4
 801a102:	e799      	b.n	801a038 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801a104:	2400      	movs	r4, #0
 801a106:	e797      	b.n	801a038 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801a108:	463c      	mov	r4, r7
 801a10a:	e795      	b.n	801a038 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801a10c:	2500      	movs	r5, #0
 801a10e:	e7ac      	b.n	801a06a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801a110:	2300      	movs	r3, #0
 801a112:	461d      	mov	r5, r3
 801a114:	e7bd      	b.n	801a092 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801a116:	4663      	mov	r3, ip
 801a118:	4665      	mov	r5, ip
 801a11a:	e7ba      	b.n	801a092 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801a11c:	2300      	movs	r3, #0
 801a11e:	e7b8      	b.n	801a092 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801a120:	463b      	mov	r3, r7
 801a122:	e7b6      	b.n	801a092 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801a124:	880d      	ldrh	r5, [r1, #0]
 801a126:	b29f      	uxth	r7, r3
 801a128:	122c      	asrs	r4, r5, #8
 801a12a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801a12e:	43db      	mvns	r3, r3
 801a130:	b2db      	uxtb	r3, r3
 801a132:	fb10 f007 	smulbb	r0, r0, r7
 801a136:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801a13a:	fb04 0403 	mla	r4, r4, r3, r0
 801a13e:	b2f6      	uxtb	r6, r6
 801a140:	10e8      	asrs	r0, r5, #3
 801a142:	b2d2      	uxtb	r2, r2
 801a144:	00ed      	lsls	r5, r5, #3
 801a146:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801a14a:	fb12 f207 	smulbb	r2, r2, r7
 801a14e:	fb16 f607 	smulbb	r6, r6, r7
 801a152:	b2ed      	uxtb	r5, r5
 801a154:	b2a4      	uxth	r4, r4
 801a156:	fb00 6603 	mla	r6, r0, r3, r6
 801a15a:	fb05 2303 	mla	r3, r5, r3, r2
 801a15e:	b29a      	uxth	r2, r3
 801a160:	1c63      	adds	r3, r4, #1
 801a162:	b2b0      	uxth	r0, r6
 801a164:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801a168:	1c53      	adds	r3, r2, #1
 801a16a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a16e:	1c42      	adds	r2, r0, #1
 801a170:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a174:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801a178:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a17c:	0940      	lsrs	r0, r0, #5
 801a17e:	4323      	orrs	r3, r4
 801a180:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a184:	4303      	orrs	r3, r0
 801a186:	800b      	strh	r3, [r1, #0]
 801a188:	e7b5      	b.n	801a0f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801a18a:	bf00      	nop
 801a18c:	20013808 	.word	0x20013808
 801a190:	00fff800 	.word	0x00fff800

0801a194 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a198:	b097      	sub	sp, #92	@ 0x5c
 801a19a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 801a19e:	9214      	str	r2, [sp, #80]	@ 0x50
 801a1a0:	9309      	str	r3, [sp, #36]	@ 0x24
 801a1a2:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801a1a4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801a1a8:	910d      	str	r1, [sp, #52]	@ 0x34
 801a1aa:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a1ac:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801a1b0:	9015      	str	r0, [sp, #84]	@ 0x54
 801a1b2:	6850      	ldr	r0, [r2, #4]
 801a1b4:	6812      	ldr	r2, [r2, #0]
 801a1b6:	fb00 1303 	mla	r3, r0, r3, r1
 801a1ba:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801a1be:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a1c0:	689b      	ldr	r3, [r3, #8]
 801a1c2:	3301      	adds	r3, #1
 801a1c4:	f023 0301 	bic.w	r3, r3, #1
 801a1c8:	930a      	str	r3, [sp, #40]	@ 0x28
 801a1ca:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a1cc:	681f      	ldr	r7, [r3, #0]
 801a1ce:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a1d0:	2b00      	cmp	r3, #0
 801a1d2:	dc03      	bgt.n	801a1dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a1d4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801a1d6:	2b00      	cmp	r3, #0
 801a1d8:	f340 8287 	ble.w	801a6ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801a1dc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a1de:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a1e2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a1e6:	1e48      	subs	r0, r1, #1
 801a1e8:	f102 3cff 	add.w	ip, r2, #4294967295
 801a1ec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a1ee:	2b00      	cmp	r3, #0
 801a1f0:	f340 80c4 	ble.w	801a37c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a1f4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a1f8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a1fc:	d406      	bmi.n	801a20c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a1fe:	4586      	cmp	lr, r0
 801a200:	da04      	bge.n	801a20c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a202:	2b00      	cmp	r3, #0
 801a204:	db02      	blt.n	801a20c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a206:	4563      	cmp	r3, ip
 801a208:	f2c0 80b9 	blt.w	801a37e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801a20c:	f11e 0e01 	adds.w	lr, lr, #1
 801a210:	f100 80aa 	bmi.w	801a368 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a214:	4571      	cmp	r1, lr
 801a216:	f2c0 80a7 	blt.w	801a368 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a21a:	3301      	adds	r3, #1
 801a21c:	f100 80a4 	bmi.w	801a368 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a220:	429a      	cmp	r2, r3
 801a222:	f2c0 80a1 	blt.w	801a368 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a226:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a228:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 801a22c:	930e      	str	r3, [sp, #56]	@ 0x38
 801a22e:	46c8      	mov	r8, r9
 801a230:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a232:	2b00      	cmp	r3, #0
 801a234:	f340 80c3 	ble.w	801a3be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801a238:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a23a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801a23e:	1423      	asrs	r3, r4, #16
 801a240:	ea4f 4026 	mov.w	r0, r6, asr #16
 801a244:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a248:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a24c:	f100 814d 	bmi.w	801a4ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801a250:	f10c 3bff 	add.w	fp, ip, #4294967295
 801a254:	455b      	cmp	r3, fp
 801a256:	f280 8148 	bge.w	801a4ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801a25a:	2800      	cmp	r0, #0
 801a25c:	f2c0 8145 	blt.w	801a4ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801a260:	f10e 3bff 	add.w	fp, lr, #4294967295
 801a264:	4558      	cmp	r0, fp
 801a266:	f280 8140 	bge.w	801a4ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801a26a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801a26c:	fb00 3305 	mla	r3, r0, r5, r3
 801a270:	0858      	lsrs	r0, r3, #1
 801a272:	07dd      	lsls	r5, r3, #31
 801a274:	f817 c000 	ldrb.w	ip, [r7, r0]
 801a278:	bf54      	ite	pl
 801a27a:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a27e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a282:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a286:	fa5f fc8c 	uxtb.w	ip, ip
 801a28a:	2a00      	cmp	r2, #0
 801a28c:	f000 80db 	beq.w	801a446 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801a290:	1c58      	adds	r0, r3, #1
 801a292:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801a296:	07c0      	lsls	r0, r0, #31
 801a298:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801a29c:	bf54      	ite	pl
 801a29e:	f00e 0e0f 	andpl.w	lr, lr, #15
 801a2a2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801a2a6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801a2aa:	fa5f f08e 	uxtb.w	r0, lr
 801a2ae:	9010      	str	r0, [sp, #64]	@ 0x40
 801a2b0:	b1c9      	cbz	r1, 801a2e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a2b2:	4453      	add	r3, sl
 801a2b4:	0858      	lsrs	r0, r3, #1
 801a2b6:	07dd      	lsls	r5, r3, #31
 801a2b8:	5c38      	ldrb	r0, [r7, r0]
 801a2ba:	bf54      	ite	pl
 801a2bc:	f000 000f 	andpl.w	r0, r0, #15
 801a2c0:	1100      	asrmi	r0, r0, #4
 801a2c2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a2c6:	3301      	adds	r3, #1
 801a2c8:	b2c0      	uxtb	r0, r0
 801a2ca:	900b      	str	r0, [sp, #44]	@ 0x2c
 801a2cc:	0858      	lsrs	r0, r3, #1
 801a2ce:	07dd      	lsls	r5, r3, #31
 801a2d0:	f817 e000 	ldrb.w	lr, [r7, r0]
 801a2d4:	bf54      	ite	pl
 801a2d6:	f00e 030f 	andpl.w	r3, lr, #15
 801a2da:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801a2de:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a2e2:	b2db      	uxtb	r3, r3
 801a2e4:	9311      	str	r3, [sp, #68]	@ 0x44
 801a2e6:	b292      	uxth	r2, r2
 801a2e8:	b289      	uxth	r1, r1
 801a2ea:	fb02 f301 	mul.w	r3, r2, r1
 801a2ee:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801a2f2:	0112      	lsls	r2, r2, #4
 801a2f4:	b289      	uxth	r1, r1
 801a2f6:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801a2fa:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801a2fc:	1ad2      	subs	r2, r2, r3
 801a2fe:	1a40      	subs	r0, r0, r1
 801a300:	b292      	uxth	r2, r2
 801a302:	436a      	muls	r2, r5
 801a304:	b280      	uxth	r0, r0
 801a306:	fb0c 2c00 	mla	ip, ip, r0, r2
 801a30a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a30c:	fb01 c102 	mla	r1, r1, r2, ip
 801a310:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801a312:	fb03 1302 	mla	r3, r3, r2, r1
 801a316:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a31a:	b1db      	cbz	r3, 801a354 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801a31c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801a31e:	4353      	muls	r3, r2
 801a320:	1c5a      	adds	r2, r3, #1
 801a322:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801a326:	4ac6      	ldr	r2, [pc, #792]	@ (801a640 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801a328:	121b      	asrs	r3, r3, #8
 801a32a:	6812      	ldr	r2, [r2, #0]
 801a32c:	2bff      	cmp	r3, #255	@ 0xff
 801a32e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801a332:	f040 8099 	bne.w	801a468 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801a336:	0953      	lsrs	r3, r2, #5
 801a338:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801a33c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a340:	f02c 0c07 	bic.w	ip, ip, #7
 801a344:	ea43 0c0c 	orr.w	ip, r3, ip
 801a348:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a34c:	ea4c 0202 	orr.w	r2, ip, r2
 801a350:	f8a8 2000 	strh.w	r2, [r8]
 801a354:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801a356:	441c      	add	r4, r3
 801a358:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a35a:	441e      	add	r6, r3
 801a35c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a35e:	3b01      	subs	r3, #1
 801a360:	f108 0802 	add.w	r8, r8, #2
 801a364:	930e      	str	r3, [sp, #56]	@ 0x38
 801a366:	e763      	b.n	801a230 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a368:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801a36a:	441c      	add	r4, r3
 801a36c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a36e:	441e      	add	r6, r3
 801a370:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a372:	3b01      	subs	r3, #1
 801a374:	9309      	str	r3, [sp, #36]	@ 0x24
 801a376:	f109 0902 	add.w	r9, r9, #2
 801a37a:	e737      	b.n	801a1ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a37c:	d024      	beq.n	801a3c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a37e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a380:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801a382:	3b01      	subs	r3, #1
 801a384:	fb00 4003 	mla	r0, r0, r3, r4
 801a388:	1400      	asrs	r0, r0, #16
 801a38a:	f53f af4c 	bmi.w	801a226 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a38e:	3901      	subs	r1, #1
 801a390:	4288      	cmp	r0, r1
 801a392:	f6bf af48 	bge.w	801a226 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a396:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801a398:	fb01 6303 	mla	r3, r1, r3, r6
 801a39c:	141b      	asrs	r3, r3, #16
 801a39e:	f53f af42 	bmi.w	801a226 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a3a2:	3a01      	subs	r2, #1
 801a3a4:	4293      	cmp	r3, r2
 801a3a6:	f6bf af3e 	bge.w	801a226 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a3aa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801a3ae:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801a3b2:	930e      	str	r3, [sp, #56]	@ 0x38
 801a3b4:	46c8      	mov	r8, r9
 801a3b6:	f1bb 0f00 	cmp.w	fp, #0
 801a3ba:	f300 80b7 	bgt.w	801a52c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801a3be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a3c0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a3c4:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801a3c8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a3ca:	2b00      	cmp	r3, #0
 801a3cc:	f340 818d 	ble.w	801a6ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801a3d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a3d4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a3d8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a3dc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a3de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a3e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a3e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a3ea:	eef0 6a62 	vmov.f32	s13, s5
 801a3ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a3f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a3f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a3fa:	ee16 4a90 	vmov	r4, s13
 801a3fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a402:	eef0 6a43 	vmov.f32	s13, s6
 801a406:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a40a:	ee12 2a90 	vmov	r2, s5
 801a40e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a412:	fb92 f3f3 	sdiv	r3, r2, r3
 801a416:	ee13 2a10 	vmov	r2, s6
 801a41a:	9323      	str	r3, [sp, #140]	@ 0x8c
 801a41c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a41e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a422:	9324      	str	r3, [sp, #144]	@ 0x90
 801a424:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a426:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a428:	3b01      	subs	r3, #1
 801a42a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a42e:	930d      	str	r3, [sp, #52]	@ 0x34
 801a430:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a432:	bf08      	it	eq
 801a434:	4613      	moveq	r3, r2
 801a436:	ee16 6a90 	vmov	r6, s13
 801a43a:	9309      	str	r3, [sp, #36]	@ 0x24
 801a43c:	eeb0 3a67 	vmov.f32	s6, s15
 801a440:	eef0 2a47 	vmov.f32	s5, s14
 801a444:	e6c3      	b.n	801a1ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a446:	2900      	cmp	r1, #0
 801a448:	f43f af4d 	beq.w	801a2e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a44c:	eb0a 0003 	add.w	r0, sl, r3
 801a450:	0843      	lsrs	r3, r0, #1
 801a452:	07c0      	lsls	r0, r0, #31
 801a454:	5cfb      	ldrb	r3, [r7, r3]
 801a456:	bf54      	ite	pl
 801a458:	f003 030f 	andpl.w	r3, r3, #15
 801a45c:	111b      	asrmi	r3, r3, #4
 801a45e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a462:	b2db      	uxtb	r3, r3
 801a464:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a466:	e73e      	b.n	801a2e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a468:	f8b8 e000 	ldrh.w	lr, [r8]
 801a46c:	fa1f fb83 	uxth.w	fp, r3
 801a470:	ea4f 202e 	mov.w	r0, lr, asr #8
 801a474:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801a478:	43db      	mvns	r3, r3
 801a47a:	b2db      	uxtb	r3, r3
 801a47c:	fb11 f10b 	smulbb	r1, r1, fp
 801a480:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801a484:	fb00 1003 	mla	r0, r0, r3, r1
 801a488:	fa5f fc8c 	uxtb.w	ip, ip
 801a48c:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801a490:	b2d2      	uxtb	r2, r2
 801a492:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a496:	b280      	uxth	r0, r0
 801a498:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801a49c:	fb1c fc0b 	smulbb	ip, ip, fp
 801a4a0:	fa5f fe8e 	uxtb.w	lr, lr
 801a4a4:	fb12 fb0b 	smulbb	fp, r2, fp
 801a4a8:	fb01 cc03 	mla	ip, r1, r3, ip
 801a4ac:	fb0e bb03 	mla	fp, lr, r3, fp
 801a4b0:	1c43      	adds	r3, r0, #1
 801a4b2:	fa1f fc8c 	uxth.w	ip, ip
 801a4b6:	fa1f fb8b 	uxth.w	fp, fp
 801a4ba:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a4be:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 801a4c2:	f10c 0101 	add.w	r1, ip, #1
 801a4c6:	f10b 0001 	add.w	r0, fp, #1
 801a4ca:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801a4ce:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801a4d2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801a4d6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a4da:	4318      	orrs	r0, r3
 801a4dc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801a4e0:	ea40 000c 	orr.w	r0, r0, ip
 801a4e4:	f8a8 0000 	strh.w	r0, [r8]
 801a4e8:	e734      	b.n	801a354 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801a4ea:	f113 0b01 	adds.w	fp, r3, #1
 801a4ee:	f53f af31 	bmi.w	801a354 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801a4f2:	45dc      	cmp	ip, fp
 801a4f4:	f6ff af2e 	blt.w	801a354 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801a4f8:	f110 0b01 	adds.w	fp, r0, #1
 801a4fc:	f53f af2a 	bmi.w	801a354 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801a500:	45de      	cmp	lr, fp
 801a502:	f6ff af27 	blt.w	801a354 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801a506:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801a508:	9302      	str	r3, [sp, #8]
 801a50a:	fa0f f38e 	sxth.w	r3, lr
 801a50e:	9301      	str	r3, [sp, #4]
 801a510:	fa0f f38c 	sxth.w	r3, ip
 801a514:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801a518:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801a51c:	9300      	str	r3, [sp, #0]
 801a51e:	463a      	mov	r2, r7
 801a520:	4653      	mov	r3, sl
 801a522:	4641      	mov	r1, r8
 801a524:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801a526:	f7ff fd4d 	bl	8019fc4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801a52a:	e713      	b.n	801a354 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801a52c:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801a52e:	1422      	asrs	r2, r4, #16
 801a530:	1433      	asrs	r3, r6, #16
 801a532:	fb05 2303 	mla	r3, r5, r3, r2
 801a536:	085a      	lsrs	r2, r3, #1
 801a538:	07dd      	lsls	r5, r3, #31
 801a53a:	5cba      	ldrb	r2, [r7, r2]
 801a53c:	bf54      	ite	pl
 801a53e:	f002 020f 	andpl.w	r2, r2, #15
 801a542:	1112      	asrmi	r2, r2, #4
 801a544:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a548:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801a54c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a550:	b2d2      	uxtb	r2, r2
 801a552:	2900      	cmp	r1, #0
 801a554:	d076      	beq.n	801a644 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801a556:	f103 0e01 	add.w	lr, r3, #1
 801a55a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801a55e:	f01e 0f01 	tst.w	lr, #1
 801a562:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a566:	bf0c      	ite	eq
 801a568:	f00c 0c0f 	andeq.w	ip, ip, #15
 801a56c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801a570:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a574:	fa5f f58c 	uxtb.w	r5, ip
 801a578:	9512      	str	r5, [sp, #72]	@ 0x48
 801a57a:	b300      	cbz	r0, 801a5be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801a57c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801a57e:	442b      	add	r3, r5
 801a580:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a584:	07dd      	lsls	r5, r3, #31
 801a586:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a58a:	bf54      	ite	pl
 801a58c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a590:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a594:	3301      	adds	r3, #1
 801a596:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a59a:	fa5f f58c 	uxtb.w	r5, ip
 801a59e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a5a2:	950c      	str	r5, [sp, #48]	@ 0x30
 801a5a4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a5a8:	07dd      	lsls	r5, r3, #31
 801a5aa:	bf54      	ite	pl
 801a5ac:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a5b0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a5b4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a5b8:	fa5f f38c 	uxtb.w	r3, ip
 801a5bc:	9313      	str	r3, [sp, #76]	@ 0x4c
 801a5be:	b289      	uxth	r1, r1
 801a5c0:	b280      	uxth	r0, r0
 801a5c2:	fb01 f300 	mul.w	r3, r1, r0
 801a5c6:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801a5ca:	0109      	lsls	r1, r1, #4
 801a5cc:	b280      	uxth	r0, r0
 801a5ce:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 801a5d2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801a5d4:	1ac9      	subs	r1, r1, r3
 801a5d6:	ebac 0c00 	sub.w	ip, ip, r0
 801a5da:	b289      	uxth	r1, r1
 801a5dc:	4369      	muls	r1, r5
 801a5de:	fa1f fc8c 	uxth.w	ip, ip
 801a5e2:	fb02 120c 	mla	r2, r2, ip, r1
 801a5e6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801a5e8:	fb00 2001 	mla	r0, r0, r1, r2
 801a5ec:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801a5ee:	fb03 0302 	mla	r3, r3, r2, r0
 801a5f2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a5f6:	b1d3      	cbz	r3, 801a62e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801a5f8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801a5fa:	4353      	muls	r3, r2
 801a5fc:	1c5a      	adds	r2, r3, #1
 801a5fe:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801a602:	4a0f      	ldr	r2, [pc, #60]	@ (801a640 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801a604:	121b      	asrs	r3, r3, #8
 801a606:	6812      	ldr	r2, [r2, #0]
 801a608:	2bff      	cmp	r3, #255	@ 0xff
 801a60a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801a60e:	d12d      	bne.n	801a66c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801a610:	0953      	lsrs	r3, r2, #5
 801a612:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801a616:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a61a:	f02c 0c07 	bic.w	ip, ip, #7
 801a61e:	ea43 0c0c 	orr.w	ip, r3, ip
 801a622:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a626:	ea4c 0202 	orr.w	r2, ip, r2
 801a62a:	f8a8 2000 	strh.w	r2, [r8]
 801a62e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801a630:	441c      	add	r4, r3
 801a632:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a634:	f108 0802 	add.w	r8, r8, #2
 801a638:	441e      	add	r6, r3
 801a63a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a63e:	e6ba      	b.n	801a3b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801a640:	20013808 	.word	0x20013808
 801a644:	2800      	cmp	r0, #0
 801a646:	d0ba      	beq.n	801a5be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801a648:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801a64a:	442b      	add	r3, r5
 801a64c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a650:	07db      	lsls	r3, r3, #31
 801a652:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a656:	bf54      	ite	pl
 801a658:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a65c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a660:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a664:	fa5f f38c 	uxtb.w	r3, ip
 801a668:	930c      	str	r3, [sp, #48]	@ 0x30
 801a66a:	e7a8      	b.n	801a5be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801a66c:	f8b8 e000 	ldrh.w	lr, [r8]
 801a670:	fa1f fa83 	uxth.w	sl, r3
 801a674:	ea4f 202e 	mov.w	r0, lr, asr #8
 801a678:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801a67c:	43db      	mvns	r3, r3
 801a67e:	b2db      	uxtb	r3, r3
 801a680:	fb11 f10a 	smulbb	r1, r1, sl
 801a684:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801a688:	fb00 1003 	mla	r0, r0, r3, r1
 801a68c:	b2d2      	uxtb	r2, r2
 801a68e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801a692:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a696:	fa5f fe8e 	uxtb.w	lr, lr
 801a69a:	fb12 f20a 	smulbb	r2, r2, sl
 801a69e:	fb0e 2203 	mla	r2, lr, r3, r2
 801a6a2:	fa5f fc8c 	uxtb.w	ip, ip
 801a6a6:	b280      	uxth	r0, r0
 801a6a8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801a6ac:	b292      	uxth	r2, r2
 801a6ae:	fb1c fc0a 	smulbb	ip, ip, sl
 801a6b2:	fb01 cc03 	mla	ip, r1, r3, ip
 801a6b6:	1c43      	adds	r3, r0, #1
 801a6b8:	1c51      	adds	r1, r2, #1
 801a6ba:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a6be:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801a6c2:	fa1f fc8c 	uxth.w	ip, ip
 801a6c6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801a6ca:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801a6ce:	4308      	orrs	r0, r1
 801a6d0:	f10c 0101 	add.w	r1, ip, #1
 801a6d4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801a6d8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a6dc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801a6e0:	ea40 000c 	orr.w	r0, r0, ip
 801a6e4:	f8a8 0000 	strh.w	r0, [r8]
 801a6e8:	e7a1      	b.n	801a62e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801a6ea:	b017      	add	sp, #92	@ 0x5c
 801a6ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a6f0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801a6f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a6f4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801a6f8:	2d00      	cmp	r5, #0
 801a6fa:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801a6fe:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801a702:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801a706:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801a70a:	fb05 0e03 	mla	lr, r5, r3, r0
 801a70e:	f2c0 80b0 	blt.w	801a872 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801a712:	45a9      	cmp	r9, r5
 801a714:	f340 80ad 	ble.w	801a872 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801a718:	2800      	cmp	r0, #0
 801a71a:	f2c0 80a8 	blt.w	801a86e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801a71e:	4580      	cmp	r8, r0
 801a720:	f340 80a5 	ble.w	801a86e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801a724:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801a728:	f01e 0f01 	tst.w	lr, #1
 801a72c:	5d16      	ldrb	r6, [r2, r4]
 801a72e:	bf0c      	ite	eq
 801a730:	f006 060f 	andeq.w	r6, r6, #15
 801a734:	1136      	asrne	r6, r6, #4
 801a736:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801a73a:	b2f6      	uxtb	r6, r6
 801a73c:	1c44      	adds	r4, r0, #1
 801a73e:	f100 809b 	bmi.w	801a878 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801a742:	45a0      	cmp	r8, r4
 801a744:	f340 8098 	ble.w	801a878 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801a748:	2f00      	cmp	r7, #0
 801a74a:	f000 8097 	beq.w	801a87c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801a74e:	f10e 0a01 	add.w	sl, lr, #1
 801a752:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801a756:	f01a 0f01 	tst.w	sl, #1
 801a75a:	5d14      	ldrb	r4, [r2, r4]
 801a75c:	bf0c      	ite	eq
 801a75e:	f004 040f 	andeq.w	r4, r4, #15
 801a762:	1124      	asrne	r4, r4, #4
 801a764:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801a768:	b2e4      	uxtb	r4, r4
 801a76a:	3501      	adds	r5, #1
 801a76c:	f100 808a 	bmi.w	801a884 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801a770:	45a9      	cmp	r9, r5
 801a772:	f340 8087 	ble.w	801a884 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801a776:	f1bc 0f00 	cmp.w	ip, #0
 801a77a:	f000 8086 	beq.w	801a88a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801a77e:	2800      	cmp	r0, #0
 801a780:	db7e      	blt.n	801a880 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801a782:	4580      	cmp	r8, r0
 801a784:	dd7c      	ble.n	801a880 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801a786:	eb03 090e 	add.w	r9, r3, lr
 801a78a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801a78e:	f019 0f01 	tst.w	r9, #1
 801a792:	5d55      	ldrb	r5, [r2, r5]
 801a794:	bf0c      	ite	eq
 801a796:	f005 050f 	andeq.w	r5, r5, #15
 801a79a:	112d      	asrne	r5, r5, #4
 801a79c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801a7a0:	b2ed      	uxtb	r5, r5
 801a7a2:	3001      	adds	r0, #1
 801a7a4:	d474      	bmi.n	801a890 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801a7a6:	4580      	cmp	r8, r0
 801a7a8:	dd72      	ble.n	801a890 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801a7aa:	2f00      	cmp	r7, #0
 801a7ac:	d072      	beq.n	801a894 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801a7ae:	3301      	adds	r3, #1
 801a7b0:	449e      	add	lr, r3
 801a7b2:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801a7b6:	f01e 0f01 	tst.w	lr, #1
 801a7ba:	5cd0      	ldrb	r0, [r2, r3]
 801a7bc:	bf0c      	ite	eq
 801a7be:	f000 000f 	andeq.w	r0, r0, #15
 801a7c2:	1100      	asrne	r0, r0, #4
 801a7c4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a7c8:	b2c3      	uxtb	r3, r0
 801a7ca:	b2ba      	uxth	r2, r7
 801a7cc:	fa1f fc8c 	uxth.w	ip, ip
 801a7d0:	fb02 f00c 	mul.w	r0, r2, ip
 801a7d4:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801a7d8:	0112      	lsls	r2, r2, #4
 801a7da:	fa1f fc8c 	uxth.w	ip, ip
 801a7de:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801a7e2:	1a12      	subs	r2, r2, r0
 801a7e4:	eba7 070c 	sub.w	r7, r7, ip
 801a7e8:	b292      	uxth	r2, r2
 801a7ea:	b2bf      	uxth	r7, r7
 801a7ec:	4362      	muls	r2, r4
 801a7ee:	fb06 2207 	mla	r2, r6, r7, r2
 801a7f2:	fb0c 2505 	mla	r5, ip, r5, r2
 801a7f6:	fb00 5303 	mla	r3, r0, r3, r5
 801a7fa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a7fe:	b3a3      	cbz	r3, 801a86a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801a800:	4a25      	ldr	r2, [pc, #148]	@ (801a898 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801a802:	880e      	ldrh	r6, [r1, #0]
 801a804:	6815      	ldr	r5, [r2, #0]
 801a806:	1234      	asrs	r4, r6, #8
 801a808:	b29a      	uxth	r2, r3
 801a80a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801a80e:	43db      	mvns	r3, r3
 801a810:	b2db      	uxtb	r3, r3
 801a812:	fb10 f002 	smulbb	r0, r0, r2
 801a816:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801a81a:	fb04 0403 	mla	r4, r4, r3, r0
 801a81e:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801a822:	10f0      	asrs	r0, r6, #3
 801a824:	b2ed      	uxtb	r5, r5
 801a826:	00f6      	lsls	r6, r6, #3
 801a828:	fb17 f702 	smulbb	r7, r7, r2
 801a82c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801a830:	fb15 f202 	smulbb	r2, r5, r2
 801a834:	b2f6      	uxtb	r6, r6
 801a836:	b2a4      	uxth	r4, r4
 801a838:	fb00 7003 	mla	r0, r0, r3, r7
 801a83c:	fb06 2303 	mla	r3, r6, r3, r2
 801a840:	b29a      	uxth	r2, r3
 801a842:	1c63      	adds	r3, r4, #1
 801a844:	b280      	uxth	r0, r0
 801a846:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801a84a:	1c53      	adds	r3, r2, #1
 801a84c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a850:	1c42      	adds	r2, r0, #1
 801a852:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a856:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801a85a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a85e:	0940      	lsrs	r0, r0, #5
 801a860:	4323      	orrs	r3, r4
 801a862:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a866:	4303      	orrs	r3, r0
 801a868:	800b      	strh	r3, [r1, #0]
 801a86a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a86e:	2600      	movs	r6, #0
 801a870:	e764      	b.n	801a73c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801a872:	2400      	movs	r4, #0
 801a874:	4626      	mov	r6, r4
 801a876:	e778      	b.n	801a76a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801a878:	2400      	movs	r4, #0
 801a87a:	e776      	b.n	801a76a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801a87c:	463c      	mov	r4, r7
 801a87e:	e774      	b.n	801a76a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801a880:	2500      	movs	r5, #0
 801a882:	e78e      	b.n	801a7a2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801a884:	2300      	movs	r3, #0
 801a886:	461d      	mov	r5, r3
 801a888:	e79f      	b.n	801a7ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801a88a:	4663      	mov	r3, ip
 801a88c:	4665      	mov	r5, ip
 801a88e:	e79c      	b.n	801a7ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801a890:	2300      	movs	r3, #0
 801a892:	e79a      	b.n	801a7ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801a894:	463b      	mov	r3, r7
 801a896:	e798      	b.n	801a7ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801a898:	20013808 	.word	0x20013808

0801a89c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a89c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a8a0:	b093      	sub	sp, #76	@ 0x4c
 801a8a2:	461d      	mov	r5, r3
 801a8a4:	920c      	str	r2, [sp, #48]	@ 0x30
 801a8a6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801a8a8:	9107      	str	r1, [sp, #28]
 801a8aa:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801a8ae:	9011      	str	r0, [sp, #68]	@ 0x44
 801a8b0:	6850      	ldr	r0, [r2, #4]
 801a8b2:	6812      	ldr	r2, [r2, #0]
 801a8b4:	fb00 1303 	mla	r3, r0, r3, r1
 801a8b8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801a8bc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a8be:	689b      	ldr	r3, [r3, #8]
 801a8c0:	3301      	adds	r3, #1
 801a8c2:	f023 0301 	bic.w	r3, r3, #1
 801a8c6:	9306      	str	r3, [sp, #24]
 801a8c8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a8ca:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801a8ce:	681f      	ldr	r7, [r3, #0]
 801a8d0:	9b07      	ldr	r3, [sp, #28]
 801a8d2:	2b00      	cmp	r3, #0
 801a8d4:	dc03      	bgt.n	801a8de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801a8d6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a8d8:	2b00      	cmp	r3, #0
 801a8da:	f340 8267 	ble.w	801adac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801a8de:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a8e0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a8e4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a8e8:	1e48      	subs	r0, r1, #1
 801a8ea:	f102 3cff 	add.w	ip, r2, #4294967295
 801a8ee:	2d00      	cmp	r5, #0
 801a8f0:	f340 80b8 	ble.w	801aa64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a8f4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a8f8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a8fc:	d406      	bmi.n	801a90c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a8fe:	4586      	cmp	lr, r0
 801a900:	da04      	bge.n	801a90c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a902:	2b00      	cmp	r3, #0
 801a904:	db02      	blt.n	801a90c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a906:	4563      	cmp	r3, ip
 801a908:	f2c0 80ad 	blt.w	801aa66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801a90c:	f11e 0e01 	adds.w	lr, lr, #1
 801a910:	f100 80a0 	bmi.w	801aa54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801a914:	4571      	cmp	r1, lr
 801a916:	f2c0 809d 	blt.w	801aa54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801a91a:	3301      	adds	r3, #1
 801a91c:	f100 809a 	bmi.w	801aa54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801a920:	429a      	cmp	r2, r3
 801a922:	f2c0 8097 	blt.w	801aa54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801a926:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801a92a:	9509      	str	r5, [sp, #36]	@ 0x24
 801a92c:	46c8      	mov	r8, r9
 801a92e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a930:	2b00      	cmp	r3, #0
 801a932:	f340 80b6 	ble.w	801aaa2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801a936:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801a93a:	9308      	str	r3, [sp, #32]
 801a93c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a93e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801a942:	1423      	asrs	r3, r4, #16
 801a944:	ea4f 4026 	mov.w	r0, r6, asr #16
 801a948:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a94c:	f100 813e 	bmi.w	801abcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801a950:	f10c 3bff 	add.w	fp, ip, #4294967295
 801a954:	455b      	cmp	r3, fp
 801a956:	f280 8139 	bge.w	801abcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801a95a:	2800      	cmp	r0, #0
 801a95c:	f2c0 8136 	blt.w	801abcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801a960:	f10e 3bff 	add.w	fp, lr, #4294967295
 801a964:	4558      	cmp	r0, fp
 801a966:	f280 8131 	bge.w	801abcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801a96a:	9a06      	ldr	r2, [sp, #24]
 801a96c:	fb00 3302 	mla	r3, r0, r2, r3
 801a970:	0858      	lsrs	r0, r3, #1
 801a972:	07da      	lsls	r2, r3, #31
 801a974:	f817 c000 	ldrb.w	ip, [r7, r0]
 801a978:	9a08      	ldr	r2, [sp, #32]
 801a97a:	bf54      	ite	pl
 801a97c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a980:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a984:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a988:	fa5f fc8c 	uxtb.w	ip, ip
 801a98c:	2a00      	cmp	r2, #0
 801a98e:	f000 80cb 	beq.w	801ab28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a992:	1c58      	adds	r0, r3, #1
 801a994:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801a998:	07c0      	lsls	r0, r0, #31
 801a99a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801a99e:	bf54      	ite	pl
 801a9a0:	f00e 0e0f 	andpl.w	lr, lr, #15
 801a9a4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801a9a8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801a9ac:	fa5f fe8e 	uxtb.w	lr, lr
 801a9b0:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 801a9b4:	b1b9      	cbz	r1, 801a9e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801a9b6:	4453      	add	r3, sl
 801a9b8:	0858      	lsrs	r0, r3, #1
 801a9ba:	07da      	lsls	r2, r3, #31
 801a9bc:	5c38      	ldrb	r0, [r7, r0]
 801a9be:	bf54      	ite	pl
 801a9c0:	f000 000f 	andpl.w	r0, r0, #15
 801a9c4:	1100      	asrmi	r0, r0, #4
 801a9c6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a9ca:	b2c0      	uxtb	r0, r0
 801a9cc:	900a      	str	r0, [sp, #40]	@ 0x28
 801a9ce:	1c58      	adds	r0, r3, #1
 801a9d0:	0843      	lsrs	r3, r0, #1
 801a9d2:	07c2      	lsls	r2, r0, #31
 801a9d4:	5cfb      	ldrb	r3, [r7, r3]
 801a9d6:	bf54      	ite	pl
 801a9d8:	f003 030f 	andpl.w	r3, r3, #15
 801a9dc:	111b      	asrmi	r3, r3, #4
 801a9de:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a9e2:	b2db      	uxtb	r3, r3
 801a9e4:	930e      	str	r3, [sp, #56]	@ 0x38
 801a9e6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801a9ea:	b289      	uxth	r1, r1
 801a9ec:	fb02 f301 	mul.w	r3, r2, r1
 801a9f0:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801a9f4:	0112      	lsls	r2, r2, #4
 801a9f6:	b289      	uxth	r1, r1
 801a9f8:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801a9fc:	1a40      	subs	r0, r0, r1
 801a9fe:	fa1f fe80 	uxth.w	lr, r0
 801aa02:	1ad2      	subs	r2, r2, r3
 801aa04:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801aa06:	b292      	uxth	r2, r2
 801aa08:	4342      	muls	r2, r0
 801aa0a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801aa0e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801aa10:	fb01 c102 	mla	r1, r1, r2, ip
 801aa14:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801aa16:	fb03 1302 	mla	r3, r3, r2, r1
 801aa1a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801aa1e:	2bff      	cmp	r3, #255	@ 0xff
 801aa20:	f040 8093 	bne.w	801ab4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801aa24:	4bbe      	ldr	r3, [pc, #760]	@ (801ad20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801aa26:	681a      	ldr	r2, [r3, #0]
 801aa28:	4bbe      	ldr	r3, [pc, #760]	@ (801ad24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801aa2a:	0951      	lsrs	r1, r2, #5
 801aa2c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801aa30:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801aa34:	430b      	orrs	r3, r1
 801aa36:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801aa3a:	4313      	orrs	r3, r2
 801aa3c:	f8a8 3000 	strh.w	r3, [r8]
 801aa40:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801aa42:	441c      	add	r4, r3
 801aa44:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801aa46:	441e      	add	r6, r3
 801aa48:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801aa4a:	3b01      	subs	r3, #1
 801aa4c:	f108 0802 	add.w	r8, r8, #2
 801aa50:	9309      	str	r3, [sp, #36]	@ 0x24
 801aa52:	e76c      	b.n	801a92e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801aa54:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801aa56:	441c      	add	r4, r3
 801aa58:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801aa5a:	3d01      	subs	r5, #1
 801aa5c:	441e      	add	r6, r3
 801aa5e:	f109 0902 	add.w	r9, r9, #2
 801aa62:	e744      	b.n	801a8ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801aa64:	d021      	beq.n	801aaaa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801aa66:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801aa68:	1e6b      	subs	r3, r5, #1
 801aa6a:	fb00 4003 	mla	r0, r0, r3, r4
 801aa6e:	1400      	asrs	r0, r0, #16
 801aa70:	f53f af59 	bmi.w	801a926 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801aa74:	3901      	subs	r1, #1
 801aa76:	4288      	cmp	r0, r1
 801aa78:	f6bf af55 	bge.w	801a926 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801aa7c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801aa7e:	fb01 6303 	mla	r3, r1, r3, r6
 801aa82:	141b      	asrs	r3, r3, #16
 801aa84:	f53f af4f 	bmi.w	801a926 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801aa88:	3a01      	subs	r2, #1
 801aa8a:	4293      	cmp	r3, r2
 801aa8c:	f6bf af4b 	bge.w	801a926 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801aa90:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801aa94:	9308      	str	r3, [sp, #32]
 801aa96:	46a8      	mov	r8, r5
 801aa98:	46ce      	mov	lr, r9
 801aa9a:	f1b8 0f00 	cmp.w	r8, #0
 801aa9e:	f300 80b5 	bgt.w	801ac0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801aaa2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801aaa6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801aaaa:	9b07      	ldr	r3, [sp, #28]
 801aaac:	2b00      	cmp	r3, #0
 801aaae:	f340 817d 	ble.w	801adac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801aab2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801aab6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801aaba:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801aabe:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801aac0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aac4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aac8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aacc:	eef0 6a62 	vmov.f32	s13, s5
 801aad0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aad4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801aad8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aadc:	ee16 4a90 	vmov	r4, s13
 801aae0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aae4:	eef0 6a43 	vmov.f32	s13, s6
 801aae8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aaec:	ee12 2a90 	vmov	r2, s5
 801aaf0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aaf4:	fb92 f3f3 	sdiv	r3, r2, r3
 801aaf8:	ee13 2a10 	vmov	r2, s6
 801aafc:	931f      	str	r3, [sp, #124]	@ 0x7c
 801aafe:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ab00:	fb92 f3f3 	sdiv	r3, r2, r3
 801ab04:	9320      	str	r3, [sp, #128]	@ 0x80
 801ab06:	9b07      	ldr	r3, [sp, #28]
 801ab08:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801ab0a:	3b01      	subs	r3, #1
 801ab0c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ab10:	9307      	str	r3, [sp, #28]
 801ab12:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ab14:	ee16 6a90 	vmov	r6, s13
 801ab18:	bf14      	ite	ne
 801ab1a:	461d      	movne	r5, r3
 801ab1c:	4615      	moveq	r5, r2
 801ab1e:	eeb0 3a67 	vmov.f32	s6, s15
 801ab22:	eef0 2a47 	vmov.f32	s5, s14
 801ab26:	e6d3      	b.n	801a8d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801ab28:	2900      	cmp	r1, #0
 801ab2a:	f43f af5c 	beq.w	801a9e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801ab2e:	eb0a 0003 	add.w	r0, sl, r3
 801ab32:	0843      	lsrs	r3, r0, #1
 801ab34:	07c0      	lsls	r0, r0, #31
 801ab36:	5cfb      	ldrb	r3, [r7, r3]
 801ab38:	bf54      	ite	pl
 801ab3a:	f003 030f 	andpl.w	r3, r3, #15
 801ab3e:	111b      	asrmi	r3, r3, #4
 801ab40:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ab44:	b2db      	uxtb	r3, r3
 801ab46:	930a      	str	r3, [sp, #40]	@ 0x28
 801ab48:	e74d      	b.n	801a9e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801ab4a:	2b00      	cmp	r3, #0
 801ab4c:	f43f af78 	beq.w	801aa40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ab50:	4a73      	ldr	r2, [pc, #460]	@ (801ad20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801ab52:	f8b8 c000 	ldrh.w	ip, [r8]
 801ab56:	6810      	ldr	r0, [r2, #0]
 801ab58:	fa1f fe83 	uxth.w	lr, r3
 801ab5c:	ea4f 212c 	mov.w	r1, ip, asr #8
 801ab60:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801ab64:	43db      	mvns	r3, r3
 801ab66:	b2db      	uxtb	r3, r3
 801ab68:	fb12 f20e 	smulbb	r2, r2, lr
 801ab6c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ab70:	fb01 2103 	mla	r1, r1, r3, r2
 801ab74:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801ab78:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ab7c:	b2c0      	uxtb	r0, r0
 801ab7e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ab82:	fb1b fb0e 	smulbb	fp, fp, lr
 801ab86:	b289      	uxth	r1, r1
 801ab88:	fb10 fe0e 	smulbb	lr, r0, lr
 801ab8c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801ab90:	fa5f fc8c 	uxtb.w	ip, ip
 801ab94:	fb02 b203 	mla	r2, r2, r3, fp
 801ab98:	1c48      	adds	r0, r1, #1
 801ab9a:	fb0c e303 	mla	r3, ip, r3, lr
 801ab9e:	b292      	uxth	r2, r2
 801aba0:	b29b      	uxth	r3, r3
 801aba2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801aba6:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 801abaa:	f102 0b01 	add.w	fp, r2, #1
 801abae:	1c59      	adds	r1, r3, #1
 801abb0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801abb4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801abb8:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801abbc:	0952      	lsrs	r2, r2, #5
 801abbe:	4301      	orrs	r1, r0
 801abc0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801abc4:	4311      	orrs	r1, r2
 801abc6:	f8a8 1000 	strh.w	r1, [r8]
 801abca:	e739      	b.n	801aa40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801abcc:	f113 0b01 	adds.w	fp, r3, #1
 801abd0:	f53f af36 	bmi.w	801aa40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801abd4:	45dc      	cmp	ip, fp
 801abd6:	f6ff af33 	blt.w	801aa40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801abda:	f110 0b01 	adds.w	fp, r0, #1
 801abde:	f53f af2f 	bmi.w	801aa40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801abe2:	45de      	cmp	lr, fp
 801abe4:	f6ff af2c 	blt.w	801aa40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801abe8:	9a08      	ldr	r2, [sp, #32]
 801abea:	9302      	str	r3, [sp, #8]
 801abec:	fa0f f38e 	sxth.w	r3, lr
 801abf0:	9301      	str	r3, [sp, #4]
 801abf2:	fa0f f38c 	sxth.w	r3, ip
 801abf6:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801abfa:	9105      	str	r1, [sp, #20]
 801abfc:	9300      	str	r3, [sp, #0]
 801abfe:	463a      	mov	r2, r7
 801ac00:	4653      	mov	r3, sl
 801ac02:	4641      	mov	r1, r8
 801ac04:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801ac06:	f7ff fd73 	bl	801a6f0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801ac0a:	e719      	b.n	801aa40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ac0c:	9906      	ldr	r1, [sp, #24]
 801ac0e:	1422      	asrs	r2, r4, #16
 801ac10:	1433      	asrs	r3, r6, #16
 801ac12:	fb01 2303 	mla	r3, r1, r3, r2
 801ac16:	085a      	lsrs	r2, r3, #1
 801ac18:	07d9      	lsls	r1, r3, #31
 801ac1a:	5cba      	ldrb	r2, [r7, r2]
 801ac1c:	bf54      	ite	pl
 801ac1e:	f002 020f 	andpl.w	r2, r2, #15
 801ac22:	1112      	asrmi	r2, r2, #4
 801ac24:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ac28:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ac2c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801ac30:	b2d2      	uxtb	r2, r2
 801ac32:	2800      	cmp	r0, #0
 801ac34:	d062      	beq.n	801acfc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 801ac36:	f103 0a01 	add.w	sl, r3, #1
 801ac3a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801ac3e:	f01a 0f01 	tst.w	sl, #1
 801ac42:	5c79      	ldrb	r1, [r7, r1]
 801ac44:	bf0c      	ite	eq
 801ac46:	f001 010f 	andeq.w	r1, r1, #15
 801ac4a:	1109      	asrne	r1, r1, #4
 801ac4c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801ac50:	b2c9      	uxtb	r1, r1
 801ac52:	910f      	str	r1, [sp, #60]	@ 0x3c
 801ac54:	f1bc 0f00 	cmp.w	ip, #0
 801ac58:	d019      	beq.n	801ac8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801ac5a:	9908      	ldr	r1, [sp, #32]
 801ac5c:	440b      	add	r3, r1
 801ac5e:	0859      	lsrs	r1, r3, #1
 801ac60:	f013 0f01 	tst.w	r3, #1
 801ac64:	5c79      	ldrb	r1, [r7, r1]
 801ac66:	bf0c      	ite	eq
 801ac68:	f001 010f 	andeq.w	r1, r1, #15
 801ac6c:	1109      	asrne	r1, r1, #4
 801ac6e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801ac72:	b2c9      	uxtb	r1, r1
 801ac74:	3301      	adds	r3, #1
 801ac76:	910b      	str	r1, [sp, #44]	@ 0x2c
 801ac78:	0859      	lsrs	r1, r3, #1
 801ac7a:	07db      	lsls	r3, r3, #31
 801ac7c:	5c79      	ldrb	r1, [r7, r1]
 801ac7e:	bf54      	ite	pl
 801ac80:	f001 010f 	andpl.w	r1, r1, #15
 801ac84:	1109      	asrmi	r1, r1, #4
 801ac86:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801ac8a:	b2c9      	uxtb	r1, r1
 801ac8c:	9110      	str	r1, [sp, #64]	@ 0x40
 801ac8e:	b280      	uxth	r0, r0
 801ac90:	fa1f fc8c 	uxth.w	ip, ip
 801ac94:	fb00 f30c 	mul.w	r3, r0, ip
 801ac98:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801ac9c:	0100      	lsls	r0, r0, #4
 801ac9e:	fa1f fc8c 	uxth.w	ip, ip
 801aca2:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 801aca6:	eba1 010c 	sub.w	r1, r1, ip
 801acaa:	fa1f fa81 	uxth.w	sl, r1
 801acae:	1ac0      	subs	r0, r0, r3
 801acb0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801acb2:	b280      	uxth	r0, r0
 801acb4:	4348      	muls	r0, r1
 801acb6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801acb8:	fb02 020a 	mla	r2, r2, sl, r0
 801acbc:	fb0c 2c01 	mla	ip, ip, r1, r2
 801acc0:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801acc2:	fb03 c302 	mla	r3, r3, r2, ip
 801acc6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801acca:	2bff      	cmp	r3, #255	@ 0xff
 801accc:	d12c      	bne.n	801ad28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801acce:	4b14      	ldr	r3, [pc, #80]	@ (801ad20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801acd0:	681a      	ldr	r2, [r3, #0]
 801acd2:	4b14      	ldr	r3, [pc, #80]	@ (801ad24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801acd4:	0951      	lsrs	r1, r2, #5
 801acd6:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801acda:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801acde:	430b      	orrs	r3, r1
 801ace0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ace4:	4313      	orrs	r3, r2
 801ace6:	f8ae 3000 	strh.w	r3, [lr]
 801acea:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801acec:	441c      	add	r4, r3
 801acee:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801acf0:	f10e 0e02 	add.w	lr, lr, #2
 801acf4:	441e      	add	r6, r3
 801acf6:	f108 38ff 	add.w	r8, r8, #4294967295
 801acfa:	e6ce      	b.n	801aa9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801acfc:	f1bc 0f00 	cmp.w	ip, #0
 801ad00:	d0c5      	beq.n	801ac8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801ad02:	9908      	ldr	r1, [sp, #32]
 801ad04:	440b      	add	r3, r1
 801ad06:	0859      	lsrs	r1, r3, #1
 801ad08:	07db      	lsls	r3, r3, #31
 801ad0a:	5c79      	ldrb	r1, [r7, r1]
 801ad0c:	bf54      	ite	pl
 801ad0e:	f001 010f 	andpl.w	r1, r1, #15
 801ad12:	1109      	asrmi	r1, r1, #4
 801ad14:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801ad18:	b2c9      	uxtb	r1, r1
 801ad1a:	910b      	str	r1, [sp, #44]	@ 0x2c
 801ad1c:	e7b7      	b.n	801ac8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801ad1e:	bf00      	nop
 801ad20:	20013808 	.word	0x20013808
 801ad24:	fffff800 	.word	0xfffff800
 801ad28:	2b00      	cmp	r3, #0
 801ad2a:	d0de      	beq.n	801acea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801ad2c:	4a21      	ldr	r2, [pc, #132]	@ (801adb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801ad2e:	f8be c000 	ldrh.w	ip, [lr]
 801ad32:	6810      	ldr	r0, [r2, #0]
 801ad34:	fa1f fa83 	uxth.w	sl, r3
 801ad38:	ea4f 212c 	mov.w	r1, ip, asr #8
 801ad3c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801ad40:	43db      	mvns	r3, r3
 801ad42:	b2db      	uxtb	r3, r3
 801ad44:	fb12 f20a 	smulbb	r2, r2, sl
 801ad48:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ad4c:	fb01 2103 	mla	r1, r1, r3, r2
 801ad50:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801ad54:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ad58:	b2c0      	uxtb	r0, r0
 801ad5a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ad5e:	fa5f fc8c 	uxtb.w	ip, ip
 801ad62:	fb10 f00a 	smulbb	r0, r0, sl
 801ad66:	fb0c 0003 	mla	r0, ip, r3, r0
 801ad6a:	b289      	uxth	r1, r1
 801ad6c:	fb1b fb0a 	smulbb	fp, fp, sl
 801ad70:	b280      	uxth	r0, r0
 801ad72:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801ad76:	fb02 b203 	mla	r2, r2, r3, fp
 801ad7a:	1c4b      	adds	r3, r1, #1
 801ad7c:	f100 0b01 	add.w	fp, r0, #1
 801ad80:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ad84:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801ad88:	b292      	uxth	r2, r2
 801ad8a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801ad8e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801ad92:	ea4b 0101 	orr.w	r1, fp, r1
 801ad96:	f102 0b01 	add.w	fp, r2, #1
 801ad9a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801ad9e:	0952      	lsrs	r2, r2, #5
 801ada0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ada4:	4311      	orrs	r1, r2
 801ada6:	f8ae 1000 	strh.w	r1, [lr]
 801adaa:	e79e      	b.n	801acea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801adac:	b013      	add	sp, #76	@ 0x4c
 801adae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801adb2:	bf00      	nop
 801adb4:	20013808 	.word	0x20013808

0801adb8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 801adb8:	b570      	push	{r4, r5, r6, lr}
 801adba:	1208      	asrs	r0, r1, #8
 801adbc:	b29e      	uxth	r6, r3
 801adbe:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 801adc2:	1213      	asrs	r3, r2, #8
 801adc4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801adc8:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801adcc:	fb13 f305 	smulbb	r3, r3, r5
 801add0:	fb10 f006 	smulbb	r0, r0, r6
 801add4:	4418      	add	r0, r3
 801add6:	10cc      	asrs	r4, r1, #3
 801add8:	10d3      	asrs	r3, r2, #3
 801adda:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801adde:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801ade2:	fb13 f305 	smulbb	r3, r3, r5
 801ade6:	fb14 f406 	smulbb	r4, r4, r6
 801adea:	00c9      	lsls	r1, r1, #3
 801adec:	00d2      	lsls	r2, r2, #3
 801adee:	441c      	add	r4, r3
 801adf0:	b2d2      	uxtb	r2, r2
 801adf2:	b2cb      	uxtb	r3, r1
 801adf4:	fb12 f205 	smulbb	r2, r2, r5
 801adf8:	b280      	uxth	r0, r0
 801adfa:	fb13 f306 	smulbb	r3, r3, r6
 801adfe:	4413      	add	r3, r2
 801ae00:	1c42      	adds	r2, r0, #1
 801ae02:	b29b      	uxth	r3, r3
 801ae04:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ae08:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 801ae0c:	1c58      	adds	r0, r3, #1
 801ae0e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801ae12:	b2a4      	uxth	r4, r4
 801ae14:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801ae18:	4310      	orrs	r0, r2
 801ae1a:	1c62      	adds	r2, r4, #1
 801ae1c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801ae20:	0964      	lsrs	r4, r4, #5
 801ae22:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801ae26:	4320      	orrs	r0, r4
 801ae28:	bd70      	pop	{r4, r5, r6, pc}
	...

0801ae2c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801ae2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ae30:	b08f      	sub	sp, #60	@ 0x3c
 801ae32:	461c      	mov	r4, r3
 801ae34:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 801ae38:	9004      	str	r0, [sp, #16]
 801ae3a:	460d      	mov	r5, r1
 801ae3c:	4616      	mov	r6, r2
 801ae3e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ae40:	2f00      	cmp	r7, #0
 801ae42:	f000 80f6 	beq.w	801b032 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 801ae46:	6820      	ldr	r0, [r4, #0]
 801ae48:	6861      	ldr	r1, [r4, #4]
 801ae4a:	aa0a      	add	r2, sp, #40	@ 0x28
 801ae4c:	c203      	stmia	r2!, {r0, r1}
 801ae4e:	6818      	ldr	r0, [r3, #0]
 801ae50:	6859      	ldr	r1, [r3, #4]
 801ae52:	aa0c      	add	r2, sp, #48	@ 0x30
 801ae54:	c203      	stmia	r2!, {r0, r1}
 801ae56:	a80a      	add	r0, sp, #40	@ 0x28
 801ae58:	f7f1 f82a 	bl	800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ae5c:	4621      	mov	r1, r4
 801ae5e:	a80c      	add	r0, sp, #48	@ 0x30
 801ae60:	f7f1 f86a 	bl	800bf38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ae64:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801ae68:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 801ae6c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801ae70:	f002 0301 	and.w	r3, r2, #1
 801ae74:	9306      	str	r3, [sp, #24]
 801ae76:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801ae7a:	f003 0101 	and.w	r1, r3, #1
 801ae7e:	9105      	str	r1, [sp, #20]
 801ae80:	9805      	ldr	r0, [sp, #20]
 801ae82:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801ae86:	4403      	add	r3, r0
 801ae88:	fb01 2303 	mla	r3, r1, r3, r2
 801ae8c:	f04f 0802 	mov.w	r8, #2
 801ae90:	fb93 f3f8 	sdiv	r3, r3, r8
 801ae94:	441d      	add	r5, r3
 801ae96:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801ae9a:	441a      	add	r2, r3
 801ae9c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801aea0:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801aea4:	4419      	add	r1, r3
 801aea6:	4b64      	ldr	r3, [pc, #400]	@ (801b038 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801aea8:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 801aeac:	6818      	ldr	r0, [r3, #0]
 801aeae:	6803      	ldr	r3, [r0, #0]
 801aeb0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801aeb2:	4798      	blx	r3
 801aeb4:	4a61      	ldr	r2, [pc, #388]	@ (801b03c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 801aeb6:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 801aeba:	8813      	ldrh	r3, [r2, #0]
 801aebc:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 801aec0:	2fff      	cmp	r7, #255	@ 0xff
 801aec2:	fb03 a404 	mla	r4, r3, r4, sl
 801aec6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801aeca:	f106 0604 	add.w	r6, r6, #4
 801aece:	4611      	mov	r1, r2
 801aed0:	fb03 fb0b 	mul.w	fp, r3, fp
 801aed4:	d06b      	beq.n	801afae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 801aed6:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 801aeda:	9303      	str	r3, [sp, #12]
 801aedc:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 801aee0:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801aee4:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 801aee8:	9b07      	ldr	r3, [sp, #28]
 801aeea:	42a3      	cmp	r3, r4
 801aeec:	f240 809c 	bls.w	801b028 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801aef0:	9b06      	ldr	r3, [sp, #24]
 801aef2:	2b00      	cmp	r3, #0
 801aef4:	d039      	beq.n	801af6a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 801aef6:	782b      	ldrb	r3, [r5, #0]
 801aef8:	8822      	ldrh	r2, [r4, #0]
 801aefa:	9804      	ldr	r0, [sp, #16]
 801aefc:	f003 030f 	and.w	r3, r3, #15
 801af00:	f105 0801 	add.w	r8, r5, #1
 801af04:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801af08:	9b03      	ldr	r3, [sp, #12]
 801af0a:	9300      	str	r3, [sp, #0]
 801af0c:	463b      	mov	r3, r7
 801af0e:	f7ff ff53 	bl	801adb8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801af12:	f824 0b02 	strh.w	r0, [r4], #2
 801af16:	f109 3bff 	add.w	fp, r9, #4294967295
 801af1a:	f1bb 0f01 	cmp.w	fp, #1
 801af1e:	46a2      	mov	sl, r4
 801af20:	f104 0404 	add.w	r4, r4, #4
 801af24:	dd24      	ble.n	801af70 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 801af26:	f898 3000 	ldrb.w	r3, [r8]
 801af2a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801af2e:	9804      	ldr	r0, [sp, #16]
 801af30:	091b      	lsrs	r3, r3, #4
 801af32:	f1ab 0b02 	sub.w	fp, fp, #2
 801af36:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801af3a:	9b03      	ldr	r3, [sp, #12]
 801af3c:	9300      	str	r3, [sp, #0]
 801af3e:	463b      	mov	r3, r7
 801af40:	f7ff ff3a 	bl	801adb8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801af44:	f824 0c04 	strh.w	r0, [r4, #-4]
 801af48:	f818 3b01 	ldrb.w	r3, [r8], #1
 801af4c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 801af50:	9804      	ldr	r0, [sp, #16]
 801af52:	f003 030f 	and.w	r3, r3, #15
 801af56:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801af5a:	9b03      	ldr	r3, [sp, #12]
 801af5c:	9300      	str	r3, [sp, #0]
 801af5e:	463b      	mov	r3, r7
 801af60:	f7ff ff2a 	bl	801adb8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801af64:	f824 0c02 	strh.w	r0, [r4, #-2]
 801af68:	e7d7      	b.n	801af1a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 801af6a:	46a8      	mov	r8, r5
 801af6c:	46cb      	mov	fp, r9
 801af6e:	e7d4      	b.n	801af1a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 801af70:	d10e      	bne.n	801af90 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 801af72:	f898 3000 	ldrb.w	r3, [r8]
 801af76:	f8ba 2000 	ldrh.w	r2, [sl]
 801af7a:	9804      	ldr	r0, [sp, #16]
 801af7c:	091b      	lsrs	r3, r3, #4
 801af7e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801af82:	9b03      	ldr	r3, [sp, #12]
 801af84:	9300      	str	r3, [sp, #0]
 801af86:	463b      	mov	r3, r7
 801af88:	f7ff ff16 	bl	801adb8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801af8c:	f82a 0b02 	strh.w	r0, [sl], #2
 801af90:	9b08      	ldr	r3, [sp, #32]
 801af92:	9a05      	ldr	r2, [sp, #20]
 801af94:	881c      	ldrh	r4, [r3, #0]
 801af96:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801af9a:	eba4 0409 	sub.w	r4, r4, r9
 801af9e:	4413      	add	r3, r2
 801afa0:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 801afa4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801afa6:	fb93 f3f2 	sdiv	r3, r3, r2
 801afaa:	441d      	add	r5, r3
 801afac:	e79c      	b.n	801aee8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 801afae:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 801afb2:	45a3      	cmp	fp, r4
 801afb4:	d938      	bls.n	801b028 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801afb6:	9b06      	ldr	r3, [sp, #24]
 801afb8:	b1f3      	cbz	r3, 801aff8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 801afba:	782b      	ldrb	r3, [r5, #0]
 801afbc:	f003 030f 	and.w	r3, r3, #15
 801afc0:	1c6a      	adds	r2, r5, #1
 801afc2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801afc6:	8023      	strh	r3, [r4, #0]
 801afc8:	f109 30ff 	add.w	r0, r9, #4294967295
 801afcc:	3402      	adds	r4, #2
 801afce:	2801      	cmp	r0, #1
 801afd0:	4623      	mov	r3, r4
 801afd2:	f104 0404 	add.w	r4, r4, #4
 801afd6:	dd12      	ble.n	801affe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 801afd8:	7813      	ldrb	r3, [r2, #0]
 801afda:	091b      	lsrs	r3, r3, #4
 801afdc:	3802      	subs	r0, #2
 801afde:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801afe2:	f824 3c04 	strh.w	r3, [r4, #-4]
 801afe6:	f812 3b01 	ldrb.w	r3, [r2], #1
 801afea:	f003 030f 	and.w	r3, r3, #15
 801afee:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801aff2:	f824 3c02 	strh.w	r3, [r4, #-2]
 801aff6:	e7ea      	b.n	801afce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801aff8:	462a      	mov	r2, r5
 801affa:	4648      	mov	r0, r9
 801affc:	e7e7      	b.n	801afce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801affe:	d106      	bne.n	801b00e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 801b000:	7812      	ldrb	r2, [r2, #0]
 801b002:	0912      	lsrs	r2, r2, #4
 801b004:	3302      	adds	r3, #2
 801b006:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801b00a:	f823 2c02 	strh.w	r2, [r3, #-2]
 801b00e:	880c      	ldrh	r4, [r1, #0]
 801b010:	9a05      	ldr	r2, [sp, #20]
 801b012:	eba4 0409 	sub.w	r4, r4, r9
 801b016:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 801b01a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801b01e:	4413      	add	r3, r2
 801b020:	fb93 f3f8 	sdiv	r3, r3, r8
 801b024:	441d      	add	r5, r3
 801b026:	e7c4      	b.n	801afb2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801b028:	4b03      	ldr	r3, [pc, #12]	@ (801b038 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801b02a:	6818      	ldr	r0, [r3, #0]
 801b02c:	6803      	ldr	r3, [r0, #0]
 801b02e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b030:	4798      	blx	r3
 801b032:	b00f      	add	sp, #60	@ 0x3c
 801b034:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b038:	20013800 	.word	0x20013800
 801b03c:	200137fa 	.word	0x200137fa

0801b040 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 801b040:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b042:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801b046:	2dff      	cmp	r5, #255	@ 0xff
 801b048:	ea4f 2711 	mov.w	r7, r1, lsr #8
 801b04c:	d10c      	bne.n	801b068 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 801b04e:	2bff      	cmp	r3, #255	@ 0xff
 801b050:	d10a      	bne.n	801b068 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 801b052:	4b25      	ldr	r3, [pc, #148]	@ (801b0e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 801b054:	0948      	lsrs	r0, r1, #5
 801b056:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b05a:	403b      	ands	r3, r7
 801b05c:	4318      	orrs	r0, r3
 801b05e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801b062:	4308      	orrs	r0, r1
 801b064:	b280      	uxth	r0, r0
 801b066:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b068:	fb15 f503 	smulbb	r5, r5, r3
 801b06c:	b2ab      	uxth	r3, r5
 801b06e:	1c5d      	adds	r5, r3, #1
 801b070:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 801b074:	1214      	asrs	r4, r2, #8
 801b076:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801b07a:	fa1f fc85 	uxth.w	ip, r5
 801b07e:	10d6      	asrs	r6, r2, #3
 801b080:	00d0      	lsls	r0, r2, #3
 801b082:	43ed      	mvns	r5, r5
 801b084:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801b088:	f3c1 4207 	ubfx	r2, r1, #16, #8
 801b08c:	b2eb      	uxtb	r3, r5
 801b08e:	b2c0      	uxtb	r0, r0
 801b090:	fb12 f20c 	smulbb	r2, r2, ip
 801b094:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801b098:	fb04 2403 	mla	r4, r4, r3, r2
 801b09c:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 801b0a0:	b2c8      	uxtb	r0, r1
 801b0a2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801b0a6:	b2fd      	uxtb	r5, r7
 801b0a8:	fb10 f00c 	smulbb	r0, r0, ip
 801b0ac:	b2a4      	uxth	r4, r4
 801b0ae:	fb02 0003 	mla	r0, r2, r3, r0
 801b0b2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801b0b6:	fb15 f50c 	smulbb	r5, r5, ip
 801b0ba:	fb06 5503 	mla	r5, r6, r3, r5
 801b0be:	b283      	uxth	r3, r0
 801b0c0:	1c60      	adds	r0, r4, #1
 801b0c2:	b2ad      	uxth	r5, r5
 801b0c4:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 801b0c8:	1c58      	adds	r0, r3, #1
 801b0ca:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b0ce:	1c6b      	adds	r3, r5, #1
 801b0d0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b0d4:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801b0d8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801b0dc:	096d      	lsrs	r5, r5, #5
 801b0de:	4320      	orrs	r0, r4
 801b0e0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b0e4:	4328      	orrs	r0, r5
 801b0e6:	e7be      	b.n	801b066 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 801b0e8:	00fff800 	.word	0x00fff800

0801b0ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801b0ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b0f0:	461c      	mov	r4, r3
 801b0f2:	b08d      	sub	sp, #52	@ 0x34
 801b0f4:	460d      	mov	r5, r1
 801b0f6:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801b0f8:	6861      	ldr	r1, [r4, #4]
 801b0fa:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 801b0fe:	4680      	mov	r8, r0
 801b100:	6820      	ldr	r0, [r4, #0]
 801b102:	4616      	mov	r6, r2
 801b104:	aa08      	add	r2, sp, #32
 801b106:	c203      	stmia	r2!, {r0, r1}
 801b108:	6818      	ldr	r0, [r3, #0]
 801b10a:	6859      	ldr	r1, [r3, #4]
 801b10c:	aa0a      	add	r2, sp, #40	@ 0x28
 801b10e:	c203      	stmia	r2!, {r0, r1}
 801b110:	a808      	add	r0, sp, #32
 801b112:	f7f0 fecd 	bl	800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b116:	4621      	mov	r1, r4
 801b118:	a80a      	add	r0, sp, #40	@ 0x28
 801b11a:	f7f0 ff0d 	bl	800bf38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b11e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801b122:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 801b126:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 801b12a:	f002 0301 	and.w	r3, r2, #1
 801b12e:	9303      	str	r3, [sp, #12]
 801b130:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801b134:	f003 0101 	and.w	r1, r3, #1
 801b138:	9102      	str	r1, [sp, #8]
 801b13a:	9802      	ldr	r0, [sp, #8]
 801b13c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 801b140:	4403      	add	r3, r0
 801b142:	fb01 2303 	mla	r3, r1, r3, r2
 801b146:	f04f 0a02 	mov.w	sl, #2
 801b14a:	fb93 f3fa 	sdiv	r3, r3, sl
 801b14e:	441d      	add	r5, r3
 801b150:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801b154:	441a      	add	r2, r3
 801b156:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801b15a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 801b15e:	4a3f      	ldr	r2, [pc, #252]	@ (801b25c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 801b160:	9205      	str	r2, [sp, #20]
 801b162:	4419      	add	r1, r3
 801b164:	6810      	ldr	r0, [r2, #0]
 801b166:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 801b16a:	6803      	ldr	r3, [r0, #0]
 801b16c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b16e:	4798      	blx	r3
 801b170:	4b3b      	ldr	r3, [pc, #236]	@ (801b260 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 801b172:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 801b176:	8819      	ldrh	r1, [r3, #0]
 801b178:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 801b17c:	fb01 c404 	mla	r4, r1, r4, ip
 801b180:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b184:	434f      	muls	r7, r1
 801b186:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 801b18a:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 801b18e:	3604      	adds	r6, #4
 801b190:	9204      	str	r2, [sp, #16]
 801b192:	9b04      	ldr	r3, [sp, #16]
 801b194:	429c      	cmp	r4, r3
 801b196:	d258      	bcs.n	801b24a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 801b198:	9b03      	ldr	r3, [sp, #12]
 801b19a:	2b00      	cmp	r3, #0
 801b19c:	d034      	beq.n	801b208 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 801b19e:	782b      	ldrb	r3, [r5, #0]
 801b1a0:	f003 030f 	and.w	r3, r3, #15
 801b1a4:	1c6f      	adds	r7, r5, #1
 801b1a6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801b1aa:	0e0b      	lsrs	r3, r1, #24
 801b1ac:	d006      	beq.n	801b1bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 801b1ae:	8822      	ldrh	r2, [r4, #0]
 801b1b0:	9300      	str	r3, [sp, #0]
 801b1b2:	4640      	mov	r0, r8
 801b1b4:	464b      	mov	r3, r9
 801b1b6:	f7ff ff43 	bl	801b040 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801b1ba:	8020      	strh	r0, [r4, #0]
 801b1bc:	3402      	adds	r4, #2
 801b1be:	f10b 3aff 	add.w	sl, fp, #4294967295
 801b1c2:	f1ba 0f01 	cmp.w	sl, #1
 801b1c6:	dd22      	ble.n	801b20e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 801b1c8:	783b      	ldrb	r3, [r7, #0]
 801b1ca:	091b      	lsrs	r3, r3, #4
 801b1cc:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801b1d0:	0e0b      	lsrs	r3, r1, #24
 801b1d2:	d006      	beq.n	801b1e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 801b1d4:	8822      	ldrh	r2, [r4, #0]
 801b1d6:	9300      	str	r3, [sp, #0]
 801b1d8:	4640      	mov	r0, r8
 801b1da:	464b      	mov	r3, r9
 801b1dc:	f7ff ff30 	bl	801b040 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801b1e0:	8020      	strh	r0, [r4, #0]
 801b1e2:	f817 3b01 	ldrb.w	r3, [r7], #1
 801b1e6:	f003 030f 	and.w	r3, r3, #15
 801b1ea:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801b1ee:	0e0b      	lsrs	r3, r1, #24
 801b1f0:	d006      	beq.n	801b200 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 801b1f2:	8862      	ldrh	r2, [r4, #2]
 801b1f4:	9300      	str	r3, [sp, #0]
 801b1f6:	4640      	mov	r0, r8
 801b1f8:	464b      	mov	r3, r9
 801b1fa:	f7ff ff21 	bl	801b040 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801b1fe:	8060      	strh	r0, [r4, #2]
 801b200:	3404      	adds	r4, #4
 801b202:	f1aa 0a02 	sub.w	sl, sl, #2
 801b206:	e7dc      	b.n	801b1c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 801b208:	462f      	mov	r7, r5
 801b20a:	46da      	mov	sl, fp
 801b20c:	e7d9      	b.n	801b1c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 801b20e:	d10d      	bne.n	801b22c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 801b210:	783b      	ldrb	r3, [r7, #0]
 801b212:	091b      	lsrs	r3, r3, #4
 801b214:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801b218:	0e0b      	lsrs	r3, r1, #24
 801b21a:	d006      	beq.n	801b22a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 801b21c:	8822      	ldrh	r2, [r4, #0]
 801b21e:	9300      	str	r3, [sp, #0]
 801b220:	4640      	mov	r0, r8
 801b222:	464b      	mov	r3, r9
 801b224:	f7ff ff0c 	bl	801b040 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801b228:	8020      	strh	r0, [r4, #0]
 801b22a:	3402      	adds	r4, #2
 801b22c:	9b06      	ldr	r3, [sp, #24]
 801b22e:	9a02      	ldr	r2, [sp, #8]
 801b230:	881b      	ldrh	r3, [r3, #0]
 801b232:	eba3 030b 	sub.w	r3, r3, fp
 801b236:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b23a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801b23e:	4413      	add	r3, r2
 801b240:	9a07      	ldr	r2, [sp, #28]
 801b242:	fb93 f3f2 	sdiv	r3, r3, r2
 801b246:	441d      	add	r5, r3
 801b248:	e7a3      	b.n	801b192 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 801b24a:	9b05      	ldr	r3, [sp, #20]
 801b24c:	6818      	ldr	r0, [r3, #0]
 801b24e:	6803      	ldr	r3, [r0, #0]
 801b250:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b252:	4798      	blx	r3
 801b254:	b00d      	add	sp, #52	@ 0x34
 801b256:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b25a:	bf00      	nop
 801b25c:	20013800 	.word	0x20013800
 801b260:	200137fa 	.word	0x200137fa

0801b264 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 801b264:	b570      	push	{r4, r5, r6, lr}
 801b266:	1214      	asrs	r4, r2, #8
 801b268:	788d      	ldrb	r5, [r1, #2]
 801b26a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 801b26e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801b272:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801b276:	fb15 f503 	smulbb	r5, r5, r3
 801b27a:	fb04 5506 	mla	r5, r4, r6, r5
 801b27e:	10d0      	asrs	r0, r2, #3
 801b280:	784c      	ldrb	r4, [r1, #1]
 801b282:	7809      	ldrb	r1, [r1, #0]
 801b284:	00d2      	lsls	r2, r2, #3
 801b286:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801b28a:	b2d2      	uxtb	r2, r2
 801b28c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 801b290:	fb14 f403 	smulbb	r4, r4, r3
 801b294:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b298:	fb11 f303 	smulbb	r3, r1, r3
 801b29c:	fb00 4406 	mla	r4, r0, r6, r4
 801b2a0:	fb02 3306 	mla	r3, r2, r6, r3
 801b2a4:	b2ad      	uxth	r5, r5
 801b2a6:	b29b      	uxth	r3, r3
 801b2a8:	b2a4      	uxth	r4, r4
 801b2aa:	1c68      	adds	r0, r5, #1
 801b2ac:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 801b2b0:	1c62      	adds	r2, r4, #1
 801b2b2:	1c58      	adds	r0, r3, #1
 801b2b4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b2b8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801b2bc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801b2c0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801b2c4:	0964      	lsrs	r4, r4, #5
 801b2c6:	4328      	orrs	r0, r5
 801b2c8:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801b2cc:	4320      	orrs	r0, r4
 801b2ce:	bd70      	pop	{r4, r5, r6, pc}

0801b2d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801b2d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b2d4:	b08f      	sub	sp, #60	@ 0x3c
 801b2d6:	461c      	mov	r4, r3
 801b2d8:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 801b2dc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b2de:	4682      	mov	sl, r0
 801b2e0:	460e      	mov	r6, r1
 801b2e2:	4615      	mov	r5, r2
 801b2e4:	2f00      	cmp	r7, #0
 801b2e6:	f000 8142 	beq.w	801b56e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 801b2ea:	6820      	ldr	r0, [r4, #0]
 801b2ec:	6861      	ldr	r1, [r4, #4]
 801b2ee:	aa0a      	add	r2, sp, #40	@ 0x28
 801b2f0:	c203      	stmia	r2!, {r0, r1}
 801b2f2:	6818      	ldr	r0, [r3, #0]
 801b2f4:	6859      	ldr	r1, [r3, #4]
 801b2f6:	aa0c      	add	r2, sp, #48	@ 0x30
 801b2f8:	c203      	stmia	r2!, {r0, r1}
 801b2fa:	a80a      	add	r0, sp, #40	@ 0x28
 801b2fc:	f7f0 fdd8 	bl	800beb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b300:	4621      	mov	r1, r4
 801b302:	a80c      	add	r0, sp, #48	@ 0x30
 801b304:	f7f0 fe18 	bl	800bf38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b308:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801b30c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 801b310:	f002 0301 	and.w	r3, r2, #1
 801b314:	9306      	str	r3, [sp, #24]
 801b316:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801b31a:	f003 0101 	and.w	r1, r3, #1
 801b31e:	9105      	str	r1, [sp, #20]
 801b320:	9805      	ldr	r0, [sp, #20]
 801b322:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801b326:	4403      	add	r3, r0
 801b328:	fb01 2303 	mla	r3, r1, r3, r2
 801b32c:	f04f 0802 	mov.w	r8, #2
 801b330:	fb93 f3f8 	sdiv	r3, r3, r8
 801b334:	441e      	add	r6, r3
 801b336:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801b33a:	441a      	add	r2, r3
 801b33c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801b340:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801b344:	4419      	add	r1, r3
 801b346:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801b34a:	9303      	str	r3, [sp, #12]
 801b34c:	4b89      	ldr	r3, [pc, #548]	@ (801b574 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 801b34e:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 801b352:	6818      	ldr	r0, [r3, #0]
 801b354:	6803      	ldr	r3, [r0, #0]
 801b356:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b358:	4798      	blx	r3
 801b35a:	4a87      	ldr	r2, [pc, #540]	@ (801b578 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 801b35c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 801b360:	8813      	ldrh	r3, [r2, #0]
 801b362:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 801b366:	2fff      	cmp	r7, #255	@ 0xff
 801b368:	fb03 9404 	mla	r4, r3, r4, r9
 801b36c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b370:	f105 0504 	add.w	r5, r5, #4
 801b374:	4694      	mov	ip, r2
 801b376:	fb03 f30b 	mul.w	r3, r3, fp
 801b37a:	d071      	beq.n	801b460 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801b37c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b380:	43f9      	mvns	r1, r7
 801b382:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801b386:	b2c9      	uxtb	r1, r1
 801b388:	9104      	str	r1, [sp, #16]
 801b38a:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 801b38e:	9b07      	ldr	r3, [sp, #28]
 801b390:	42a3      	cmp	r3, r4
 801b392:	f240 80e7 	bls.w	801b564 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 801b396:	9b06      	ldr	r3, [sp, #24]
 801b398:	2b00      	cmp	r3, #0
 801b39a:	d03d      	beq.n	801b418 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 801b39c:	7831      	ldrb	r1, [r6, #0]
 801b39e:	9b04      	ldr	r3, [sp, #16]
 801b3a0:	8822      	ldrh	r2, [r4, #0]
 801b3a2:	9300      	str	r3, [sp, #0]
 801b3a4:	f001 010f 	and.w	r1, r1, #15
 801b3a8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801b3ac:	463b      	mov	r3, r7
 801b3ae:	4429      	add	r1, r5
 801b3b0:	4650      	mov	r0, sl
 801b3b2:	f7ff ff57 	bl	801b264 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801b3b6:	9b03      	ldr	r3, [sp, #12]
 801b3b8:	f824 0b02 	strh.w	r0, [r4], #2
 801b3bc:	f106 0801 	add.w	r8, r6, #1
 801b3c0:	f103 3bff 	add.w	fp, r3, #4294967295
 801b3c4:	f1bb 0f01 	cmp.w	fp, #1
 801b3c8:	46a1      	mov	r9, r4
 801b3ca:	f104 0404 	add.w	r4, r4, #4
 801b3ce:	dd27      	ble.n	801b420 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 801b3d0:	f898 1000 	ldrb.w	r1, [r8]
 801b3d4:	9b04      	ldr	r3, [sp, #16]
 801b3d6:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801b3da:	9300      	str	r3, [sp, #0]
 801b3dc:	0909      	lsrs	r1, r1, #4
 801b3de:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801b3e2:	463b      	mov	r3, r7
 801b3e4:	4429      	add	r1, r5
 801b3e6:	4650      	mov	r0, sl
 801b3e8:	f7ff ff3c 	bl	801b264 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801b3ec:	f824 0c04 	strh.w	r0, [r4, #-4]
 801b3f0:	f818 1b01 	ldrb.w	r1, [r8], #1
 801b3f4:	9b04      	ldr	r3, [sp, #16]
 801b3f6:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 801b3fa:	9300      	str	r3, [sp, #0]
 801b3fc:	f001 010f 	and.w	r1, r1, #15
 801b400:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801b404:	463b      	mov	r3, r7
 801b406:	4429      	add	r1, r5
 801b408:	4650      	mov	r0, sl
 801b40a:	f7ff ff2b 	bl	801b264 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801b40e:	f1ab 0b02 	sub.w	fp, fp, #2
 801b412:	f824 0c02 	strh.w	r0, [r4, #-2]
 801b416:	e7d5      	b.n	801b3c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801b418:	46b0      	mov	r8, r6
 801b41a:	f8dd b00c 	ldr.w	fp, [sp, #12]
 801b41e:	e7d1      	b.n	801b3c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801b420:	d10f      	bne.n	801b442 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 801b422:	f898 1000 	ldrb.w	r1, [r8]
 801b426:	9b04      	ldr	r3, [sp, #16]
 801b428:	f8b9 2000 	ldrh.w	r2, [r9]
 801b42c:	9300      	str	r3, [sp, #0]
 801b42e:	0909      	lsrs	r1, r1, #4
 801b430:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801b434:	463b      	mov	r3, r7
 801b436:	4429      	add	r1, r5
 801b438:	4650      	mov	r0, sl
 801b43a:	f7ff ff13 	bl	801b264 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801b43e:	f829 0b02 	strh.w	r0, [r9], #2
 801b442:	9b08      	ldr	r3, [sp, #32]
 801b444:	9a05      	ldr	r2, [sp, #20]
 801b446:	881c      	ldrh	r4, [r3, #0]
 801b448:	9b03      	ldr	r3, [sp, #12]
 801b44a:	1ae4      	subs	r4, r4, r3
 801b44c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801b450:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801b454:	4413      	add	r3, r2
 801b456:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801b458:	fb93 f3f2 	sdiv	r3, r3, r2
 801b45c:	441e      	add	r6, r3
 801b45e:	e796      	b.n	801b38e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 801b460:	4f46      	ldr	r7, [pc, #280]	@ (801b57c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 801b462:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b466:	42a3      	cmp	r3, r4
 801b468:	d97c      	bls.n	801b564 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 801b46a:	9a06      	ldr	r2, [sp, #24]
 801b46c:	2a00      	cmp	r2, #0
 801b46e:	d054      	beq.n	801b51a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801b470:	7830      	ldrb	r0, [r6, #0]
 801b472:	f000 000f 	and.w	r0, r0, #15
 801b476:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b47a:	eb05 0e00 	add.w	lr, r5, r0
 801b47e:	5c28      	ldrb	r0, [r5, r0]
 801b480:	f89e 2002 	ldrb.w	r2, [lr, #2]
 801b484:	f89e e001 	ldrb.w	lr, [lr, #1]
 801b488:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b48c:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801b490:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 801b494:	ea42 020e 	orr.w	r2, r2, lr
 801b498:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 801b49c:	f824 2b02 	strh.w	r2, [r4], #2
 801b4a0:	9a03      	ldr	r2, [sp, #12]
 801b4a2:	1c71      	adds	r1, r6, #1
 801b4a4:	f102 3eff 	add.w	lr, r2, #4294967295
 801b4a8:	f1be 0f01 	cmp.w	lr, #1
 801b4ac:	4620      	mov	r0, r4
 801b4ae:	f104 0404 	add.w	r4, r4, #4
 801b4b2:	dd36      	ble.n	801b522 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 801b4b4:	7808      	ldrb	r0, [r1, #0]
 801b4b6:	0900      	lsrs	r0, r0, #4
 801b4b8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b4bc:	eb05 0a00 	add.w	sl, r5, r0
 801b4c0:	f1ae 0e02 	sub.w	lr, lr, #2
 801b4c4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801b4c8:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801b4cc:	00d2      	lsls	r2, r2, #3
 801b4ce:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 801b4d2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b4d6:	ea49 0202 	orr.w	r2, r9, r2
 801b4da:	f815 9000 	ldrb.w	r9, [r5, r0]
 801b4de:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801b4e2:	f824 2c04 	strh.w	r2, [r4, #-4]
 801b4e6:	f811 0b01 	ldrb.w	r0, [r1], #1
 801b4ea:	f000 000f 	and.w	r0, r0, #15
 801b4ee:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b4f2:	eb05 0a00 	add.w	sl, r5, r0
 801b4f6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801b4fa:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801b4fe:	00d2      	lsls	r2, r2, #3
 801b500:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 801b504:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b508:	ea49 0202 	orr.w	r2, r9, r2
 801b50c:	f815 9000 	ldrb.w	r9, [r5, r0]
 801b510:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801b514:	f824 2c02 	strh.w	r2, [r4, #-2]
 801b518:	e7c6      	b.n	801b4a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 801b51a:	4631      	mov	r1, r6
 801b51c:	f8dd e00c 	ldr.w	lr, [sp, #12]
 801b520:	e7c2      	b.n	801b4a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 801b522:	d111      	bne.n	801b548 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 801b524:	7809      	ldrb	r1, [r1, #0]
 801b526:	0909      	lsrs	r1, r1, #4
 801b528:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801b52c:	186c      	adds	r4, r5, r1
 801b52e:	5c69      	ldrb	r1, [r5, r1]
 801b530:	78a2      	ldrb	r2, [r4, #2]
 801b532:	7864      	ldrb	r4, [r4, #1]
 801b534:	00e4      	lsls	r4, r4, #3
 801b536:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 801b53a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801b53e:	4322      	orrs	r2, r4
 801b540:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 801b544:	f820 2b02 	strh.w	r2, [r0], #2
 801b548:	9a03      	ldr	r2, [sp, #12]
 801b54a:	f8bc 4000 	ldrh.w	r4, [ip]
 801b54e:	9905      	ldr	r1, [sp, #20]
 801b550:	1aa4      	subs	r4, r4, r2
 801b552:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801b556:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b55a:	440a      	add	r2, r1
 801b55c:	fb92 f2f8 	sdiv	r2, r2, r8
 801b560:	4416      	add	r6, r2
 801b562:	e780      	b.n	801b466 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 801b564:	4b03      	ldr	r3, [pc, #12]	@ (801b574 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 801b566:	6818      	ldr	r0, [r3, #0]
 801b568:	6803      	ldr	r3, [r0, #0]
 801b56a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b56c:	4798      	blx	r3
 801b56e:	b00f      	add	sp, #60	@ 0x3c
 801b570:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b574:	20013800 	.word	0x20013800
 801b578:	200137fa 	.word	0x200137fa
 801b57c:	fffff800 	.word	0xfffff800

0801b580 <CRC_Lock>:
 801b580:	b530      	push	{r4, r5, lr}
 801b582:	4a2d      	ldr	r2, [pc, #180]	@ (801b638 <CRC_Lock+0xb8>)
 801b584:	6813      	ldr	r3, [r2, #0]
 801b586:	f023 0301 	bic.w	r3, r3, #1
 801b58a:	6013      	str	r3, [r2, #0]
 801b58c:	4b2b      	ldr	r3, [pc, #172]	@ (801b63c <CRC_Lock+0xbc>)
 801b58e:	681c      	ldr	r4, [r3, #0]
 801b590:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 801b594:	4014      	ands	r4, r2
 801b596:	f24c 2540 	movw	r5, #49728	@ 0xc240
 801b59a:	42ac      	cmp	r4, r5
 801b59c:	d005      	beq.n	801b5aa <CRC_Lock+0x2a>
 801b59e:	681c      	ldr	r4, [r3, #0]
 801b5a0:	f24c 2570 	movw	r5, #49776	@ 0xc270
 801b5a4:	4014      	ands	r4, r2
 801b5a6:	42ac      	cmp	r4, r5
 801b5a8:	d125      	bne.n	801b5f6 <CRC_Lock+0x76>
 801b5aa:	4b25      	ldr	r3, [pc, #148]	@ (801b640 <CRC_Lock+0xc0>)
 801b5ac:	681b      	ldr	r3, [r3, #0]
 801b5ae:	2b00      	cmp	r3, #0
 801b5b0:	d139      	bne.n	801b626 <CRC_Lock+0xa6>
 801b5b2:	4b24      	ldr	r3, [pc, #144]	@ (801b644 <CRC_Lock+0xc4>)
 801b5b4:	681a      	ldr	r2, [r3, #0]
 801b5b6:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801b5ba:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 801b5be:	d00d      	beq.n	801b5dc <CRC_Lock+0x5c>
 801b5c0:	681a      	ldr	r2, [r3, #0]
 801b5c2:	f240 4483 	movw	r4, #1155	@ 0x483
 801b5c6:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801b5ca:	42a2      	cmp	r2, r4
 801b5cc:	d006      	beq.n	801b5dc <CRC_Lock+0x5c>
 801b5ce:	681b      	ldr	r3, [r3, #0]
 801b5d0:	f240 4285 	movw	r2, #1157	@ 0x485
 801b5d4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801b5d8:	4293      	cmp	r3, r2
 801b5da:	d124      	bne.n	801b626 <CRC_Lock+0xa6>
 801b5dc:	4b1a      	ldr	r3, [pc, #104]	@ (801b648 <CRC_Lock+0xc8>)
 801b5de:	2201      	movs	r2, #1
 801b5e0:	601a      	str	r2, [r3, #0]
 801b5e2:	681a      	ldr	r2, [r3, #0]
 801b5e4:	2a00      	cmp	r2, #0
 801b5e6:	d1fc      	bne.n	801b5e2 <CRC_Lock+0x62>
 801b5e8:	4b18      	ldr	r3, [pc, #96]	@ (801b64c <CRC_Lock+0xcc>)
 801b5ea:	6018      	str	r0, [r3, #0]
 801b5ec:	6818      	ldr	r0, [r3, #0]
 801b5ee:	1a43      	subs	r3, r0, r1
 801b5f0:	4258      	negs	r0, r3
 801b5f2:	4158      	adcs	r0, r3
 801b5f4:	e00e      	b.n	801b614 <CRC_Lock+0x94>
 801b5f6:	681b      	ldr	r3, [r3, #0]
 801b5f8:	4013      	ands	r3, r2
 801b5fa:	f24d 2220 	movw	r2, #53792	@ 0xd220
 801b5fe:	4293      	cmp	r3, r2
 801b600:	d111      	bne.n	801b626 <CRC_Lock+0xa6>
 801b602:	4b13      	ldr	r3, [pc, #76]	@ (801b650 <CRC_Lock+0xd0>)
 801b604:	681b      	ldr	r3, [r3, #0]
 801b606:	f240 4286 	movw	r2, #1158	@ 0x486
 801b60a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801b60e:	4293      	cmp	r3, r2
 801b610:	d001      	beq.n	801b616 <CRC_Lock+0x96>
 801b612:	2000      	movs	r0, #0
 801b614:	bd30      	pop	{r4, r5, pc}
 801b616:	4b0f      	ldr	r3, [pc, #60]	@ (801b654 <CRC_Lock+0xd4>)
 801b618:	2201      	movs	r2, #1
 801b61a:	601a      	str	r2, [r3, #0]
 801b61c:	681a      	ldr	r2, [r3, #0]
 801b61e:	2a00      	cmp	r2, #0
 801b620:	d1fc      	bne.n	801b61c <CRC_Lock+0x9c>
 801b622:	4b0d      	ldr	r3, [pc, #52]	@ (801b658 <CRC_Lock+0xd8>)
 801b624:	e7e1      	b.n	801b5ea <CRC_Lock+0x6a>
 801b626:	4b0d      	ldr	r3, [pc, #52]	@ (801b65c <CRC_Lock+0xdc>)
 801b628:	2201      	movs	r2, #1
 801b62a:	601a      	str	r2, [r3, #0]
 801b62c:	681a      	ldr	r2, [r3, #0]
 801b62e:	2a00      	cmp	r2, #0
 801b630:	d1fc      	bne.n	801b62c <CRC_Lock+0xac>
 801b632:	4b0b      	ldr	r3, [pc, #44]	@ (801b660 <CRC_Lock+0xe0>)
 801b634:	e7d9      	b.n	801b5ea <CRC_Lock+0x6a>
 801b636:	bf00      	nop
 801b638:	e0002000 	.word	0xe0002000
 801b63c:	e000ed00 	.word	0xe000ed00
 801b640:	e0042000 	.word	0xe0042000
 801b644:	5c001000 	.word	0x5c001000
 801b648:	58024c08 	.word	0x58024c08
 801b64c:	58024c00 	.word	0x58024c00
 801b650:	46008ff0 	.word	0x46008ff0
 801b654:	46024c08 	.word	0x46024c08
 801b658:	46024c00 	.word	0x46024c00
 801b65c:	40023008 	.word	0x40023008
 801b660:	40023000 	.word	0x40023000

0801b664 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801b664:	6101      	str	r1, [r0, #16]
 801b666:	4770      	bx	lr

0801b668 <_ZN8touchgfx8Gestures4tickEv>:
 801b668:	7b83      	ldrb	r3, [r0, #14]
 801b66a:	b14b      	cbz	r3, 801b680 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801b66c:	8903      	ldrh	r3, [r0, #8]
 801b66e:	3301      	adds	r3, #1
 801b670:	b29b      	uxth	r3, r3
 801b672:	2b07      	cmp	r3, #7
 801b674:	8103      	strh	r3, [r0, #8]
 801b676:	bf81      	itttt	hi
 801b678:	2300      	movhi	r3, #0
 801b67a:	8143      	strhhi	r3, [r0, #10]
 801b67c:	8183      	strhhi	r3, [r0, #12]
 801b67e:	7383      	strbhi	r3, [r0, #14]
 801b680:	4770      	bx	lr
	...

0801b684 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801b684:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801b688:	4698      	mov	r8, r3
 801b68a:	8883      	ldrh	r3, [r0, #4]
 801b68c:	f8ad 3006 	strh.w	r3, [sp, #6]
 801b690:	eba8 0303 	sub.w	r3, r8, r3
 801b694:	b21b      	sxth	r3, r3
 801b696:	4604      	mov	r4, r0
 801b698:	2b00      	cmp	r3, #0
 801b69a:	4617      	mov	r7, r2
 801b69c:	4a18      	ldr	r2, [pc, #96]	@ (801b700 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801b69e:	9200      	str	r2, [sp, #0]
 801b6a0:	bfb8      	it	lt
 801b6a2:	425b      	neglt	r3, r3
 801b6a4:	8aa2      	ldrh	r2, [r4, #20]
 801b6a6:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 801b6aa:	f8ad 800a 	strh.w	r8, [sp, #10]
 801b6ae:	b21b      	sxth	r3, r3
 801b6b0:	460e      	mov	r6, r1
 801b6b2:	4293      	cmp	r3, r2
 801b6b4:	88c1      	ldrh	r1, [r0, #6]
 801b6b6:	f8ad 1008 	strh.w	r1, [sp, #8]
 801b6ba:	f04f 0000 	mov.w	r0, #0
 801b6be:	f88d 0004 	strb.w	r0, [sp, #4]
 801b6c2:	f8ad 500c 	strh.w	r5, [sp, #12]
 801b6c6:	dc07      	bgt.n	801b6d8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801b6c8:	1a69      	subs	r1, r5, r1
 801b6ca:	b209      	sxth	r1, r1
 801b6cc:	2900      	cmp	r1, #0
 801b6ce:	bfb8      	it	lt
 801b6d0:	4249      	neglt	r1, r1
 801b6d2:	b209      	sxth	r1, r1
 801b6d4:	428a      	cmp	r2, r1
 801b6d6:	da10      	bge.n	801b6fa <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801b6d8:	6920      	ldr	r0, [r4, #16]
 801b6da:	6803      	ldr	r3, [r0, #0]
 801b6dc:	4669      	mov	r1, sp
 801b6de:	685b      	ldr	r3, [r3, #4]
 801b6e0:	4798      	blx	r3
 801b6e2:	eba8 0606 	sub.w	r6, r8, r6
 801b6e6:	2300      	movs	r3, #0
 801b6e8:	1bef      	subs	r7, r5, r7
 801b6ea:	2001      	movs	r0, #1
 801b6ec:	8123      	strh	r3, [r4, #8]
 801b6ee:	8166      	strh	r6, [r4, #10]
 801b6f0:	81a7      	strh	r7, [r4, #12]
 801b6f2:	f8a4 8004 	strh.w	r8, [r4, #4]
 801b6f6:	80e5      	strh	r5, [r4, #6]
 801b6f8:	73a0      	strb	r0, [r4, #14]
 801b6fa:	b004      	add	sp, #16
 801b6fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b700:	0801def0 	.word	0x0801def0

0801b704 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801b704:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b706:	461e      	mov	r6, r3
 801b708:	1e4b      	subs	r3, r1, #1
 801b70a:	2b01      	cmp	r3, #1
 801b70c:	b085      	sub	sp, #20
 801b70e:	4604      	mov	r4, r0
 801b710:	460d      	mov	r5, r1
 801b712:	4617      	mov	r7, r2
 801b714:	d84b      	bhi.n	801b7ae <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801b716:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801b71a:	1cd3      	adds	r3, r2, #3
 801b71c:	b29b      	uxth	r3, r3
 801b71e:	2b06      	cmp	r3, #6
 801b720:	d916      	bls.n	801b750 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801b722:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 801b7c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801b726:	f8cd c004 	str.w	ip, [sp, #4]
 801b72a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b72e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b732:	6900      	ldr	r0, [r0, #16]
 801b734:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b738:	f04f 0c00 	mov.w	ip, #0
 801b73c:	f88d c008 	strb.w	ip, [sp, #8]
 801b740:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b744:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b748:	6803      	ldr	r3, [r0, #0]
 801b74a:	a901      	add	r1, sp, #4
 801b74c:	689b      	ldr	r3, [r3, #8]
 801b74e:	4798      	blx	r3
 801b750:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801b754:	1cd3      	adds	r3, r2, #3
 801b756:	b29b      	uxth	r3, r3
 801b758:	2b06      	cmp	r3, #6
 801b75a:	d916      	bls.n	801b78a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b75c:	f8df c064 	ldr.w	ip, [pc, #100]	@ 801b7c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801b760:	f8cd c004 	str.w	ip, [sp, #4]
 801b764:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b768:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b76c:	6920      	ldr	r0, [r4, #16]
 801b76e:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b772:	f04f 0c01 	mov.w	ip, #1
 801b776:	f88d c008 	strb.w	ip, [sp, #8]
 801b77a:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b77e:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b782:	6803      	ldr	r3, [r0, #0]
 801b784:	a901      	add	r1, sp, #4
 801b786:	689b      	ldr	r3, [r3, #8]
 801b788:	4798      	blx	r3
 801b78a:	4b0d      	ldr	r3, [pc, #52]	@ (801b7c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801b78c:	9301      	str	r3, [sp, #4]
 801b78e:	6920      	ldr	r0, [r4, #16]
 801b790:	f88d 5008 	strb.w	r5, [sp, #8]
 801b794:	2300      	movs	r3, #0
 801b796:	f8ad 700a 	strh.w	r7, [sp, #10]
 801b79a:	f8ad 600c 	strh.w	r6, [sp, #12]
 801b79e:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b7a2:	6803      	ldr	r3, [r0, #0]
 801b7a4:	a901      	add	r1, sp, #4
 801b7a6:	681b      	ldr	r3, [r3, #0]
 801b7a8:	4798      	blx	r3
 801b7aa:	b005      	add	sp, #20
 801b7ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b7ae:	2900      	cmp	r1, #0
 801b7b0:	d1eb      	bne.n	801b78a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b7b2:	80a2      	strh	r2, [r4, #4]
 801b7b4:	80c6      	strh	r6, [r0, #6]
 801b7b6:	60a1      	str	r1, [r4, #8]
 801b7b8:	81a1      	strh	r1, [r4, #12]
 801b7ba:	73a1      	strb	r1, [r4, #14]
 801b7bc:	e7e5      	b.n	801b78a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b7be:	bf00      	nop
 801b7c0:	0801dedc 	.word	0x0801dedc
 801b7c4:	0801df04 	.word	0x0801df04

0801b7c8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801b7c8:	b570      	push	{r4, r5, r6, lr}
 801b7ca:	790b      	ldrb	r3, [r1, #4]
 801b7cc:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 801b7d0:	2b00      	cmp	r3, #0
 801b7d2:	bf0c      	ite	eq
 801b7d4:	2301      	moveq	r3, #1
 801b7d6:	2300      	movne	r3, #0
 801b7d8:	4604      	mov	r4, r0
 801b7da:	460e      	mov	r6, r1
 801b7dc:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 801b7e0:	d109      	bne.n	801b7f6 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801b7e2:	b14d      	cbz	r5, 801b7f8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801b7e4:	7933      	ldrb	r3, [r6, #4]
 801b7e6:	2b01      	cmp	r3, #1
 801b7e8:	d10c      	bne.n	801b804 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801b7ea:	6823      	ldr	r3, [r4, #0]
 801b7ec:	4620      	mov	r0, r4
 801b7ee:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 801b7f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801b7f4:	4718      	bx	r3
 801b7f6:	b12d      	cbz	r5, 801b804 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801b7f8:	6823      	ldr	r3, [r4, #0]
 801b7fa:	4620      	mov	r0, r4
 801b7fc:	695b      	ldr	r3, [r3, #20]
 801b7fe:	4798      	blx	r3
 801b800:	2d00      	cmp	r5, #0
 801b802:	d1ef      	bne.n	801b7e4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801b804:	bd70      	pop	{r4, r5, r6, pc}

0801b806 <__aeabi_atexit>:
 801b806:	460b      	mov	r3, r1
 801b808:	4601      	mov	r1, r0
 801b80a:	4618      	mov	r0, r3
 801b80c:	f000 b910 	b.w	801ba30 <__cxa_atexit>

0801b810 <_ZdlPvj>:
 801b810:	f000 b812 	b.w	801b838 <_ZdlPv>

0801b814 <__cxa_guard_acquire>:
 801b814:	6802      	ldr	r2, [r0, #0]
 801b816:	07d2      	lsls	r2, r2, #31
 801b818:	4603      	mov	r3, r0
 801b81a:	d405      	bmi.n	801b828 <__cxa_guard_acquire+0x14>
 801b81c:	7842      	ldrb	r2, [r0, #1]
 801b81e:	b102      	cbz	r2, 801b822 <__cxa_guard_acquire+0xe>
 801b820:	deff      	udf	#255	@ 0xff
 801b822:	2001      	movs	r0, #1
 801b824:	7058      	strb	r0, [r3, #1]
 801b826:	4770      	bx	lr
 801b828:	2000      	movs	r0, #0
 801b82a:	4770      	bx	lr

0801b82c <__cxa_guard_release>:
 801b82c:	2301      	movs	r3, #1
 801b82e:	6003      	str	r3, [r0, #0]
 801b830:	4770      	bx	lr

0801b832 <__cxa_pure_virtual>:
 801b832:	b508      	push	{r3, lr}
 801b834:	f000 f80e 	bl	801b854 <_ZSt9terminatev>

0801b838 <_ZdlPv>:
 801b838:	f000 b844 	b.w	801b8c4 <free>

0801b83c <_ZN10__cxxabiv111__terminateEPFvvE>:
 801b83c:	b508      	push	{r3, lr}
 801b83e:	4780      	blx	r0
 801b840:	f000 f80d 	bl	801b85e <abort>

0801b844 <_ZSt13get_terminatev>:
 801b844:	4b02      	ldr	r3, [pc, #8]	@ (801b850 <_ZSt13get_terminatev+0xc>)
 801b846:	6818      	ldr	r0, [r3, #0]
 801b848:	f3bf 8f5b 	dmb	ish
 801b84c:	4770      	bx	lr
 801b84e:	bf00      	nop
 801b850:	20000108 	.word	0x20000108

0801b854 <_ZSt9terminatev>:
 801b854:	b508      	push	{r3, lr}
 801b856:	f7ff fff5 	bl	801b844 <_ZSt13get_terminatev>
 801b85a:	f7ff ffef 	bl	801b83c <_ZN10__cxxabiv111__terminateEPFvvE>

0801b85e <abort>:
 801b85e:	b508      	push	{r3, lr}
 801b860:	2006      	movs	r0, #6
 801b862:	f000 fa3b 	bl	801bcdc <raise>
 801b866:	2001      	movs	r0, #1
 801b868:	f7e6 fb2a 	bl	8001ec0 <_exit>

0801b86c <__assert_func>:
 801b86c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801b86e:	4614      	mov	r4, r2
 801b870:	461a      	mov	r2, r3
 801b872:	4b09      	ldr	r3, [pc, #36]	@ (801b898 <__assert_func+0x2c>)
 801b874:	681b      	ldr	r3, [r3, #0]
 801b876:	4605      	mov	r5, r0
 801b878:	68d8      	ldr	r0, [r3, #12]
 801b87a:	b954      	cbnz	r4, 801b892 <__assert_func+0x26>
 801b87c:	4b07      	ldr	r3, [pc, #28]	@ (801b89c <__assert_func+0x30>)
 801b87e:	461c      	mov	r4, r3
 801b880:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801b884:	9100      	str	r1, [sp, #0]
 801b886:	462b      	mov	r3, r5
 801b888:	4905      	ldr	r1, [pc, #20]	@ (801b8a0 <__assert_func+0x34>)
 801b88a:	f000 f983 	bl	801bb94 <fiprintf>
 801b88e:	f7ff ffe6 	bl	801b85e <abort>
 801b892:	4b04      	ldr	r3, [pc, #16]	@ (801b8a4 <__assert_func+0x38>)
 801b894:	e7f4      	b.n	801b880 <__assert_func+0x14>
 801b896:	bf00      	nop
 801b898:	20000118 	.word	0x20000118
 801b89c:	0801e25b 	.word	0x0801e25b
 801b8a0:	0801e22d 	.word	0x0801e22d
 801b8a4:	0801e220 	.word	0x0801e220

0801b8a8 <atexit>:
 801b8a8:	2300      	movs	r3, #0
 801b8aa:	4601      	mov	r1, r0
 801b8ac:	461a      	mov	r2, r3
 801b8ae:	4618      	mov	r0, r3
 801b8b0:	f000 bac2 	b.w	801be38 <__register_exitproc>

0801b8b4 <malloc>:
 801b8b4:	4b02      	ldr	r3, [pc, #8]	@ (801b8c0 <malloc+0xc>)
 801b8b6:	4601      	mov	r1, r0
 801b8b8:	6818      	ldr	r0, [r3, #0]
 801b8ba:	f000 b82d 	b.w	801b918 <_malloc_r>
 801b8be:	bf00      	nop
 801b8c0:	20000118 	.word	0x20000118

0801b8c4 <free>:
 801b8c4:	4b02      	ldr	r3, [pc, #8]	@ (801b8d0 <free+0xc>)
 801b8c6:	4601      	mov	r1, r0
 801b8c8:	6818      	ldr	r0, [r3, #0]
 801b8ca:	f000 bb11 	b.w	801bef0 <_free_r>
 801b8ce:	bf00      	nop
 801b8d0:	20000118 	.word	0x20000118

0801b8d4 <sbrk_aligned>:
 801b8d4:	b570      	push	{r4, r5, r6, lr}
 801b8d6:	4e0f      	ldr	r6, [pc, #60]	@ (801b914 <sbrk_aligned+0x40>)
 801b8d8:	460c      	mov	r4, r1
 801b8da:	6831      	ldr	r1, [r6, #0]
 801b8dc:	4605      	mov	r5, r0
 801b8de:	b911      	cbnz	r1, 801b8e6 <sbrk_aligned+0x12>
 801b8e0:	f000 fa4c 	bl	801bd7c <_sbrk_r>
 801b8e4:	6030      	str	r0, [r6, #0]
 801b8e6:	4621      	mov	r1, r4
 801b8e8:	4628      	mov	r0, r5
 801b8ea:	f000 fa47 	bl	801bd7c <_sbrk_r>
 801b8ee:	1c43      	adds	r3, r0, #1
 801b8f0:	d103      	bne.n	801b8fa <sbrk_aligned+0x26>
 801b8f2:	f04f 34ff 	mov.w	r4, #4294967295
 801b8f6:	4620      	mov	r0, r4
 801b8f8:	bd70      	pop	{r4, r5, r6, pc}
 801b8fa:	1cc4      	adds	r4, r0, #3
 801b8fc:	f024 0403 	bic.w	r4, r4, #3
 801b900:	42a0      	cmp	r0, r4
 801b902:	d0f8      	beq.n	801b8f6 <sbrk_aligned+0x22>
 801b904:	1a21      	subs	r1, r4, r0
 801b906:	4628      	mov	r0, r5
 801b908:	f000 fa38 	bl	801bd7c <_sbrk_r>
 801b90c:	3001      	adds	r0, #1
 801b90e:	d1f2      	bne.n	801b8f6 <sbrk_aligned+0x22>
 801b910:	e7ef      	b.n	801b8f2 <sbrk_aligned+0x1e>
 801b912:	bf00      	nop
 801b914:	2001414c 	.word	0x2001414c

0801b918 <_malloc_r>:
 801b918:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801b91c:	1ccd      	adds	r5, r1, #3
 801b91e:	f025 0503 	bic.w	r5, r5, #3
 801b922:	3508      	adds	r5, #8
 801b924:	2d0c      	cmp	r5, #12
 801b926:	bf38      	it	cc
 801b928:	250c      	movcc	r5, #12
 801b92a:	2d00      	cmp	r5, #0
 801b92c:	4606      	mov	r6, r0
 801b92e:	db01      	blt.n	801b934 <_malloc_r+0x1c>
 801b930:	42a9      	cmp	r1, r5
 801b932:	d904      	bls.n	801b93e <_malloc_r+0x26>
 801b934:	230c      	movs	r3, #12
 801b936:	6033      	str	r3, [r6, #0]
 801b938:	2000      	movs	r0, #0
 801b93a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801b93e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 801ba14 <_malloc_r+0xfc>
 801b942:	f000 f869 	bl	801ba18 <__malloc_lock>
 801b946:	f8d8 3000 	ldr.w	r3, [r8]
 801b94a:	461c      	mov	r4, r3
 801b94c:	bb44      	cbnz	r4, 801b9a0 <_malloc_r+0x88>
 801b94e:	4629      	mov	r1, r5
 801b950:	4630      	mov	r0, r6
 801b952:	f7ff ffbf 	bl	801b8d4 <sbrk_aligned>
 801b956:	1c43      	adds	r3, r0, #1
 801b958:	4604      	mov	r4, r0
 801b95a:	d158      	bne.n	801ba0e <_malloc_r+0xf6>
 801b95c:	f8d8 4000 	ldr.w	r4, [r8]
 801b960:	4627      	mov	r7, r4
 801b962:	2f00      	cmp	r7, #0
 801b964:	d143      	bne.n	801b9ee <_malloc_r+0xd6>
 801b966:	2c00      	cmp	r4, #0
 801b968:	d04b      	beq.n	801ba02 <_malloc_r+0xea>
 801b96a:	6823      	ldr	r3, [r4, #0]
 801b96c:	4639      	mov	r1, r7
 801b96e:	4630      	mov	r0, r6
 801b970:	eb04 0903 	add.w	r9, r4, r3
 801b974:	f000 fa02 	bl	801bd7c <_sbrk_r>
 801b978:	4581      	cmp	r9, r0
 801b97a:	d142      	bne.n	801ba02 <_malloc_r+0xea>
 801b97c:	6821      	ldr	r1, [r4, #0]
 801b97e:	1a6d      	subs	r5, r5, r1
 801b980:	4629      	mov	r1, r5
 801b982:	4630      	mov	r0, r6
 801b984:	f7ff ffa6 	bl	801b8d4 <sbrk_aligned>
 801b988:	3001      	adds	r0, #1
 801b98a:	d03a      	beq.n	801ba02 <_malloc_r+0xea>
 801b98c:	6823      	ldr	r3, [r4, #0]
 801b98e:	442b      	add	r3, r5
 801b990:	6023      	str	r3, [r4, #0]
 801b992:	f8d8 3000 	ldr.w	r3, [r8]
 801b996:	685a      	ldr	r2, [r3, #4]
 801b998:	bb62      	cbnz	r2, 801b9f4 <_malloc_r+0xdc>
 801b99a:	f8c8 7000 	str.w	r7, [r8]
 801b99e:	e00f      	b.n	801b9c0 <_malloc_r+0xa8>
 801b9a0:	6822      	ldr	r2, [r4, #0]
 801b9a2:	1b52      	subs	r2, r2, r5
 801b9a4:	d420      	bmi.n	801b9e8 <_malloc_r+0xd0>
 801b9a6:	2a0b      	cmp	r2, #11
 801b9a8:	d917      	bls.n	801b9da <_malloc_r+0xc2>
 801b9aa:	1961      	adds	r1, r4, r5
 801b9ac:	42a3      	cmp	r3, r4
 801b9ae:	6025      	str	r5, [r4, #0]
 801b9b0:	bf18      	it	ne
 801b9b2:	6059      	strne	r1, [r3, #4]
 801b9b4:	6863      	ldr	r3, [r4, #4]
 801b9b6:	bf08      	it	eq
 801b9b8:	f8c8 1000 	streq.w	r1, [r8]
 801b9bc:	5162      	str	r2, [r4, r5]
 801b9be:	604b      	str	r3, [r1, #4]
 801b9c0:	4630      	mov	r0, r6
 801b9c2:	f000 f82f 	bl	801ba24 <__malloc_unlock>
 801b9c6:	f104 000b 	add.w	r0, r4, #11
 801b9ca:	1d23      	adds	r3, r4, #4
 801b9cc:	f020 0007 	bic.w	r0, r0, #7
 801b9d0:	1ac2      	subs	r2, r0, r3
 801b9d2:	bf1c      	itt	ne
 801b9d4:	1a1b      	subne	r3, r3, r0
 801b9d6:	50a3      	strne	r3, [r4, r2]
 801b9d8:	e7af      	b.n	801b93a <_malloc_r+0x22>
 801b9da:	6862      	ldr	r2, [r4, #4]
 801b9dc:	42a3      	cmp	r3, r4
 801b9de:	bf0c      	ite	eq
 801b9e0:	f8c8 2000 	streq.w	r2, [r8]
 801b9e4:	605a      	strne	r2, [r3, #4]
 801b9e6:	e7eb      	b.n	801b9c0 <_malloc_r+0xa8>
 801b9e8:	4623      	mov	r3, r4
 801b9ea:	6864      	ldr	r4, [r4, #4]
 801b9ec:	e7ae      	b.n	801b94c <_malloc_r+0x34>
 801b9ee:	463c      	mov	r4, r7
 801b9f0:	687f      	ldr	r7, [r7, #4]
 801b9f2:	e7b6      	b.n	801b962 <_malloc_r+0x4a>
 801b9f4:	461a      	mov	r2, r3
 801b9f6:	685b      	ldr	r3, [r3, #4]
 801b9f8:	42a3      	cmp	r3, r4
 801b9fa:	d1fb      	bne.n	801b9f4 <_malloc_r+0xdc>
 801b9fc:	2300      	movs	r3, #0
 801b9fe:	6053      	str	r3, [r2, #4]
 801ba00:	e7de      	b.n	801b9c0 <_malloc_r+0xa8>
 801ba02:	230c      	movs	r3, #12
 801ba04:	6033      	str	r3, [r6, #0]
 801ba06:	4630      	mov	r0, r6
 801ba08:	f000 f80c 	bl	801ba24 <__malloc_unlock>
 801ba0c:	e794      	b.n	801b938 <_malloc_r+0x20>
 801ba0e:	6005      	str	r5, [r0, #0]
 801ba10:	e7d6      	b.n	801b9c0 <_malloc_r+0xa8>
 801ba12:	bf00      	nop
 801ba14:	20014150 	.word	0x20014150

0801ba18 <__malloc_lock>:
 801ba18:	4801      	ldr	r0, [pc, #4]	@ (801ba20 <__malloc_lock+0x8>)
 801ba1a:	f000 b9fc 	b.w	801be16 <__retarget_lock_acquire_recursive>
 801ba1e:	bf00      	nop
 801ba20:	20014294 	.word	0x20014294

0801ba24 <__malloc_unlock>:
 801ba24:	4801      	ldr	r0, [pc, #4]	@ (801ba2c <__malloc_unlock+0x8>)
 801ba26:	f000 b9f7 	b.w	801be18 <__retarget_lock_release_recursive>
 801ba2a:	bf00      	nop
 801ba2c:	20014294 	.word	0x20014294

0801ba30 <__cxa_atexit>:
 801ba30:	b510      	push	{r4, lr}
 801ba32:	4604      	mov	r4, r0
 801ba34:	4804      	ldr	r0, [pc, #16]	@ (801ba48 <__cxa_atexit+0x18>)
 801ba36:	4613      	mov	r3, r2
 801ba38:	b120      	cbz	r0, 801ba44 <__cxa_atexit+0x14>
 801ba3a:	460a      	mov	r2, r1
 801ba3c:	2002      	movs	r0, #2
 801ba3e:	4621      	mov	r1, r4
 801ba40:	f000 f9fa 	bl	801be38 <__register_exitproc>
 801ba44:	bd10      	pop	{r4, pc}
 801ba46:	bf00      	nop
 801ba48:	0801be39 	.word	0x0801be39

0801ba4c <std>:
 801ba4c:	2300      	movs	r3, #0
 801ba4e:	b510      	push	{r4, lr}
 801ba50:	4604      	mov	r4, r0
 801ba52:	e9c0 3300 	strd	r3, r3, [r0]
 801ba56:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801ba5a:	6083      	str	r3, [r0, #8]
 801ba5c:	8181      	strh	r1, [r0, #12]
 801ba5e:	6643      	str	r3, [r0, #100]	@ 0x64
 801ba60:	81c2      	strh	r2, [r0, #14]
 801ba62:	6183      	str	r3, [r0, #24]
 801ba64:	4619      	mov	r1, r3
 801ba66:	2208      	movs	r2, #8
 801ba68:	305c      	adds	r0, #92	@ 0x5c
 801ba6a:	f000 f906 	bl	801bc7a <memset>
 801ba6e:	4b0d      	ldr	r3, [pc, #52]	@ (801baa4 <std+0x58>)
 801ba70:	6263      	str	r3, [r4, #36]	@ 0x24
 801ba72:	4b0d      	ldr	r3, [pc, #52]	@ (801baa8 <std+0x5c>)
 801ba74:	62a3      	str	r3, [r4, #40]	@ 0x28
 801ba76:	4b0d      	ldr	r3, [pc, #52]	@ (801baac <std+0x60>)
 801ba78:	62e3      	str	r3, [r4, #44]	@ 0x2c
 801ba7a:	4b0d      	ldr	r3, [pc, #52]	@ (801bab0 <std+0x64>)
 801ba7c:	6323      	str	r3, [r4, #48]	@ 0x30
 801ba7e:	4b0d      	ldr	r3, [pc, #52]	@ (801bab4 <std+0x68>)
 801ba80:	6224      	str	r4, [r4, #32]
 801ba82:	429c      	cmp	r4, r3
 801ba84:	d006      	beq.n	801ba94 <std+0x48>
 801ba86:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 801ba8a:	4294      	cmp	r4, r2
 801ba8c:	d002      	beq.n	801ba94 <std+0x48>
 801ba8e:	33d0      	adds	r3, #208	@ 0xd0
 801ba90:	429c      	cmp	r4, r3
 801ba92:	d105      	bne.n	801baa0 <std+0x54>
 801ba94:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 801ba98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ba9c:	f000 b9ba 	b.w	801be14 <__retarget_lock_init_recursive>
 801baa0:	bd10      	pop	{r4, pc}
 801baa2:	bf00      	nop
 801baa4:	0801bbf5 	.word	0x0801bbf5
 801baa8:	0801bc17 	.word	0x0801bc17
 801baac:	0801bc4f 	.word	0x0801bc4f
 801bab0:	0801bc73 	.word	0x0801bc73
 801bab4:	20014154 	.word	0x20014154

0801bab8 <stdio_exit_handler>:
 801bab8:	4a02      	ldr	r2, [pc, #8]	@ (801bac4 <stdio_exit_handler+0xc>)
 801baba:	4903      	ldr	r1, [pc, #12]	@ (801bac8 <stdio_exit_handler+0x10>)
 801babc:	4803      	ldr	r0, [pc, #12]	@ (801bacc <stdio_exit_handler+0x14>)
 801babe:	f000 b87b 	b.w	801bbb8 <_fwalk_sglue>
 801bac2:	bf00      	nop
 801bac4:	2000010c 	.word	0x2000010c
 801bac8:	0801c62d 	.word	0x0801c62d
 801bacc:	2000011c 	.word	0x2000011c

0801bad0 <cleanup_stdio>:
 801bad0:	6841      	ldr	r1, [r0, #4]
 801bad2:	4b0c      	ldr	r3, [pc, #48]	@ (801bb04 <cleanup_stdio+0x34>)
 801bad4:	4299      	cmp	r1, r3
 801bad6:	b510      	push	{r4, lr}
 801bad8:	4604      	mov	r4, r0
 801bada:	d001      	beq.n	801bae0 <cleanup_stdio+0x10>
 801badc:	f000 fda6 	bl	801c62c <_fflush_r>
 801bae0:	68a1      	ldr	r1, [r4, #8]
 801bae2:	4b09      	ldr	r3, [pc, #36]	@ (801bb08 <cleanup_stdio+0x38>)
 801bae4:	4299      	cmp	r1, r3
 801bae6:	d002      	beq.n	801baee <cleanup_stdio+0x1e>
 801bae8:	4620      	mov	r0, r4
 801baea:	f000 fd9f 	bl	801c62c <_fflush_r>
 801baee:	68e1      	ldr	r1, [r4, #12]
 801baf0:	4b06      	ldr	r3, [pc, #24]	@ (801bb0c <cleanup_stdio+0x3c>)
 801baf2:	4299      	cmp	r1, r3
 801baf4:	d004      	beq.n	801bb00 <cleanup_stdio+0x30>
 801baf6:	4620      	mov	r0, r4
 801baf8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801bafc:	f000 bd96 	b.w	801c62c <_fflush_r>
 801bb00:	bd10      	pop	{r4, pc}
 801bb02:	bf00      	nop
 801bb04:	20014154 	.word	0x20014154
 801bb08:	200141bc 	.word	0x200141bc
 801bb0c:	20014224 	.word	0x20014224

0801bb10 <global_stdio_init.part.0>:
 801bb10:	b510      	push	{r4, lr}
 801bb12:	4b0b      	ldr	r3, [pc, #44]	@ (801bb40 <global_stdio_init.part.0+0x30>)
 801bb14:	4c0b      	ldr	r4, [pc, #44]	@ (801bb44 <global_stdio_init.part.0+0x34>)
 801bb16:	4a0c      	ldr	r2, [pc, #48]	@ (801bb48 <global_stdio_init.part.0+0x38>)
 801bb18:	601a      	str	r2, [r3, #0]
 801bb1a:	4620      	mov	r0, r4
 801bb1c:	2200      	movs	r2, #0
 801bb1e:	2104      	movs	r1, #4
 801bb20:	f7ff ff94 	bl	801ba4c <std>
 801bb24:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 801bb28:	2201      	movs	r2, #1
 801bb2a:	2109      	movs	r1, #9
 801bb2c:	f7ff ff8e 	bl	801ba4c <std>
 801bb30:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 801bb34:	2202      	movs	r2, #2
 801bb36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801bb3a:	2112      	movs	r1, #18
 801bb3c:	f7ff bf86 	b.w	801ba4c <std>
 801bb40:	2001428c 	.word	0x2001428c
 801bb44:	20014154 	.word	0x20014154
 801bb48:	0801bab9 	.word	0x0801bab9

0801bb4c <__sfp_lock_acquire>:
 801bb4c:	4801      	ldr	r0, [pc, #4]	@ (801bb54 <__sfp_lock_acquire+0x8>)
 801bb4e:	f000 b962 	b.w	801be16 <__retarget_lock_acquire_recursive>
 801bb52:	bf00      	nop
 801bb54:	20014296 	.word	0x20014296

0801bb58 <__sfp_lock_release>:
 801bb58:	4801      	ldr	r0, [pc, #4]	@ (801bb60 <__sfp_lock_release+0x8>)
 801bb5a:	f000 b95d 	b.w	801be18 <__retarget_lock_release_recursive>
 801bb5e:	bf00      	nop
 801bb60:	20014296 	.word	0x20014296

0801bb64 <__sinit>:
 801bb64:	b510      	push	{r4, lr}
 801bb66:	4604      	mov	r4, r0
 801bb68:	f7ff fff0 	bl	801bb4c <__sfp_lock_acquire>
 801bb6c:	6a23      	ldr	r3, [r4, #32]
 801bb6e:	b11b      	cbz	r3, 801bb78 <__sinit+0x14>
 801bb70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801bb74:	f7ff bff0 	b.w	801bb58 <__sfp_lock_release>
 801bb78:	4b04      	ldr	r3, [pc, #16]	@ (801bb8c <__sinit+0x28>)
 801bb7a:	6223      	str	r3, [r4, #32]
 801bb7c:	4b04      	ldr	r3, [pc, #16]	@ (801bb90 <__sinit+0x2c>)
 801bb7e:	681b      	ldr	r3, [r3, #0]
 801bb80:	2b00      	cmp	r3, #0
 801bb82:	d1f5      	bne.n	801bb70 <__sinit+0xc>
 801bb84:	f7ff ffc4 	bl	801bb10 <global_stdio_init.part.0>
 801bb88:	e7f2      	b.n	801bb70 <__sinit+0xc>
 801bb8a:	bf00      	nop
 801bb8c:	0801bad1 	.word	0x0801bad1
 801bb90:	2001428c 	.word	0x2001428c

0801bb94 <fiprintf>:
 801bb94:	b40e      	push	{r1, r2, r3}
 801bb96:	b503      	push	{r0, r1, lr}
 801bb98:	4601      	mov	r1, r0
 801bb9a:	ab03      	add	r3, sp, #12
 801bb9c:	4805      	ldr	r0, [pc, #20]	@ (801bbb4 <fiprintf+0x20>)
 801bb9e:	f853 2b04 	ldr.w	r2, [r3], #4
 801bba2:	6800      	ldr	r0, [r0, #0]
 801bba4:	9301      	str	r3, [sp, #4]
 801bba6:	f000 fa17 	bl	801bfd8 <_vfiprintf_r>
 801bbaa:	b002      	add	sp, #8
 801bbac:	f85d eb04 	ldr.w	lr, [sp], #4
 801bbb0:	b003      	add	sp, #12
 801bbb2:	4770      	bx	lr
 801bbb4:	20000118 	.word	0x20000118

0801bbb8 <_fwalk_sglue>:
 801bbb8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801bbbc:	4607      	mov	r7, r0
 801bbbe:	4688      	mov	r8, r1
 801bbc0:	4614      	mov	r4, r2
 801bbc2:	2600      	movs	r6, #0
 801bbc4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801bbc8:	f1b9 0901 	subs.w	r9, r9, #1
 801bbcc:	d505      	bpl.n	801bbda <_fwalk_sglue+0x22>
 801bbce:	6824      	ldr	r4, [r4, #0]
 801bbd0:	2c00      	cmp	r4, #0
 801bbd2:	d1f7      	bne.n	801bbc4 <_fwalk_sglue+0xc>
 801bbd4:	4630      	mov	r0, r6
 801bbd6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801bbda:	89ab      	ldrh	r3, [r5, #12]
 801bbdc:	2b01      	cmp	r3, #1
 801bbde:	d907      	bls.n	801bbf0 <_fwalk_sglue+0x38>
 801bbe0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801bbe4:	3301      	adds	r3, #1
 801bbe6:	d003      	beq.n	801bbf0 <_fwalk_sglue+0x38>
 801bbe8:	4629      	mov	r1, r5
 801bbea:	4638      	mov	r0, r7
 801bbec:	47c0      	blx	r8
 801bbee:	4306      	orrs	r6, r0
 801bbf0:	3568      	adds	r5, #104	@ 0x68
 801bbf2:	e7e9      	b.n	801bbc8 <_fwalk_sglue+0x10>

0801bbf4 <__sread>:
 801bbf4:	b510      	push	{r4, lr}
 801bbf6:	460c      	mov	r4, r1
 801bbf8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801bbfc:	f000 f898 	bl	801bd30 <_read_r>
 801bc00:	2800      	cmp	r0, #0
 801bc02:	bfab      	itete	ge
 801bc04:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 801bc06:	89a3      	ldrhlt	r3, [r4, #12]
 801bc08:	181b      	addge	r3, r3, r0
 801bc0a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 801bc0e:	bfac      	ite	ge
 801bc10:	6563      	strge	r3, [r4, #84]	@ 0x54
 801bc12:	81a3      	strhlt	r3, [r4, #12]
 801bc14:	bd10      	pop	{r4, pc}

0801bc16 <__swrite>:
 801bc16:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801bc1a:	461f      	mov	r7, r3
 801bc1c:	898b      	ldrh	r3, [r1, #12]
 801bc1e:	05db      	lsls	r3, r3, #23
 801bc20:	4605      	mov	r5, r0
 801bc22:	460c      	mov	r4, r1
 801bc24:	4616      	mov	r6, r2
 801bc26:	d505      	bpl.n	801bc34 <__swrite+0x1e>
 801bc28:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801bc2c:	2302      	movs	r3, #2
 801bc2e:	2200      	movs	r2, #0
 801bc30:	f000 f86c 	bl	801bd0c <_lseek_r>
 801bc34:	89a3      	ldrh	r3, [r4, #12]
 801bc36:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801bc3a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 801bc3e:	81a3      	strh	r3, [r4, #12]
 801bc40:	4632      	mov	r2, r6
 801bc42:	463b      	mov	r3, r7
 801bc44:	4628      	mov	r0, r5
 801bc46:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801bc4a:	f000 b8a7 	b.w	801bd9c <_write_r>

0801bc4e <__sseek>:
 801bc4e:	b510      	push	{r4, lr}
 801bc50:	460c      	mov	r4, r1
 801bc52:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801bc56:	f000 f859 	bl	801bd0c <_lseek_r>
 801bc5a:	1c43      	adds	r3, r0, #1
 801bc5c:	89a3      	ldrh	r3, [r4, #12]
 801bc5e:	bf15      	itete	ne
 801bc60:	6560      	strne	r0, [r4, #84]	@ 0x54
 801bc62:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 801bc66:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 801bc6a:	81a3      	strheq	r3, [r4, #12]
 801bc6c:	bf18      	it	ne
 801bc6e:	81a3      	strhne	r3, [r4, #12]
 801bc70:	bd10      	pop	{r4, pc}

0801bc72 <__sclose>:
 801bc72:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801bc76:	f000 b839 	b.w	801bcec <_close_r>

0801bc7a <memset>:
 801bc7a:	4402      	add	r2, r0
 801bc7c:	4603      	mov	r3, r0
 801bc7e:	4293      	cmp	r3, r2
 801bc80:	d100      	bne.n	801bc84 <memset+0xa>
 801bc82:	4770      	bx	lr
 801bc84:	f803 1b01 	strb.w	r1, [r3], #1
 801bc88:	e7f9      	b.n	801bc7e <memset+0x4>

0801bc8a <_raise_r>:
 801bc8a:	291f      	cmp	r1, #31
 801bc8c:	b538      	push	{r3, r4, r5, lr}
 801bc8e:	4605      	mov	r5, r0
 801bc90:	460c      	mov	r4, r1
 801bc92:	d904      	bls.n	801bc9e <_raise_r+0x14>
 801bc94:	2316      	movs	r3, #22
 801bc96:	6003      	str	r3, [r0, #0]
 801bc98:	f04f 30ff 	mov.w	r0, #4294967295
 801bc9c:	bd38      	pop	{r3, r4, r5, pc}
 801bc9e:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 801bca0:	b112      	cbz	r2, 801bca8 <_raise_r+0x1e>
 801bca2:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801bca6:	b94b      	cbnz	r3, 801bcbc <_raise_r+0x32>
 801bca8:	4628      	mov	r0, r5
 801bcaa:	f000 f865 	bl	801bd78 <_getpid_r>
 801bcae:	4622      	mov	r2, r4
 801bcb0:	4601      	mov	r1, r0
 801bcb2:	4628      	mov	r0, r5
 801bcb4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801bcb8:	f000 b84c 	b.w	801bd54 <_kill_r>
 801bcbc:	2b01      	cmp	r3, #1
 801bcbe:	d00a      	beq.n	801bcd6 <_raise_r+0x4c>
 801bcc0:	1c59      	adds	r1, r3, #1
 801bcc2:	d103      	bne.n	801bccc <_raise_r+0x42>
 801bcc4:	2316      	movs	r3, #22
 801bcc6:	6003      	str	r3, [r0, #0]
 801bcc8:	2001      	movs	r0, #1
 801bcca:	e7e7      	b.n	801bc9c <_raise_r+0x12>
 801bccc:	2100      	movs	r1, #0
 801bcce:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 801bcd2:	4620      	mov	r0, r4
 801bcd4:	4798      	blx	r3
 801bcd6:	2000      	movs	r0, #0
 801bcd8:	e7e0      	b.n	801bc9c <_raise_r+0x12>
	...

0801bcdc <raise>:
 801bcdc:	4b02      	ldr	r3, [pc, #8]	@ (801bce8 <raise+0xc>)
 801bcde:	4601      	mov	r1, r0
 801bce0:	6818      	ldr	r0, [r3, #0]
 801bce2:	f7ff bfd2 	b.w	801bc8a <_raise_r>
 801bce6:	bf00      	nop
 801bce8:	20000118 	.word	0x20000118

0801bcec <_close_r>:
 801bcec:	b538      	push	{r3, r4, r5, lr}
 801bcee:	4d06      	ldr	r5, [pc, #24]	@ (801bd08 <_close_r+0x1c>)
 801bcf0:	2300      	movs	r3, #0
 801bcf2:	4604      	mov	r4, r0
 801bcf4:	4608      	mov	r0, r1
 801bcf6:	602b      	str	r3, [r5, #0]
 801bcf8:	f7e6 f904 	bl	8001f04 <_close>
 801bcfc:	1c43      	adds	r3, r0, #1
 801bcfe:	d102      	bne.n	801bd06 <_close_r+0x1a>
 801bd00:	682b      	ldr	r3, [r5, #0]
 801bd02:	b103      	cbz	r3, 801bd06 <_close_r+0x1a>
 801bd04:	6023      	str	r3, [r4, #0]
 801bd06:	bd38      	pop	{r3, r4, r5, pc}
 801bd08:	20014290 	.word	0x20014290

0801bd0c <_lseek_r>:
 801bd0c:	b538      	push	{r3, r4, r5, lr}
 801bd0e:	4d07      	ldr	r5, [pc, #28]	@ (801bd2c <_lseek_r+0x20>)
 801bd10:	4604      	mov	r4, r0
 801bd12:	4608      	mov	r0, r1
 801bd14:	4611      	mov	r1, r2
 801bd16:	2200      	movs	r2, #0
 801bd18:	602a      	str	r2, [r5, #0]
 801bd1a:	461a      	mov	r2, r3
 801bd1c:	f7e6 f8fc 	bl	8001f18 <_lseek>
 801bd20:	1c43      	adds	r3, r0, #1
 801bd22:	d102      	bne.n	801bd2a <_lseek_r+0x1e>
 801bd24:	682b      	ldr	r3, [r5, #0]
 801bd26:	b103      	cbz	r3, 801bd2a <_lseek_r+0x1e>
 801bd28:	6023      	str	r3, [r4, #0]
 801bd2a:	bd38      	pop	{r3, r4, r5, pc}
 801bd2c:	20014290 	.word	0x20014290

0801bd30 <_read_r>:
 801bd30:	b538      	push	{r3, r4, r5, lr}
 801bd32:	4d07      	ldr	r5, [pc, #28]	@ (801bd50 <_read_r+0x20>)
 801bd34:	4604      	mov	r4, r0
 801bd36:	4608      	mov	r0, r1
 801bd38:	4611      	mov	r1, r2
 801bd3a:	2200      	movs	r2, #0
 801bd3c:	602a      	str	r2, [r5, #0]
 801bd3e:	461a      	mov	r2, r3
 801bd40:	f7e6 f8c4 	bl	8001ecc <_read>
 801bd44:	1c43      	adds	r3, r0, #1
 801bd46:	d102      	bne.n	801bd4e <_read_r+0x1e>
 801bd48:	682b      	ldr	r3, [r5, #0]
 801bd4a:	b103      	cbz	r3, 801bd4e <_read_r+0x1e>
 801bd4c:	6023      	str	r3, [r4, #0]
 801bd4e:	bd38      	pop	{r3, r4, r5, pc}
 801bd50:	20014290 	.word	0x20014290

0801bd54 <_kill_r>:
 801bd54:	b538      	push	{r3, r4, r5, lr}
 801bd56:	4d07      	ldr	r5, [pc, #28]	@ (801bd74 <_kill_r+0x20>)
 801bd58:	2300      	movs	r3, #0
 801bd5a:	4604      	mov	r4, r0
 801bd5c:	4608      	mov	r0, r1
 801bd5e:	4611      	mov	r1, r2
 801bd60:	602b      	str	r3, [r5, #0]
 801bd62:	f7e6 f8a5 	bl	8001eb0 <_kill>
 801bd66:	1c43      	adds	r3, r0, #1
 801bd68:	d102      	bne.n	801bd70 <_kill_r+0x1c>
 801bd6a:	682b      	ldr	r3, [r5, #0]
 801bd6c:	b103      	cbz	r3, 801bd70 <_kill_r+0x1c>
 801bd6e:	6023      	str	r3, [r4, #0]
 801bd70:	bd38      	pop	{r3, r4, r5, pc}
 801bd72:	bf00      	nop
 801bd74:	20014290 	.word	0x20014290

0801bd78 <_getpid_r>:
 801bd78:	f7e6 b898 	b.w	8001eac <_getpid>

0801bd7c <_sbrk_r>:
 801bd7c:	b538      	push	{r3, r4, r5, lr}
 801bd7e:	4d06      	ldr	r5, [pc, #24]	@ (801bd98 <_sbrk_r+0x1c>)
 801bd80:	2300      	movs	r3, #0
 801bd82:	4604      	mov	r4, r0
 801bd84:	4608      	mov	r0, r1
 801bd86:	602b      	str	r3, [r5, #0]
 801bd88:	f7e6 f8c8 	bl	8001f1c <_sbrk>
 801bd8c:	1c43      	adds	r3, r0, #1
 801bd8e:	d102      	bne.n	801bd96 <_sbrk_r+0x1a>
 801bd90:	682b      	ldr	r3, [r5, #0]
 801bd92:	b103      	cbz	r3, 801bd96 <_sbrk_r+0x1a>
 801bd94:	6023      	str	r3, [r4, #0]
 801bd96:	bd38      	pop	{r3, r4, r5, pc}
 801bd98:	20014290 	.word	0x20014290

0801bd9c <_write_r>:
 801bd9c:	b538      	push	{r3, r4, r5, lr}
 801bd9e:	4d07      	ldr	r5, [pc, #28]	@ (801bdbc <_write_r+0x20>)
 801bda0:	4604      	mov	r4, r0
 801bda2:	4608      	mov	r0, r1
 801bda4:	4611      	mov	r1, r2
 801bda6:	2200      	movs	r2, #0
 801bda8:	602a      	str	r2, [r5, #0]
 801bdaa:	461a      	mov	r2, r3
 801bdac:	f7e6 f89c 	bl	8001ee8 <_write>
 801bdb0:	1c43      	adds	r3, r0, #1
 801bdb2:	d102      	bne.n	801bdba <_write_r+0x1e>
 801bdb4:	682b      	ldr	r3, [r5, #0]
 801bdb6:	b103      	cbz	r3, 801bdba <_write_r+0x1e>
 801bdb8:	6023      	str	r3, [r4, #0]
 801bdba:	bd38      	pop	{r3, r4, r5, pc}
 801bdbc:	20014290 	.word	0x20014290

0801bdc0 <__errno>:
 801bdc0:	4b01      	ldr	r3, [pc, #4]	@ (801bdc8 <__errno+0x8>)
 801bdc2:	6818      	ldr	r0, [r3, #0]
 801bdc4:	4770      	bx	lr
 801bdc6:	bf00      	nop
 801bdc8:	20000118 	.word	0x20000118

0801bdcc <__libc_init_array>:
 801bdcc:	b570      	push	{r4, r5, r6, lr}
 801bdce:	4d0d      	ldr	r5, [pc, #52]	@ (801be04 <__libc_init_array+0x38>)
 801bdd0:	4c0d      	ldr	r4, [pc, #52]	@ (801be08 <__libc_init_array+0x3c>)
 801bdd2:	1b64      	subs	r4, r4, r5
 801bdd4:	10a4      	asrs	r4, r4, #2
 801bdd6:	2600      	movs	r6, #0
 801bdd8:	42a6      	cmp	r6, r4
 801bdda:	d109      	bne.n	801bdf0 <__libc_init_array+0x24>
 801bddc:	4d0b      	ldr	r5, [pc, #44]	@ (801be0c <__libc_init_array+0x40>)
 801bdde:	4c0c      	ldr	r4, [pc, #48]	@ (801be10 <__libc_init_array+0x44>)
 801bde0:	f000 fd64 	bl	801c8ac <_init>
 801bde4:	1b64      	subs	r4, r4, r5
 801bde6:	10a4      	asrs	r4, r4, #2
 801bde8:	2600      	movs	r6, #0
 801bdea:	42a6      	cmp	r6, r4
 801bdec:	d105      	bne.n	801bdfa <__libc_init_array+0x2e>
 801bdee:	bd70      	pop	{r4, r5, r6, pc}
 801bdf0:	f855 3b04 	ldr.w	r3, [r5], #4
 801bdf4:	4798      	blx	r3
 801bdf6:	3601      	adds	r6, #1
 801bdf8:	e7ee      	b.n	801bdd8 <__libc_init_array+0xc>
 801bdfa:	f855 3b04 	ldr.w	r3, [r5], #4
 801bdfe:	4798      	blx	r3
 801be00:	3601      	adds	r6, #1
 801be02:	e7f2      	b.n	801bdea <__libc_init_array+0x1e>
 801be04:	081318e4 	.word	0x081318e4
 801be08:	081318e4 	.word	0x081318e4
 801be0c:	081318e4 	.word	0x081318e4
 801be10:	081318f8 	.word	0x081318f8

0801be14 <__retarget_lock_init_recursive>:
 801be14:	4770      	bx	lr

0801be16 <__retarget_lock_acquire_recursive>:
 801be16:	4770      	bx	lr

0801be18 <__retarget_lock_release_recursive>:
 801be18:	4770      	bx	lr

0801be1a <memcpy>:
 801be1a:	440a      	add	r2, r1
 801be1c:	4291      	cmp	r1, r2
 801be1e:	f100 33ff 	add.w	r3, r0, #4294967295
 801be22:	d100      	bne.n	801be26 <memcpy+0xc>
 801be24:	4770      	bx	lr
 801be26:	b510      	push	{r4, lr}
 801be28:	f811 4b01 	ldrb.w	r4, [r1], #1
 801be2c:	f803 4f01 	strb.w	r4, [r3, #1]!
 801be30:	4291      	cmp	r1, r2
 801be32:	d1f9      	bne.n	801be28 <memcpy+0xe>
 801be34:	bd10      	pop	{r4, pc}
	...

0801be38 <__register_exitproc>:
 801be38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801be3c:	4d27      	ldr	r5, [pc, #156]	@ (801bedc <__register_exitproc+0xa4>)
 801be3e:	4607      	mov	r7, r0
 801be40:	6828      	ldr	r0, [r5, #0]
 801be42:	4691      	mov	r9, r2
 801be44:	460e      	mov	r6, r1
 801be46:	4698      	mov	r8, r3
 801be48:	f7ff ffe5 	bl	801be16 <__retarget_lock_acquire_recursive>
 801be4c:	4a24      	ldr	r2, [pc, #144]	@ (801bee0 <__register_exitproc+0xa8>)
 801be4e:	6814      	ldr	r4, [r2, #0]
 801be50:	b93c      	cbnz	r4, 801be62 <__register_exitproc+0x2a>
 801be52:	4b24      	ldr	r3, [pc, #144]	@ (801bee4 <__register_exitproc+0xac>)
 801be54:	6013      	str	r3, [r2, #0]
 801be56:	4a24      	ldr	r2, [pc, #144]	@ (801bee8 <__register_exitproc+0xb0>)
 801be58:	b112      	cbz	r2, 801be60 <__register_exitproc+0x28>
 801be5a:	6812      	ldr	r2, [r2, #0]
 801be5c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 801be60:	4c20      	ldr	r4, [pc, #128]	@ (801bee4 <__register_exitproc+0xac>)
 801be62:	6863      	ldr	r3, [r4, #4]
 801be64:	2b1f      	cmp	r3, #31
 801be66:	dd06      	ble.n	801be76 <__register_exitproc+0x3e>
 801be68:	6828      	ldr	r0, [r5, #0]
 801be6a:	f7ff ffd5 	bl	801be18 <__retarget_lock_release_recursive>
 801be6e:	f04f 30ff 	mov.w	r0, #4294967295
 801be72:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801be76:	b32f      	cbz	r7, 801bec4 <__register_exitproc+0x8c>
 801be78:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 801be7c:	b968      	cbnz	r0, 801be9a <__register_exitproc+0x62>
 801be7e:	4b1b      	ldr	r3, [pc, #108]	@ (801beec <__register_exitproc+0xb4>)
 801be80:	2b00      	cmp	r3, #0
 801be82:	d0f1      	beq.n	801be68 <__register_exitproc+0x30>
 801be84:	f44f 7084 	mov.w	r0, #264	@ 0x108
 801be88:	f7ff fd14 	bl	801b8b4 <malloc>
 801be8c:	2800      	cmp	r0, #0
 801be8e:	d0eb      	beq.n	801be68 <__register_exitproc+0x30>
 801be90:	2300      	movs	r3, #0
 801be92:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 801be96:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 801be9a:	6863      	ldr	r3, [r4, #4]
 801be9c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801bea0:	2201      	movs	r2, #1
 801bea2:	409a      	lsls	r2, r3
 801bea4:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801bea8:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 801beac:	4313      	orrs	r3, r2
 801beae:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 801beb2:	2f02      	cmp	r7, #2
 801beb4:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 801beb8:	bf02      	ittt	eq
 801beba:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 801bebe:	4313      	orreq	r3, r2
 801bec0:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 801bec4:	6863      	ldr	r3, [r4, #4]
 801bec6:	6828      	ldr	r0, [r5, #0]
 801bec8:	1c5a      	adds	r2, r3, #1
 801beca:	3302      	adds	r3, #2
 801becc:	6062      	str	r2, [r4, #4]
 801bece:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 801bed2:	f7ff ffa1 	bl	801be18 <__retarget_lock_release_recursive>
 801bed6:	2000      	movs	r0, #0
 801bed8:	e7cb      	b.n	801be72 <__register_exitproc+0x3a>
 801beda:	bf00      	nop
 801bedc:	20000168 	.word	0x20000168
 801bee0:	20014324 	.word	0x20014324
 801bee4:	20014298 	.word	0x20014298
 801bee8:	0801e25c 	.word	0x0801e25c
 801beec:	0801b8b5 	.word	0x0801b8b5

0801bef0 <_free_r>:
 801bef0:	b538      	push	{r3, r4, r5, lr}
 801bef2:	4605      	mov	r5, r0
 801bef4:	2900      	cmp	r1, #0
 801bef6:	d041      	beq.n	801bf7c <_free_r+0x8c>
 801bef8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801befc:	1f0c      	subs	r4, r1, #4
 801befe:	2b00      	cmp	r3, #0
 801bf00:	bfb8      	it	lt
 801bf02:	18e4      	addlt	r4, r4, r3
 801bf04:	f7ff fd88 	bl	801ba18 <__malloc_lock>
 801bf08:	4a1d      	ldr	r2, [pc, #116]	@ (801bf80 <_free_r+0x90>)
 801bf0a:	6813      	ldr	r3, [r2, #0]
 801bf0c:	b933      	cbnz	r3, 801bf1c <_free_r+0x2c>
 801bf0e:	6063      	str	r3, [r4, #4]
 801bf10:	6014      	str	r4, [r2, #0]
 801bf12:	4628      	mov	r0, r5
 801bf14:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801bf18:	f7ff bd84 	b.w	801ba24 <__malloc_unlock>
 801bf1c:	42a3      	cmp	r3, r4
 801bf1e:	d908      	bls.n	801bf32 <_free_r+0x42>
 801bf20:	6820      	ldr	r0, [r4, #0]
 801bf22:	1821      	adds	r1, r4, r0
 801bf24:	428b      	cmp	r3, r1
 801bf26:	bf01      	itttt	eq
 801bf28:	6819      	ldreq	r1, [r3, #0]
 801bf2a:	685b      	ldreq	r3, [r3, #4]
 801bf2c:	1809      	addeq	r1, r1, r0
 801bf2e:	6021      	streq	r1, [r4, #0]
 801bf30:	e7ed      	b.n	801bf0e <_free_r+0x1e>
 801bf32:	461a      	mov	r2, r3
 801bf34:	685b      	ldr	r3, [r3, #4]
 801bf36:	b10b      	cbz	r3, 801bf3c <_free_r+0x4c>
 801bf38:	42a3      	cmp	r3, r4
 801bf3a:	d9fa      	bls.n	801bf32 <_free_r+0x42>
 801bf3c:	6811      	ldr	r1, [r2, #0]
 801bf3e:	1850      	adds	r0, r2, r1
 801bf40:	42a0      	cmp	r0, r4
 801bf42:	d10b      	bne.n	801bf5c <_free_r+0x6c>
 801bf44:	6820      	ldr	r0, [r4, #0]
 801bf46:	4401      	add	r1, r0
 801bf48:	1850      	adds	r0, r2, r1
 801bf4a:	4283      	cmp	r3, r0
 801bf4c:	6011      	str	r1, [r2, #0]
 801bf4e:	d1e0      	bne.n	801bf12 <_free_r+0x22>
 801bf50:	6818      	ldr	r0, [r3, #0]
 801bf52:	685b      	ldr	r3, [r3, #4]
 801bf54:	6053      	str	r3, [r2, #4]
 801bf56:	4408      	add	r0, r1
 801bf58:	6010      	str	r0, [r2, #0]
 801bf5a:	e7da      	b.n	801bf12 <_free_r+0x22>
 801bf5c:	d902      	bls.n	801bf64 <_free_r+0x74>
 801bf5e:	230c      	movs	r3, #12
 801bf60:	602b      	str	r3, [r5, #0]
 801bf62:	e7d6      	b.n	801bf12 <_free_r+0x22>
 801bf64:	6820      	ldr	r0, [r4, #0]
 801bf66:	1821      	adds	r1, r4, r0
 801bf68:	428b      	cmp	r3, r1
 801bf6a:	bf04      	itt	eq
 801bf6c:	6819      	ldreq	r1, [r3, #0]
 801bf6e:	685b      	ldreq	r3, [r3, #4]
 801bf70:	6063      	str	r3, [r4, #4]
 801bf72:	bf04      	itt	eq
 801bf74:	1809      	addeq	r1, r1, r0
 801bf76:	6021      	streq	r1, [r4, #0]
 801bf78:	6054      	str	r4, [r2, #4]
 801bf7a:	e7ca      	b.n	801bf12 <_free_r+0x22>
 801bf7c:	bd38      	pop	{r3, r4, r5, pc}
 801bf7e:	bf00      	nop
 801bf80:	20014150 	.word	0x20014150

0801bf84 <__sfputc_r>:
 801bf84:	6893      	ldr	r3, [r2, #8]
 801bf86:	3b01      	subs	r3, #1
 801bf88:	2b00      	cmp	r3, #0
 801bf8a:	b410      	push	{r4}
 801bf8c:	6093      	str	r3, [r2, #8]
 801bf8e:	da08      	bge.n	801bfa2 <__sfputc_r+0x1e>
 801bf90:	6994      	ldr	r4, [r2, #24]
 801bf92:	42a3      	cmp	r3, r4
 801bf94:	db01      	blt.n	801bf9a <__sfputc_r+0x16>
 801bf96:	290a      	cmp	r1, #10
 801bf98:	d103      	bne.n	801bfa2 <__sfputc_r+0x1e>
 801bf9a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801bf9e:	f000 bb6d 	b.w	801c67c <__swbuf_r>
 801bfa2:	6813      	ldr	r3, [r2, #0]
 801bfa4:	1c58      	adds	r0, r3, #1
 801bfa6:	6010      	str	r0, [r2, #0]
 801bfa8:	7019      	strb	r1, [r3, #0]
 801bfaa:	4608      	mov	r0, r1
 801bfac:	f85d 4b04 	ldr.w	r4, [sp], #4
 801bfb0:	4770      	bx	lr

0801bfb2 <__sfputs_r>:
 801bfb2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801bfb4:	4606      	mov	r6, r0
 801bfb6:	460f      	mov	r7, r1
 801bfb8:	4614      	mov	r4, r2
 801bfba:	18d5      	adds	r5, r2, r3
 801bfbc:	42ac      	cmp	r4, r5
 801bfbe:	d101      	bne.n	801bfc4 <__sfputs_r+0x12>
 801bfc0:	2000      	movs	r0, #0
 801bfc2:	e007      	b.n	801bfd4 <__sfputs_r+0x22>
 801bfc4:	f814 1b01 	ldrb.w	r1, [r4], #1
 801bfc8:	463a      	mov	r2, r7
 801bfca:	4630      	mov	r0, r6
 801bfcc:	f7ff ffda 	bl	801bf84 <__sfputc_r>
 801bfd0:	1c43      	adds	r3, r0, #1
 801bfd2:	d1f3      	bne.n	801bfbc <__sfputs_r+0xa>
 801bfd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801bfd8 <_vfiprintf_r>:
 801bfd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bfdc:	460d      	mov	r5, r1
 801bfde:	b09d      	sub	sp, #116	@ 0x74
 801bfe0:	4614      	mov	r4, r2
 801bfe2:	4698      	mov	r8, r3
 801bfe4:	4606      	mov	r6, r0
 801bfe6:	b118      	cbz	r0, 801bff0 <_vfiprintf_r+0x18>
 801bfe8:	6a03      	ldr	r3, [r0, #32]
 801bfea:	b90b      	cbnz	r3, 801bff0 <_vfiprintf_r+0x18>
 801bfec:	f7ff fdba 	bl	801bb64 <__sinit>
 801bff0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801bff2:	07d9      	lsls	r1, r3, #31
 801bff4:	d405      	bmi.n	801c002 <_vfiprintf_r+0x2a>
 801bff6:	89ab      	ldrh	r3, [r5, #12]
 801bff8:	059a      	lsls	r2, r3, #22
 801bffa:	d402      	bmi.n	801c002 <_vfiprintf_r+0x2a>
 801bffc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 801bffe:	f7ff ff0a 	bl	801be16 <__retarget_lock_acquire_recursive>
 801c002:	89ab      	ldrh	r3, [r5, #12]
 801c004:	071b      	lsls	r3, r3, #28
 801c006:	d501      	bpl.n	801c00c <_vfiprintf_r+0x34>
 801c008:	692b      	ldr	r3, [r5, #16]
 801c00a:	b99b      	cbnz	r3, 801c034 <_vfiprintf_r+0x5c>
 801c00c:	4629      	mov	r1, r5
 801c00e:	4630      	mov	r0, r6
 801c010:	f000 fb72 	bl	801c6f8 <__swsetup_r>
 801c014:	b170      	cbz	r0, 801c034 <_vfiprintf_r+0x5c>
 801c016:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801c018:	07dc      	lsls	r4, r3, #31
 801c01a:	d504      	bpl.n	801c026 <_vfiprintf_r+0x4e>
 801c01c:	f04f 30ff 	mov.w	r0, #4294967295
 801c020:	b01d      	add	sp, #116	@ 0x74
 801c022:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c026:	89ab      	ldrh	r3, [r5, #12]
 801c028:	0598      	lsls	r0, r3, #22
 801c02a:	d4f7      	bmi.n	801c01c <_vfiprintf_r+0x44>
 801c02c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 801c02e:	f7ff fef3 	bl	801be18 <__retarget_lock_release_recursive>
 801c032:	e7f3      	b.n	801c01c <_vfiprintf_r+0x44>
 801c034:	2300      	movs	r3, #0
 801c036:	9309      	str	r3, [sp, #36]	@ 0x24
 801c038:	2320      	movs	r3, #32
 801c03a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 801c03e:	f8cd 800c 	str.w	r8, [sp, #12]
 801c042:	2330      	movs	r3, #48	@ 0x30
 801c044:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 801c1f4 <_vfiprintf_r+0x21c>
 801c048:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 801c04c:	f04f 0901 	mov.w	r9, #1
 801c050:	4623      	mov	r3, r4
 801c052:	469a      	mov	sl, r3
 801c054:	f813 2b01 	ldrb.w	r2, [r3], #1
 801c058:	b10a      	cbz	r2, 801c05e <_vfiprintf_r+0x86>
 801c05a:	2a25      	cmp	r2, #37	@ 0x25
 801c05c:	d1f9      	bne.n	801c052 <_vfiprintf_r+0x7a>
 801c05e:	ebba 0b04 	subs.w	fp, sl, r4
 801c062:	d00b      	beq.n	801c07c <_vfiprintf_r+0xa4>
 801c064:	465b      	mov	r3, fp
 801c066:	4622      	mov	r2, r4
 801c068:	4629      	mov	r1, r5
 801c06a:	4630      	mov	r0, r6
 801c06c:	f7ff ffa1 	bl	801bfb2 <__sfputs_r>
 801c070:	3001      	adds	r0, #1
 801c072:	f000 80a7 	beq.w	801c1c4 <_vfiprintf_r+0x1ec>
 801c076:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801c078:	445a      	add	r2, fp
 801c07a:	9209      	str	r2, [sp, #36]	@ 0x24
 801c07c:	f89a 3000 	ldrb.w	r3, [sl]
 801c080:	2b00      	cmp	r3, #0
 801c082:	f000 809f 	beq.w	801c1c4 <_vfiprintf_r+0x1ec>
 801c086:	2300      	movs	r3, #0
 801c088:	f04f 32ff 	mov.w	r2, #4294967295
 801c08c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801c090:	f10a 0a01 	add.w	sl, sl, #1
 801c094:	9304      	str	r3, [sp, #16]
 801c096:	9307      	str	r3, [sp, #28]
 801c098:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 801c09c:	931a      	str	r3, [sp, #104]	@ 0x68
 801c09e:	4654      	mov	r4, sl
 801c0a0:	2205      	movs	r2, #5
 801c0a2:	f814 1b01 	ldrb.w	r1, [r4], #1
 801c0a6:	4853      	ldr	r0, [pc, #332]	@ (801c1f4 <_vfiprintf_r+0x21c>)
 801c0a8:	f7e4 f8a2 	bl	80001f0 <memchr>
 801c0ac:	9a04      	ldr	r2, [sp, #16]
 801c0ae:	b9d8      	cbnz	r0, 801c0e8 <_vfiprintf_r+0x110>
 801c0b0:	06d1      	lsls	r1, r2, #27
 801c0b2:	bf44      	itt	mi
 801c0b4:	2320      	movmi	r3, #32
 801c0b6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 801c0ba:	0713      	lsls	r3, r2, #28
 801c0bc:	bf44      	itt	mi
 801c0be:	232b      	movmi	r3, #43	@ 0x2b
 801c0c0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 801c0c4:	f89a 3000 	ldrb.w	r3, [sl]
 801c0c8:	2b2a      	cmp	r3, #42	@ 0x2a
 801c0ca:	d015      	beq.n	801c0f8 <_vfiprintf_r+0x120>
 801c0cc:	9a07      	ldr	r2, [sp, #28]
 801c0ce:	4654      	mov	r4, sl
 801c0d0:	2000      	movs	r0, #0
 801c0d2:	f04f 0c0a 	mov.w	ip, #10
 801c0d6:	4621      	mov	r1, r4
 801c0d8:	f811 3b01 	ldrb.w	r3, [r1], #1
 801c0dc:	3b30      	subs	r3, #48	@ 0x30
 801c0de:	2b09      	cmp	r3, #9
 801c0e0:	d94b      	bls.n	801c17a <_vfiprintf_r+0x1a2>
 801c0e2:	b1b0      	cbz	r0, 801c112 <_vfiprintf_r+0x13a>
 801c0e4:	9207      	str	r2, [sp, #28]
 801c0e6:	e014      	b.n	801c112 <_vfiprintf_r+0x13a>
 801c0e8:	eba0 0308 	sub.w	r3, r0, r8
 801c0ec:	fa09 f303 	lsl.w	r3, r9, r3
 801c0f0:	4313      	orrs	r3, r2
 801c0f2:	9304      	str	r3, [sp, #16]
 801c0f4:	46a2      	mov	sl, r4
 801c0f6:	e7d2      	b.n	801c09e <_vfiprintf_r+0xc6>
 801c0f8:	9b03      	ldr	r3, [sp, #12]
 801c0fa:	1d19      	adds	r1, r3, #4
 801c0fc:	681b      	ldr	r3, [r3, #0]
 801c0fe:	9103      	str	r1, [sp, #12]
 801c100:	2b00      	cmp	r3, #0
 801c102:	bfbb      	ittet	lt
 801c104:	425b      	neglt	r3, r3
 801c106:	f042 0202 	orrlt.w	r2, r2, #2
 801c10a:	9307      	strge	r3, [sp, #28]
 801c10c:	9307      	strlt	r3, [sp, #28]
 801c10e:	bfb8      	it	lt
 801c110:	9204      	strlt	r2, [sp, #16]
 801c112:	7823      	ldrb	r3, [r4, #0]
 801c114:	2b2e      	cmp	r3, #46	@ 0x2e
 801c116:	d10a      	bne.n	801c12e <_vfiprintf_r+0x156>
 801c118:	7863      	ldrb	r3, [r4, #1]
 801c11a:	2b2a      	cmp	r3, #42	@ 0x2a
 801c11c:	d132      	bne.n	801c184 <_vfiprintf_r+0x1ac>
 801c11e:	9b03      	ldr	r3, [sp, #12]
 801c120:	1d1a      	adds	r2, r3, #4
 801c122:	681b      	ldr	r3, [r3, #0]
 801c124:	9203      	str	r2, [sp, #12]
 801c126:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 801c12a:	3402      	adds	r4, #2
 801c12c:	9305      	str	r3, [sp, #20]
 801c12e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 801c204 <_vfiprintf_r+0x22c>
 801c132:	7821      	ldrb	r1, [r4, #0]
 801c134:	2203      	movs	r2, #3
 801c136:	4650      	mov	r0, sl
 801c138:	f7e4 f85a 	bl	80001f0 <memchr>
 801c13c:	b138      	cbz	r0, 801c14e <_vfiprintf_r+0x176>
 801c13e:	9b04      	ldr	r3, [sp, #16]
 801c140:	eba0 000a 	sub.w	r0, r0, sl
 801c144:	2240      	movs	r2, #64	@ 0x40
 801c146:	4082      	lsls	r2, r0
 801c148:	4313      	orrs	r3, r2
 801c14a:	3401      	adds	r4, #1
 801c14c:	9304      	str	r3, [sp, #16]
 801c14e:	f814 1b01 	ldrb.w	r1, [r4], #1
 801c152:	4829      	ldr	r0, [pc, #164]	@ (801c1f8 <_vfiprintf_r+0x220>)
 801c154:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 801c158:	2206      	movs	r2, #6
 801c15a:	f7e4 f849 	bl	80001f0 <memchr>
 801c15e:	2800      	cmp	r0, #0
 801c160:	d03f      	beq.n	801c1e2 <_vfiprintf_r+0x20a>
 801c162:	4b26      	ldr	r3, [pc, #152]	@ (801c1fc <_vfiprintf_r+0x224>)
 801c164:	bb1b      	cbnz	r3, 801c1ae <_vfiprintf_r+0x1d6>
 801c166:	9b03      	ldr	r3, [sp, #12]
 801c168:	3307      	adds	r3, #7
 801c16a:	f023 0307 	bic.w	r3, r3, #7
 801c16e:	3308      	adds	r3, #8
 801c170:	9303      	str	r3, [sp, #12]
 801c172:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c174:	443b      	add	r3, r7
 801c176:	9309      	str	r3, [sp, #36]	@ 0x24
 801c178:	e76a      	b.n	801c050 <_vfiprintf_r+0x78>
 801c17a:	fb0c 3202 	mla	r2, ip, r2, r3
 801c17e:	460c      	mov	r4, r1
 801c180:	2001      	movs	r0, #1
 801c182:	e7a8      	b.n	801c0d6 <_vfiprintf_r+0xfe>
 801c184:	2300      	movs	r3, #0
 801c186:	3401      	adds	r4, #1
 801c188:	9305      	str	r3, [sp, #20]
 801c18a:	4619      	mov	r1, r3
 801c18c:	f04f 0c0a 	mov.w	ip, #10
 801c190:	4620      	mov	r0, r4
 801c192:	f810 2b01 	ldrb.w	r2, [r0], #1
 801c196:	3a30      	subs	r2, #48	@ 0x30
 801c198:	2a09      	cmp	r2, #9
 801c19a:	d903      	bls.n	801c1a4 <_vfiprintf_r+0x1cc>
 801c19c:	2b00      	cmp	r3, #0
 801c19e:	d0c6      	beq.n	801c12e <_vfiprintf_r+0x156>
 801c1a0:	9105      	str	r1, [sp, #20]
 801c1a2:	e7c4      	b.n	801c12e <_vfiprintf_r+0x156>
 801c1a4:	fb0c 2101 	mla	r1, ip, r1, r2
 801c1a8:	4604      	mov	r4, r0
 801c1aa:	2301      	movs	r3, #1
 801c1ac:	e7f0      	b.n	801c190 <_vfiprintf_r+0x1b8>
 801c1ae:	ab03      	add	r3, sp, #12
 801c1b0:	9300      	str	r3, [sp, #0]
 801c1b2:	462a      	mov	r2, r5
 801c1b4:	4b12      	ldr	r3, [pc, #72]	@ (801c200 <_vfiprintf_r+0x228>)
 801c1b6:	a904      	add	r1, sp, #16
 801c1b8:	4630      	mov	r0, r6
 801c1ba:	f3af 8000 	nop.w
 801c1be:	4607      	mov	r7, r0
 801c1c0:	1c78      	adds	r0, r7, #1
 801c1c2:	d1d6      	bne.n	801c172 <_vfiprintf_r+0x19a>
 801c1c4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801c1c6:	07d9      	lsls	r1, r3, #31
 801c1c8:	d405      	bmi.n	801c1d6 <_vfiprintf_r+0x1fe>
 801c1ca:	89ab      	ldrh	r3, [r5, #12]
 801c1cc:	059a      	lsls	r2, r3, #22
 801c1ce:	d402      	bmi.n	801c1d6 <_vfiprintf_r+0x1fe>
 801c1d0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 801c1d2:	f7ff fe21 	bl	801be18 <__retarget_lock_release_recursive>
 801c1d6:	89ab      	ldrh	r3, [r5, #12]
 801c1d8:	065b      	lsls	r3, r3, #25
 801c1da:	f53f af1f 	bmi.w	801c01c <_vfiprintf_r+0x44>
 801c1de:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801c1e0:	e71e      	b.n	801c020 <_vfiprintf_r+0x48>
 801c1e2:	ab03      	add	r3, sp, #12
 801c1e4:	9300      	str	r3, [sp, #0]
 801c1e6:	462a      	mov	r2, r5
 801c1e8:	4b05      	ldr	r3, [pc, #20]	@ (801c200 <_vfiprintf_r+0x228>)
 801c1ea:	a904      	add	r1, sp, #16
 801c1ec:	4630      	mov	r0, r6
 801c1ee:	f000 f879 	bl	801c2e4 <_printf_i>
 801c1f2:	e7e4      	b.n	801c1be <_vfiprintf_r+0x1e6>
 801c1f4:	0801e260 	.word	0x0801e260
 801c1f8:	0801e26a 	.word	0x0801e26a
 801c1fc:	00000000 	.word	0x00000000
 801c200:	0801bfb3 	.word	0x0801bfb3
 801c204:	0801e266 	.word	0x0801e266

0801c208 <_printf_common>:
 801c208:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c20c:	4616      	mov	r6, r2
 801c20e:	4698      	mov	r8, r3
 801c210:	688a      	ldr	r2, [r1, #8]
 801c212:	690b      	ldr	r3, [r1, #16]
 801c214:	f8dd 9020 	ldr.w	r9, [sp, #32]
 801c218:	4293      	cmp	r3, r2
 801c21a:	bfb8      	it	lt
 801c21c:	4613      	movlt	r3, r2
 801c21e:	6033      	str	r3, [r6, #0]
 801c220:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 801c224:	4607      	mov	r7, r0
 801c226:	460c      	mov	r4, r1
 801c228:	b10a      	cbz	r2, 801c22e <_printf_common+0x26>
 801c22a:	3301      	adds	r3, #1
 801c22c:	6033      	str	r3, [r6, #0]
 801c22e:	6823      	ldr	r3, [r4, #0]
 801c230:	0699      	lsls	r1, r3, #26
 801c232:	bf42      	ittt	mi
 801c234:	6833      	ldrmi	r3, [r6, #0]
 801c236:	3302      	addmi	r3, #2
 801c238:	6033      	strmi	r3, [r6, #0]
 801c23a:	6825      	ldr	r5, [r4, #0]
 801c23c:	f015 0506 	ands.w	r5, r5, #6
 801c240:	d106      	bne.n	801c250 <_printf_common+0x48>
 801c242:	f104 0a19 	add.w	sl, r4, #25
 801c246:	68e3      	ldr	r3, [r4, #12]
 801c248:	6832      	ldr	r2, [r6, #0]
 801c24a:	1a9b      	subs	r3, r3, r2
 801c24c:	42ab      	cmp	r3, r5
 801c24e:	dc26      	bgt.n	801c29e <_printf_common+0x96>
 801c250:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 801c254:	6822      	ldr	r2, [r4, #0]
 801c256:	3b00      	subs	r3, #0
 801c258:	bf18      	it	ne
 801c25a:	2301      	movne	r3, #1
 801c25c:	0692      	lsls	r2, r2, #26
 801c25e:	d42b      	bmi.n	801c2b8 <_printf_common+0xb0>
 801c260:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 801c264:	4641      	mov	r1, r8
 801c266:	4638      	mov	r0, r7
 801c268:	47c8      	blx	r9
 801c26a:	3001      	adds	r0, #1
 801c26c:	d01e      	beq.n	801c2ac <_printf_common+0xa4>
 801c26e:	6823      	ldr	r3, [r4, #0]
 801c270:	6922      	ldr	r2, [r4, #16]
 801c272:	f003 0306 	and.w	r3, r3, #6
 801c276:	2b04      	cmp	r3, #4
 801c278:	bf02      	ittt	eq
 801c27a:	68e5      	ldreq	r5, [r4, #12]
 801c27c:	6833      	ldreq	r3, [r6, #0]
 801c27e:	1aed      	subeq	r5, r5, r3
 801c280:	68a3      	ldr	r3, [r4, #8]
 801c282:	bf0c      	ite	eq
 801c284:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801c288:	2500      	movne	r5, #0
 801c28a:	4293      	cmp	r3, r2
 801c28c:	bfc4      	itt	gt
 801c28e:	1a9b      	subgt	r3, r3, r2
 801c290:	18ed      	addgt	r5, r5, r3
 801c292:	2600      	movs	r6, #0
 801c294:	341a      	adds	r4, #26
 801c296:	42b5      	cmp	r5, r6
 801c298:	d11a      	bne.n	801c2d0 <_printf_common+0xc8>
 801c29a:	2000      	movs	r0, #0
 801c29c:	e008      	b.n	801c2b0 <_printf_common+0xa8>
 801c29e:	2301      	movs	r3, #1
 801c2a0:	4652      	mov	r2, sl
 801c2a2:	4641      	mov	r1, r8
 801c2a4:	4638      	mov	r0, r7
 801c2a6:	47c8      	blx	r9
 801c2a8:	3001      	adds	r0, #1
 801c2aa:	d103      	bne.n	801c2b4 <_printf_common+0xac>
 801c2ac:	f04f 30ff 	mov.w	r0, #4294967295
 801c2b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c2b4:	3501      	adds	r5, #1
 801c2b6:	e7c6      	b.n	801c246 <_printf_common+0x3e>
 801c2b8:	18e1      	adds	r1, r4, r3
 801c2ba:	1c5a      	adds	r2, r3, #1
 801c2bc:	2030      	movs	r0, #48	@ 0x30
 801c2be:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 801c2c2:	4422      	add	r2, r4
 801c2c4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 801c2c8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 801c2cc:	3302      	adds	r3, #2
 801c2ce:	e7c7      	b.n	801c260 <_printf_common+0x58>
 801c2d0:	2301      	movs	r3, #1
 801c2d2:	4622      	mov	r2, r4
 801c2d4:	4641      	mov	r1, r8
 801c2d6:	4638      	mov	r0, r7
 801c2d8:	47c8      	blx	r9
 801c2da:	3001      	adds	r0, #1
 801c2dc:	d0e6      	beq.n	801c2ac <_printf_common+0xa4>
 801c2de:	3601      	adds	r6, #1
 801c2e0:	e7d9      	b.n	801c296 <_printf_common+0x8e>
	...

0801c2e4 <_printf_i>:
 801c2e4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801c2e8:	7e0f      	ldrb	r7, [r1, #24]
 801c2ea:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801c2ec:	2f78      	cmp	r7, #120	@ 0x78
 801c2ee:	4691      	mov	r9, r2
 801c2f0:	4680      	mov	r8, r0
 801c2f2:	460c      	mov	r4, r1
 801c2f4:	469a      	mov	sl, r3
 801c2f6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 801c2fa:	d807      	bhi.n	801c30c <_printf_i+0x28>
 801c2fc:	2f62      	cmp	r7, #98	@ 0x62
 801c2fe:	d80a      	bhi.n	801c316 <_printf_i+0x32>
 801c300:	2f00      	cmp	r7, #0
 801c302:	f000 80d2 	beq.w	801c4aa <_printf_i+0x1c6>
 801c306:	2f58      	cmp	r7, #88	@ 0x58
 801c308:	f000 80b9 	beq.w	801c47e <_printf_i+0x19a>
 801c30c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 801c310:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 801c314:	e03a      	b.n	801c38c <_printf_i+0xa8>
 801c316:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 801c31a:	2b15      	cmp	r3, #21
 801c31c:	d8f6      	bhi.n	801c30c <_printf_i+0x28>
 801c31e:	a101      	add	r1, pc, #4	@ (adr r1, 801c324 <_printf_i+0x40>)
 801c320:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801c324:	0801c37d 	.word	0x0801c37d
 801c328:	0801c391 	.word	0x0801c391
 801c32c:	0801c30d 	.word	0x0801c30d
 801c330:	0801c30d 	.word	0x0801c30d
 801c334:	0801c30d 	.word	0x0801c30d
 801c338:	0801c30d 	.word	0x0801c30d
 801c33c:	0801c391 	.word	0x0801c391
 801c340:	0801c30d 	.word	0x0801c30d
 801c344:	0801c30d 	.word	0x0801c30d
 801c348:	0801c30d 	.word	0x0801c30d
 801c34c:	0801c30d 	.word	0x0801c30d
 801c350:	0801c491 	.word	0x0801c491
 801c354:	0801c3bb 	.word	0x0801c3bb
 801c358:	0801c44b 	.word	0x0801c44b
 801c35c:	0801c30d 	.word	0x0801c30d
 801c360:	0801c30d 	.word	0x0801c30d
 801c364:	0801c4b3 	.word	0x0801c4b3
 801c368:	0801c30d 	.word	0x0801c30d
 801c36c:	0801c3bb 	.word	0x0801c3bb
 801c370:	0801c30d 	.word	0x0801c30d
 801c374:	0801c30d 	.word	0x0801c30d
 801c378:	0801c453 	.word	0x0801c453
 801c37c:	6833      	ldr	r3, [r6, #0]
 801c37e:	1d1a      	adds	r2, r3, #4
 801c380:	681b      	ldr	r3, [r3, #0]
 801c382:	6032      	str	r2, [r6, #0]
 801c384:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 801c388:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 801c38c:	2301      	movs	r3, #1
 801c38e:	e09d      	b.n	801c4cc <_printf_i+0x1e8>
 801c390:	6833      	ldr	r3, [r6, #0]
 801c392:	6820      	ldr	r0, [r4, #0]
 801c394:	1d19      	adds	r1, r3, #4
 801c396:	6031      	str	r1, [r6, #0]
 801c398:	0606      	lsls	r6, r0, #24
 801c39a:	d501      	bpl.n	801c3a0 <_printf_i+0xbc>
 801c39c:	681d      	ldr	r5, [r3, #0]
 801c39e:	e003      	b.n	801c3a8 <_printf_i+0xc4>
 801c3a0:	0645      	lsls	r5, r0, #25
 801c3a2:	d5fb      	bpl.n	801c39c <_printf_i+0xb8>
 801c3a4:	f9b3 5000 	ldrsh.w	r5, [r3]
 801c3a8:	2d00      	cmp	r5, #0
 801c3aa:	da03      	bge.n	801c3b4 <_printf_i+0xd0>
 801c3ac:	232d      	movs	r3, #45	@ 0x2d
 801c3ae:	426d      	negs	r5, r5
 801c3b0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 801c3b4:	4859      	ldr	r0, [pc, #356]	@ (801c51c <_printf_i+0x238>)
 801c3b6:	230a      	movs	r3, #10
 801c3b8:	e011      	b.n	801c3de <_printf_i+0xfa>
 801c3ba:	6821      	ldr	r1, [r4, #0]
 801c3bc:	6833      	ldr	r3, [r6, #0]
 801c3be:	0608      	lsls	r0, r1, #24
 801c3c0:	f853 5b04 	ldr.w	r5, [r3], #4
 801c3c4:	d402      	bmi.n	801c3cc <_printf_i+0xe8>
 801c3c6:	0649      	lsls	r1, r1, #25
 801c3c8:	bf48      	it	mi
 801c3ca:	b2ad      	uxthmi	r5, r5
 801c3cc:	2f6f      	cmp	r7, #111	@ 0x6f
 801c3ce:	4853      	ldr	r0, [pc, #332]	@ (801c51c <_printf_i+0x238>)
 801c3d0:	6033      	str	r3, [r6, #0]
 801c3d2:	bf14      	ite	ne
 801c3d4:	230a      	movne	r3, #10
 801c3d6:	2308      	moveq	r3, #8
 801c3d8:	2100      	movs	r1, #0
 801c3da:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 801c3de:	6866      	ldr	r6, [r4, #4]
 801c3e0:	60a6      	str	r6, [r4, #8]
 801c3e2:	2e00      	cmp	r6, #0
 801c3e4:	bfa2      	ittt	ge
 801c3e6:	6821      	ldrge	r1, [r4, #0]
 801c3e8:	f021 0104 	bicge.w	r1, r1, #4
 801c3ec:	6021      	strge	r1, [r4, #0]
 801c3ee:	b90d      	cbnz	r5, 801c3f4 <_printf_i+0x110>
 801c3f0:	2e00      	cmp	r6, #0
 801c3f2:	d04b      	beq.n	801c48c <_printf_i+0x1a8>
 801c3f4:	4616      	mov	r6, r2
 801c3f6:	fbb5 f1f3 	udiv	r1, r5, r3
 801c3fa:	fb03 5711 	mls	r7, r3, r1, r5
 801c3fe:	5dc7      	ldrb	r7, [r0, r7]
 801c400:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801c404:	462f      	mov	r7, r5
 801c406:	42bb      	cmp	r3, r7
 801c408:	460d      	mov	r5, r1
 801c40a:	d9f4      	bls.n	801c3f6 <_printf_i+0x112>
 801c40c:	2b08      	cmp	r3, #8
 801c40e:	d10b      	bne.n	801c428 <_printf_i+0x144>
 801c410:	6823      	ldr	r3, [r4, #0]
 801c412:	07df      	lsls	r7, r3, #31
 801c414:	d508      	bpl.n	801c428 <_printf_i+0x144>
 801c416:	6923      	ldr	r3, [r4, #16]
 801c418:	6861      	ldr	r1, [r4, #4]
 801c41a:	4299      	cmp	r1, r3
 801c41c:	bfde      	ittt	le
 801c41e:	2330      	movle	r3, #48	@ 0x30
 801c420:	f806 3c01 	strble.w	r3, [r6, #-1]
 801c424:	f106 36ff 	addle.w	r6, r6, #4294967295
 801c428:	1b92      	subs	r2, r2, r6
 801c42a:	6122      	str	r2, [r4, #16]
 801c42c:	f8cd a000 	str.w	sl, [sp]
 801c430:	464b      	mov	r3, r9
 801c432:	aa03      	add	r2, sp, #12
 801c434:	4621      	mov	r1, r4
 801c436:	4640      	mov	r0, r8
 801c438:	f7ff fee6 	bl	801c208 <_printf_common>
 801c43c:	3001      	adds	r0, #1
 801c43e:	d14a      	bne.n	801c4d6 <_printf_i+0x1f2>
 801c440:	f04f 30ff 	mov.w	r0, #4294967295
 801c444:	b004      	add	sp, #16
 801c446:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c44a:	6823      	ldr	r3, [r4, #0]
 801c44c:	f043 0320 	orr.w	r3, r3, #32
 801c450:	6023      	str	r3, [r4, #0]
 801c452:	4833      	ldr	r0, [pc, #204]	@ (801c520 <_printf_i+0x23c>)
 801c454:	2778      	movs	r7, #120	@ 0x78
 801c456:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 801c45a:	6823      	ldr	r3, [r4, #0]
 801c45c:	6831      	ldr	r1, [r6, #0]
 801c45e:	061f      	lsls	r7, r3, #24
 801c460:	f851 5b04 	ldr.w	r5, [r1], #4
 801c464:	d402      	bmi.n	801c46c <_printf_i+0x188>
 801c466:	065f      	lsls	r7, r3, #25
 801c468:	bf48      	it	mi
 801c46a:	b2ad      	uxthmi	r5, r5
 801c46c:	6031      	str	r1, [r6, #0]
 801c46e:	07d9      	lsls	r1, r3, #31
 801c470:	bf44      	itt	mi
 801c472:	f043 0320 	orrmi.w	r3, r3, #32
 801c476:	6023      	strmi	r3, [r4, #0]
 801c478:	b11d      	cbz	r5, 801c482 <_printf_i+0x19e>
 801c47a:	2310      	movs	r3, #16
 801c47c:	e7ac      	b.n	801c3d8 <_printf_i+0xf4>
 801c47e:	4827      	ldr	r0, [pc, #156]	@ (801c51c <_printf_i+0x238>)
 801c480:	e7e9      	b.n	801c456 <_printf_i+0x172>
 801c482:	6823      	ldr	r3, [r4, #0]
 801c484:	f023 0320 	bic.w	r3, r3, #32
 801c488:	6023      	str	r3, [r4, #0]
 801c48a:	e7f6      	b.n	801c47a <_printf_i+0x196>
 801c48c:	4616      	mov	r6, r2
 801c48e:	e7bd      	b.n	801c40c <_printf_i+0x128>
 801c490:	6833      	ldr	r3, [r6, #0]
 801c492:	6825      	ldr	r5, [r4, #0]
 801c494:	6961      	ldr	r1, [r4, #20]
 801c496:	1d18      	adds	r0, r3, #4
 801c498:	6030      	str	r0, [r6, #0]
 801c49a:	062e      	lsls	r6, r5, #24
 801c49c:	681b      	ldr	r3, [r3, #0]
 801c49e:	d501      	bpl.n	801c4a4 <_printf_i+0x1c0>
 801c4a0:	6019      	str	r1, [r3, #0]
 801c4a2:	e002      	b.n	801c4aa <_printf_i+0x1c6>
 801c4a4:	0668      	lsls	r0, r5, #25
 801c4a6:	d5fb      	bpl.n	801c4a0 <_printf_i+0x1bc>
 801c4a8:	8019      	strh	r1, [r3, #0]
 801c4aa:	2300      	movs	r3, #0
 801c4ac:	6123      	str	r3, [r4, #16]
 801c4ae:	4616      	mov	r6, r2
 801c4b0:	e7bc      	b.n	801c42c <_printf_i+0x148>
 801c4b2:	6833      	ldr	r3, [r6, #0]
 801c4b4:	1d1a      	adds	r2, r3, #4
 801c4b6:	6032      	str	r2, [r6, #0]
 801c4b8:	681e      	ldr	r6, [r3, #0]
 801c4ba:	6862      	ldr	r2, [r4, #4]
 801c4bc:	2100      	movs	r1, #0
 801c4be:	4630      	mov	r0, r6
 801c4c0:	f7e3 fe96 	bl	80001f0 <memchr>
 801c4c4:	b108      	cbz	r0, 801c4ca <_printf_i+0x1e6>
 801c4c6:	1b80      	subs	r0, r0, r6
 801c4c8:	6060      	str	r0, [r4, #4]
 801c4ca:	6863      	ldr	r3, [r4, #4]
 801c4cc:	6123      	str	r3, [r4, #16]
 801c4ce:	2300      	movs	r3, #0
 801c4d0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 801c4d4:	e7aa      	b.n	801c42c <_printf_i+0x148>
 801c4d6:	6923      	ldr	r3, [r4, #16]
 801c4d8:	4632      	mov	r2, r6
 801c4da:	4649      	mov	r1, r9
 801c4dc:	4640      	mov	r0, r8
 801c4de:	47d0      	blx	sl
 801c4e0:	3001      	adds	r0, #1
 801c4e2:	d0ad      	beq.n	801c440 <_printf_i+0x15c>
 801c4e4:	6823      	ldr	r3, [r4, #0]
 801c4e6:	079b      	lsls	r3, r3, #30
 801c4e8:	d413      	bmi.n	801c512 <_printf_i+0x22e>
 801c4ea:	68e0      	ldr	r0, [r4, #12]
 801c4ec:	9b03      	ldr	r3, [sp, #12]
 801c4ee:	4298      	cmp	r0, r3
 801c4f0:	bfb8      	it	lt
 801c4f2:	4618      	movlt	r0, r3
 801c4f4:	e7a6      	b.n	801c444 <_printf_i+0x160>
 801c4f6:	2301      	movs	r3, #1
 801c4f8:	4632      	mov	r2, r6
 801c4fa:	4649      	mov	r1, r9
 801c4fc:	4640      	mov	r0, r8
 801c4fe:	47d0      	blx	sl
 801c500:	3001      	adds	r0, #1
 801c502:	d09d      	beq.n	801c440 <_printf_i+0x15c>
 801c504:	3501      	adds	r5, #1
 801c506:	68e3      	ldr	r3, [r4, #12]
 801c508:	9903      	ldr	r1, [sp, #12]
 801c50a:	1a5b      	subs	r3, r3, r1
 801c50c:	42ab      	cmp	r3, r5
 801c50e:	dcf2      	bgt.n	801c4f6 <_printf_i+0x212>
 801c510:	e7eb      	b.n	801c4ea <_printf_i+0x206>
 801c512:	2500      	movs	r5, #0
 801c514:	f104 0619 	add.w	r6, r4, #25
 801c518:	e7f5      	b.n	801c506 <_printf_i+0x222>
 801c51a:	bf00      	nop
 801c51c:	0801e271 	.word	0x0801e271
 801c520:	0801e282 	.word	0x0801e282

0801c524 <__sflush_r>:
 801c524:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 801c528:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801c52c:	0716      	lsls	r6, r2, #28
 801c52e:	4605      	mov	r5, r0
 801c530:	460c      	mov	r4, r1
 801c532:	d454      	bmi.n	801c5de <__sflush_r+0xba>
 801c534:	684b      	ldr	r3, [r1, #4]
 801c536:	2b00      	cmp	r3, #0
 801c538:	dc02      	bgt.n	801c540 <__sflush_r+0x1c>
 801c53a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 801c53c:	2b00      	cmp	r3, #0
 801c53e:	dd48      	ble.n	801c5d2 <__sflush_r+0xae>
 801c540:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 801c542:	2e00      	cmp	r6, #0
 801c544:	d045      	beq.n	801c5d2 <__sflush_r+0xae>
 801c546:	2300      	movs	r3, #0
 801c548:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 801c54c:	682f      	ldr	r7, [r5, #0]
 801c54e:	6a21      	ldr	r1, [r4, #32]
 801c550:	602b      	str	r3, [r5, #0]
 801c552:	d030      	beq.n	801c5b6 <__sflush_r+0x92>
 801c554:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 801c556:	89a3      	ldrh	r3, [r4, #12]
 801c558:	0759      	lsls	r1, r3, #29
 801c55a:	d505      	bpl.n	801c568 <__sflush_r+0x44>
 801c55c:	6863      	ldr	r3, [r4, #4]
 801c55e:	1ad2      	subs	r2, r2, r3
 801c560:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 801c562:	b10b      	cbz	r3, 801c568 <__sflush_r+0x44>
 801c564:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 801c566:	1ad2      	subs	r2, r2, r3
 801c568:	2300      	movs	r3, #0
 801c56a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 801c56c:	6a21      	ldr	r1, [r4, #32]
 801c56e:	4628      	mov	r0, r5
 801c570:	47b0      	blx	r6
 801c572:	1c43      	adds	r3, r0, #1
 801c574:	89a3      	ldrh	r3, [r4, #12]
 801c576:	d106      	bne.n	801c586 <__sflush_r+0x62>
 801c578:	6829      	ldr	r1, [r5, #0]
 801c57a:	291d      	cmp	r1, #29
 801c57c:	d82b      	bhi.n	801c5d6 <__sflush_r+0xb2>
 801c57e:	4a2a      	ldr	r2, [pc, #168]	@ (801c628 <__sflush_r+0x104>)
 801c580:	410a      	asrs	r2, r1
 801c582:	07d6      	lsls	r6, r2, #31
 801c584:	d427      	bmi.n	801c5d6 <__sflush_r+0xb2>
 801c586:	2200      	movs	r2, #0
 801c588:	6062      	str	r2, [r4, #4]
 801c58a:	04d9      	lsls	r1, r3, #19
 801c58c:	6922      	ldr	r2, [r4, #16]
 801c58e:	6022      	str	r2, [r4, #0]
 801c590:	d504      	bpl.n	801c59c <__sflush_r+0x78>
 801c592:	1c42      	adds	r2, r0, #1
 801c594:	d101      	bne.n	801c59a <__sflush_r+0x76>
 801c596:	682b      	ldr	r3, [r5, #0]
 801c598:	b903      	cbnz	r3, 801c59c <__sflush_r+0x78>
 801c59a:	6560      	str	r0, [r4, #84]	@ 0x54
 801c59c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801c59e:	602f      	str	r7, [r5, #0]
 801c5a0:	b1b9      	cbz	r1, 801c5d2 <__sflush_r+0xae>
 801c5a2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 801c5a6:	4299      	cmp	r1, r3
 801c5a8:	d002      	beq.n	801c5b0 <__sflush_r+0x8c>
 801c5aa:	4628      	mov	r0, r5
 801c5ac:	f7ff fca0 	bl	801bef0 <_free_r>
 801c5b0:	2300      	movs	r3, #0
 801c5b2:	6363      	str	r3, [r4, #52]	@ 0x34
 801c5b4:	e00d      	b.n	801c5d2 <__sflush_r+0xae>
 801c5b6:	2301      	movs	r3, #1
 801c5b8:	4628      	mov	r0, r5
 801c5ba:	47b0      	blx	r6
 801c5bc:	4602      	mov	r2, r0
 801c5be:	1c50      	adds	r0, r2, #1
 801c5c0:	d1c9      	bne.n	801c556 <__sflush_r+0x32>
 801c5c2:	682b      	ldr	r3, [r5, #0]
 801c5c4:	2b00      	cmp	r3, #0
 801c5c6:	d0c6      	beq.n	801c556 <__sflush_r+0x32>
 801c5c8:	2b1d      	cmp	r3, #29
 801c5ca:	d001      	beq.n	801c5d0 <__sflush_r+0xac>
 801c5cc:	2b16      	cmp	r3, #22
 801c5ce:	d11e      	bne.n	801c60e <__sflush_r+0xea>
 801c5d0:	602f      	str	r7, [r5, #0]
 801c5d2:	2000      	movs	r0, #0
 801c5d4:	e022      	b.n	801c61c <__sflush_r+0xf8>
 801c5d6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801c5da:	b21b      	sxth	r3, r3
 801c5dc:	e01b      	b.n	801c616 <__sflush_r+0xf2>
 801c5de:	690f      	ldr	r7, [r1, #16]
 801c5e0:	2f00      	cmp	r7, #0
 801c5e2:	d0f6      	beq.n	801c5d2 <__sflush_r+0xae>
 801c5e4:	0793      	lsls	r3, r2, #30
 801c5e6:	680e      	ldr	r6, [r1, #0]
 801c5e8:	bf08      	it	eq
 801c5ea:	694b      	ldreq	r3, [r1, #20]
 801c5ec:	600f      	str	r7, [r1, #0]
 801c5ee:	bf18      	it	ne
 801c5f0:	2300      	movne	r3, #0
 801c5f2:	eba6 0807 	sub.w	r8, r6, r7
 801c5f6:	608b      	str	r3, [r1, #8]
 801c5f8:	f1b8 0f00 	cmp.w	r8, #0
 801c5fc:	dde9      	ble.n	801c5d2 <__sflush_r+0xae>
 801c5fe:	6a21      	ldr	r1, [r4, #32]
 801c600:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 801c602:	4643      	mov	r3, r8
 801c604:	463a      	mov	r2, r7
 801c606:	4628      	mov	r0, r5
 801c608:	47b0      	blx	r6
 801c60a:	2800      	cmp	r0, #0
 801c60c:	dc08      	bgt.n	801c620 <__sflush_r+0xfc>
 801c60e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c612:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801c616:	81a3      	strh	r3, [r4, #12]
 801c618:	f04f 30ff 	mov.w	r0, #4294967295
 801c61c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801c620:	4407      	add	r7, r0
 801c622:	eba8 0800 	sub.w	r8, r8, r0
 801c626:	e7e7      	b.n	801c5f8 <__sflush_r+0xd4>
 801c628:	dfbffffe 	.word	0xdfbffffe

0801c62c <_fflush_r>:
 801c62c:	b538      	push	{r3, r4, r5, lr}
 801c62e:	690b      	ldr	r3, [r1, #16]
 801c630:	4605      	mov	r5, r0
 801c632:	460c      	mov	r4, r1
 801c634:	b913      	cbnz	r3, 801c63c <_fflush_r+0x10>
 801c636:	2500      	movs	r5, #0
 801c638:	4628      	mov	r0, r5
 801c63a:	bd38      	pop	{r3, r4, r5, pc}
 801c63c:	b118      	cbz	r0, 801c646 <_fflush_r+0x1a>
 801c63e:	6a03      	ldr	r3, [r0, #32]
 801c640:	b90b      	cbnz	r3, 801c646 <_fflush_r+0x1a>
 801c642:	f7ff fa8f 	bl	801bb64 <__sinit>
 801c646:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c64a:	2b00      	cmp	r3, #0
 801c64c:	d0f3      	beq.n	801c636 <_fflush_r+0xa>
 801c64e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 801c650:	07d0      	lsls	r0, r2, #31
 801c652:	d404      	bmi.n	801c65e <_fflush_r+0x32>
 801c654:	0599      	lsls	r1, r3, #22
 801c656:	d402      	bmi.n	801c65e <_fflush_r+0x32>
 801c658:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801c65a:	f7ff fbdc 	bl	801be16 <__retarget_lock_acquire_recursive>
 801c65e:	4628      	mov	r0, r5
 801c660:	4621      	mov	r1, r4
 801c662:	f7ff ff5f 	bl	801c524 <__sflush_r>
 801c666:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801c668:	07da      	lsls	r2, r3, #31
 801c66a:	4605      	mov	r5, r0
 801c66c:	d4e4      	bmi.n	801c638 <_fflush_r+0xc>
 801c66e:	89a3      	ldrh	r3, [r4, #12]
 801c670:	059b      	lsls	r3, r3, #22
 801c672:	d4e1      	bmi.n	801c638 <_fflush_r+0xc>
 801c674:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801c676:	f7ff fbcf 	bl	801be18 <__retarget_lock_release_recursive>
 801c67a:	e7dd      	b.n	801c638 <_fflush_r+0xc>

0801c67c <__swbuf_r>:
 801c67c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c67e:	460e      	mov	r6, r1
 801c680:	4614      	mov	r4, r2
 801c682:	4605      	mov	r5, r0
 801c684:	b118      	cbz	r0, 801c68e <__swbuf_r+0x12>
 801c686:	6a03      	ldr	r3, [r0, #32]
 801c688:	b90b      	cbnz	r3, 801c68e <__swbuf_r+0x12>
 801c68a:	f7ff fa6b 	bl	801bb64 <__sinit>
 801c68e:	69a3      	ldr	r3, [r4, #24]
 801c690:	60a3      	str	r3, [r4, #8]
 801c692:	89a3      	ldrh	r3, [r4, #12]
 801c694:	071a      	lsls	r2, r3, #28
 801c696:	d501      	bpl.n	801c69c <__swbuf_r+0x20>
 801c698:	6923      	ldr	r3, [r4, #16]
 801c69a:	b943      	cbnz	r3, 801c6ae <__swbuf_r+0x32>
 801c69c:	4621      	mov	r1, r4
 801c69e:	4628      	mov	r0, r5
 801c6a0:	f000 f82a 	bl	801c6f8 <__swsetup_r>
 801c6a4:	b118      	cbz	r0, 801c6ae <__swbuf_r+0x32>
 801c6a6:	f04f 37ff 	mov.w	r7, #4294967295
 801c6aa:	4638      	mov	r0, r7
 801c6ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c6ae:	6823      	ldr	r3, [r4, #0]
 801c6b0:	6922      	ldr	r2, [r4, #16]
 801c6b2:	1a98      	subs	r0, r3, r2
 801c6b4:	6963      	ldr	r3, [r4, #20]
 801c6b6:	b2f6      	uxtb	r6, r6
 801c6b8:	4283      	cmp	r3, r0
 801c6ba:	4637      	mov	r7, r6
 801c6bc:	dc05      	bgt.n	801c6ca <__swbuf_r+0x4e>
 801c6be:	4621      	mov	r1, r4
 801c6c0:	4628      	mov	r0, r5
 801c6c2:	f7ff ffb3 	bl	801c62c <_fflush_r>
 801c6c6:	2800      	cmp	r0, #0
 801c6c8:	d1ed      	bne.n	801c6a6 <__swbuf_r+0x2a>
 801c6ca:	68a3      	ldr	r3, [r4, #8]
 801c6cc:	3b01      	subs	r3, #1
 801c6ce:	60a3      	str	r3, [r4, #8]
 801c6d0:	6823      	ldr	r3, [r4, #0]
 801c6d2:	1c5a      	adds	r2, r3, #1
 801c6d4:	6022      	str	r2, [r4, #0]
 801c6d6:	701e      	strb	r6, [r3, #0]
 801c6d8:	6962      	ldr	r2, [r4, #20]
 801c6da:	1c43      	adds	r3, r0, #1
 801c6dc:	429a      	cmp	r2, r3
 801c6de:	d004      	beq.n	801c6ea <__swbuf_r+0x6e>
 801c6e0:	89a3      	ldrh	r3, [r4, #12]
 801c6e2:	07db      	lsls	r3, r3, #31
 801c6e4:	d5e1      	bpl.n	801c6aa <__swbuf_r+0x2e>
 801c6e6:	2e0a      	cmp	r6, #10
 801c6e8:	d1df      	bne.n	801c6aa <__swbuf_r+0x2e>
 801c6ea:	4621      	mov	r1, r4
 801c6ec:	4628      	mov	r0, r5
 801c6ee:	f7ff ff9d 	bl	801c62c <_fflush_r>
 801c6f2:	2800      	cmp	r0, #0
 801c6f4:	d0d9      	beq.n	801c6aa <__swbuf_r+0x2e>
 801c6f6:	e7d6      	b.n	801c6a6 <__swbuf_r+0x2a>

0801c6f8 <__swsetup_r>:
 801c6f8:	b538      	push	{r3, r4, r5, lr}
 801c6fa:	4b29      	ldr	r3, [pc, #164]	@ (801c7a0 <__swsetup_r+0xa8>)
 801c6fc:	4605      	mov	r5, r0
 801c6fe:	6818      	ldr	r0, [r3, #0]
 801c700:	460c      	mov	r4, r1
 801c702:	b118      	cbz	r0, 801c70c <__swsetup_r+0x14>
 801c704:	6a03      	ldr	r3, [r0, #32]
 801c706:	b90b      	cbnz	r3, 801c70c <__swsetup_r+0x14>
 801c708:	f7ff fa2c 	bl	801bb64 <__sinit>
 801c70c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c710:	0719      	lsls	r1, r3, #28
 801c712:	d422      	bmi.n	801c75a <__swsetup_r+0x62>
 801c714:	06da      	lsls	r2, r3, #27
 801c716:	d407      	bmi.n	801c728 <__swsetup_r+0x30>
 801c718:	2209      	movs	r2, #9
 801c71a:	602a      	str	r2, [r5, #0]
 801c71c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801c720:	81a3      	strh	r3, [r4, #12]
 801c722:	f04f 30ff 	mov.w	r0, #4294967295
 801c726:	e033      	b.n	801c790 <__swsetup_r+0x98>
 801c728:	0758      	lsls	r0, r3, #29
 801c72a:	d512      	bpl.n	801c752 <__swsetup_r+0x5a>
 801c72c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801c72e:	b141      	cbz	r1, 801c742 <__swsetup_r+0x4a>
 801c730:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 801c734:	4299      	cmp	r1, r3
 801c736:	d002      	beq.n	801c73e <__swsetup_r+0x46>
 801c738:	4628      	mov	r0, r5
 801c73a:	f7ff fbd9 	bl	801bef0 <_free_r>
 801c73e:	2300      	movs	r3, #0
 801c740:	6363      	str	r3, [r4, #52]	@ 0x34
 801c742:	89a3      	ldrh	r3, [r4, #12]
 801c744:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 801c748:	81a3      	strh	r3, [r4, #12]
 801c74a:	2300      	movs	r3, #0
 801c74c:	6063      	str	r3, [r4, #4]
 801c74e:	6923      	ldr	r3, [r4, #16]
 801c750:	6023      	str	r3, [r4, #0]
 801c752:	89a3      	ldrh	r3, [r4, #12]
 801c754:	f043 0308 	orr.w	r3, r3, #8
 801c758:	81a3      	strh	r3, [r4, #12]
 801c75a:	6923      	ldr	r3, [r4, #16]
 801c75c:	b94b      	cbnz	r3, 801c772 <__swsetup_r+0x7a>
 801c75e:	89a3      	ldrh	r3, [r4, #12]
 801c760:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 801c764:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 801c768:	d003      	beq.n	801c772 <__swsetup_r+0x7a>
 801c76a:	4621      	mov	r1, r4
 801c76c:	4628      	mov	r0, r5
 801c76e:	f000 f83f 	bl	801c7f0 <__smakebuf_r>
 801c772:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c776:	f013 0201 	ands.w	r2, r3, #1
 801c77a:	d00a      	beq.n	801c792 <__swsetup_r+0x9a>
 801c77c:	2200      	movs	r2, #0
 801c77e:	60a2      	str	r2, [r4, #8]
 801c780:	6962      	ldr	r2, [r4, #20]
 801c782:	4252      	negs	r2, r2
 801c784:	61a2      	str	r2, [r4, #24]
 801c786:	6922      	ldr	r2, [r4, #16]
 801c788:	b942      	cbnz	r2, 801c79c <__swsetup_r+0xa4>
 801c78a:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 801c78e:	d1c5      	bne.n	801c71c <__swsetup_r+0x24>
 801c790:	bd38      	pop	{r3, r4, r5, pc}
 801c792:	0799      	lsls	r1, r3, #30
 801c794:	bf58      	it	pl
 801c796:	6962      	ldrpl	r2, [r4, #20]
 801c798:	60a2      	str	r2, [r4, #8]
 801c79a:	e7f4      	b.n	801c786 <__swsetup_r+0x8e>
 801c79c:	2000      	movs	r0, #0
 801c79e:	e7f7      	b.n	801c790 <__swsetup_r+0x98>
 801c7a0:	20000118 	.word	0x20000118

0801c7a4 <__swhatbuf_r>:
 801c7a4:	b570      	push	{r4, r5, r6, lr}
 801c7a6:	460c      	mov	r4, r1
 801c7a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c7ac:	2900      	cmp	r1, #0
 801c7ae:	b096      	sub	sp, #88	@ 0x58
 801c7b0:	4615      	mov	r5, r2
 801c7b2:	461e      	mov	r6, r3
 801c7b4:	da0d      	bge.n	801c7d2 <__swhatbuf_r+0x2e>
 801c7b6:	89a3      	ldrh	r3, [r4, #12]
 801c7b8:	f013 0f80 	tst.w	r3, #128	@ 0x80
 801c7bc:	f04f 0100 	mov.w	r1, #0
 801c7c0:	bf14      	ite	ne
 801c7c2:	2340      	movne	r3, #64	@ 0x40
 801c7c4:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 801c7c8:	2000      	movs	r0, #0
 801c7ca:	6031      	str	r1, [r6, #0]
 801c7cc:	602b      	str	r3, [r5, #0]
 801c7ce:	b016      	add	sp, #88	@ 0x58
 801c7d0:	bd70      	pop	{r4, r5, r6, pc}
 801c7d2:	466a      	mov	r2, sp
 801c7d4:	f000 f848 	bl	801c868 <_fstat_r>
 801c7d8:	2800      	cmp	r0, #0
 801c7da:	dbec      	blt.n	801c7b6 <__swhatbuf_r+0x12>
 801c7dc:	9901      	ldr	r1, [sp, #4]
 801c7de:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 801c7e2:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 801c7e6:	4259      	negs	r1, r3
 801c7e8:	4159      	adcs	r1, r3
 801c7ea:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801c7ee:	e7eb      	b.n	801c7c8 <__swhatbuf_r+0x24>

0801c7f0 <__smakebuf_r>:
 801c7f0:	898b      	ldrh	r3, [r1, #12]
 801c7f2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801c7f4:	079d      	lsls	r5, r3, #30
 801c7f6:	4606      	mov	r6, r0
 801c7f8:	460c      	mov	r4, r1
 801c7fa:	d507      	bpl.n	801c80c <__smakebuf_r+0x1c>
 801c7fc:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 801c800:	6023      	str	r3, [r4, #0]
 801c802:	6123      	str	r3, [r4, #16]
 801c804:	2301      	movs	r3, #1
 801c806:	6163      	str	r3, [r4, #20]
 801c808:	b003      	add	sp, #12
 801c80a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c80c:	ab01      	add	r3, sp, #4
 801c80e:	466a      	mov	r2, sp
 801c810:	f7ff ffc8 	bl	801c7a4 <__swhatbuf_r>
 801c814:	9f00      	ldr	r7, [sp, #0]
 801c816:	4605      	mov	r5, r0
 801c818:	4639      	mov	r1, r7
 801c81a:	4630      	mov	r0, r6
 801c81c:	f7ff f87c 	bl	801b918 <_malloc_r>
 801c820:	b948      	cbnz	r0, 801c836 <__smakebuf_r+0x46>
 801c822:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c826:	059a      	lsls	r2, r3, #22
 801c828:	d4ee      	bmi.n	801c808 <__smakebuf_r+0x18>
 801c82a:	f023 0303 	bic.w	r3, r3, #3
 801c82e:	f043 0302 	orr.w	r3, r3, #2
 801c832:	81a3      	strh	r3, [r4, #12]
 801c834:	e7e2      	b.n	801c7fc <__smakebuf_r+0xc>
 801c836:	89a3      	ldrh	r3, [r4, #12]
 801c838:	6020      	str	r0, [r4, #0]
 801c83a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 801c83e:	81a3      	strh	r3, [r4, #12]
 801c840:	9b01      	ldr	r3, [sp, #4]
 801c842:	e9c4 0704 	strd	r0, r7, [r4, #16]
 801c846:	b15b      	cbz	r3, 801c860 <__smakebuf_r+0x70>
 801c848:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801c84c:	4630      	mov	r0, r6
 801c84e:	f000 f81d 	bl	801c88c <_isatty_r>
 801c852:	b128      	cbz	r0, 801c860 <__smakebuf_r+0x70>
 801c854:	89a3      	ldrh	r3, [r4, #12]
 801c856:	f023 0303 	bic.w	r3, r3, #3
 801c85a:	f043 0301 	orr.w	r3, r3, #1
 801c85e:	81a3      	strh	r3, [r4, #12]
 801c860:	89a3      	ldrh	r3, [r4, #12]
 801c862:	431d      	orrs	r5, r3
 801c864:	81a5      	strh	r5, [r4, #12]
 801c866:	e7cf      	b.n	801c808 <__smakebuf_r+0x18>

0801c868 <_fstat_r>:
 801c868:	b538      	push	{r3, r4, r5, lr}
 801c86a:	4d07      	ldr	r5, [pc, #28]	@ (801c888 <_fstat_r+0x20>)
 801c86c:	2300      	movs	r3, #0
 801c86e:	4604      	mov	r4, r0
 801c870:	4608      	mov	r0, r1
 801c872:	4611      	mov	r1, r2
 801c874:	602b      	str	r3, [r5, #0]
 801c876:	f7e5 fb48 	bl	8001f0a <_fstat>
 801c87a:	1c43      	adds	r3, r0, #1
 801c87c:	d102      	bne.n	801c884 <_fstat_r+0x1c>
 801c87e:	682b      	ldr	r3, [r5, #0]
 801c880:	b103      	cbz	r3, 801c884 <_fstat_r+0x1c>
 801c882:	6023      	str	r3, [r4, #0]
 801c884:	bd38      	pop	{r3, r4, r5, pc}
 801c886:	bf00      	nop
 801c888:	20014290 	.word	0x20014290

0801c88c <_isatty_r>:
 801c88c:	b538      	push	{r3, r4, r5, lr}
 801c88e:	4d06      	ldr	r5, [pc, #24]	@ (801c8a8 <_isatty_r+0x1c>)
 801c890:	2300      	movs	r3, #0
 801c892:	4604      	mov	r4, r0
 801c894:	4608      	mov	r0, r1
 801c896:	602b      	str	r3, [r5, #0]
 801c898:	f7e5 fb3c 	bl	8001f14 <_isatty>
 801c89c:	1c43      	adds	r3, r0, #1
 801c89e:	d102      	bne.n	801c8a6 <_isatty_r+0x1a>
 801c8a0:	682b      	ldr	r3, [r5, #0]
 801c8a2:	b103      	cbz	r3, 801c8a6 <_isatty_r+0x1a>
 801c8a4:	6023      	str	r3, [r4, #0]
 801c8a6:	bd38      	pop	{r3, r4, r5, pc}
 801c8a8:	20014290 	.word	0x20014290

0801c8ac <_init>:
 801c8ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c8ae:	bf00      	nop
 801c8b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801c8b2:	bc08      	pop	{r3}
 801c8b4:	469e      	mov	lr, r3
 801c8b6:	4770      	bx	lr

0801c8b8 <_fini>:
 801c8b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c8ba:	bf00      	nop
 801c8bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801c8be:	bc08      	pop	{r3}
 801c8c0:	469e      	mov	lr, r3
 801c8c2:	4770      	bx	lr
